(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [888],
  {
    610: function (e, t) {
      !(function (e) {
        "use strict";
        var t,
          n = function (e, t) {
            return (n =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (e, t) {
                  e.__proto__ = t;
                }) ||
              function (e, t) {
                for (var n in t)
                  Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
              })(e, t);
          };
        function r(e, t) {
          if ("function" != typeof t && null !== t)
            throw TypeError(
              "Class extends value " +
                String(t) +
                " is not a constructor or null"
            );
          function r() {
            this.constructor = e;
          }
          n(e, t),
            (e.prototype =
              null === t
                ? Object.create(t)
                : ((r.prototype = t.prototype), new r()));
        }
        function i(e, t, n, r) {
          var i,
            s = arguments.length,
            a =
              s < 3
                ? t
                : null === r
                ? (r = Object.getOwnPropertyDescriptor(t, n))
                : r;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            a = Reflect.decorate(e, t, n, r);
          else
            for (var o = e.length - 1; o >= 0; o--)
              (i = e[o]) &&
                (a = (s < 3 ? i(a) : s > 3 ? i(t, n, a) : i(t, n)) || a);
          return s > 3 && a && Object.defineProperty(t, n, a), a;
        }
        function s(e, t, n) {
          if (n || 2 == arguments.length)
            for (var r, i = 0, s = t.length; i < s; i++)
              (!r && i in t) ||
                (r || (r = Array.prototype.slice.call(t, 0, i)), (r[i] = t[i]));
          return e.concat(r || Array.prototype.slice.call(t));
        }
        "function" == typeof SuppressedError && SuppressedError,
          (e.OPERATION = void 0),
          ((t = e.OPERATION || (e.OPERATION = {}))[(t.ADD = 128)] = "ADD"),
          (t[(t.REPLACE = 0)] = "REPLACE"),
          (t[(t.DELETE = 64)] = "DELETE"),
          (t[(t.DELETE_AND_ADD = 192)] = "DELETE_AND_ADD"),
          (t[(t.TOUCH = 1)] = "TOUCH"),
          (t[(t.CLEAR = 10)] = "CLEAR");
        var a = (function () {
          function t(e, t, n) {
            (this.changed = !1),
              (this.changes = new Map()),
              (this.allChanges = new Set()),
              (this.caches = {}),
              (this.currentCustomOperation = 0),
              (this.ref = e),
              this.setParent(t, n);
          }
          return (
            (t.prototype.setParent = function (e, t, n) {
              var r = this;
              if (
                (this.indexes ||
                  (this.indexes =
                    this.ref instanceof ei ? this.ref._definition.indexes : {}),
                (this.parent = e),
                (this.parentIndex = n),
                t)
              ) {
                if (((this.root = t), this.ref instanceof ei)) {
                  var i = this.ref._definition;
                  for (var s in i.schema) {
                    var a = this.ref[s];
                    if (a && a.$changes) {
                      var o = i.indexes[s];
                      a.$changes.setParent(this.ref, t, o);
                    }
                  }
                } else
                  "object" == typeof this.ref &&
                    this.ref.forEach(function (e, t) {
                      if (e instanceof ei) {
                        var n = e.$changes,
                          i = r.ref.$changes.indexes[t];
                        n.setParent(r.ref, r.root, i);
                      }
                    });
              }
            }),
            (t.prototype.operation = function (e) {
              this.changes.set(--this.currentCustomOperation, e);
            }),
            (t.prototype.change = function (t, n) {
              void 0 === n && (n = e.OPERATION.ADD);
              var r = "number" == typeof t ? t : this.indexes[t];
              this.assertValidIndex(r, t);
              var i = this.changes.get(r);
              (i &&
                i.op !== e.OPERATION.DELETE &&
                i.op !== e.OPERATION.TOUCH) ||
                this.changes.set(r, {
                  op:
                    i && i.op === e.OPERATION.DELETE
                      ? e.OPERATION.DELETE_AND_ADD
                      : n,
                  index: r,
                }),
                this.allChanges.add(r),
                (this.changed = !0),
                this.touchParents();
            }),
            (t.prototype.touch = function (t) {
              var n = "number" == typeof t ? t : this.indexes[t];
              this.assertValidIndex(n, t),
                this.changes.has(n) ||
                  this.changes.set(n, { op: e.OPERATION.TOUCH, index: n }),
                this.allChanges.add(n),
                this.touchParents();
            }),
            (t.prototype.touchParents = function () {
              this.parent && this.parent.$changes.touch(this.parentIndex);
            }),
            (t.prototype.getType = function (e) {
              if (this.ref._definition) {
                var t = this.ref._definition;
                return t.schema[t.fieldsByIndex[e]];
              }
              var t = this.parent._definition;
              return Object.values(
                t.schema[t.fieldsByIndex[this.parentIndex]]
              )[0];
            }),
            (t.prototype.getChildrenFilter = function () {
              var e = this.parent._definition.childFilters;
              return e && e[this.parentIndex];
            }),
            (t.prototype.getValue = function (e) {
              return this.ref.getByIndex(e);
            }),
            (t.prototype.delete = function (t) {
              var n = "number" == typeof t ? t : this.indexes[t];
              if (void 0 === n) {
                console.warn(
                  "@colyseus/schema "
                    .concat(
                      this.ref.constructor.name,
                      ": trying to delete non-existing index: "
                    )
                    .concat(t, " (")
                    .concat(n, ")")
                );
                return;
              }
              var r = this.getValue(n);
              this.changes.set(n, { op: e.OPERATION.DELETE, index: n }),
                this.allChanges.delete(n),
                delete this.caches[n],
                r && r.$changes && (r.$changes.parent = void 0),
                (this.changed = !0),
                this.touchParents();
            }),
            (t.prototype.discard = function (t, n) {
              var r = this;
              void 0 === t && (t = !1),
                void 0 === n && (n = !1),
                this.ref instanceof ei ||
                  this.changes.forEach(function (t) {
                    if (t.op === e.OPERATION.DELETE) {
                      var n = r.ref.getIndex(t.index);
                      delete r.indexes[n];
                    }
                  }),
                this.changes.clear(),
                (this.changed = t),
                n && this.allChanges.clear(),
                (this.currentCustomOperation = 0);
            }),
            (t.prototype.discardAll = function () {
              var e = this;
              this.changes.forEach(function (t) {
                var n = e.getValue(t.index);
                n && n.$changes && n.$changes.discardAll();
              }),
                this.discard();
            }),
            (t.prototype.cache = function (e, t) {
              this.caches[e] = t;
            }),
            (t.prototype.clone = function () {
              return new t(this.ref, this.parent, this.root);
            }),
            (t.prototype.ensureRefId = function () {
              void 0 === this.refId &&
                (this.refId = this.root.getNextUniqueId());
            }),
            (t.prototype.assertValidIndex = function (e, t) {
              if (void 0 === e)
                throw Error(
                  'ChangeTree: missing index for field "'.concat(t, '"')
                );
            }),
            t
          );
        })();
        function o(e, t, n, r) {
          return (
            e[t] || (e[t] = []),
            e[t].push(n),
            null == r ||
              r.forEach(function (e, t) {
                return n(e, t);
              }),
            function () {
              return u(e[t], e[t].indexOf(n));
            }
          );
        }
        function l(t) {
          var n = this,
            r = "string" != typeof this.$changes.getType();
          this.$items.forEach(function (i, s) {
            t.push({
              refId: n.$changes.refId,
              op: e.OPERATION.DELETE,
              field: s,
              value: void 0,
              previousValue: i,
            }),
              r && n.$changes.root.removeRef(i.$changes.refId);
          });
        }
        function u(e, t) {
          if (-1 === t || t >= e.length) return !1;
          for (var n = e.length - 1, r = t; r < n; r++) e[r] = e[r + 1];
          return (e.length = n), !0;
        }
        var c = function (e, t) {
            var n = e.toString(),
              r = t.toString();
            return n < r ? -1 : n > r ? 1 : 0;
          },
          h = (function () {
            function t() {
              for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
              (this.$changes = new a(this)),
                (this.$items = new Map()),
                (this.$indexes = new Map()),
                (this.$refId = 0),
                this.push.apply(this, e);
            }
            return (
              (t.prototype.onAdd = function (t, n) {
                return (
                  void 0 === n && (n = !0),
                  o(
                    this.$callbacks || (this.$callbacks = {}),
                    e.OPERATION.ADD,
                    t,
                    n ? this.$items : void 0
                  )
                );
              }),
              (t.prototype.onRemove = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.DELETE,
                  t
                );
              }),
              (t.prototype.onChange = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.REPLACE,
                  t
                );
              }),
              (t.is = function (e) {
                return Array.isArray(e) || void 0 !== e.array;
              }),
              Object.defineProperty(t.prototype, "length", {
                get: function () {
                  return this.$items.size;
                },
                set: function (e) {
                  0 === e ? this.clear() : this.splice(e, this.length - e);
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.push = function () {
                for (var e, t = this, n = [], r = 0; r < arguments.length; r++)
                  n[r] = arguments[r];
                return (
                  n.forEach(function (n) {
                    (e = t.$refId++), t.setAt(e, n);
                  }),
                  e
                );
              }),
              (t.prototype.pop = function () {
                var e = Array.from(this.$indexes.values()).pop();
                if (void 0 !== e) {
                  this.$changes.delete(e), this.$indexes.delete(e);
                  var t = this.$items.get(e);
                  return this.$items.delete(e), t;
                }
              }),
              (t.prototype.at = function (e) {
                var t = Array.from(this.$items.keys())[e];
                return this.$items.get(t);
              }),
              (t.prototype.setAt = function (t, n) {
                if (null == n) {
                  console.error(
                    "ArraySchema items cannot be null nor undefined; Use `deleteAt(index)` instead."
                  );
                  return;
                }
                if (this.$items.get(t) !== n) {
                  void 0 !== n.$changes &&
                    n.$changes.setParent(this, this.$changes.root, t);
                  var r,
                    i,
                    s =
                      null !==
                        (i =
                          null === (r = this.$changes.indexes[t]) ||
                          void 0 === r
                            ? void 0
                            : r.op) && void 0 !== i
                        ? i
                        : e.OPERATION.ADD;
                  (this.$changes.indexes[t] = t),
                    this.$indexes.set(t, t),
                    this.$items.set(t, n),
                    this.$changes.change(t, s);
                }
              }),
              (t.prototype.deleteAt = function (e) {
                var t = Array.from(this.$items.keys())[e];
                return void 0 !== t && this.$deleteAt(t);
              }),
              (t.prototype.$deleteAt = function (e) {
                return (
                  this.$changes.delete(e),
                  this.$indexes.delete(e),
                  this.$items.delete(e)
                );
              }),
              (t.prototype.clear = function (t) {
                this.$changes.discard(!0, !0),
                  (this.$changes.indexes = {}),
                  this.$indexes.clear(),
                  t && l.call(this, t),
                  this.$items.clear(),
                  this.$changes.operation({ index: 0, op: e.OPERATION.CLEAR }),
                  this.$changes.touchParents();
              }),
              (t.prototype.concat = function () {
                for (var e, n = [], r = 0; r < arguments.length; r++)
                  n[r] = arguments[r];
                return new (t.bind.apply(
                  t,
                  s(
                    [void 0],
                    (e = Array.from(this.$items.values())).concat.apply(e, n),
                    !1
                  )
                ))();
              }),
              (t.prototype.join = function (e) {
                return Array.from(this.$items.values()).join(e);
              }),
              (t.prototype.reverse = function () {
                var e = this,
                  t = Array.from(this.$items.keys());
                return (
                  Array.from(this.$items.values())
                    .reverse()
                    .forEach(function (n, r) {
                      e.setAt(t[r], n);
                    }),
                  this
                );
              }),
              (t.prototype.shift = function () {
                var e = Array.from(this.$items.keys()).shift();
                if (void 0 !== e) {
                  var t = this.$items.get(e);
                  return this.$deleteAt(e), t;
                }
              }),
              (t.prototype.slice = function (e, n) {
                var r = new t();
                return (
                  r.push.apply(r, Array.from(this.$items.values()).slice(e, n)),
                  r
                );
              }),
              (t.prototype.sort = function (e) {
                var t = this;
                void 0 === e && (e = c);
                var n = Array.from(this.$items.keys());
                return (
                  Array.from(this.$items.values())
                    .sort(e)
                    .forEach(function (e, r) {
                      t.setAt(n[r], e);
                    }),
                  this
                );
              }),
              (t.prototype.splice = function (e, t) {
                void 0 === t && (t = this.length - e);
                for (var n = [], r = 2; r < arguments.length; r++)
                  n[r - 2] = arguments[r];
                for (
                  var i = Array.from(this.$items.keys()), s = [], a = e;
                  a < e + t;
                  a++
                )
                  s.push(this.$items.get(i[a])), this.$deleteAt(i[a]);
                for (var a = 0; a < n.length; a++) this.setAt(e + a, n[a]);
                return s;
              }),
              (t.prototype.unshift = function () {
                for (var e = this, t = [], n = 0; n < arguments.length; n++)
                  t[n] = arguments[n];
                var r = this.length,
                  i = t.length,
                  s = Array.from(this.$items.values());
                return (
                  t.forEach(function (t, n) {
                    e.setAt(n, t);
                  }),
                  s.forEach(function (t, n) {
                    e.setAt(i + n, t);
                  }),
                  r + i
                );
              }),
              (t.prototype.indexOf = function (e, t) {
                return Array.from(this.$items.values()).indexOf(e, t);
              }),
              (t.prototype.lastIndexOf = function (e, t) {
                return (
                  void 0 === t && (t = this.length - 1),
                  Array.from(this.$items.values()).lastIndexOf(e, t)
                );
              }),
              (t.prototype.every = function (e, t) {
                return Array.from(this.$items.values()).every(e, t);
              }),
              (t.prototype.some = function (e, t) {
                return Array.from(this.$items.values()).some(e, t);
              }),
              (t.prototype.forEach = function (e, t) {
                Array.from(this.$items.values()).forEach(e, t);
              }),
              (t.prototype.map = function (e, t) {
                return Array.from(this.$items.values()).map(e, t);
              }),
              (t.prototype.filter = function (e, t) {
                return Array.from(this.$items.values()).filter(e, t);
              }),
              (t.prototype.reduce = function (e, t) {
                return Array.prototype.reduce.apply(
                  Array.from(this.$items.values()),
                  arguments
                );
              }),
              (t.prototype.reduceRight = function (e, t) {
                return Array.prototype.reduceRight.apply(
                  Array.from(this.$items.values()),
                  arguments
                );
              }),
              (t.prototype.find = function (e, t) {
                return Array.from(this.$items.values()).find(e, t);
              }),
              (t.prototype.findIndex = function (e, t) {
                return Array.from(this.$items.values()).findIndex(e, t);
              }),
              (t.prototype.fill = function (e, t, n) {
                throw Error("ArraySchema#fill() not implemented");
              }),
              (t.prototype.copyWithin = function (e, t, n) {
                throw Error("ArraySchema#copyWithin() not implemented");
              }),
              (t.prototype.toString = function () {
                return this.$items.toString();
              }),
              (t.prototype.toLocaleString = function () {
                return this.$items.toLocaleString();
              }),
              (t.prototype[Symbol.iterator] = function () {
                return Array.from(this.$items.values())[Symbol.iterator]();
              }),
              Object.defineProperty(t, Symbol.species, {
                get: function () {
                  return t;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.entries = function () {
                return this.$items.entries();
              }),
              (t.prototype.keys = function () {
                return this.$items.keys();
              }),
              (t.prototype.values = function () {
                return this.$items.values();
              }),
              (t.prototype.includes = function (e, t) {
                return Array.from(this.$items.values()).includes(e, t);
              }),
              (t.prototype.flatMap = function (e, t) {
                throw Error("ArraySchema#flatMap() is not supported.");
              }),
              (t.prototype.flat = function (e) {
                throw Error("ArraySchema#flat() is not supported.");
              }),
              (t.prototype.findLast = function () {
                var e = Array.from(this.$items.values());
                return e.findLast.apply(e, arguments);
              }),
              (t.prototype.findLastIndex = function () {
                var e = Array.from(this.$items.values());
                return e.findLastIndex.apply(e, arguments);
              }),
              (t.prototype.with = function (e, n) {
                var r = Array.from(this.$items.values());
                return (r[e] = n), new (t.bind.apply(t, s([void 0], r, !1)))();
              }),
              (t.prototype.toReversed = function () {
                return Array.from(this.$items.values()).reverse();
              }),
              (t.prototype.toSorted = function (e) {
                return Array.from(this.$items.values()).sort(e);
              }),
              (t.prototype.toSpliced = function (e, t) {
                var n = Array.from(this.$items.values());
                return n.toSpliced.apply(n, arguments);
              }),
              (t.prototype.setIndex = function (e, t) {
                this.$indexes.set(e, t);
              }),
              (t.prototype.getIndex = function (e) {
                return this.$indexes.get(e);
              }),
              (t.prototype.getByIndex = function (e) {
                return this.$items.get(this.$indexes.get(e));
              }),
              (t.prototype.deleteByIndex = function (e) {
                var t = this.$indexes.get(e);
                this.$items.delete(t), this.$indexes.delete(e);
              }),
              (t.prototype.toArray = function () {
                return Array.from(this.$items.values());
              }),
              (t.prototype.toJSON = function () {
                return this.toArray().map(function (e) {
                  return "function" == typeof e.toJSON ? e.toJSON() : e;
                });
              }),
              (t.prototype.clone = function (e) {
                return e
                  ? new (t.bind.apply(
                      t,
                      s([void 0], Array.from(this.$items.values()), !1)
                    ))()
                  : new (t.bind.apply(
                      t,
                      s(
                        [void 0],
                        this.map(function (e) {
                          return e.$changes ? e.clone() : e;
                        }),
                        !1
                      )
                    ))();
              }),
              t
            );
          })(),
          d = (function () {
            function t(e) {
              var n = this;
              if (
                ((this.$changes = new a(this)),
                (this.$items = new Map()),
                (this.$indexes = new Map()),
                (this.$refId = 0),
                e)
              ) {
                if (e instanceof Map || e instanceof t)
                  e.forEach(function (e, t) {
                    return n.set(t, e);
                  });
                else for (var r in e) this.set(r, e[r]);
              }
            }
            return (
              (t.prototype.onAdd = function (t, n) {
                return (
                  void 0 === n && (n = !0),
                  o(
                    this.$callbacks || (this.$callbacks = {}),
                    e.OPERATION.ADD,
                    t,
                    n ? this.$items : void 0
                  )
                );
              }),
              (t.prototype.onRemove = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.DELETE,
                  t
                );
              }),
              (t.prototype.onChange = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.REPLACE,
                  t
                );
              }),
              (t.is = function (e) {
                return void 0 !== e.map;
              }),
              (t.prototype[Symbol.iterator] = function () {
                return this.$items[Symbol.iterator]();
              }),
              Object.defineProperty(t.prototype, Symbol.toStringTag, {
                get: function () {
                  return this.$items[Symbol.toStringTag];
                },
                enumerable: !1,
                configurable: !0,
              }),
              Object.defineProperty(t, Symbol.species, {
                get: function () {
                  return t;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.set = function (t, n) {
                if (null == n)
                  throw Error(
                    "MapSchema#set('"
                      .concat(t, "', ")
                      .concat(n, "): trying to set ")
                      .concat(n, " value on '")
                      .concat(t, "'.")
                  );
                t = t.toString();
                var r = void 0 !== this.$changes.indexes[t],
                  i = r ? this.$changes.indexes[t] : this.$refId++,
                  s = r ? e.OPERATION.REPLACE : e.OPERATION.ADD,
                  a = void 0 !== n.$changes;
                if (
                  (a && n.$changes.setParent(this, this.$changes.root, i), r)
                ) {
                  if (!a && this.$items.get(t) === n) return;
                  a && this.$items.get(t) !== n && (s = e.OPERATION.ADD);
                } else (this.$changes.indexes[t] = i), this.$indexes.set(i, t);
                return this.$items.set(t, n), this.$changes.change(t, s), this;
              }),
              (t.prototype.get = function (e) {
                return this.$items.get(e);
              }),
              (t.prototype.delete = function (e) {
                return this.$changes.delete(e), this.$items.delete(e);
              }),
              (t.prototype.clear = function (t) {
                this.$changes.discard(!0, !0),
                  (this.$changes.indexes = {}),
                  this.$indexes.clear(),
                  t && l.call(this, t),
                  this.$items.clear(),
                  this.$changes.operation({ index: 0, op: e.OPERATION.CLEAR }),
                  this.$changes.touchParents();
              }),
              (t.prototype.has = function (e) {
                return this.$items.has(e);
              }),
              (t.prototype.forEach = function (e) {
                this.$items.forEach(e);
              }),
              (t.prototype.entries = function () {
                return this.$items.entries();
              }),
              (t.prototype.keys = function () {
                return this.$items.keys();
              }),
              (t.prototype.values = function () {
                return this.$items.values();
              }),
              Object.defineProperty(t.prototype, "size", {
                get: function () {
                  return this.$items.size;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.setIndex = function (e, t) {
                this.$indexes.set(e, t);
              }),
              (t.prototype.getIndex = function (e) {
                return this.$indexes.get(e);
              }),
              (t.prototype.getByIndex = function (e) {
                return this.$items.get(this.$indexes.get(e));
              }),
              (t.prototype.deleteByIndex = function (e) {
                var t = this.$indexes.get(e);
                this.$items.delete(t), this.$indexes.delete(e);
              }),
              (t.prototype.toJSON = function () {
                var e = {};
                return (
                  this.forEach(function (t, n) {
                    e[n] = "function" == typeof t.toJSON ? t.toJSON() : t;
                  }),
                  e
                );
              }),
              (t.prototype.clone = function (e) {
                var n;
                return (
                  e
                    ? (n = Object.assign(new t(), this))
                    : ((n = new t()),
                      this.forEach(function (e, t) {
                        e.$changes ? n.set(t, e.clone()) : n.set(t, e);
                      })),
                  n
                );
              }),
              t
            );
          })(),
          p = {},
          f = (function () {
            function e() {
              (this.indexes = {}),
                (this.fieldsByIndex = {}),
                (this.deprecated = {}),
                (this.descriptors = {});
            }
            return (
              (e.create = function (t) {
                var n = new e();
                return (
                  (n.schema = Object.assign({}, (t && t.schema) || {})),
                  (n.indexes = Object.assign({}, (t && t.indexes) || {})),
                  (n.fieldsByIndex = Object.assign(
                    {},
                    (t && t.fieldsByIndex) || {}
                  )),
                  (n.descriptors = Object.assign(
                    {},
                    (t && t.descriptors) || {}
                  )),
                  (n.deprecated = Object.assign({}, (t && t.deprecated) || {})),
                  n
                );
              }),
              (e.prototype.addField = function (e, t) {
                var n = this.getNextFieldIndex();
                (this.fieldsByIndex[n] = e),
                  (this.indexes[e] = n),
                  (this.schema[e] = Array.isArray(t) ? { array: t[0] } : t);
              }),
              (e.prototype.hasField = function (e) {
                return void 0 !== this.indexes[e];
              }),
              (e.prototype.addFilter = function (e, t) {
                return (
                  this.filters ||
                    ((this.filters = {}), (this.indexesWithFilters = [])),
                  (this.filters[this.indexes[e]] = t),
                  this.indexesWithFilters.push(this.indexes[e]),
                  !0
                );
              }),
              (e.prototype.addChildrenFilter = function (e, t) {
                var n = this.indexes[e];
                if (p[Object.keys(this.schema[e])[0]])
                  return (
                    this.childFilters || (this.childFilters = {}),
                    (this.childFilters[n] = t),
                    !0
                  );
                console.warn(
                  "@filterChildren: field '".concat(
                    e,
                    "' can't have children. Ignoring filter."
                  )
                );
              }),
              (e.prototype.getChildrenFilter = function (e) {
                return this.childFilters && this.childFilters[this.indexes[e]];
              }),
              (e.prototype.getNextFieldIndex = function () {
                return Object.keys(this.schema || {}).length;
              }),
              e
            );
          })(),
          m = (function () {
            function e() {
              (this.types = {}),
                (this.schemas = new Map()),
                (this.useFilters = !1);
            }
            return (
              (e.prototype.has = function (e) {
                return this.schemas.has(e);
              }),
              (e.prototype.get = function (e) {
                return this.types[e];
              }),
              (e.prototype.add = function (e, t) {
                void 0 === t && (t = this.schemas.size),
                  (e._definition = f.create(e._definition)),
                  (e._typeid = t),
                  (this.types[t] = e),
                  this.schemas.set(e, t);
              }),
              (e.create = function (t) {
                return (
                  void 0 === t && (t = {}),
                  function (n) {
                    return t.context || (t.context = new e()), _(n, t);
                  }
                );
              }),
              e
            );
          })(),
          g = new m();
        function _(e, t) {
          return (
            void 0 === t && (t = {}),
            function (n, r) {
              var i = t.context || g,
                a = n.constructor;
              if (((a._context = i), !e))
                throw Error(
                  ""
                    .concat(a.name, ': @type() reference provided for "')
                    .concat(
                      r,
                      "\" is undefined. Make sure you don't have any circular dependencies."
                    )
                );
              i.has(a) || i.add(a);
              var o = a._definition;
              if ((o.addField(r, e), o.descriptors[r])) {
                if (o.deprecated[r]) return;
                try {
                  throw Error(
                    "@colyseus/schema: Duplicate '"
                      .concat(r, "' definition on '")
                      .concat(a.name, "'.\nCheck @type() annotation")
                  );
                } catch (e) {
                  var l = e.stack.split("\n")[4].trim();
                  throw Error("".concat(e.message, " ").concat(l));
                }
              }
              var u = h.is(e),
                c = !u && d.is(e);
              if ("string" != typeof e && !ei.is(e)) {
                var p = Object.values(e)[0];
                "string" == typeof p || i.has(p) || i.add(p);
              }
              if (t.manual) {
                o.descriptors[r] = {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                };
                return;
              }
              var f = "_".concat(r);
              (o.descriptors[f] = {
                enumerable: !1,
                configurable: !1,
                writable: !0,
              }),
                (o.descriptors[r] = {
                  get: function () {
                    return this[f];
                  },
                  set: function (e) {
                    if (e !== this[f]) {
                      if (null != e) {
                        if (
                          (!u ||
                            e instanceof h ||
                            (e = new (h.bind.apply(h, s([void 0], e, !1)))()),
                          !c || e instanceof d || (e = new d(e)),
                          void 0 === e.$proxy)
                        ) {
                          var t, n;
                          c
                            ? (((t = e).$proxy = !0),
                              (e = t =
                                new Proxy(t, {
                                  get: function (e, t) {
                                    return "symbol" != typeof t &&
                                      void 0 === e[t]
                                      ? e.get(t)
                                      : e[t];
                                  },
                                  set: function (e, t, n) {
                                    return (
                                      "symbol" != typeof t &&
                                      -1 === t.indexOf("$") &&
                                      "onAdd" !== t &&
                                      "onRemove" !== t &&
                                      "onChange" !== t
                                        ? e.set(t, n)
                                        : (e[t] = n),
                                      !0
                                    );
                                  },
                                  deleteProperty: function (e, t) {
                                    return e.delete(t), !0;
                                  },
                                })))
                            : u &&
                              (((n = e).$proxy = !0),
                              (e = n =
                                new Proxy(n, {
                                  get: function (e, t) {
                                    return "symbol" == typeof t || isNaN(t)
                                      ? e[t]
                                      : e.at(t);
                                  },
                                  set: function (e, t, n) {
                                    if ("symbol" == typeof t || isNaN(t))
                                      e[t] = n;
                                    else {
                                      var r = parseInt(
                                        Array.from(e.$items.keys())[t] || t
                                      );
                                      null == n ? e.deleteAt(r) : e.setAt(r, n);
                                    }
                                    return !0;
                                  },
                                  deleteProperty: function (e, t) {
                                    return (
                                      "number" == typeof t
                                        ? e.deleteAt(t)
                                        : delete e[t],
                                      !0
                                    );
                                  },
                                  has: function (e, t) {
                                    return "symbol" == typeof t ||
                                      isNaN(Number(t))
                                      ? Reflect.has(e, t)
                                      : e.$items.has(Number(t));
                                  },
                                })));
                        }
                        this.$changes.change(r),
                          e.$changes &&
                            e.$changes.setParent(
                              this,
                              this.$changes.root,
                              this._definition.indexes[r]
                            );
                      } else this[f] && this.$changes.delete(r);
                      this[f] = e;
                    }
                  },
                  enumerable: !0,
                  configurable: !0,
                });
            }
          );
        }
        function v(e, t, n) {
          for (var r = 0, i = 0, s = n.length; i < s; i++)
            (r = n.charCodeAt(i)) < 128
              ? (e[t++] = r)
              : (r < 2048
                  ? (e[t++] = 192 | (r >> 6))
                  : (r < 55296 || r >= 57344
                      ? (e[t++] = 224 | (r >> 12))
                      : (i++,
                        (r =
                          65536 +
                          (((1023 & r) << 10) | (1023 & n.charCodeAt(i)))),
                        (e[t++] = 240 | (r >> 18)),
                        (e[t++] = 128 | ((r >> 12) & 63))),
                    (e[t++] = 128 | ((r >> 6) & 63))),
                (e[t++] = 128 | (63 & r)));
        }
        function y(e, t) {
          e.push(255 & t);
        }
        function x(e, t) {
          e.push(255 & t);
        }
        function b(e, t) {
          e.push(255 & t), e.push((t >> 8) & 255);
        }
        function S(e, t) {
          e.push(255 & t), e.push((t >> 8) & 255);
        }
        function E(e, t) {
          e.push(255 & t),
            e.push((t >> 8) & 255),
            e.push((t >> 16) & 255),
            e.push((t >> 24) & 255);
        }
        function M(e, t) {
          var n = t >> 24,
            r = t >> 16,
            i = t >> 8;
          e.push(255 & t), e.push(255 & i), e.push(255 & r), e.push(255 & n);
        }
        function w(e, t) {
          var n = Math.floor(t / 4294967296);
          M(e, t >>> 0), M(e, n);
        }
        function T(e, t) {
          M(e, t >>> 0), M(e, (t / 4294967296) >> 0);
        }
        var A = new Int32Array(2),
          C = new Float32Array(A.buffer),
          R = new Float64Array(A.buffer);
        function P(e, t) {
          (C[0] = t), E(e, A[0]);
        }
        function O(e, t) {
          (R[0] = t), E(e, A[0]), E(e, A[1]);
        }
        function L(e, t) {
          t || (t = "");
          var n = (function (e) {
              for (var t = 0, n = 0, r = 0, i = e.length; r < i; r++)
                (t = e.charCodeAt(r)) < 128
                  ? (n += 1)
                  : t < 2048
                  ? (n += 2)
                  : t < 55296 || t >= 57344
                  ? (n += 3)
                  : (r++, (n += 4));
              return n;
            })(t),
            r = 0;
          if (n < 32) e.push(160 | n), (r = 1);
          else if (n < 256) e.push(217), x(e, n), (r = 2);
          else if (n < 65536) e.push(218), S(e, n), (r = 3);
          else if (n < 4294967296) e.push(219), M(e, n), (r = 5);
          else throw Error("String too long");
          return v(e, e.length, t), r + n;
        }
        function I(e, t) {
          return isNaN(t)
            ? I(e, 0)
            : isFinite(t)
            ? t !== (0 | t)
              ? (e.push(203), O(e, t), 9)
              : t >= 0
              ? t < 128
                ? (x(e, t), 1)
                : t < 256
                ? (e.push(204), x(e, t), 2)
                : t < 65536
                ? (e.push(205), S(e, t), 3)
                : t < 4294967296
                ? (e.push(206), M(e, t), 5)
                : (e.push(207), T(e, t), 9)
              : t >= -32
              ? (e.push(224 | (t + 32)), 1)
              : t >= -128
              ? (e.push(208), y(e, t), 2)
              : t >= -32768
              ? (e.push(209), b(e, t), 3)
              : t >= -2147483648
              ? (e.push(210), E(e, t), 5)
              : (e.push(211), w(e, t), 9)
            : I(e, t > 0 ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);
        }
        var N = Object.freeze({
          __proto__: null,
          utf8Write: v,
          int8: y,
          uint8: x,
          int16: b,
          uint16: S,
          int32: E,
          uint32: M,
          int64: w,
          uint64: T,
          float32: function (e, t) {
            P(e, t);
          },
          float64: function (e, t) {
            O(e, t);
          },
          writeFloat32: P,
          writeFloat64: O,
          boolean: function (e, t) {
            return x(e, t ? 1 : 0);
          },
          string: L,
          number: I,
        });
        function D(e, t) {
          return (U(e, t) << 24) >> 24;
        }
        function U(e, t) {
          return e[t.offset++];
        }
        function k(e, t) {
          return (F(e, t) << 16) >> 16;
        }
        function F(e, t) {
          return e[t.offset++] | (e[t.offset++] << 8);
        }
        function z(e, t) {
          return (
            e[t.offset++] |
            (e[t.offset++] << 8) |
            (e[t.offset++] << 16) |
            (e[t.offset++] << 24)
          );
        }
        function B(e, t) {
          return z(e, t) >>> 0;
        }
        function V(e, t) {
          var n = B(e, t);
          return 4294967296 * z(e, t) + n;
        }
        function j(e, t) {
          var n = B(e, t);
          return 4294967296 * B(e, t) + n;
        }
        var H = new Int32Array(2),
          G = new Float32Array(H.buffer),
          W = new Float64Array(H.buffer);
        function $(e, t) {
          return (H[0] = z(e, t)), G[0];
        }
        function X(e, t) {
          return (H[0] = z(e, t)), (H[1] = z(e, t)), W[0];
        }
        function q(e, t) {
          var n,
            r = e[t.offset++];
          r < 192
            ? (n = 31 & r)
            : 217 === r
            ? (n = U(e, t))
            : 218 === r
            ? (n = F(e, t))
            : 219 === r && (n = B(e, t));
          var i = (function (e, t, n) {
            for (var r = "", i = 0, s = t, a = t + n; s < a; s++) {
              var o = e[s];
              if ((128 & o) == 0) {
                r += String.fromCharCode(o);
                continue;
              }
              if ((224 & o) == 192) {
                r += String.fromCharCode(((31 & o) << 6) | (63 & e[++s]));
                continue;
              }
              if ((240 & o) == 224) {
                r += String.fromCharCode(
                  ((15 & o) << 12) | ((63 & e[++s]) << 6) | ((63 & e[++s]) << 0)
                );
                continue;
              }
              if ((248 & o) == 240) {
                (i =
                  ((7 & o) << 18) |
                  ((63 & e[++s]) << 12) |
                  ((63 & e[++s]) << 6) |
                  ((63 & e[++s]) << 0)) >= 65536
                  ? ((i -= 65536),
                    (r += String.fromCharCode(
                      (i >>> 10) + 55296,
                      (1023 & i) + 56320
                    )))
                  : (r += String.fromCharCode(i));
                continue;
              }
              console.error("Invalid byte " + o.toString(16));
            }
            return r;
          })(e, t.offset, n);
          return (t.offset += n), i;
        }
        function Y(e, t) {
          var n = e[t.offset++];
          if (n < 128) return n;
          if (202 === n) return $(e, t);
          if (203 === n) return X(e, t);
          if (204 === n) return U(e, t);
          if (205 === n) return F(e, t);
          if (206 === n) return B(e, t);
          if (207 === n) return j(e, t);
          else if (208 === n) return D(e, t);
          else if (209 === n) return k(e, t);
          else if (210 === n) return z(e, t);
          else if (211 === n) return V(e, t);
          else if (n > 223) return -((255 - n + 1) * 1);
        }
        function J(e, t) {
          return (
            255 === e[t.offset - 1] &&
            (e[t.offset] < 128 || (e[t.offset] >= 202 && e[t.offset] <= 211))
          );
        }
        var Z = Object.freeze({
            __proto__: null,
            int8: D,
            uint8: U,
            int16: k,
            uint16: F,
            int32: z,
            uint32: B,
            float32: function (e, t) {
              return $(e, t);
            },
            float64: function (e, t) {
              return X(e, t);
            },
            int64: V,
            uint64: j,
            readFloat32: $,
            readFloat64: X,
            boolean: function (e, t) {
              return U(e, t) > 0;
            },
            string: q,
            stringCheck: function (e, t) {
              var n = e[t.offset];
              return (
                (n < 192 && n > 160) || 217 === n || 218 === n || 219 === n
              );
            },
            number: Y,
            numberCheck: function (e, t) {
              var n = e[t.offset];
              return n < 128 || (n >= 202 && n <= 211);
            },
            arrayCheck: function (e, t) {
              return e[t.offset] < 160;
            },
            switchStructureCheck: J,
          }),
          K = (function () {
            function t(e) {
              var t = this;
              (this.$changes = new a(this)),
                (this.$items = new Map()),
                (this.$indexes = new Map()),
                (this.$refId = 0),
                e &&
                  e.forEach(function (e) {
                    return t.add(e);
                  });
            }
            return (
              (t.prototype.onAdd = function (t, n) {
                return (
                  void 0 === n && (n = !0),
                  o(
                    this.$callbacks || (this.$callbacks = []),
                    e.OPERATION.ADD,
                    t,
                    n ? this.$items : void 0
                  )
                );
              }),
              (t.prototype.onRemove = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = []),
                  e.OPERATION.DELETE,
                  t
                );
              }),
              (t.prototype.onChange = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = []),
                  e.OPERATION.REPLACE,
                  t
                );
              }),
              (t.is = function (e) {
                return void 0 !== e.collection;
              }),
              (t.prototype.add = function (e) {
                var t = this.$refId++;
                return (
                  void 0 !== e.$changes &&
                    e.$changes.setParent(this, this.$changes.root, t),
                  (this.$changes.indexes[t] = t),
                  this.$indexes.set(t, t),
                  this.$items.set(t, e),
                  this.$changes.change(t),
                  t
                );
              }),
              (t.prototype.at = function (e) {
                var t = Array.from(this.$items.keys())[e];
                return this.$items.get(t);
              }),
              (t.prototype.entries = function () {
                return this.$items.entries();
              }),
              (t.prototype.delete = function (e) {
                for (
                  var t, n, r = this.$items.entries();
                  (n = r.next()) && !n.done;

                )
                  if (e === n.value[1]) {
                    t = n.value[0];
                    break;
                  }
                return (
                  void 0 !== t &&
                  (this.$changes.delete(t),
                  this.$indexes.delete(t),
                  this.$items.delete(t))
                );
              }),
              (t.prototype.clear = function (t) {
                this.$changes.discard(!0, !0),
                  (this.$changes.indexes = {}),
                  this.$indexes.clear(),
                  t && l.call(this, t),
                  this.$items.clear(),
                  this.$changes.operation({ index: 0, op: e.OPERATION.CLEAR }),
                  this.$changes.touchParents();
              }),
              (t.prototype.has = function (e) {
                return Array.from(this.$items.values()).some(function (t) {
                  return t === e;
                });
              }),
              (t.prototype.forEach = function (e) {
                var t = this;
                this.$items.forEach(function (n, r, i) {
                  return e(n, r, t);
                });
              }),
              (t.prototype.values = function () {
                return this.$items.values();
              }),
              Object.defineProperty(t.prototype, "size", {
                get: function () {
                  return this.$items.size;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.setIndex = function (e, t) {
                this.$indexes.set(e, t);
              }),
              (t.prototype.getIndex = function (e) {
                return this.$indexes.get(e);
              }),
              (t.prototype.getByIndex = function (e) {
                return this.$items.get(this.$indexes.get(e));
              }),
              (t.prototype.deleteByIndex = function (e) {
                var t = this.$indexes.get(e);
                this.$items.delete(t), this.$indexes.delete(e);
              }),
              (t.prototype.toArray = function () {
                return Array.from(this.$items.values());
              }),
              (t.prototype.toJSON = function () {
                var e = [];
                return (
                  this.forEach(function (t, n) {
                    e.push("function" == typeof t.toJSON ? t.toJSON() : t);
                  }),
                  e
                );
              }),
              (t.prototype.clone = function (e) {
                var n;
                return (
                  e
                    ? (n = Object.assign(new t(), this))
                    : ((n = new t()),
                      this.forEach(function (e) {
                        e.$changes ? n.add(e.clone()) : n.add(e);
                      })),
                  n
                );
              }),
              t
            );
          })(),
          Q = (function () {
            function t(e) {
              var t = this;
              (this.$changes = new a(this)),
                (this.$items = new Map()),
                (this.$indexes = new Map()),
                (this.$refId = 0),
                e &&
                  e.forEach(function (e) {
                    return t.add(e);
                  });
            }
            return (
              (t.prototype.onAdd = function (t, n) {
                return (
                  void 0 === n && (n = !0),
                  o(
                    this.$callbacks || (this.$callbacks = []),
                    e.OPERATION.ADD,
                    t,
                    n ? this.$items : void 0
                  )
                );
              }),
              (t.prototype.onRemove = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = []),
                  e.OPERATION.DELETE,
                  t
                );
              }),
              (t.prototype.onChange = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = []),
                  e.OPERATION.REPLACE,
                  t
                );
              }),
              (t.is = function (e) {
                return void 0 !== e.set;
              }),
              (t.prototype.add = function (t) {
                if (this.has(t)) return !1;
                var n,
                  r,
                  i = this.$refId++;
                void 0 !== t.$changes &&
                  t.$changes.setParent(this, this.$changes.root, i);
                var s =
                  null !==
                    (r =
                      null === (n = this.$changes.indexes[i]) || void 0 === n
                        ? void 0
                        : n.op) && void 0 !== r
                    ? r
                    : e.OPERATION.ADD;
                return (
                  (this.$changes.indexes[i] = i),
                  this.$indexes.set(i, i),
                  this.$items.set(i, t),
                  this.$changes.change(i, s),
                  i
                );
              }),
              (t.prototype.entries = function () {
                return this.$items.entries();
              }),
              (t.prototype.delete = function (e) {
                for (
                  var t, n, r = this.$items.entries();
                  (n = r.next()) && !n.done;

                )
                  if (e === n.value[1]) {
                    t = n.value[0];
                    break;
                  }
                return (
                  void 0 !== t &&
                  (this.$changes.delete(t),
                  this.$indexes.delete(t),
                  this.$items.delete(t))
                );
              }),
              (t.prototype.clear = function (t) {
                this.$changes.discard(!0, !0),
                  (this.$changes.indexes = {}),
                  this.$indexes.clear(),
                  t && l.call(this, t),
                  this.$items.clear(),
                  this.$changes.operation({ index: 0, op: e.OPERATION.CLEAR }),
                  this.$changes.touchParents();
              }),
              (t.prototype.has = function (e) {
                for (
                  var t, n = this.$items.values(), r = !1;
                  (t = n.next()) && !t.done;

                )
                  if (e === t.value) {
                    r = !0;
                    break;
                  }
                return r;
              }),
              (t.prototype.forEach = function (e) {
                var t = this;
                this.$items.forEach(function (n, r, i) {
                  return e(n, r, t);
                });
              }),
              (t.prototype.values = function () {
                return this.$items.values();
              }),
              Object.defineProperty(t.prototype, "size", {
                get: function () {
                  return this.$items.size;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.setIndex = function (e, t) {
                this.$indexes.set(e, t);
              }),
              (t.prototype.getIndex = function (e) {
                return this.$indexes.get(e);
              }),
              (t.prototype.getByIndex = function (e) {
                return this.$items.get(this.$indexes.get(e));
              }),
              (t.prototype.deleteByIndex = function (e) {
                var t = this.$indexes.get(e);
                this.$items.delete(t), this.$indexes.delete(e);
              }),
              (t.prototype.toArray = function () {
                return Array.from(this.$items.values());
              }),
              (t.prototype.toJSON = function () {
                var e = [];
                return (
                  this.forEach(function (t, n) {
                    e.push("function" == typeof t.toJSON ? t.toJSON() : t);
                  }),
                  e
                );
              }),
              (t.prototype.clone = function (e) {
                var n;
                return (
                  e
                    ? (n = Object.assign(new t(), this))
                    : ((n = new t()),
                      this.forEach(function (e) {
                        e.$changes ? n.add(e.clone()) : n.add(e);
                      })),
                  n
                );
              }),
              t
            );
          })(),
          ee = (function () {
            function e() {
              (this.refIds = new WeakSet()),
                (this.containerIndexes = new WeakMap());
            }
            return (
              (e.prototype.addRefId = function (e) {
                this.refIds.has(e) ||
                  (this.refIds.add(e), this.containerIndexes.set(e, new Set()));
              }),
              (e.get = function (t) {
                return (
                  void 0 === t.$filterState && (t.$filterState = new e()),
                  t.$filterState
                );
              }),
              e
            );
          })(),
          et = (function () {
            function e() {
              (this.refs = new Map()),
                (this.refCounts = {}),
                (this.deletedRefs = new Set()),
                (this.nextUniqueId = 0);
            }
            return (
              (e.prototype.getNextUniqueId = function () {
                return this.nextUniqueId++;
              }),
              (e.prototype.addRef = function (e, t, n) {
                void 0 === n && (n = !0),
                  this.refs.set(e, t),
                  n && (this.refCounts[e] = (this.refCounts[e] || 0) + 1);
              }),
              (e.prototype.removeRef = function (e) {
                var t = this.refCounts[e];
                if (void 0 === t) {
                  console.warn(
                    "trying to remove reference ".concat(
                      e,
                      " that doesn't exist"
                    )
                  );
                  return;
                }
                if (0 === t) {
                  console.warn(
                    "trying to remove reference ".concat(e, " with 0 refCount")
                  );
                  return;
                }
                (this.refCounts[e] = t - 1), this.deletedRefs.add(e);
              }),
              (e.prototype.clearRefs = function () {
                this.refs.clear(),
                  this.deletedRefs.clear(),
                  (this.refCounts = {});
              }),
              (e.prototype.garbageCollectDeletedRefs = function () {
                var e = this;
                this.deletedRefs.forEach(function (t) {
                  if (!(e.refCounts[t] > 0)) {
                    var n = e.refs.get(t);
                    if (n instanceof ei)
                      for (var r in n._definition.schema)
                        "string" != typeof n._definition.schema[r] &&
                          n[r] &&
                          n[r].$changes &&
                          e.removeRef(n[r].$changes.refId);
                    else {
                      var i = n.$changes.parent._definition;
                      "function" ==
                        typeof Object.values(
                          i.schema[i.fieldsByIndex[n.$changes.parentIndex]]
                        )[0] &&
                        Array.from(n.values()).forEach(function (t) {
                          return e.removeRef(t.$changes.refId);
                        });
                    }
                    e.refs.delete(t), delete e.refCounts[t];
                  }
                }),
                  this.deletedRefs.clear();
              }),
              e
            );
          })(),
          en = (function (e) {
            function t() {
              return (null !== e && e.apply(this, arguments)) || this;
            }
            return r(t, e), t;
          })(Error);
        function er(e, t, n, r) {
          if (!(e instanceof t))
            throw new en(
              "a '"
                .concat(t.name, "' was expected, but '")
                .concat(e.constructor.name, "' was provided in ")
                .concat(n.constructor.name, "#")
                .concat(r)
            );
        }
        var ei = (function () {
            function t() {
              for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
              Object.defineProperties(this, {
                $changes: {
                  value: new a(this, void 0, new et()),
                  enumerable: !1,
                  writable: !0,
                },
                $callbacks: { value: void 0, enumerable: !1, writable: !0 },
              });
              var n = this._definition.descriptors;
              n && Object.defineProperties(this, n), e[0] && this.assign(e[0]);
            }
            return (
              (t.onError = function (e) {
                console.error(e);
              }),
              (t.is = function (e) {
                return e._definition && void 0 !== e._definition.schema;
              }),
              (t.prototype.onChange = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.REPLACE,
                  t
                );
              }),
              (t.prototype.onRemove = function (t) {
                return o(
                  this.$callbacks || (this.$callbacks = {}),
                  e.OPERATION.DELETE,
                  t
                );
              }),
              (t.prototype.assign = function (e) {
                return Object.assign(this, e), this;
              }),
              Object.defineProperty(t.prototype, "_definition", {
                get: function () {
                  return this.constructor._definition;
                },
                enumerable: !1,
                configurable: !0,
              }),
              (t.prototype.setDirty = function (e, t) {
                this.$changes.change(e, t);
              }),
              (t.prototype.listen = function (e, t, n) {
                var r = this;
                return (
                  void 0 === n && (n = !0),
                  this.$callbacks || (this.$callbacks = {}),
                  this.$callbacks[e] || (this.$callbacks[e] = []),
                  this.$callbacks[e].push(t),
                  n && void 0 !== this[e] && t(this[e], void 0),
                  function () {
                    return u(r.$callbacks[e], r.$callbacks[e].indexOf(t));
                  }
                );
              }),
              (t.prototype.decode = function (n, r, i) {
                void 0 === r && (r = { offset: 0 }), void 0 === i && (i = this);
                var s = [],
                  a = this.$changes.root,
                  o = n.length,
                  l = 0;
                for (a.refs.set(l, this); r.offset < o; ) {
                  var u,
                    c = n[r.offset++];
                  if (255 == c) {
                    l = Y(n, r);
                    var f = a.refs.get(l);
                    if (!f) throw Error('"refId" not found: '.concat(l));
                    i = f;
                    continue;
                  }
                  var m = i.$changes,
                    g = void 0 !== i._definition,
                    _ = g ? (c >> 6) << 6 : c;
                  if (_ === e.OPERATION.CLEAR) {
                    i.clear(s);
                    continue;
                  }
                  var v = g ? c % (_ || 255) : Y(n, r),
                    y = g ? i._definition.fieldsByIndex[v] : "",
                    x = m.getType(v),
                    b = void 0,
                    S = void 0,
                    E = void 0;
                  if (
                    (g
                      ? (S = i["_".concat(y)])
                      : ((S = i.getByIndex(v)),
                        (_ & e.OPERATION.ADD) === e.OPERATION.ADD
                          ? ((E = i instanceof d ? q(n, r) : v),
                            i.setIndex(v, E))
                          : (E = i.getIndex(v))),
                    (_ & e.OPERATION.DELETE) === e.OPERATION.DELETE &&
                      (_ !== e.OPERATION.DELETE_AND_ADD && i.deleteByIndex(v),
                      S && S.$changes && a.removeRef(S.$changes.refId),
                      (b = null)),
                    void 0 === y)
                  ) {
                    console.warn("@colyseus/schema: definition mismatch");
                    for (
                      var M = { offset: r.offset };
                      r.offset < o &&
                      !(
                        J(n, r) &&
                        ((M.offset = r.offset + 1), a.refs.has(Y(n, M)))
                      );

                    )
                      r.offset++;
                    continue;
                  }
                  if (_ === e.OPERATION.DELETE);
                  else if (t.is(x)) {
                    var w = Y(n, r);
                    if (((b = a.refs.get(w)), _ !== e.OPERATION.REPLACE)) {
                      var T = this.getSchemaType(n, r, x);
                      !b &&
                        (((b = this.createTypeInstance(T)).$changes.refId = w),
                        S &&
                          ((b.$callbacks = S.$callbacks),
                          S.$changes.refId &&
                            w !== S.$changes.refId &&
                            a.removeRef(S.$changes.refId))),
                        a.addRef(w, b, b !== S);
                    }
                  } else if ("string" == typeof x) (u = r), (b = Z[x](n, u));
                  else {
                    var A = p[Object.keys(x)[0]],
                      C = Y(n, r),
                      R = a.refs.has(C)
                        ? S || a.refs.get(C)
                        : new A.constructor();
                    if (
                      (((b = R.clone(!0)).$changes.refId = C),
                      S &&
                        ((b.$callbacks = S.$callbacks),
                        S.$changes.refId && C !== S.$changes.refId))
                    ) {
                      a.removeRef(S.$changes.refId);
                      for (
                        var P = S.entries(), O = void 0;
                        (O = P.next()) && !O.done;

                      ) {
                        var L = O.value,
                          I = L[0],
                          N = L[1];
                        s.push({
                          refId: C,
                          op: e.OPERATION.DELETE,
                          field: I,
                          value: void 0,
                          previousValue: N,
                        });
                      }
                    }
                    a.addRef(C, b, R !== S);
                  }
                  if (null != b) {
                    if (
                      (b.$changes && b.$changes.setParent(m.ref, m.root, v),
                      i instanceof t)
                    )
                      i[y] = b;
                    else if (i instanceof d) {
                      var I = E;
                      i.$items.set(I, b), i.$changes.allChanges.add(v);
                    } else if (i instanceof h) i.setAt(v, b);
                    else if (i instanceof K) {
                      var D = i.add(b);
                      i.setIndex(v, D);
                    } else if (i instanceof Q) {
                      var D = i.add(b);
                      !1 !== D && i.setIndex(v, D);
                    }
                  }
                  S !== b &&
                    s.push({
                      refId: l,
                      op: _,
                      field: y,
                      dynamicIndex: E,
                      value: b,
                      previousValue: S,
                    });
                }
                return (
                  this._triggerChanges(s), a.garbageCollectDeletedRefs(), s
                );
              }),
              (t.prototype.encode = function (n, r, i) {
                void 0 === n && (n = !1),
                  void 0 === r && (r = []),
                  void 0 === i && (i = !1);
                for (
                  var s = this.$changes,
                    a = new WeakSet(),
                    o = [s],
                    l = 1,
                    u = 0;
                  u < l;
                  u++
                ) {
                  var c = o[u],
                    h = c.ref,
                    f = h instanceof t;
                  c.ensureRefId(),
                    a.add(c),
                    c !== s && (c.changed || n) && (x(r, 255), I(r, c.refId));
                  for (
                    var m = n
                        ? Array.from(c.allChanges)
                        : Array.from(c.changes.values()),
                      g = 0,
                      _ = m.length;
                    g < _;
                    g++
                  ) {
                    var v = n ? { op: e.OPERATION.ADD, index: m[g] } : m[g],
                      y = v.index,
                      b = f
                        ? h._definition.fieldsByIndex &&
                          h._definition.fieldsByIndex[y]
                        : y,
                      S = r.length;
                    if (v.op !== e.OPERATION.TOUCH) {
                      if (f) x(r, y | v.op);
                      else {
                        if ((x(r, v.op), v.op === e.OPERATION.CLEAR)) continue;
                        I(r, y);
                      }
                    }
                    if (
                      (!f &&
                        (v.op & e.OPERATION.ADD) == e.OPERATION.ADD &&
                        h instanceof d &&
                        L(r, c.ref.$indexes.get(y)),
                      v.op !== e.OPERATION.DELETE)
                    ) {
                      var E = c.getType(y),
                        M = c.getValue(y);
                      if (
                        (M &&
                          M.$changes &&
                          !a.has(M.$changes) &&
                          (o.push(M.$changes), M.$changes.ensureRefId(), l++),
                        v.op !== e.OPERATION.TOUCH)
                      ) {
                        if (t.is(E))
                          er(M, E, h, b),
                            I(r, M.$changes.refId),
                            (v.op & e.OPERATION.ADD) === e.OPERATION.ADD &&
                              this.tryEncodeTypeId(r, E, M.constructor);
                        else if ("string" == typeof E)
                          !(function (e, t, n, r, i) {
                            !(function (e, t, n, r) {
                              var i,
                                s = !1;
                              switch (t) {
                                case "number":
                                case "int8":
                                case "uint8":
                                case "int16":
                                case "uint16":
                                case "int32":
                                case "uint32":
                                case "int64":
                                case "uint64":
                                case "float32":
                                case "float64":
                                  (i = "number"),
                                    isNaN(e) &&
                                      console.log(
                                        'trying to encode "NaN" in '
                                          .concat(n.constructor.name, "#")
                                          .concat(r)
                                      );
                                  break;
                                case "string":
                                  (i = "string"), (s = !0);
                                  break;
                                case "boolean":
                                  return;
                              }
                              if (typeof e !== i && (!s || (s && null !== e))) {
                                var a = "'"
                                  .concat(JSON.stringify(e), "'")
                                  .concat(
                                    (e &&
                                      e.constructor &&
                                      " (".concat(e.constructor.name, ")")) ||
                                      ""
                                  );
                                throw new en(
                                  "a '"
                                    .concat(i, "' was expected, but ")
                                    .concat(a, " was provided in ")
                                    .concat(n.constructor.name, "#")
                                    .concat(r)
                                );
                              }
                            })(n, e, r, i);
                            var s = N[e];
                            if (s) s(t, n);
                            else
                              throw new en(
                                "a '"
                                  .concat(e, "' was expected, but ")
                                  .concat(n, " was provided in ")
                                  .concat(r.constructor.name, "#")
                                  .concat(i)
                              );
                          })(E, r, M, h, b);
                        else {
                          var w = p[Object.keys(E)[0]];
                          er(h["_".concat(b)], w.constructor, h, b),
                            I(r, M.$changes.refId);
                        }
                        i && c.cache(y, r.slice(S));
                      }
                    }
                  }
                  n || i || c.discard();
                }
                return r;
              }),
              (t.prototype.encodeAll = function (e) {
                return this.encode(!0, [], e);
              }),
              (t.prototype.applyFilters = function (n, r) {
                void 0 === r && (r = !1);
                for (
                  var i,
                    s,
                    a = this,
                    o = new Set(),
                    l = ee.get(n),
                    u = [this.$changes],
                    c = 1,
                    h = [],
                    p = 0;
                  p < c;
                  p++
                )
                  !(function (p) {
                    var f = u[p];
                    if (!o.has(f.refId)) {
                      var m = f.ref,
                        g = m instanceof t;
                      x(h, 255), I(h, f.refId);
                      var _ = l.refIds.has(f),
                        v = r || !_;
                      l.addRefId(f);
                      var y = l.containerIndexes.get(f),
                        b = v
                          ? Array.from(f.allChanges)
                          : Array.from(f.changes.values());
                      !r &&
                        g &&
                        m._definition.indexesWithFilters &&
                        m._definition.indexesWithFilters.forEach(function (t) {
                          !y.has(t) &&
                            f.allChanges.has(t) &&
                            (v
                              ? b.push(t)
                              : b.push({ op: e.OPERATION.ADD, index: t }));
                        });
                      for (var S = 0, E = b.length; S < E; S++) {
                        var M = v ? { op: e.OPERATION.ADD, index: b[S] } : b[S];
                        if (M.op === e.OPERATION.CLEAR) {
                          x(h, M.op);
                          continue;
                        }
                        var w = M.index;
                        if (M.op === e.OPERATION.DELETE) {
                          g ? x(h, M.op | w) : (x(h, M.op), I(h, w));
                          continue;
                        }
                        var T = f.getValue(w),
                          A = f.getType(w);
                        if (g) {
                          var C =
                            m._definition.filters && m._definition.filters[w];
                          if (C && !C.call(m, n, T, a)) {
                            T && T.$changes && o.add(T.$changes.refId);
                            continue;
                          }
                        } else {
                          var R = f.parent,
                            C = f.getChildrenFilter();
                          if (C && !C.call(R, n, m.$indexes.get(w), T, a)) {
                            T && T.$changes && o.add(T.$changes.refId);
                            continue;
                          }
                        }
                        if (
                          (T.$changes && (u.push(T.$changes), c++),
                          M.op !== e.OPERATION.TOUCH)
                        ) {
                          if (M.op === e.OPERATION.ADD || g)
                            h.push.apply(
                              h,
                              null !== (i = f.caches[w]) && void 0 !== i
                                ? i
                                : []
                            ),
                              y.add(w);
                          else if (y.has(w))
                            h.push.apply(
                              h,
                              null !== (s = f.caches[w]) && void 0 !== s
                                ? s
                                : []
                            );
                          else {
                            if (
                              (y.add(w),
                              x(h, e.OPERATION.ADD),
                              I(h, w),
                              m instanceof d)
                            ) {
                              var P = f.ref.$indexes.get(w);
                              L(h, P);
                            }
                            T.$changes ? I(h, T.$changes.refId) : N[A](h, T);
                          }
                        } else if (T.$changes && !g) {
                          if (
                            (x(h, e.OPERATION.ADD), I(h, w), m instanceof d)
                          ) {
                            var P = f.ref.$indexes.get(w);
                            L(h, P);
                          }
                          I(h, T.$changes.refId);
                        }
                      }
                    }
                  })(p);
                return h;
              }),
              (t.prototype.clone = function () {
                var e,
                  t = new this.constructor(),
                  n = this._definition.schema;
                for (var r in n)
                  "object" == typeof this[r] &&
                  "function" ==
                    typeof (null === (e = this[r]) || void 0 === e
                      ? void 0
                      : e.clone)
                    ? (t[r] = this[r].clone())
                    : (t[r] = this[r]);
                return t;
              }),
              (t.prototype.toJSON = function () {
                var e = this._definition.schema,
                  t = this._definition.deprecated,
                  n = {};
                for (var r in e)
                  t[r] ||
                    null === this[r] ||
                    void 0 === this[r] ||
                    (n[r] =
                      "function" == typeof this[r].toJSON
                        ? this[r].toJSON()
                        : this["_".concat(r)]);
                return n;
              }),
              (t.prototype.discardAllChanges = function () {
                this.$changes.discardAll();
              }),
              (t.prototype.getByIndex = function (e) {
                return this[this._definition.fieldsByIndex[e]];
              }),
              (t.prototype.deleteByIndex = function (e) {
                this[this._definition.fieldsByIndex[e]] = void 0;
              }),
              (t.prototype.tryEncodeTypeId = function (e, t, n) {
                t._typeid !== n._typeid && (x(e, 213), I(e, n._typeid));
              }),
              (t.prototype.getSchemaType = function (e, t, n) {
                var r;
                return (
                  213 === e[t.offset] &&
                    (t.offset++, (r = this.constructor._context.get(Y(e, t)))),
                  r || n
                );
              }),
              (t.prototype.createTypeInstance = function (e) {
                var t = new e();
                return (t.$changes.root = this.$changes.root), t;
              }),
              (t.prototype._triggerChanges = function (n) {
                for (
                  var r,
                    i,
                    s,
                    a,
                    o,
                    l,
                    u,
                    c,
                    h,
                    d = new Set(),
                    p = this.$changes.root.refs,
                    f = 0;
                  f < n.length;
                  f++
                )
                  !(function (f) {
                    var m = n[f],
                      g = m.refId,
                      _ = p.get(g),
                      v = _.$callbacks;
                    if (
                      ((m.op & e.OPERATION.DELETE) === e.OPERATION.DELETE &&
                        m.previousValue instanceof t &&
                        (null ===
                          (i =
                            null === (r = m.previousValue.$callbacks) ||
                            void 0 === r
                              ? void 0
                              : r[e.OPERATION.DELETE]) ||
                          void 0 === i ||
                          i.forEach(function (e) {
                            return e();
                          })),
                      v)
                    ) {
                      if (_ instanceof t) {
                        if (!d.has(g))
                          try {
                            null ===
                              (s =
                                null == v ? void 0 : v[e.OPERATION.REPLACE]) ||
                              void 0 === s ||
                              s.forEach(function (e) {
                                return e();
                              });
                          } catch (e) {
                            t.onError(e);
                          }
                        try {
                          v.hasOwnProperty(m.field) &&
                            (null === (a = v[m.field]) ||
                              void 0 === a ||
                              a.forEach(function (e) {
                                return e(m.value, m.previousValue);
                              }));
                        } catch (e) {
                          t.onError(e);
                        }
                      } else
                        m.op === e.OPERATION.ADD && void 0 === m.previousValue
                          ? null === (o = v[e.OPERATION.ADD]) ||
                            void 0 === o ||
                            o.forEach(function (e) {
                              var t;
                              return e(
                                m.value,
                                null !== (t = m.dynamicIndex) && void 0 !== t
                                  ? t
                                  : m.field
                              );
                            })
                          : m.op === e.OPERATION.DELETE
                          ? void 0 !== m.previousValue &&
                            (null === (l = v[e.OPERATION.DELETE]) ||
                              void 0 === l ||
                              l.forEach(function (e) {
                                var t;
                                return e(
                                  m.previousValue,
                                  null !== (t = m.dynamicIndex) && void 0 !== t
                                    ? t
                                    : m.field
                                );
                              }))
                          : m.op === e.OPERATION.DELETE_AND_ADD &&
                            (void 0 !== m.previousValue &&
                              (null === (u = v[e.OPERATION.DELETE]) ||
                                void 0 === u ||
                                u.forEach(function (e) {
                                  var t;
                                  return e(
                                    m.previousValue,
                                    null !== (t = m.dynamicIndex) &&
                                      void 0 !== t
                                      ? t
                                      : m.field
                                  );
                                })),
                            null === (c = v[e.OPERATION.ADD]) ||
                              void 0 === c ||
                              c.forEach(function (e) {
                                var t;
                                return e(
                                  m.value,
                                  null !== (t = m.dynamicIndex) && void 0 !== t
                                    ? t
                                    : m.field
                                );
                              })),
                          m.value !== m.previousValue &&
                            (null === (h = v[e.OPERATION.REPLACE]) ||
                              void 0 === h ||
                              h.forEach(function (e) {
                                var t;
                                return e(
                                  m.value,
                                  null !== (t = m.dynamicIndex) && void 0 !== t
                                    ? t
                                    : m.field
                                );
                              }));
                      d.add(g);
                    }
                  })(f);
              }),
              (t._definition = f.create()),
              t
            );
          })(),
          es = { context: new m() },
          ea = (function (e) {
            function t() {
              return (null !== e && e.apply(this, arguments)) || this;
            }
            return (
              r(t, e),
              i([_("string", es)], t.prototype, "name", void 0),
              i([_("string", es)], t.prototype, "type", void 0),
              i([_("number", es)], t.prototype, "referencedType", void 0),
              t
            );
          })(ei),
          eo = (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (t.fields = new h()), t;
            }
            return (
              r(t, e),
              i([_("number", es)], t.prototype, "id", void 0),
              i([_([ea], es)], t.prototype, "fields", void 0),
              t
            );
          })(ei),
          el = (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (t.types = new h()), t;
            }
            return (
              r(t, e),
              (t.encode = function (e) {
                var n = e.constructor,
                  r = new t();
                r.rootType = n._typeid;
                var i = n._context.types;
                for (var s in i) {
                  var a = new eo();
                  (a.id = Number(s)),
                    (function (e, t) {
                      for (var n in t) {
                        var i = new ea();
                        i.name = n;
                        var s = void 0;
                        if ("string" == typeof t[n]) s = t[n];
                        else {
                          var a = t[n],
                            o = void 0;
                          ei.is(a)
                            ? ((s = "ref"), (o = t[n]))
                            : ((s = Object.keys(a)[0]),
                              "string" == typeof a[s]
                                ? (s += ":" + a[s])
                                : (o = a[s])),
                            (i.referencedType = o ? o._typeid : -1);
                        }
                        (i.type = s), e.fields.push(i);
                      }
                      r.types.push(e);
                    })(a, i[s]._definition.schema);
                }
                return r.encodeAll();
              }),
              (t.decode = function (e, n) {
                var i = new m(),
                  s = new t();
                s.decode(e, n);
                var a = s.types.reduce(function (e, t) {
                  var n = (function (e) {
                      function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                      }
                      return r(t, e), t;
                    })(ei),
                    s = t.id;
                  return (e[s] = n), i.add(n, s), e;
                }, {});
                s.types.forEach(function (e) {
                  var t = a[e.id];
                  e.fields.forEach(function (e) {
                    var n;
                    if (void 0 !== e.referencedType) {
                      var r = e.type,
                        s = a[e.referencedType];
                      if (!s) {
                        var o = e.type.split(":");
                        (r = o[0]), (s = o[1]);
                      }
                      "ref" === r
                        ? _(s, { context: i })(t.prototype, e.name)
                        : _((((n = {})[r] = s), n), { context: i })(
                            t.prototype,
                            e.name
                          );
                    } else _(e.type, { context: i })(t.prototype, e.name);
                  });
                });
                var o = a[s.rootType],
                  l = new o();
                for (var u in o._definition.schema) {
                  var c = o._definition.schema[u];
                  "string" != typeof c &&
                    (l[u] =
                      "function" == typeof c
                        ? new c()
                        : new p[Object.keys(c)[0]].constructor());
                }
                return l;
              }),
              i([_([eo], es)], t.prototype, "types", void 0),
              i([_("number", es)], t.prototype, "rootType", void 0),
              t
            );
          })(ei);
        (p.map = { constructor: d }),
          (p.array = { constructor: h }),
          (p.set = { constructor: Q }),
          (p.collection = { constructor: K }),
          (e.ArraySchema = h),
          (e.CollectionSchema = K),
          (e.Context = m),
          (e.MapSchema = d),
          (e.Reflection = el),
          (e.ReflectionField = ea),
          (e.ReflectionType = eo),
          (e.Schema = ei),
          (e.SchemaDefinition = f),
          (e.SetSchema = Q),
          (e.decode = Z),
          (e.defineTypes = function (e, t, n) {
            for (var r in (void 0 === n && (n = {}),
            n.context || (n.context = e._context || n.context || g),
            t))
              _(t[r], n)(e.prototype, r);
            return e;
          }),
          (e.deprecated = function (e) {
            return (
              void 0 === e && (e = !0),
              function (t, n) {
                var r = t.constructor._definition;
                (r.deprecated[n] = !0),
                  e &&
                    (r.descriptors[n] = {
                      get: function () {
                        throw Error("".concat(n, " is deprecated."));
                      },
                      set: function (e) {},
                      enumerable: !1,
                      configurable: !0,
                    });
              }
            );
          }),
          (e.dumpChanges = function (e) {
            for (var t = [e.$changes], n = {}, r = 0; r < 1; r++)
              !(function (e) {
                var r = t[e];
                r.changes.forEach(function (e) {
                  var t = r.ref,
                    i = e.index;
                  n[
                    t._definition
                      ? t._definition.fieldsByIndex[i]
                      : t.$indexes.get(i)
                  ] = r.getValue(i);
                });
              })(r);
            return n;
          }),
          (e.encode = N),
          (e.filter = function (e) {
            return function (t, n) {
              var r = t.constructor;
              r._definition.addFilter(n, e) && (r._context.useFilters = !0);
            };
          }),
          (e.filterChildren = function (e) {
            return function (t, n) {
              var r = t.constructor;
              r._definition.addChildrenFilter(n, e) &&
                (r._context.useFilters = !0);
            };
          }),
          (e.hasFilter = function (e) {
            return e._context && e._context.useFilters;
          }),
          (e.registerType = function (e, t) {
            p[e] = t;
          }),
          (e.type = _),
          Object.defineProperty(e, "__esModule", { value: !0 });
      })(t);
    },
    3232: function (e, t, n) {
      "use strict";
      n.d(t, {
        X: function () {
          return r;
        },
      });
      let r = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
    },
    4897: function (e, t, n) {
      "use strict";
      n.d(t, {
        Tb: function () {
          return a;
        },
        s3: function () {
          return l;
        },
        $e: function () {
          return o;
        },
      });
      var r = n(9446),
        i = n(677);
      new WeakMap();
      let s = [
        "user",
        "level",
        "extra",
        "contexts",
        "tags",
        "fingerprint",
        "requestSession",
        "propagationContext",
      ];
      function a(e, t) {
        return (0, r.Gd)().captureException(
          e,
          t
            ? t instanceof i.s ||
              "function" == typeof t ||
              Object.keys(t).some((e) => s.includes(e))
              ? { captureContext: t }
              : t
            : void 0
        );
      }
      function o(e) {
        (0, r.Gd)().withScope(e);
      }
      function l() {
        return (0, r.Gd)().getClient();
      }
    },
    9446: function (e, t, n) {
      "use strict";
      n.d(t, {
        Gd: function () {
          return p;
        },
      });
      var r = n(3699),
        i = n(7790),
        s = n(8999),
        a = n(63),
        o = n(3232),
        l = n(677),
        u = n(8364);
      class c {
        constructor(e, t = new l.s(), n = 4) {
          (this._version = n),
            (this._stack = [{ scope: t }]),
            e && this.bindClient(e);
        }
        isOlderThan(e) {
          return this._version < e;
        }
        bindClient(e) {
          let t = this.getStackTop();
          (t.client = e), e && e.setupIntegrations && e.setupIntegrations();
        }
        pushScope() {
          let e = l.s.clone(this.getScope());
          return (
            this.getStack().push({ client: this.getClient(), scope: e }), e
          );
        }
        popScope() {
          return !(this.getStack().length <= 1) && !!this.getStack().pop();
        }
        withScope(e) {
          let t = this.pushScope();
          try {
            e(t);
          } finally {
            this.popScope();
          }
        }
        getClient() {
          return this.getStackTop().client;
        }
        getScope() {
          return this.getStackTop().scope;
        }
        getStack() {
          return this._stack;
        }
        getStackTop() {
          return this._stack[this._stack.length - 1];
        }
        captureException(e, t) {
          let n = (this._lastEventId =
              t && t.event_id ? t.event_id : (0, r.DM)()),
            i = Error("Sentry syntheticException");
          return (
            this._withClient((r, s) => {
              r.captureException(
                e,
                {
                  originalException: e,
                  syntheticException: i,
                  ...t,
                  event_id: n,
                },
                s
              );
            }),
            n
          );
        }
        captureMessage(e, t, n) {
          let i = (this._lastEventId =
              n && n.event_id ? n.event_id : (0, r.DM)()),
            s = Error(e);
          return (
            this._withClient((r, a) => {
              r.captureMessage(
                e,
                t,
                {
                  originalException: e,
                  syntheticException: s,
                  ...n,
                  event_id: i,
                },
                a
              );
            }),
            i
          );
        }
        captureEvent(e, t) {
          let n = t && t.event_id ? t.event_id : (0, r.DM)();
          return (
            e.type || (this._lastEventId = n),
            this._withClient((r, i) => {
              r.captureEvent(e, { ...t, event_id: n }, i);
            }),
            n
          );
        }
        lastEventId() {
          return this._lastEventId;
        }
        addBreadcrumb(e, t) {
          let { scope: n, client: r } = this.getStackTop();
          if (!r) return;
          let { beforeBreadcrumb: a = null, maxBreadcrumbs: o = 100 } =
            (r.getOptions && r.getOptions()) || {};
          if (o <= 0) return;
          let l = (0, i.yW)(),
            u = { timestamp: l, ...e },
            c = a ? (0, s.Cf)(() => a(u, t)) : u;
          null !== c &&
            (r.emit && r.emit("beforeAddBreadcrumb", c, t),
            n.addBreadcrumb(c, o));
        }
        setUser(e) {
          this.getScope().setUser(e);
        }
        setTags(e) {
          this.getScope().setTags(e);
        }
        setExtras(e) {
          this.getScope().setExtras(e);
        }
        setTag(e, t) {
          this.getScope().setTag(e, t);
        }
        setExtra(e, t) {
          this.getScope().setExtra(e, t);
        }
        setContext(e, t) {
          this.getScope().setContext(e, t);
        }
        configureScope(e) {
          let { scope: t, client: n } = this.getStackTop();
          n && e(t);
        }
        run(e) {
          let t = d(this);
          try {
            e(this);
          } finally {
            d(t);
          }
        }
        getIntegration(e) {
          let t = this.getClient();
          if (!t) return null;
          try {
            return t.getIntegration(e);
          } catch (t) {
            return (
              o.X &&
                s.kg.warn(
                  `Cannot retrieve integration ${e.id} from the current Hub`
                ),
              null
            );
          }
        }
        startTransaction(e, t) {
          let n = this._callExtensionMethod("startTransaction", e, t);
          if (o.X && !n) {
            let e = this.getClient();
            e
              ? s.kg
                  .warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`)
              : s.kg.warn(
                  "Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'"
                );
          }
          return n;
        }
        traceHeaders() {
          return this._callExtensionMethod("traceHeaders");
        }
        captureSession(e = !1) {
          if (e) return this.endSession();
          this._sendSessionUpdate();
        }
        endSession() {
          let e = this.getStackTop(),
            t = e.scope,
            n = t.getSession();
          n && (0, u.RJ)(n), this._sendSessionUpdate(), t.setSession();
        }
        startSession(e) {
          let { scope: t, client: n } = this.getStackTop(),
            { release: r, environment: i = "production" } =
              (n && n.getOptions()) || {},
            { userAgent: s } = a.n2.navigator || {},
            o = (0, u.Hv)({
              release: r,
              environment: i,
              user: t.getUser(),
              ...(s && { userAgent: s }),
              ...e,
            }),
            l = t.getSession && t.getSession();
          return (
            l && "ok" === l.status && (0, u.CT)(l, { status: "exited" }),
            this.endSession(),
            t.setSession(o),
            o
          );
        }
        shouldSendDefaultPii() {
          let e = this.getClient(),
            t = e && e.getOptions();
          return !!(t && t.sendDefaultPii);
        }
        _sendSessionUpdate() {
          let { scope: e, client: t } = this.getStackTop(),
            n = e.getSession();
          n && t && t.captureSession && t.captureSession(n);
        }
        _withClient(e) {
          let { scope: t, client: n } = this.getStackTop();
          n && e(n, t);
        }
        _callExtensionMethod(e, ...t) {
          let n = h(),
            r = n.__SENTRY__;
          if (r && r.extensions && "function" == typeof r.extensions[e])
            return r.extensions[e].apply(this, t);
          o.X &&
            s.kg.warn(
              `Extension method ${e} couldn't be found, doing nothing.`
            );
        }
      }
      function h() {
        return (
          (a.n2.__SENTRY__ = a.n2.__SENTRY__ || {
            extensions: {},
            hub: void 0,
          }),
          a.n2
        );
      }
      function d(e) {
        let t = h(),
          n = f(t);
        return m(t, e), n;
      }
      function p() {
        let e = h();
        if (e.__SENTRY__ && e.__SENTRY__.acs) {
          let t = e.__SENTRY__.acs.getCurrentHub();
          if (t) return t;
        }
        return (function (e = h()) {
          return (
            (!(e && e.__SENTRY__ && e.__SENTRY__.hub) || f(e).isOlderThan(4)) &&
              m(e, new c()),
            f(e)
          );
        })(e);
      }
      function f(e) {
        return (0, a.YO)("hub", () => new c(), e);
      }
      function m(e, t) {
        if (!e) return !1;
        let n = (e.__SENTRY__ = e.__SENTRY__ || {});
        return (n.hub = t), !0;
      }
    },
    677: function (e, t, n) {
      "use strict";
      n.d(t, {
        s: function () {
          return p;
        },
      });
      var r,
        i,
        s = n(1757),
        a = n(7790),
        o = n(3699),
        l = n(63);
      ((r = i || (i = {}))[(r.PENDING = 0)] = "PENDING"),
        (r[(r.RESOLVED = 1)] = "RESOLVED"),
        (r[(r.REJECTED = 2)] = "REJECTED");
      class u {
        constructor(e) {
          u.prototype.__init.call(this),
            u.prototype.__init2.call(this),
            u.prototype.__init3.call(this),
            u.prototype.__init4.call(this),
            (this._state = i.PENDING),
            (this._handlers = []);
          try {
            e(this._resolve, this._reject);
          } catch (e) {
            this._reject(e);
          }
        }
        then(e, t) {
          return new u((n, r) => {
            this._handlers.push([
              !1,
              (t) => {
                if (e)
                  try {
                    n(e(t));
                  } catch (e) {
                    r(e);
                  }
                else n(t);
              },
              (e) => {
                if (t)
                  try {
                    n(t(e));
                  } catch (e) {
                    r(e);
                  }
                else r(e);
              },
            ]),
              this._executeHandlers();
          });
        }
        catch(e) {
          return this.then((e) => e, e);
        }
        finally(e) {
          return new u((t, n) => {
            let r, i;
            return this.then(
              (t) => {
                (i = !1), (r = t), e && e();
              },
              (t) => {
                (i = !0), (r = t), e && e();
              }
            ).then(() => {
              if (i) {
                n(r);
                return;
              }
              t(r);
            });
          });
        }
        __init() {
          this._resolve = (e) => {
            this._setResult(i.RESOLVED, e);
          };
        }
        __init2() {
          this._reject = (e) => {
            this._setResult(i.REJECTED, e);
          };
        }
        __init3() {
          this._setResult = (e, t) => {
            if (this._state === i.PENDING) {
              if ((0, s.J8)(t)) {
                t.then(this._resolve, this._reject);
                return;
              }
              (this._state = e), (this._value = t), this._executeHandlers();
            }
          };
        }
        __init4() {
          this._executeHandlers = () => {
            if (this._state === i.PENDING) return;
            let e = this._handlers.slice();
            (this._handlers = []),
              e.forEach((e) => {
                e[0] ||
                  (this._state === i.RESOLVED && e[1](this._value),
                  this._state === i.REJECTED && e[2](this._value),
                  (e[0] = !0));
              });
          };
        }
      }
      var c = n(8999),
        h = n(3232),
        d = n(8364);
      class p {
        constructor() {
          (this._notifyingListeners = !1),
            (this._scopeListeners = []),
            (this._eventProcessors = []),
            (this._breadcrumbs = []),
            (this._attachments = []),
            (this._user = {}),
            (this._tags = {}),
            (this._extra = {}),
            (this._contexts = {}),
            (this._sdkProcessingMetadata = {}),
            (this._propagationContext = f());
        }
        static clone(e) {
          let t = new p();
          return (
            e &&
              ((t._breadcrumbs = [...e._breadcrumbs]),
              (t._tags = { ...e._tags }),
              (t._extra = { ...e._extra }),
              (t._contexts = { ...e._contexts }),
              (t._user = e._user),
              (t._level = e._level),
              (t._span = e._span),
              (t._session = e._session),
              (t._transactionName = e._transactionName),
              (t._fingerprint = e._fingerprint),
              (t._eventProcessors = [...e._eventProcessors]),
              (t._requestSession = e._requestSession),
              (t._attachments = [...e._attachments]),
              (t._sdkProcessingMetadata = { ...e._sdkProcessingMetadata }),
              (t._propagationContext = { ...e._propagationContext })),
            t
          );
        }
        addScopeListener(e) {
          this._scopeListeners.push(e);
        }
        addEventProcessor(e) {
          return this._eventProcessors.push(e), this;
        }
        setUser(e) {
          return (
            (this._user = e || {}),
            this._session && (0, d.CT)(this._session, { user: e }),
            this._notifyScopeListeners(),
            this
          );
        }
        getUser() {
          return this._user;
        }
        getRequestSession() {
          return this._requestSession;
        }
        setRequestSession(e) {
          return (this._requestSession = e), this;
        }
        setTags(e) {
          return (
            (this._tags = { ...this._tags, ...e }),
            this._notifyScopeListeners(),
            this
          );
        }
        setTag(e, t) {
          return (
            (this._tags = { ...this._tags, [e]: t }),
            this._notifyScopeListeners(),
            this
          );
        }
        setExtras(e) {
          return (
            (this._extra = { ...this._extra, ...e }),
            this._notifyScopeListeners(),
            this
          );
        }
        setExtra(e, t) {
          return (
            (this._extra = { ...this._extra, [e]: t }),
            this._notifyScopeListeners(),
            this
          );
        }
        setFingerprint(e) {
          return (this._fingerprint = e), this._notifyScopeListeners(), this;
        }
        setLevel(e) {
          return (this._level = e), this._notifyScopeListeners(), this;
        }
        setTransactionName(e) {
          return (
            (this._transactionName = e), this._notifyScopeListeners(), this
          );
        }
        setContext(e, t) {
          return (
            null === t ? delete this._contexts[e] : (this._contexts[e] = t),
            this._notifyScopeListeners(),
            this
          );
        }
        setSpan(e) {
          return (this._span = e), this._notifyScopeListeners(), this;
        }
        getSpan() {
          return this._span;
        }
        getTransaction() {
          let e = this.getSpan();
          return e && e.transaction;
        }
        setSession(e) {
          return (
            e ? (this._session = e) : delete this._session,
            this._notifyScopeListeners(),
            this
          );
        }
        getSession() {
          return this._session;
        }
        update(e) {
          if (!e) return this;
          if ("function" == typeof e) {
            let t = e(this);
            return t instanceof p ? t : this;
          }
          return (
            e instanceof p
              ? ((this._tags = { ...this._tags, ...e._tags }),
                (this._extra = { ...this._extra, ...e._extra }),
                (this._contexts = { ...this._contexts, ...e._contexts }),
                e._user &&
                  Object.keys(e._user).length &&
                  (this._user = e._user),
                e._level && (this._level = e._level),
                e._fingerprint && (this._fingerprint = e._fingerprint),
                e._requestSession && (this._requestSession = e._requestSession),
                e._propagationContext &&
                  (this._propagationContext = e._propagationContext))
              : (0, s.PO)(e) &&
                ((this._tags = { ...this._tags, ...e.tags }),
                (this._extra = { ...this._extra, ...e.extra }),
                (this._contexts = { ...this._contexts, ...e.contexts }),
                e.user && (this._user = e.user),
                e.level && (this._level = e.level),
                e.fingerprint && (this._fingerprint = e.fingerprint),
                e.requestSession && (this._requestSession = e.requestSession),
                e.propagationContext &&
                  (this._propagationContext = e.propagationContext)),
            this
          );
        }
        clear() {
          return (
            (this._breadcrumbs = []),
            (this._tags = {}),
            (this._extra = {}),
            (this._user = {}),
            (this._contexts = {}),
            (this._level = void 0),
            (this._transactionName = void 0),
            (this._fingerprint = void 0),
            (this._requestSession = void 0),
            (this._span = void 0),
            (this._session = void 0),
            this._notifyScopeListeners(),
            (this._attachments = []),
            (this._propagationContext = f()),
            this
          );
        }
        addBreadcrumb(e, t) {
          let n = "number" == typeof t ? t : 100;
          if (n <= 0) return this;
          let r = { timestamp: (0, a.yW)(), ...e },
            i = this._breadcrumbs;
          return (
            i.push(r),
            (this._breadcrumbs = i.length > n ? i.slice(-n) : i),
            this._notifyScopeListeners(),
            this
          );
        }
        getLastBreadcrumb() {
          return this._breadcrumbs[this._breadcrumbs.length - 1];
        }
        clearBreadcrumbs() {
          return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
        }
        addAttachment(e) {
          return this._attachments.push(e), this;
        }
        getAttachments() {
          return this._attachments;
        }
        clearAttachments() {
          return (this._attachments = []), this;
        }
        applyToEvent(e, t = {}, n) {
          if (
            (this._extra &&
              Object.keys(this._extra).length &&
              (e.extra = { ...this._extra, ...e.extra }),
            this._tags &&
              Object.keys(this._tags).length &&
              (e.tags = { ...this._tags, ...e.tags }),
            this._user &&
              Object.keys(this._user).length &&
              (e.user = { ...this._user, ...e.user }),
            this._contexts &&
              Object.keys(this._contexts).length &&
              (e.contexts = { ...this._contexts, ...e.contexts }),
            this._level && (e.level = this._level),
            this._transactionName && (e.transaction = this._transactionName),
            this._span)
          ) {
            e.contexts = { trace: this._span.getTraceContext(), ...e.contexts };
            let t = this._span.transaction;
            if (t) {
              e.sdkProcessingMetadata = {
                dynamicSamplingContext: t.getDynamicSamplingContext(),
                ...e.sdkProcessingMetadata,
              };
              let n = t.name;
              n && (e.tags = { transaction: n, ...e.tags });
            }
          }
          this._applyFingerprint(e);
          let r = this._getBreadcrumbs(),
            i = [...(e.breadcrumbs || []), ...r];
          return (
            (e.breadcrumbs = i.length > 0 ? i : void 0),
            (e.sdkProcessingMetadata = {
              ...e.sdkProcessingMetadata,
              ...this._sdkProcessingMetadata,
              propagationContext: this._propagationContext,
            }),
            (function e(t, n, r, i = 0) {
              return new u((a, o) => {
                let l = t[i];
                if (null === n || "function" != typeof l) a(n);
                else {
                  let u = l({ ...n }, r);
                  h.X &&
                    l.id &&
                    null === u &&
                    c.kg.log(`Event processor "${l.id}" dropped event`),
                    (0, s.J8)(u)
                      ? u.then((n) => e(t, n, r, i + 1).then(a)).then(null, o)
                      : e(t, u, r, i + 1)
                          .then(a)
                          .then(null, o);
                }
              });
            })(
              [
                ...(n || []),
                ...(0, l.YO)("globalEventProcessors", () => []),
                ...this._eventProcessors,
              ],
              e,
              t
            )
          );
        }
        setSDKProcessingMetadata(e) {
          return (
            (this._sdkProcessingMetadata = {
              ...this._sdkProcessingMetadata,
              ...e,
            }),
            this
          );
        }
        setPropagationContext(e) {
          return (this._propagationContext = e), this;
        }
        getPropagationContext() {
          return this._propagationContext;
        }
        _getBreadcrumbs() {
          return this._breadcrumbs;
        }
        _notifyScopeListeners() {
          this._notifyingListeners ||
            ((this._notifyingListeners = !0),
            this._scopeListeners.forEach((e) => {
              e(this);
            }),
            (this._notifyingListeners = !1));
        }
        _applyFingerprint(e) {
          (e.fingerprint = e.fingerprint ? (0, o.lE)(e.fingerprint) : []),
            this._fingerprint &&
              (e.fingerprint = e.fingerprint.concat(this._fingerprint)),
            e.fingerprint && !e.fingerprint.length && delete e.fingerprint;
        }
      }
      function f() {
        return { traceId: (0, o.DM)(), spanId: (0, o.DM)().substring(16) };
      }
    },
    8364: function (e, t, n) {
      "use strict";
      n.d(t, {
        CT: function () {
          return o;
        },
        Hv: function () {
          return a;
        },
        RJ: function () {
          return l;
        },
      });
      var r = n(7790),
        i = n(3699),
        s = n(1995);
      function a(e) {
        let t = (0, r.ph)(),
          n = {
            sid: (0, i.DM)(),
            init: !0,
            timestamp: t,
            started: t,
            duration: 0,
            status: "ok",
            errors: 0,
            ignoreDuration: !1,
            toJSON: () =>
              (0, s.Jr)({
                sid: `${n.sid}`,
                init: n.init,
                started: new Date(1e3 * n.started).toISOString(),
                timestamp: new Date(1e3 * n.timestamp).toISOString(),
                status: n.status,
                errors: n.errors,
                did:
                  "number" == typeof n.did || "string" == typeof n.did
                    ? `${n.did}`
                    : void 0,
                duration: n.duration,
                abnormal_mechanism: n.abnormal_mechanism,
                attrs: {
                  release: n.release,
                  environment: n.environment,
                  ip_address: n.ipAddress,
                  user_agent: n.userAgent,
                },
              }),
          };
        return e && o(n, e), n;
      }
      function o(e, t = {}) {
        if (
          (!t.user ||
            (!e.ipAddress &&
              t.user.ip_address &&
              (e.ipAddress = t.user.ip_address),
            e.did ||
              t.did ||
              (e.did = t.user.id || t.user.email || t.user.username)),
          (e.timestamp = t.timestamp || (0, r.ph)()),
          t.abnormal_mechanism && (e.abnormal_mechanism = t.abnormal_mechanism),
          t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
          t.sid && (e.sid = 32 === t.sid.length ? t.sid : (0, i.DM)()),
          void 0 !== t.init && (e.init = t.init),
          !e.did && t.did && (e.did = `${t.did}`),
          "number" == typeof t.started && (e.started = t.started),
          e.ignoreDuration)
        )
          e.duration = void 0;
        else if ("number" == typeof t.duration) e.duration = t.duration;
        else {
          let t = e.timestamp - e.started;
          e.duration = t >= 0 ? t : 0;
        }
        t.release && (e.release = t.release),
          t.environment && (e.environment = t.environment),
          !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
          !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
          "number" == typeof t.errors && (e.errors = t.errors),
          t.status && (e.status = t.status);
      }
      function l(e, t) {
        let n = {};
        t
          ? (n = { status: t })
          : "ok" === e.status && (n = { status: "exited" }),
          o(e, n);
      }
    },
    4194: function (e, t, n) {
      "use strict";
      n.d(t, {
        Rt: function () {
          return a;
        },
        l4: function () {
          return o;
        },
      });
      var r = n(1757),
        i = n(63);
      let s = (0, i.Rf)();
      function a(e, t = {}) {
        if (!e) return "<unknown>";
        try {
          let n,
            i = e,
            s = [],
            a = 0,
            o = 0,
            l = Array.isArray(t) ? t : t.keyAttrs,
            u = (!Array.isArray(t) && t.maxStringLength) || 80;
          for (
            ;
            i &&
            a++ < 5 &&
            ((n = (function (e, t) {
              let n, i, s, a, o;
              let l = [];
              if (!e || !e.tagName) return "";
              l.push(e.tagName.toLowerCase());
              let u =
                t && t.length
                  ? t
                      .filter((t) => e.getAttribute(t))
                      .map((t) => [t, e.getAttribute(t)])
                  : null;
              if (u && u.length)
                u.forEach((e) => {
                  l.push(`[${e[0]}="${e[1]}"]`);
                });
              else if (
                (e.id && l.push(`#${e.id}`), (n = e.className) && (0, r.HD)(n))
              )
                for (o = 0, i = n.split(/\s+/); o < i.length; o++)
                  l.push(`.${i[o]}`);
              let c = ["aria-label", "type", "name", "title", "alt"];
              for (o = 0; o < c.length; o++)
                (s = c[o]), (a = e.getAttribute(s)) && l.push(`[${s}="${a}"]`);
              return l.join("");
            })(i, l)),
            "html" !== n && (!(a > 1) || !(o + 3 * s.length + n.length >= u)));

          )
            s.push(n), (o += n.length), (i = i.parentNode);
          return s.reverse().join(" > ");
        } catch (e) {
          return "<unknown>";
        }
      }
      function o() {
        try {
          return s.document.location.href;
        } catch (e) {
          return "";
        }
      }
    },
    1982: function (e, t, n) {
      "use strict";
      n.d(t, {
        X: function () {
          return r;
        },
      });
      let r = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
    },
    1757: function (e, t, n) {
      "use strict";
      n.d(t, {
        Cy: function () {
          return g;
        },
        HD: function () {
          return u;
        },
        J8: function () {
          return m;
        },
        Kj: function () {
          return f;
        },
        PO: function () {
          return h;
        },
        TX: function () {
          return o;
        },
        V9: function () {
          return v;
        },
        VW: function () {
          return a;
        },
        VZ: function () {
          return i;
        },
        cO: function () {
          return d;
        },
        fm: function () {
          return l;
        },
        i2: function () {
          return _;
        },
        kK: function () {
          return p;
        },
        pt: function () {
          return c;
        },
        y1: function () {
          return y;
        },
      });
      let r = Object.prototype.toString;
      function i(e) {
        switch (r.call(e)) {
          case "[object Error]":
          case "[object Exception]":
          case "[object DOMException]":
            return !0;
          default:
            return v(e, Error);
        }
      }
      function s(e, t) {
        return r.call(e) === `[object ${t}]`;
      }
      function a(e) {
        return s(e, "ErrorEvent");
      }
      function o(e) {
        return s(e, "DOMError");
      }
      function l(e) {
        return s(e, "DOMException");
      }
      function u(e) {
        return s(e, "String");
      }
      function c(e) {
        return null === e || ("object" != typeof e && "function" != typeof e);
      }
      function h(e) {
        return s(e, "Object");
      }
      function d(e) {
        return "undefined" != typeof Event && v(e, Event);
      }
      function p(e) {
        return "undefined" != typeof Element && v(e, Element);
      }
      function f(e) {
        return s(e, "RegExp");
      }
      function m(e) {
        return !!(e && e.then && "function" == typeof e.then);
      }
      function g(e) {
        return (
          h(e) &&
          "nativeEvent" in e &&
          "preventDefault" in e &&
          "stopPropagation" in e
        );
      }
      function _(e) {
        return "number" == typeof e && e != e;
      }
      function v(e, t) {
        try {
          return e instanceof t;
        } catch (e) {
          return !1;
        }
      }
      function y(e) {
        return !!(
          "object" == typeof e &&
          null !== e &&
          (e.__isVue || e._isVue)
        );
      }
    },
    8999: function (e, t, n) {
      "use strict";
      n.d(t, {
        Cf: function () {
          return o;
        },
        LD: function () {
          return a;
        },
        RU: function () {
          return s;
        },
        kg: function () {
          return l;
        },
      });
      var r = n(1982),
        i = n(63);
      let s = ["debug", "info", "warn", "error", "log", "assert", "trace"],
        a = {};
      function o(e) {
        if (!("console" in i.n2)) return e();
        let t = i.n2.console,
          n = {},
          r = Object.keys(a);
        r.forEach((e) => {
          let r = a[e];
          (n[e] = t[e]), (t[e] = r);
        });
        try {
          return e();
        } finally {
          r.forEach((e) => {
            t[e] = n[e];
          });
        }
      }
      let l = (function () {
        let e = !1,
          t = {
            enable: () => {
              e = !0;
            },
            disable: () => {
              e = !1;
            },
            isEnabled: () => e,
          };
        return (
          r.X
            ? s.forEach((n) => {
                t[n] = (...t) => {
                  e &&
                    o(() => {
                      i.n2.console[n](`Sentry Logger [${n}]:`, ...t);
                    });
                };
              })
            : s.forEach((e) => {
                t[e] = () => void 0;
              }),
          t
        );
      })();
    },
    3699: function (e, t, n) {
      "use strict";
      n.d(t, {
        DM: function () {
          return i;
        },
        Db: function () {
          return o;
        },
        EG: function () {
          return l;
        },
        jH: function () {
          return a;
        },
        lE: function () {
          return u;
        },
      });
      var r = n(63);
      function i() {
        let e = r.n2,
          t = e.crypto || e.msCrypto,
          n = () => 16 * Math.random();
        try {
          if (t && t.randomUUID) return t.randomUUID().replace(/-/g, "");
          t &&
            t.getRandomValues &&
            (n = () => t.getRandomValues(new Uint8Array(1))[0]);
        } catch (e) {}
        return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
          (e ^ ((15 & n()) >> (e / 4))).toString(16)
        );
      }
      function s(e) {
        return e.exception && e.exception.values
          ? e.exception.values[0]
          : void 0;
      }
      function a(e) {
        let { message: t, event_id: n } = e;
        if (t) return t;
        let r = s(e);
        return r
          ? r.type && r.value
            ? `${r.type}: ${r.value}`
            : r.type || r.value || n || "<unknown>"
          : n || "<unknown>";
      }
      function o(e, t, n) {
        let r = (e.exception = e.exception || {}),
          i = (r.values = r.values || []),
          s = (i[0] = i[0] || {});
        s.value || (s.value = t || ""), s.type || (s.type = n || "Error");
      }
      function l(e, t) {
        let n = s(e);
        if (!n) return;
        let r = n.mechanism;
        if (
          ((n.mechanism = { type: "generic", handled: !0, ...r, ...t }),
          t && "data" in t)
        ) {
          let e = { ...(r && r.data), ...t.data };
          n.mechanism.data = e;
        }
      }
      function u(e) {
        return Array.isArray(e) ? e : [e];
      }
    },
    4266: function (e, t, n) {
      "use strict";
      n.d(t, {
        l$: function () {
          return s;
        },
        KV: function () {
          return i;
        },
      }),
        (e = n.hmd(e));
      var r = n(4406);
      function i() {
        return (
          !(
            "undefined" != typeof __SENTRY_BROWSER_BUNDLE__ &&
            __SENTRY_BROWSER_BUNDLE__
          ) &&
          "[object process]" ===
            Object.prototype.toString.call(void 0 !== r ? r : 0)
        );
      }
      function s(e, t) {
        return e.require(t);
      }
    },
    1995: function (e, t, n) {
      "use strict";
      n.d(t, {
        $Q: function () {
          return c;
        },
        HK: function () {
          return h;
        },
        Jr: function () {
          return g;
        },
        Sh: function () {
          return d;
        },
        hl: function () {
          return l;
        },
        xp: function () {
          return u;
        },
        zf: function () {
          return m;
        },
      });
      var r = n(4194),
        i = n(1982),
        s = n(1757),
        a = n(8999),
        o = n(9660);
      function l(e, t, n) {
        if (!(t in e)) return;
        let r = e[t],
          i = n(r);
        "function" == typeof i && c(i, r), (e[t] = i);
      }
      function u(e, t, n) {
        try {
          Object.defineProperty(e, t, {
            value: n,
            writable: !0,
            configurable: !0,
          });
        } catch (n) {
          i.X &&
            a.kg.log(
              `Failed to add non-enumerable property "${t}" to object`,
              e
            );
        }
      }
      function c(e, t) {
        try {
          let n = t.prototype || {};
          (e.prototype = t.prototype = n), u(e, "__sentry_original__", t);
        } catch (e) {}
      }
      function h(e) {
        return e.__sentry_original__;
      }
      function d(e) {
        if ((0, s.VZ)(e))
          return { message: e.message, name: e.name, stack: e.stack, ...f(e) };
        if (!(0, s.cO)(e)) return e;
        {
          let t = {
            type: e.type,
            target: p(e.target),
            currentTarget: p(e.currentTarget),
            ...f(e),
          };
          return (
            "undefined" != typeof CustomEvent &&
              (0, s.V9)(e, CustomEvent) &&
              (t.detail = e.detail),
            t
          );
        }
      }
      function p(e) {
        try {
          return (0, s.kK)(e)
            ? (0, r.Rt)(e)
            : Object.prototype.toString.call(e);
        } catch (e) {
          return "<unknown>";
        }
      }
      function f(e) {
        if ("object" != typeof e || null === e) return {};
        {
          let t = {};
          for (let n in e)
            Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
          return t;
        }
      }
      function m(e, t = 40) {
        let n = Object.keys(d(e));
        if ((n.sort(), !n.length)) return "[object has no keys]";
        if (n[0].length >= t) return (0, o.$G)(n[0], t);
        for (let e = n.length; e > 0; e--) {
          let r = n.slice(0, e).join(", ");
          if (!(r.length > t)) {
            if (e === n.length) return r;
            return (0, o.$G)(r, t);
          }
        }
        return "";
      }
      function g(e) {
        let t = new Map();
        return (function e(t, n) {
          if ((0, s.PO)(t)) {
            let r = n.get(t);
            if (void 0 !== r) return r;
            let i = {};
            for (let r of (n.set(t, i), Object.keys(t)))
              void 0 !== t[r] && (i[r] = e(t[r], n));
            return i;
          }
          if (Array.isArray(t)) {
            let r = n.get(t);
            if (void 0 !== r) return r;
            let i = [];
            return (
              n.set(t, i),
              t.forEach((t) => {
                i.push(e(t, n));
              }),
              i
            );
          }
          return t;
        })(e, t);
      }
    },
    9660: function (e, t, n) {
      "use strict";
      n.d(t, {
        $G: function () {
          return i;
        },
        U0: function () {
          return a;
        },
        nK: function () {
          return s;
        },
      });
      var r = n(1757);
      function i(e, t = 0) {
        return "string" != typeof e || 0 === t
          ? e
          : e.length <= t
          ? e
          : `${e.slice(0, t)}...`;
      }
      function s(e, t) {
        if (!Array.isArray(e)) return "";
        let n = [];
        for (let t = 0; t < e.length; t++) {
          let i = e[t];
          try {
            (0, r.y1)(i) ? n.push("[VueViewModel]") : n.push(String(i));
          } catch (e) {
            n.push("[value cannot be serialized]");
          }
        }
        return n.join(t);
      }
      function a(e, t = [], n = !1) {
        return t.some((t) =>
          (function (e, t, n = !1) {
            return (
              !!(0, r.HD)(e) &&
              ((0, r.Kj)(t)
                ? t.test(e)
                : !!(0, r.HD)(t) && (n ? e === t : e.includes(t)))
            );
          })(e, t, n)
        );
      }
    },
    7790: function (e, t, n) {
      "use strict";
      n.d(t, {
        ph: function () {
          return c;
        },
        yW: function () {
          return u;
        },
      });
      var r = n(4266),
        i = n(63);
      e = n.hmd(e);
      let s = (0, i.Rf)(),
        a = { nowSeconds: () => Date.now() / 1e3 },
        o = (0, r.KV)()
          ? (function () {
              try {
                let t = (0, r.l$)(e, "perf_hooks");
                return t.performance;
              } catch (e) {
                return;
              }
            })()
          : (function () {
              let { performance: e } = s;
              if (!e || !e.now) return;
              let t = Date.now() - e.now();
              return { now: () => e.now(), timeOrigin: t };
            })(),
        l =
          void 0 === o
            ? a
            : { nowSeconds: () => (o.timeOrigin + o.now()) / 1e3 },
        u = a.nowSeconds.bind(a),
        c = l.nowSeconds.bind(l);
      (() => {
        let { performance: e } = s;
        if (!e || !e.now) return;
        let t = e.now(),
          n = Date.now(),
          r = e.timeOrigin ? Math.abs(e.timeOrigin + t - n) : 36e5,
          i = e.timing && e.timing.navigationStart,
          a = "number" == typeof i ? Math.abs(i + t - n) : 36e5;
        if (r < 36e5 || a < 36e5) return r <= a ? e.timeOrigin : void 0;
      })();
    },
    63: function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.Math == Math ? e : void 0;
      }
      n.d(t, {
        Rf: function () {
          return s;
        },
        YO: function () {
          return a;
        },
        n2: function () {
          return i;
        },
      });
      let i =
        ("object" == typeof globalThis && r(globalThis)) ||
        ("object" == typeof window && r(window)) ||
        ("object" == typeof self && r(self)) ||
        ("object" == typeof n.g && r(n.g)) ||
        (function () {
          return this;
        })() ||
        {};
      function s() {
        return i;
      }
      function a(e, t, n) {
        let r = n || i,
          s = (r.__SENTRY__ = r.__SENTRY__ || {}),
          a = s[e] || (s[e] = t());
        return a;
      }
    },
    1784: function (e, t) {
      "use strict";
      var n = {
        elementDelimiter: "__",
        modifierDelimiter: "_",
        throwOnError: !1,
      };
      function r(e, t, r, i, s) {
        var a = r && "object" == typeof r,
          o = a ? r : i,
          l = a ? i : s,
          u = a ? "" : r,
          c = n.modifierDelimiter,
          h = n.elementDelimiter,
          d = n.throwOnError,
          p = u ? "".concat(t).concat(h).concat(u) : t,
          f = e[p] || "";
        return (
          o &&
            (f = Object.keys(o).reduce(function (t, n) {
              var r,
                i = o[n];
              if (void 0 === i) return t;
              if ("boolean" == typeof i) {
                if (!i) return t;
                r = e["".concat(p).concat(c).concat(n)];
              } else r = e["".concat(p).concat(c).concat(n).concat(c).concat(o[n])];
              return "".concat(t, " ").concat(r);
            }, f)),
          l &&
            (f = Object.keys(l).reduce(function (t, n) {
              if (!l[n]) return t;
              var r = e["is-".concat(n)];
              if (!r) {
                var i = "There is no is-".concat(n, " in cssModule");
                if (!d) return console.warn(i), t;
                throw Error(i);
              }
              return "".concat(t, " ").concat(r);
            }, f)),
          f.trim()
        );
      }
      var i = function (e) {
          var t = Object.keys(e)[0],
            r = t.indexOf(n.elementDelimiter);
          -1 !== r && (t = t.slice(0, r));
          var i = t.indexOf(n.modifierDelimiter);
          return -1 !== i && (t = t.slice(0, i)), t;
        },
        s = function (e, t) {
          return r.bind(null, e, t || i(e));
        };
      (s.setSettings = function (e) {
        return Object.assign(n, e);
      }),
        (t.Z = s);
    },
    4864: function (e, t, n) {
      "use strict";
      var r,
        i =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, n, r) {
                void 0 === r && (r = n);
                var i = Object.getOwnPropertyDescriptor(t, n);
                (!i ||
                  ("get" in i
                    ? !t.__esModule
                    : i.writable || i.configurable)) &&
                  (i = {
                    enumerable: !0,
                    get: function () {
                      return t[n];
                    },
                  }),
                  Object.defineProperty(e, r, i);
              }
            : function (e, t, n, r) {
                void 0 === r && (r = n), (e[r] = t[n]);
              }),
        s =
          (this && this.__setModuleDefault) ||
          (Object.create
            ? function (e, t) {
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  value: t,
                });
              }
            : function (e, t) {
                e.default = t;
              }),
        a =
          (this && this.__importStar) ||
          function (e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                "default" !== n &&
                  Object.prototype.hasOwnProperty.call(e, n) &&
                  i(t, e, n);
            return s(t, e), t;
          },
        o =
          (this && this.__awaiter) ||
          function (e, t, n, r) {
            return new (n || (n = Promise))(function (i, s) {
              function a(e) {
                try {
                  l(r.next(e));
                } catch (e) {
                  s(e);
                }
              }
              function o(e) {
                try {
                  l(r.throw(e));
                } catch (e) {
                  s(e);
                }
              }
              function l(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value) instanceof n
                      ? t
                      : new n(function (e) {
                          e(t);
                        })
                    ).then(a, o);
              }
              l((r = r.apply(e, t || [])).next());
            });
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Auth = t.Platform = void 0);
      let l = a(n(4548)),
        u = n(8536),
        c = "colyseus-auth-token";
      ((r = t.Platform || (t.Platform = {})).ios = "ios"),
        (r.android = "android"),
        (t.Auth = class {
          constructor(e) {
            (this._id = void 0),
              (this.username = void 0),
              (this.displayName = void 0),
              (this.avatarUrl = void 0),
              (this.isAnonymous = void 0),
              (this.email = void 0),
              (this.lang = void 0),
              (this.location = void 0),
              (this.timezone = void 0),
              (this.metadata = void 0),
              (this.devices = void 0),
              (this.facebookId = void 0),
              (this.twitterId = void 0),
              (this.googleId = void 0),
              (this.gameCenterId = void 0),
              (this.steamId = void 0),
              (this.friendIds = void 0),
              (this.blockedUserIds = void 0),
              (this.createdAt = void 0),
              (this.updatedAt = void 0),
              (this.token = void 0),
              (this.endpoint = e.replace("ws", "http")),
              (0, u.getItem)(c, (e) => (this.token = e));
          }
          get hasToken() {
            return !!this.token;
          }
          login(e = {}) {
            return o(this, void 0, void 0, function* () {
              let t = Object.assign({}, e);
              this.hasToken && (t.token = this.token);
              let n = yield this.request("post", "/auth", t);
              for (let e in ((this.token = n.token),
              (0, u.setItem)(c, this.token),
              n))
                this.hasOwnProperty(e) && (this[e] = n[e]);
              return this.registerPingService(), this;
            });
          }
          save() {
            return o(this, void 0, void 0, function* () {
              return (
                yield this.request(
                  "put",
                  "/auth",
                  {},
                  {
                    username: this.username,
                    displayName: this.displayName,
                    avatarUrl: this.avatarUrl,
                    lang: this.lang,
                    location: this.location,
                    timezone: this.timezone,
                  }
                ),
                this
              );
            });
          }
          getFriends() {
            return o(this, void 0, void 0, function* () {
              return yield this.request("get", "/friends/all");
            });
          }
          getOnlineFriends() {
            return o(this, void 0, void 0, function* () {
              return yield this.request("get", "/friends/online");
            });
          }
          getFriendRequests() {
            return o(this, void 0, void 0, function* () {
              return yield this.request("get", "/friends/requests");
            });
          }
          sendFriendRequest(e) {
            return o(this, void 0, void 0, function* () {
              return yield this.request("post", "/friends/requests", {
                userId: e,
              });
            });
          }
          acceptFriendRequest(e) {
            return o(this, void 0, void 0, function* () {
              return yield this.request("put", "/friends/requests", {
                userId: e,
              });
            });
          }
          declineFriendRequest(e) {
            return o(this, void 0, void 0, function* () {
              return yield this.request("del", "/friends/requests", {
                userId: e,
              });
            });
          }
          blockUser(e) {
            return o(this, void 0, void 0, function* () {
              return yield this.request("post", "/friends/block", {
                userId: e,
              });
            });
          }
          unblockUser(e) {
            return o(this, void 0, void 0, function* () {
              return yield this.request("put", "/friends/block", { userId: e });
            });
          }
          request(e, t, n = {}, r, i = {}) {
            return o(this, void 0, void 0, function* () {
              (i.Accept = "application/json"),
                this.hasToken && (i.Authorization = "Bearer " + this.token);
              let s = [];
              for (let e in n) s.push(`${e}=${n[e]}`);
              let a = s.length > 0 ? `?${s.join("&")}` : "",
                o = { headers: i };
              return (
                r && (o.body = r),
                (yield l[e](`${this.endpoint}${t}${a}`, o)).data
              );
            });
          }
          logout() {
            (this.token = void 0),
              (0, u.removeItem)(c),
              this.unregisterPingService();
          }
          registerPingService(e = 15e3) {
            this.unregisterPingService(),
              (this.keepOnlineInterval = setInterval(
                () => this.request("get", "/auth"),
                e
              ));
          }
          unregisterPingService() {
            clearInterval(this.keepOnlineInterval);
          }
        });
    },
    2566: function (e, t, n) {
      "use strict";
      var r,
        i =
          (this && this.__awaiter) ||
          function (e, t, n, r) {
            return new (n || (n = Promise))(function (i, s) {
              function a(e) {
                try {
                  l(r.next(e));
                } catch (e) {
                  s(e);
                }
              }
              function o(e) {
                try {
                  l(r.throw(e));
                } catch (e) {
                  s(e);
                }
              }
              function l(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value) instanceof n
                      ? t
                      : new n(function (e) {
                          e(t);
                        })
                    ).then(a, o);
              }
              l((r = r.apply(e, t || [])).next());
            });
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Client = t.MatchMakeError = void 0);
      let s = n(4548),
        a = n(5772),
        o = n(560);
      class l extends Error {
        constructor(e, t) {
          super(e), (this.code = t), Object.setPrototypeOf(this, l.prototype);
        }
      }
      t.MatchMakeError = l;
      let u =
        "undefined" != typeof window &&
        void 0 !==
          (null === (r = null == window ? void 0 : window.location) ||
          void 0 === r
            ? void 0
            : r.hostname)
          ? `${window.location.protocol.replace("http", "ws")}//${
              window.location.hostname
            }${window.location.port && `:${window.location.port}`}`
          : "ws://127.0.0.1:2567";
      t.Client = class {
        constructor(e = u) {
          if ("string" == typeof e) {
            let t = new URL(e),
              n = "https:" === t.protocol || "wss:" === t.protocol,
              r = Number(t.port || (n ? 443 : 80));
            this.settings = {
              hostname: t.hostname,
              pathname: "/" !== t.pathname ? t.pathname : "",
              port: r,
              secure: n,
            };
          } else
            void 0 === e.port && (e.port = e.secure ? 443 : 80),
              void 0 === e.pathname && (e.pathname = ""),
              (this.settings = e);
        }
        joinOrCreate(e, t = {}, n) {
          return i(this, void 0, void 0, function* () {
            return yield this.createMatchMakeRequest("joinOrCreate", e, t, n);
          });
        }
        create(e, t = {}, n) {
          return i(this, void 0, void 0, function* () {
            return yield this.createMatchMakeRequest("create", e, t, n);
          });
        }
        join(e, t = {}, n) {
          return i(this, void 0, void 0, function* () {
            return yield this.createMatchMakeRequest("join", e, t, n);
          });
        }
        joinById(e, t = {}, n) {
          return i(this, void 0, void 0, function* () {
            return yield this.createMatchMakeRequest("joinById", e, t, n);
          });
        }
        reconnect(e, t) {
          return i(this, void 0, void 0, function* () {
            if ("string" == typeof e && "string" == typeof t)
              throw Error(
                "DEPRECATED: .reconnect() now only accepts 'reconnectionToken' as argument.\nYou can get this token from previously connected `room.reconnectionToken`"
              );
            let [n, r] = e.split(":");
            return yield this.createMatchMakeRequest(
              "reconnect",
              n,
              { reconnectionToken: r },
              t
            );
          });
        }
        getAvailableRooms(e = "") {
          return i(this, void 0, void 0, function* () {
            return (yield (0,
            s.get)(this.getHttpEndpoint(`${e}`), { headers: { Accept: "application/json" } })).data;
          });
        }
        consumeSeatReservation(e, t, n) {
          return i(this, void 0, void 0, function* () {
            let r = this.createRoom(e.room.name, t);
            (r.roomId = e.room.roomId), (r.sessionId = e.sessionId);
            let s = { sessionId: r.sessionId };
            e.reconnectionToken && (s.reconnectionToken = e.reconnectionToken);
            let o = n || r;
            return (
              r.connect(
                this.buildEndpoint(e.room, s),
                e.devMode &&
                  (() =>
                    i(this, void 0, void 0, function* () {
                      console.info(
                        `[Colyseus devMode]: ${String.fromCodePoint(
                          128260
                        )} Re-establishing connection with room id '${
                          r.roomId
                        }'...`
                      );
                      let n = 0,
                        s = () =>
                          i(this, void 0, void 0, function* () {
                            n++;
                            try {
                              yield this.consumeSeatReservation(e, t, o),
                                console.info(
                                  `[Colyseus devMode]: ${String.fromCodePoint(
                                    9989
                                  )} Successfully re-established connection with room '${
                                    r.roomId
                                  }'`
                                );
                            } catch (e) {
                              n < 8
                                ? (console.info(
                                    `[Colyseus devMode]: ${String.fromCodePoint(
                                      128260
                                    )} retrying... (${n} out of 8)`
                                  ),
                                  setTimeout(s, 2e3))
                                : console.info(
                                    `[Colyseus devMode]: ${String.fromCodePoint(
                                      10060
                                    )} Failed to reconnect. Is your server running? Please check server logs.`
                                  );
                            }
                          });
                      setTimeout(s, 2e3);
                    })),
                o
              ),
              new Promise((e, t) => {
                let n = (e, n) => t(new a.ServerError(e, n));
                o.onError.once(n),
                  o.onJoin.once(() => {
                    o.onError.remove(n), e(o);
                  });
              })
            );
          });
        }
        createMatchMakeRequest(e, t, n = {}, r, a) {
          return i(this, void 0, void 0, function* () {
            let i = (yield (0, s.post)(this.getHttpEndpoint(`${e}/${t}`), {
              headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
              },
              body: JSON.stringify(n),
            })).data;
            if (i.error) throw new l(i.error, i.code);
            return (
              "reconnect" === e && (i.reconnectionToken = n.reconnectionToken),
              yield this.consumeSeatReservation(i, r, a)
            );
          });
        }
        createRoom(e, t) {
          return new o.Room(e, t);
        }
        buildEndpoint(e, t = {}) {
          let n = [];
          for (let e in t) t.hasOwnProperty(e) && n.push(`${e}=${t[e]}`);
          let r = this.settings.secure ? "wss://" : "ws://";
          return (
            e.publicAddress
              ? (r += `${e.publicAddress}`)
              : (r += `${this.settings.hostname}${this.getEndpointPort()}${
                  this.settings.pathname
                }`),
            `${r}/${e.processId}/${e.roomId}?${n.join("&")}`
          );
        }
        getHttpEndpoint(e = "") {
          return `${this.settings.secure ? "https" : "http"}://${
            this.settings.hostname
          }${this.getEndpointPort()}${this.settings.pathname}/matchmake/${e}`;
        }
        getEndpointPort() {
          return 80 !== this.settings.port && 443 !== this.settings.port
            ? `:${this.settings.port}`
            : "";
        }
      };
    },
    7229: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Connection = void 0);
      let r = n(2929);
      t.Connection = class {
        constructor() {
          (this.events = {}),
            (this.transport = new r.WebSocketTransport(this.events));
        }
        send(e) {
          this.transport.send(e);
        }
        connect(e) {
          this.transport.connect(e);
        }
        close(e, t) {
          this.transport.close(e, t);
        }
        get isOpen() {
          return this.transport.isOpen;
        }
      };
    },
    676: function (e, t) {
      "use strict";
      var n, r;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.utf8Length = t.utf8Read = t.ErrorCode = t.Protocol = void 0),
        ((n = t.Protocol || (t.Protocol = {}))[(n.HANDSHAKE = 9)] =
          "HANDSHAKE"),
        (n[(n.JOIN_ROOM = 10)] = "JOIN_ROOM"),
        (n[(n.ERROR = 11)] = "ERROR"),
        (n[(n.LEAVE_ROOM = 12)] = "LEAVE_ROOM"),
        (n[(n.ROOM_DATA = 13)] = "ROOM_DATA"),
        (n[(n.ROOM_STATE = 14)] = "ROOM_STATE"),
        (n[(n.ROOM_STATE_PATCH = 15)] = "ROOM_STATE_PATCH"),
        (n[(n.ROOM_DATA_SCHEMA = 16)] = "ROOM_DATA_SCHEMA"),
        (n[(n.ROOM_DATA_BYTES = 17)] = "ROOM_DATA_BYTES"),
        ((r = t.ErrorCode || (t.ErrorCode = {}))[
          (r.MATCHMAKE_NO_HANDLER = 4210)
        ] = "MATCHMAKE_NO_HANDLER"),
        (r[(r.MATCHMAKE_INVALID_CRITERIA = 4211)] =
          "MATCHMAKE_INVALID_CRITERIA"),
        (r[(r.MATCHMAKE_INVALID_ROOM_ID = 4212)] = "MATCHMAKE_INVALID_ROOM_ID"),
        (r[(r.MATCHMAKE_UNHANDLED = 4213)] = "MATCHMAKE_UNHANDLED"),
        (r[(r.MATCHMAKE_EXPIRED = 4214)] = "MATCHMAKE_EXPIRED"),
        (r[(r.AUTH_FAILED = 4215)] = "AUTH_FAILED"),
        (r[(r.APPLICATION_ERROR = 4216)] = "APPLICATION_ERROR"),
        (t.utf8Read = function (e, t) {
          let n = e[t++];
          for (var r = "", i = 0, s = t, a = t + n; s < a; s++) {
            var o = e[s];
            if ((128 & o) == 0) {
              r += String.fromCharCode(o);
              continue;
            }
            if ((224 & o) == 192) {
              r += String.fromCharCode(((31 & o) << 6) | (63 & e[++s]));
              continue;
            }
            if ((240 & o) == 224) {
              r += String.fromCharCode(
                ((15 & o) << 12) | ((63 & e[++s]) << 6) | ((63 & e[++s]) << 0)
              );
              continue;
            }
            if ((248 & o) == 240) {
              (i =
                ((7 & o) << 18) |
                ((63 & e[++s]) << 12) |
                ((63 & e[++s]) << 6) |
                ((63 & e[++s]) << 0)) >= 65536
                ? ((i -= 65536),
                  (r += String.fromCharCode(
                    (i >>> 10) + 55296,
                    (1023 & i) + 56320
                  )))
                : (r += String.fromCharCode(i));
              continue;
            }
            throw Error("Invalid byte " + o.toString(16));
          }
          return r;
        }),
        (t.utf8Length = function (e = "") {
          let t = 0,
            n = 0;
          for (let r = 0, i = e.length; r < i; r++)
            (t = e.charCodeAt(r)) < 128
              ? (n += 1)
              : t < 2048
              ? (n += 2)
              : t < 55296 || t >= 57344
              ? (n += 3)
              : (r++, (n += 4));
          return n + 1;
        });
    },
    560: function (e, t, n) {
      "use strict";
      var r =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, n, r) {
                void 0 === r && (r = n);
                var i = Object.getOwnPropertyDescriptor(t, n);
                (!i ||
                  ("get" in i
                    ? !t.__esModule
                    : i.writable || i.configurable)) &&
                  (i = {
                    enumerable: !0,
                    get: function () {
                      return t[n];
                    },
                  }),
                  Object.defineProperty(e, r, i);
              }
            : function (e, t, n, r) {
                void 0 === r && (r = n), (e[r] = t[n]);
              }),
        i =
          (this && this.__setModuleDefault) ||
          (Object.create
            ? function (e, t) {
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  value: t,
                });
              }
            : function (e, t) {
                e.default = t;
              }),
        s =
          (this && this.__importStar) ||
          function (e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                "default" !== n &&
                  Object.prototype.hasOwnProperty.call(e, n) &&
                  r(t, e, n);
            return i(t, e), t;
          };
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.Room = void 0);
      let a = s(n(5647)),
        o = n(7229),
        l = n(676),
        u = n(2491),
        c = n(2697),
        h = n(8210),
        d = n(610),
        p = n(5772);
      class f {
        constructor(e, t) {
          (this.onStateChange = (0, h.createSignal)()),
            (this.onError = (0, h.createSignal)()),
            (this.onLeave = (0, h.createSignal)()),
            (this.onJoin = (0, h.createSignal)()),
            (this.hasJoined = !1),
            (this.onMessageHandlers = (0, c.createNanoEvents)()),
            (this.roomId = null),
            (this.name = e),
            t &&
              ((this.serializer = new ((0, u.getSerializer)("schema"))()),
              (this.rootSchema = t),
              (this.serializer.state = new t())),
            this.onError((e, t) => {
              var n;
              return null === (n = console.warn) || void 0 === n
                ? void 0
                : n.call(console, `colyseus.js - onError => (${e}) ${t}`);
            }),
            this.onLeave(() => this.removeAllListeners());
        }
        get id() {
          return this.roomId;
        }
        connect(e, t, n = this) {
          let r = new o.Connection();
          (n.connection = r),
            (r.events.onmessage = f.prototype.onMessageCallback.bind(n)),
            (r.events.onclose = function (e) {
              var r;
              if (!n.hasJoined) {
                null === (r = console.warn) ||
                  void 0 === r ||
                  r.call(
                    console,
                    `Room connection was closed unexpectedly (${e.code}): ${e.reason}`
                  ),
                  n.onError.invoke(e.code, e.reason);
                return;
              }
              e.code === p.CloseCode.DEVMODE_RESTART && t
                ? t()
                : (n.onLeave.invoke(e.code), n.destroy());
            }),
            (r.events.onerror = function (e) {
              var t;
              null === (t = console.warn) ||
                void 0 === t ||
                t.call(console, `Room, onError (${e.code}): ${e.reason}`),
                n.onError.invoke(e.code, e.reason);
            }),
            r.connect(e);
        }
        leave(e = !0) {
          return new Promise((t) => {
            this.onLeave((e) => t(e)),
              this.connection
                ? e
                  ? this.connection.send([l.Protocol.LEAVE_ROOM])
                  : this.connection.close()
                : this.onLeave.invoke(p.CloseCode.CONSENTED);
          });
        }
        onMessage(e, t) {
          return this.onMessageHandlers.on(this.getMessageHandlerKey(e), t);
        }
        send(e, t) {
          let n;
          let r = [l.Protocol.ROOM_DATA];
          if (
            ("string" == typeof e
              ? d.encode.string(r, e)
              : d.encode.number(r, e),
            void 0 !== t)
          ) {
            let e = a.encode(t);
            (n = new Uint8Array(r.length + e.byteLength)).set(
              new Uint8Array(r),
              0
            ),
              n.set(new Uint8Array(e), r.length);
          } else n = new Uint8Array(r);
          this.connection.send(n.buffer);
        }
        sendBytes(e, t) {
          let n;
          let r = [l.Protocol.ROOM_DATA_BYTES];
          "string" == typeof e ? d.encode.string(r, e) : d.encode.number(r, e),
            (n = new Uint8Array(r.length + (t.byteLength || t.length))).set(
              new Uint8Array(r),
              0
            ),
            n.set(new Uint8Array(t), r.length),
            this.connection.send(n.buffer);
        }
        get state() {
          return this.serializer.getState();
        }
        removeAllListeners() {
          this.onJoin.clear(),
            this.onStateChange.clear(),
            this.onError.clear(),
            this.onLeave.clear(),
            (this.onMessageHandlers.events = {});
        }
        onMessageCallback(e) {
          let t = Array.from(new Uint8Array(e.data)),
            n = t[0];
          if (n === l.Protocol.JOIN_ROOM) {
            let e = 1,
              n = (0, l.utf8Read)(t, e);
            if (
              ((e += (0, l.utf8Length)(n)),
              (this.serializerId = (0, l.utf8Read)(t, e)),
              (e += (0, l.utf8Length)(this.serializerId)),
              !this.serializer)
            ) {
              let e = (0, u.getSerializer)(this.serializerId);
              this.serializer = new e();
            }
            t.length > e &&
              this.serializer.handshake &&
              this.serializer.handshake(t, { offset: e }),
              (this.reconnectionToken = `${this.roomId}:${n}`),
              (this.hasJoined = !0),
              this.onJoin.invoke(),
              this.connection.send([l.Protocol.JOIN_ROOM]);
          } else if (n === l.Protocol.ERROR) {
            let e = { offset: 1 },
              n = d.decode.number(t, e),
              r = d.decode.string(t, e);
            this.onError.invoke(n, r);
          } else if (n === l.Protocol.LEAVE_ROOM) this.leave();
          else if (n === l.Protocol.ROOM_DATA_SCHEMA) {
            let e = { offset: 1 },
              n = this.serializer.getState().constructor._context,
              r = n.get(d.decode.number(t, e)),
              i = new r();
            i.decode(t, e), this.dispatchMessage(r, i);
          } else if (n === l.Protocol.ROOM_STATE) t.shift(), this.setState(t);
          else if (n === l.Protocol.ROOM_STATE_PATCH) t.shift(), this.patch(t);
          else if (n === l.Protocol.ROOM_DATA) {
            let n = { offset: 1 },
              r = d.decode.stringCheck(t, n)
                ? d.decode.string(t, n)
                : d.decode.number(t, n),
              i = t.length > n.offset ? a.decode(e.data, n.offset) : void 0;
            this.dispatchMessage(r, i);
          } else if (n === l.Protocol.ROOM_DATA_BYTES) {
            let e = { offset: 1 },
              n = d.decode.stringCheck(t, e)
                ? d.decode.string(t, e)
                : d.decode.number(t, e);
            this.dispatchMessage(n, new Uint8Array(t.slice(e.offset)));
          }
        }
        setState(e) {
          this.serializer.setState(e),
            this.onStateChange.invoke(this.serializer.getState());
        }
        patch(e) {
          this.serializer.patch(e),
            this.onStateChange.invoke(this.serializer.getState());
        }
        dispatchMessage(e, t) {
          var n;
          let r = this.getMessageHandlerKey(e);
          this.onMessageHandlers.events[r]
            ? this.onMessageHandlers.emit(r, t)
            : this.onMessageHandlers.events["*"]
            ? this.onMessageHandlers.emit("*", e, t)
            : null === (n = console.warn) ||
              void 0 === n ||
              n.call(
                console,
                `colyseus.js: onMessage() not registered for type '${e}'.`
              );
        }
        destroy() {
          this.serializer && this.serializer.teardown();
        }
        getMessageHandlerKey(e) {
          switch (typeof e) {
            case "function":
              return `$${e._typeid}`;
            case "string":
              return e;
            case "number":
              return `i${e}`;
            default:
              throw Error("invalid message type.");
          }
        }
      }
      t.Room = f;
    },
    8536: function (e, t) {
      "use strict";
      let n;
      function r() {
        return (
          n ||
            (n =
              "undefined" != typeof cc && cc.sys && cc.sys.localStorage
                ? cc.sys.localStorage
                : "undefined" != typeof window && window.localStorage
                ? window.localStorage
                : {
                    cache: {},
                    setItem: function (e, t) {
                      this.cache[e] = t;
                    },
                    getItem: function (e) {
                      this.cache[e];
                    },
                    removeItem: function (e) {
                      delete this.cache[e];
                    },
                  }),
          n
        );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getItem = t.removeItem = t.setItem = void 0),
        (t.setItem = function (e, t) {
          r().setItem(e, t);
        }),
        (t.removeItem = function (e) {
          r().removeItem(e);
        }),
        (t.getItem = function (e, t) {
          let n = r().getItem(e);
          "undefined" != typeof Promise && n instanceof Promise
            ? n.then((e) => t(e))
            : t(n);
        });
    },
    2697: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.createNanoEvents = void 0),
        (t.createNanoEvents = () => ({
          emit(e, ...t) {
            let n = this.events[e] || [];
            for (let e = 0, r = n.length; e < r; e++) n[e](...t);
          },
          events: {},
          on(e, t) {
            var n;
            return (
              (null === (n = this.events[e]) || void 0 === n
                ? void 0
                : n.push(t)) || (this.events[e] = [t]),
              () => {
                var n;
                this.events[e] =
                  null === (n = this.events[e]) || void 0 === n
                    ? void 0
                    : n.filter((e) => t !== e);
              }
            );
          },
        }));
    },
    8210: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.createSignal = t.EventEmitter = void 0);
      class n {
        constructor() {
          this.handlers = [];
        }
        register(e, t = !1) {
          return this.handlers.push(e), this;
        }
        invoke(...e) {
          this.handlers.forEach((t) => t.apply(this, e));
        }
        invokeAsync(...e) {
          return Promise.all(this.handlers.map((t) => t.apply(this, e)));
        }
        remove(e) {
          let t = this.handlers.indexOf(e);
          (this.handlers[t] = this.handlers[this.handlers.length - 1]),
            this.handlers.pop();
        }
        clear() {
          this.handlers = [];
        }
      }
      (t.EventEmitter = n),
        (t.createSignal = function () {
          let e = new n();
          function t(t) {
            return e.register(t, this === null);
          }
          return (
            (t.once = (t) => {
              let n = function (...r) {
                t.apply(this, r), e.remove(n);
              };
              e.register(n);
            }),
            (t.remove = (t) => e.remove(t)),
            (t.invoke = (...t) => e.invoke(...t)),
            (t.invokeAsync = (...t) => e.invokeAsync(...t)),
            (t.clear = () => e.clear()),
            t
          );
        });
    },
    5772: function (e, t) {
      "use strict";
      var n;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ServerError = t.CloseCode = void 0),
        ((n = t.CloseCode || (t.CloseCode = {}))[(n.CONSENTED = 4e3)] =
          "CONSENTED"),
        (n[(n.DEVMODE_RESTART = 4010)] = "DEVMODE_RESTART"),
        (t.ServerError = class extends Error {
          constructor(e, t) {
            super(t), (this.name = "ServerError"), (this.code = e);
          }
        });
    },
    3266: function (e, t, n) {
      "use strict";
      (t.KU = void 0), n(9658);
      var r = n(2566);
      Object.defineProperty(t, "KU", {
        enumerable: !0,
        get: function () {
          return r.Client;
        },
      }),
        n(676),
        n(560),
        n(4864);
      let i = n(8674),
        s = n(9270),
        a = n(2491);
      (0, a.registerSerializer)("schema", i.SchemaSerializer),
        (0, a.registerSerializer)("none", s.NoneSerializer);
    },
    9658: function () {
      ArrayBuffer.isView ||
        (ArrayBuffer.isView = (e) =>
          null !== e &&
          "object" == typeof e &&
          e.buffer instanceof ArrayBuffer),
        "undefined" == typeof globalThis &&
          "undefined" != typeof window &&
          (window.globalThis = window);
    },
    5647: function (e, t) {
      "use strict";
      function n(e, t) {
        if (((this._offset = t), e instanceof ArrayBuffer))
          (this._buffer = e), (this._view = new DataView(this._buffer));
        else if (ArrayBuffer.isView(e))
          (this._buffer = e.buffer),
            (this._view = new DataView(
              this._buffer,
              e.byteOffset,
              e.byteLength
            ));
        else throw Error("Invalid argument");
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.decode = t.encode = void 0),
        (n.prototype._array = function (e) {
          for (var t = Array(e), n = 0; n < e; n++) t[n] = this._parse();
          return t;
        }),
        (n.prototype._map = function (e) {
          for (var t = {}, n = 0; n < e; n++) t[this._parse()] = this._parse();
          return t;
        }),
        (n.prototype._str = function (e) {
          var t = (function (e, t, n) {
            for (var r = "", i = 0, s = t, a = t + n; s < a; s++) {
              var o = e.getUint8(s);
              if ((128 & o) == 0) {
                r += String.fromCharCode(o);
                continue;
              }
              if ((224 & o) == 192) {
                r += String.fromCharCode(
                  ((31 & o) << 6) | (63 & e.getUint8(++s))
                );
                continue;
              }
              if ((240 & o) == 224) {
                r += String.fromCharCode(
                  ((15 & o) << 12) |
                    ((63 & e.getUint8(++s)) << 6) |
                    ((63 & e.getUint8(++s)) << 0)
                );
                continue;
              }
              if ((248 & o) == 240) {
                (i =
                  ((7 & o) << 18) |
                  ((63 & e.getUint8(++s)) << 12) |
                  ((63 & e.getUint8(++s)) << 6) |
                  ((63 & e.getUint8(++s)) << 0)) >= 65536
                  ? ((i -= 65536),
                    (r += String.fromCharCode(
                      (i >>> 10) + 55296,
                      (1023 & i) + 56320
                    )))
                  : (r += String.fromCharCode(i));
                continue;
              }
              throw Error("Invalid byte " + o.toString(16));
            }
            return r;
          })(this._view, this._offset, e);
          return (this._offset += e), t;
        }),
        (n.prototype._bin = function (e) {
          var t = this._buffer.slice(this._offset, this._offset + e);
          return (this._offset += e), t;
        }),
        (n.prototype._parse = function () {
          var e,
            t = this._view.getUint8(this._offset++),
            n = 0,
            r = 0,
            i = 0,
            s = 0;
          if (t < 192)
            return t < 128
              ? t
              : t < 144
              ? this._map(15 & t)
              : t < 160
              ? this._array(15 & t)
              : this._str(31 & t);
          if (t > 223) return -((255 - t + 1) * 1);
          switch (t) {
            case 192:
              return null;
            case 194:
              return !1;
            case 195:
              return !0;
            case 196:
              return (
                (n = this._view.getUint8(this._offset)),
                (this._offset += 1),
                this._bin(n)
              );
            case 197:
              return (
                (n = this._view.getUint16(this._offset)),
                (this._offset += 2),
                this._bin(n)
              );
            case 198:
              return (
                (n = this._view.getUint32(this._offset)),
                (this._offset += 4),
                this._bin(n)
              );
            case 199:
              if (
                ((n = this._view.getUint8(this._offset)),
                (r = this._view.getInt8(this._offset + 1)),
                (this._offset += 2),
                -1 === r)
              ) {
                var a = this._view.getUint32(this._offset);
                return (
                  (i = this._view.getInt32(this._offset + 4)),
                  (s = this._view.getUint32(this._offset + 8)),
                  (this._offset += 12),
                  new Date((4294967296 * i + s) * 1e3 + a / 1e6)
                );
              }
              return [r, this._bin(n)];
            case 200:
              return (
                (n = this._view.getUint16(this._offset)),
                (r = this._view.getInt8(this._offset + 2)),
                (this._offset += 3),
                [r, this._bin(n)]
              );
            case 201:
              return (
                (n = this._view.getUint32(this._offset)),
                (r = this._view.getInt8(this._offset + 4)),
                (this._offset += 5),
                [r, this._bin(n)]
              );
            case 202:
              return (
                (e = this._view.getFloat32(this._offset)),
                (this._offset += 4),
                e
              );
            case 203:
              return (
                (e = this._view.getFloat64(this._offset)),
                (this._offset += 8),
                e
              );
            case 204:
              return (
                (e = this._view.getUint8(this._offset)), (this._offset += 1), e
              );
            case 205:
              return (
                (e = this._view.getUint16(this._offset)), (this._offset += 2), e
              );
            case 206:
              return (
                (e = this._view.getUint32(this._offset)), (this._offset += 4), e
              );
            case 207:
              return (
                (i = 4294967296 * this._view.getUint32(this._offset)),
                (s = this._view.getUint32(this._offset + 4)),
                (this._offset += 8),
                i + s
              );
            case 208:
              return (
                (e = this._view.getInt8(this._offset)), (this._offset += 1), e
              );
            case 209:
              return (
                (e = this._view.getInt16(this._offset)), (this._offset += 2), e
              );
            case 210:
              return (
                (e = this._view.getInt32(this._offset)), (this._offset += 4), e
              );
            case 211:
              return (
                (i = 4294967296 * this._view.getInt32(this._offset)),
                (s = this._view.getUint32(this._offset + 4)),
                (this._offset += 8),
                i + s
              );
            case 212:
              if (
                ((r = this._view.getInt8(this._offset)),
                (this._offset += 1),
                0 === r)
              ) {
                this._offset += 1;
                return;
              }
              return [r, this._bin(1)];
            case 213:
              return (
                (r = this._view.getInt8(this._offset)),
                (this._offset += 1),
                [r, this._bin(2)]
              );
            case 214:
              if (
                ((r = this._view.getInt8(this._offset)),
                (this._offset += 1),
                -1 === r)
              )
                return (
                  (e = this._view.getUint32(this._offset)),
                  (this._offset += 4),
                  new Date(1e3 * e)
                );
              return [r, this._bin(4)];
            case 215:
              if (
                ((r = this._view.getInt8(this._offset)),
                (this._offset += 1),
                0 === r)
              )
                return (
                  (i = 4294967296 * this._view.getInt32(this._offset)),
                  (s = this._view.getUint32(this._offset + 4)),
                  (this._offset += 8),
                  new Date(i + s)
                );
              if (-1 === r) {
                (i = this._view.getUint32(this._offset)),
                  (s = this._view.getUint32(this._offset + 4)),
                  (this._offset += 8);
                var o = (3 & i) * 4294967296 + s;
                return new Date(1e3 * o + (i >>> 2) / 1e6);
              }
              return [r, this._bin(8)];
            case 216:
              return (
                (r = this._view.getInt8(this._offset)),
                (this._offset += 1),
                [r, this._bin(16)]
              );
            case 217:
              return (
                (n = this._view.getUint8(this._offset)),
                (this._offset += 1),
                this._str(n)
              );
            case 218:
              return (
                (n = this._view.getUint16(this._offset)),
                (this._offset += 2),
                this._str(n)
              );
            case 219:
              return (
                (n = this._view.getUint32(this._offset)),
                (this._offset += 4),
                this._str(n)
              );
            case 220:
              return (
                (n = this._view.getUint16(this._offset)),
                (this._offset += 2),
                this._array(n)
              );
            case 221:
              return (
                (n = this._view.getUint32(this._offset)),
                (this._offset += 4),
                this._array(n)
              );
            case 222:
              return (
                (n = this._view.getUint16(this._offset)),
                (this._offset += 2),
                this._map(n)
              );
            case 223:
              return (
                (n = this._view.getUint32(this._offset)),
                (this._offset += 4),
                this._map(n)
              );
          }
          throw Error("Could not parse");
        }),
        (t.decode = function (e, t = 0) {
          var r = new n(e, t),
            i = r._parse();
          if (r._offset !== e.byteLength)
            throw Error(e.byteLength - r._offset + " trailing bytes");
          return i;
        }),
        (t.encode = function (e) {
          var t = [],
            n = [],
            r = (function e(t, n, r) {
              var i = typeof r,
                s = 0,
                a = 0,
                o = 0,
                l = 0,
                u = 0,
                c = 0;
              if ("string" === i) {
                if (
                  (u = (function (e) {
                    for (var t = 0, n = 0, r = 0, i = e.length; r < i; r++)
                      (t = e.charCodeAt(r)) < 128
                        ? (n += 1)
                        : t < 2048
                        ? (n += 2)
                        : t < 55296 || t >= 57344
                        ? (n += 3)
                        : (r++, (n += 4));
                    return n;
                  })(r)) < 32
                )
                  t.push(160 | u), (c = 1);
                else if (u < 256) t.push(217, u), (c = 2);
                else if (u < 65536) t.push(218, u >> 8, u), (c = 3);
                else if (u < 4294967296)
                  t.push(219, u >> 24, u >> 16, u >> 8, u), (c = 5);
                else throw Error("String too long");
                return (
                  n.push({ _str: r, _length: u, _offset: t.length }), c + u
                );
              }
              if ("number" === i)
                return Math.floor(r) === r && isFinite(r)
                  ? r >= 0
                    ? r < 128
                      ? (t.push(r), 1)
                      : r < 256
                      ? (t.push(204, r), 2)
                      : r < 65536
                      ? (t.push(205, r >> 8, r), 3)
                      : r < 4294967296
                      ? (t.push(206, r >> 24, r >> 16, r >> 8, r), 5)
                      : ((o = (r / 4294967296) >> 0),
                        (l = r >>> 0),
                        t.push(
                          207,
                          o >> 24,
                          o >> 16,
                          o >> 8,
                          o,
                          l >> 24,
                          l >> 16,
                          l >> 8,
                          l
                        ),
                        9)
                    : r >= -32
                    ? (t.push(r), 1)
                    : r >= -128
                    ? (t.push(208, r), 2)
                    : r >= -32768
                    ? (t.push(209, r >> 8, r), 3)
                    : r >= -2147483648
                    ? (t.push(210, r >> 24, r >> 16, r >> 8, r), 5)
                    : ((o = Math.floor(r / 4294967296)),
                      (l = r >>> 0),
                      t.push(
                        211,
                        o >> 24,
                        o >> 16,
                        o >> 8,
                        o,
                        l >> 24,
                        l >> 16,
                        l >> 8,
                        l
                      ),
                      9)
                  : (t.push(203),
                    n.push({ _float: r, _length: 8, _offset: t.length }),
                    9);
              if ("object" === i) {
                if (null === r) return t.push(192), 1;
                if (Array.isArray(r)) {
                  if ((u = r.length) < 16) t.push(144 | u), (c = 1);
                  else if (u < 65536) t.push(220, u >> 8, u), (c = 3);
                  else if (u < 4294967296)
                    t.push(221, u >> 24, u >> 16, u >> 8, u), (c = 5);
                  else throw Error("Array too large");
                  for (s = 0; s < u; s++) c += e(t, n, r[s]);
                  return c;
                }
                if (r instanceof Date) {
                  var h = r.getTime(),
                    d = Math.floor(h / 1e3),
                    p = (h - 1e3 * d) * 1e6;
                  return d >= 0 && p >= 0 && d <= 17179869183
                    ? 0 === p && d <= 4294967295
                      ? (t.push(214, 255, d >> 24, d >> 16, d >> 8, d), 6)
                      : ((o = d / 4294967296),
                        (l = 4294967295 & d),
                        t.push(
                          215,
                          255,
                          p >> 22,
                          p >> 14,
                          p >> 6,
                          o,
                          l >> 24,
                          l >> 16,
                          l >> 8,
                          l
                        ),
                        10)
                    : ((o = Math.floor(d / 4294967296)),
                      (l = d >>> 0),
                      t.push(
                        199,
                        12,
                        255,
                        p >> 24,
                        p >> 16,
                        p >> 8,
                        p,
                        o >> 24,
                        o >> 16,
                        o >> 8,
                        o,
                        l >> 24,
                        l >> 16,
                        l >> 8,
                        l
                      ),
                      15);
                }
                if (r instanceof ArrayBuffer) {
                  if ((u = r.byteLength) < 256) t.push(196, u), (c = 2);
                  else if (u < 65536) t.push(197, u >> 8, u), (c = 3);
                  else if (u < 4294967296)
                    t.push(198, u >> 24, u >> 16, u >> 8, u), (c = 5);
                  else throw Error("Buffer too large");
                  return (
                    n.push({ _bin: r, _length: u, _offset: t.length }), c + u
                  );
                }
                if ("function" == typeof r.toJSON) return e(t, n, r.toJSON());
                var f = [],
                  m = "",
                  g = Object.keys(r);
                for (s = 0, a = g.length; s < a; s++)
                  void 0 !== r[(m = g[s])] &&
                    "function" != typeof r[m] &&
                    f.push(m);
                if ((u = f.length) < 16) t.push(128 | u), (c = 1);
                else if (u < 65536) t.push(222, u >> 8, u), (c = 3);
                else if (u < 4294967296)
                  t.push(223, u >> 24, u >> 16, u >> 8, u), (c = 5);
                else throw Error("Object too large");
                for (s = 0; s < u; s++)
                  c += e(t, n, (m = f[s])) + e(t, n, r[m]);
                return c;
              }
              if ("boolean" === i) return t.push(r ? 195 : 194), 1;
              if ("undefined" === i) return t.push(192), 1;
              if ("function" == typeof r.toJSON) return e(t, n, r.toJSON());
              throw Error("Could not encode");
            })(t, n, e),
            i = new ArrayBuffer(r),
            s = new DataView(i),
            a = 0,
            o = 0,
            l = -1;
          n.length > 0 && (l = n[0]._offset);
          for (var u, c = 0, h = 0, d = 0, p = t.length; d < p; d++)
            if ((s.setUint8(o + d, t[d]), d + 1 === l)) {
              if (((c = (u = n[a])._length), (h = o + l), u._bin))
                for (var f = new Uint8Array(u._bin), m = 0; m < c; m++)
                  s.setUint8(h + m, f[m]);
              else
                u._str
                  ? (function (e, t, n) {
                      for (var r = 0, i = 0, s = n.length; i < s; i++)
                        (r = n.charCodeAt(i)) < 128
                          ? e.setUint8(t++, r)
                          : (r < 2048
                              ? e.setUint8(t++, 192 | (r >> 6))
                              : (r < 55296 || r >= 57344
                                  ? e.setUint8(t++, 224 | (r >> 12))
                                  : (i++,
                                    (r =
                                      65536 +
                                      (((1023 & r) << 10) |
                                        (1023 & n.charCodeAt(i)))),
                                    e.setUint8(t++, 240 | (r >> 18)),
                                    e.setUint8(t++, 128 | ((r >> 12) & 63))),
                                e.setUint8(t++, 128 | ((r >> 6) & 63))),
                            e.setUint8(t++, 128 | (63 & r)));
                    })(s, h, u._str)
                  : void 0 !== u._float && s.setFloat64(h, u._float);
              a++, (o += c), n[a] && (l = n[a]._offset);
            }
          return i;
        });
    },
    9270: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.NoneSerializer = void 0),
        (t.NoneSerializer = class {
          setState(e) {}
          getState() {
            return null;
          }
          patch(e) {}
          teardown() {}
          handshake(e) {}
        });
    },
    8674: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.SchemaSerializer = void 0);
      let r = n(610);
      t.SchemaSerializer = class {
        setState(e) {
          return this.state.decode(e);
        }
        getState() {
          return this.state;
        }
        patch(e) {
          return this.state.decode(e);
        }
        teardown() {
          var e, t;
          null ===
            (t =
              null === (e = this.state) || void 0 === e
                ? void 0
                : e.$changes) ||
            void 0 === t ||
            t.root.clearRefs();
        }
        handshake(e, t) {
          if (this.state) {
            let n = new r.Reflection();
            n.decode(e, t);
          } else this.state = r.Reflection.decode(e, t);
        }
      };
    },
    2491: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getSerializer = t.registerSerializer = void 0);
      let n = {};
      (t.registerSerializer = function (e, t) {
        n[e] = t;
      }),
        (t.getSerializer = function (e) {
          let t = n[e];
          if (!t) throw Error("missing serializer: " + e);
          return t;
        });
    },
    2929: function (e, t, n) {
      "use strict";
      var r =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.WebSocketTransport = void 0);
      let i = r(n(7031)),
        s = globalThis.WebSocket || i.default;
      t.WebSocketTransport = class {
        constructor(e) {
          this.events = e;
        }
        send(e) {
          e instanceof ArrayBuffer
            ? this.ws.send(e)
            : Array.isArray(e) && this.ws.send(new Uint8Array(e).buffer);
        }
        connect(e) {
          (this.ws = new s(e, this.protocols)),
            (this.ws.binaryType = "arraybuffer"),
            (this.ws.onopen = this.events.onopen),
            (this.ws.onmessage = this.events.onmessage),
            (this.ws.onclose = this.events.onclose),
            (this.ws.onerror = this.events.onerror);
        }
        close(e, t) {
          this.ws.close(e, t);
        }
        get isOpen() {
          return this.ws.readyState === s.OPEN;
        }
      };
    },
    7452: function (e, t, n) {
      var r, i, s, a, o, l, u, c, h, d, p, f, m, g, _;
      e.exports =
        ((r = n(7359)),
        n(8139),
        n(9174),
        n(6844),
        n(9951),
        (i = r.lib.BlockCipher),
        (s = r.algo),
        (a = []),
        (o = []),
        (l = []),
        (u = []),
        (c = []),
        (h = []),
        (d = []),
        (p = []),
        (f = []),
        (m = []),
        (function () {
          for (var e = [], t = 0; t < 256; t++)
            t < 128 ? (e[t] = t << 1) : (e[t] = (t << 1) ^ 283);
          for (var n = 0, r = 0, t = 0; t < 256; t++) {
            var i = r ^ (r << 1) ^ (r << 2) ^ (r << 3) ^ (r << 4);
            (i = (i >>> 8) ^ (255 & i) ^ 99), (a[n] = i), (o[i] = n);
            var s = e[n],
              g = e[s],
              _ = e[g],
              v = (257 * e[i]) ^ (16843008 * i);
            (l[n] = (v << 24) | (v >>> 8)),
              (u[n] = (v << 16) | (v >>> 16)),
              (c[n] = (v << 8) | (v >>> 24)),
              (h[n] = v);
            var v = (16843009 * _) ^ (65537 * g) ^ (257 * s) ^ (16843008 * n);
            (d[i] = (v << 24) | (v >>> 8)),
              (p[i] = (v << 16) | (v >>> 16)),
              (f[i] = (v << 8) | (v >>> 24)),
              (m[i] = v),
              n ? ((n = s ^ e[e[e[_ ^ s]]]), (r ^= e[e[r]])) : (n = r = 1);
          }
        })(),
        (g = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]),
        (_ = s.AES =
          i.extend({
            _doReset: function () {
              if (!this._nRounds || this._keyPriorReset !== this._key) {
                for (
                  var e,
                    t = (this._keyPriorReset = this._key),
                    n = t.words,
                    r = t.sigBytes / 4,
                    i = ((this._nRounds = r + 6) + 1) * 4,
                    s = (this._keySchedule = []),
                    o = 0;
                  o < i;
                  o++
                )
                  o < r
                    ? (s[o] = n[o])
                    : ((e = s[o - 1]),
                      o % r
                        ? r > 6 &&
                          o % r == 4 &&
                          (e =
                            (a[e >>> 24] << 24) |
                            (a[(e >>> 16) & 255] << 16) |
                            (a[(e >>> 8) & 255] << 8) |
                            a[255 & e])
                        : (e =
                            ((a[(e = (e << 8) | (e >>> 24)) >>> 24] << 24) |
                              (a[(e >>> 16) & 255] << 16) |
                              (a[(e >>> 8) & 255] << 8) |
                              a[255 & e]) ^
                            (g[(o / r) | 0] << 24)),
                      (s[o] = s[o - r] ^ e));
                for (var l = (this._invKeySchedule = []), u = 0; u < i; u++) {
                  var o = i - u;
                  if (u % 4) var e = s[o];
                  else var e = s[o - 4];
                  u < 4 || o <= 4
                    ? (l[u] = e)
                    : (l[u] =
                        d[a[e >>> 24]] ^
                        p[a[(e >>> 16) & 255]] ^
                        f[a[(e >>> 8) & 255]] ^
                        m[a[255 & e]]);
                }
              }
            },
            encryptBlock: function (e, t) {
              this._doCryptBlock(e, t, this._keySchedule, l, u, c, h, a);
            },
            decryptBlock: function (e, t) {
              var n = e[t + 1];
              (e[t + 1] = e[t + 3]),
                (e[t + 3] = n),
                this._doCryptBlock(e, t, this._invKeySchedule, d, p, f, m, o);
              var n = e[t + 1];
              (e[t + 1] = e[t + 3]), (e[t + 3] = n);
            },
            _doCryptBlock: function (e, t, n, r, i, s, a, o) {
              for (
                var l = this._nRounds,
                  u = e[t] ^ n[0],
                  c = e[t + 1] ^ n[1],
                  h = e[t + 2] ^ n[2],
                  d = e[t + 3] ^ n[3],
                  p = 4,
                  f = 1;
                f < l;
                f++
              ) {
                var m =
                    r[u >>> 24] ^
                    i[(c >>> 16) & 255] ^
                    s[(h >>> 8) & 255] ^
                    a[255 & d] ^
                    n[p++],
                  g =
                    r[c >>> 24] ^
                    i[(h >>> 16) & 255] ^
                    s[(d >>> 8) & 255] ^
                    a[255 & u] ^
                    n[p++],
                  _ =
                    r[h >>> 24] ^
                    i[(d >>> 16) & 255] ^
                    s[(u >>> 8) & 255] ^
                    a[255 & c] ^
                    n[p++],
                  v =
                    r[d >>> 24] ^
                    i[(u >>> 16) & 255] ^
                    s[(c >>> 8) & 255] ^
                    a[255 & h] ^
                    n[p++];
                (u = m), (c = g), (h = _), (d = v);
              }
              var m =
                  ((o[u >>> 24] << 24) |
                    (o[(c >>> 16) & 255] << 16) |
                    (o[(h >>> 8) & 255] << 8) |
                    o[255 & d]) ^
                  n[p++],
                g =
                  ((o[c >>> 24] << 24) |
                    (o[(h >>> 16) & 255] << 16) |
                    (o[(d >>> 8) & 255] << 8) |
                    o[255 & u]) ^
                  n[p++],
                _ =
                  ((o[h >>> 24] << 24) |
                    (o[(d >>> 16) & 255] << 16) |
                    (o[(u >>> 8) & 255] << 8) |
                    o[255 & c]) ^
                  n[p++],
                v =
                  ((o[d >>> 24] << 24) |
                    (o[(u >>> 16) & 255] << 16) |
                    (o[(c >>> 8) & 255] << 8) |
                    o[255 & h]) ^
                  n[p++];
              (e[t] = m), (e[t + 1] = g), (e[t + 2] = _), (e[t + 3] = v);
            },
            keySize: 8,
          })),
        (r.AES = i._createHelper(_)),
        r.AES);
    },
    9951: function (e, t, n) {
      var r, i, s, a, o, l, u, c, h, d, p, f, m, g, _, v, y, x;
      e.exports =
        ((r = n(7359)),
        n(6844),
        void (
          r.lib.Cipher ||
          ((s = (i = r.lib).Base),
          (a = i.WordArray),
          (o = i.BufferedBlockAlgorithm),
          (l = r.enc).Utf8,
          (u = l.Base64),
          (c = r.algo.EvpKDF),
          (h = i.Cipher =
            o.extend({
              cfg: s.extend(),
              createEncryptor: function (e, t) {
                return this.create(this._ENC_XFORM_MODE, e, t);
              },
              createDecryptor: function (e, t) {
                return this.create(this._DEC_XFORM_MODE, e, t);
              },
              init: function (e, t, n) {
                (this.cfg = this.cfg.extend(n)),
                  (this._xformMode = e),
                  (this._key = t),
                  this.reset();
              },
              reset: function () {
                o.reset.call(this), this._doReset();
              },
              process: function (e) {
                return this._append(e), this._process();
              },
              finalize: function (e) {
                return e && this._append(e), this._doFinalize();
              },
              keySize: 4,
              ivSize: 4,
              _ENC_XFORM_MODE: 1,
              _DEC_XFORM_MODE: 2,
              _createHelper: (function () {
                function e(e) {
                  return "string" == typeof e ? x : v;
                }
                return function (t) {
                  return {
                    encrypt: function (n, r, i) {
                      return e(r).encrypt(t, n, r, i);
                    },
                    decrypt: function (n, r, i) {
                      return e(r).decrypt(t, n, r, i);
                    },
                  };
                };
              })(),
            })),
          (i.StreamCipher = h.extend({
            _doFinalize: function () {
              return this._process(!0);
            },
            blockSize: 1,
          })),
          (d = r.mode = {}),
          (p = i.BlockCipherMode =
            s.extend({
              createEncryptor: function (e, t) {
                return this.Encryptor.create(e, t);
              },
              createDecryptor: function (e, t) {
                return this.Decryptor.create(e, t);
              },
              init: function (e, t) {
                (this._cipher = e), (this._iv = t);
              },
            })),
          (f = d.CBC =
            (function () {
              var e = p.extend();
              function t(e, t, n) {
                var r,
                  i = this._iv;
                i ? ((r = i), (this._iv = void 0)) : (r = this._prevBlock);
                for (var s = 0; s < n; s++) e[t + s] ^= r[s];
              }
              return (
                (e.Encryptor = e.extend({
                  processBlock: function (e, n) {
                    var r = this._cipher,
                      i = r.blockSize;
                    t.call(this, e, n, i),
                      r.encryptBlock(e, n),
                      (this._prevBlock = e.slice(n, n + i));
                  },
                })),
                (e.Decryptor = e.extend({
                  processBlock: function (e, n) {
                    var r = this._cipher,
                      i = r.blockSize,
                      s = e.slice(n, n + i);
                    r.decryptBlock(e, n),
                      t.call(this, e, n, i),
                      (this._prevBlock = s);
                  },
                })),
                e
              );
            })()),
          (m = (r.pad = {}).Pkcs7 =
            {
              pad: function (e, t) {
                for (
                  var n = 4 * t,
                    r = n - (e.sigBytes % n),
                    i = (r << 24) | (r << 16) | (r << 8) | r,
                    s = [],
                    o = 0;
                  o < r;
                  o += 4
                )
                  s.push(i);
                var l = a.create(s, r);
                e.concat(l);
              },
              unpad: function (e) {
                var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
                e.sigBytes -= t;
              },
            }),
          (i.BlockCipher = h.extend({
            cfg: h.cfg.extend({ mode: f, padding: m }),
            reset: function () {
              h.reset.call(this);
              var e,
                t = this.cfg,
                n = t.iv,
                r = t.mode;
              this._xformMode == this._ENC_XFORM_MODE
                ? (e = r.createEncryptor)
                : ((e = r.createDecryptor), (this._minBufferSize = 1)),
                this._mode && this._mode.__creator == e
                  ? this._mode.init(this, n && n.words)
                  : ((this._mode = e.call(r, this, n && n.words)),
                    (this._mode.__creator = e));
            },
            _doProcessBlock: function (e, t) {
              this._mode.processBlock(e, t);
            },
            _doFinalize: function () {
              var e,
                t = this.cfg.padding;
              return (
                this._xformMode == this._ENC_XFORM_MODE
                  ? (t.pad(this._data, this.blockSize), (e = this._process(!0)))
                  : ((e = this._process(!0)), t.unpad(e)),
                e
              );
            },
            blockSize: 4,
          })),
          (g = i.CipherParams =
            s.extend({
              init: function (e) {
                this.mixIn(e);
              },
              toString: function (e) {
                return (e || this.formatter).stringify(this);
              },
            })),
          (_ = (r.format = {}).OpenSSL =
            {
              stringify: function (e) {
                var t = e.ciphertext,
                  n = e.salt;
                return (
                  n ? a.create([1398893684, 1701076831]).concat(n).concat(t) : t
                ).toString(u);
              },
              parse: function (e) {
                var t,
                  n = u.parse(e),
                  r = n.words;
                return (
                  1398893684 == r[0] &&
                    1701076831 == r[1] &&
                    ((t = a.create(r.slice(2, 4))),
                    r.splice(0, 4),
                    (n.sigBytes -= 16)),
                  g.create({ ciphertext: n, salt: t })
                );
              },
            }),
          (v = i.SerializableCipher =
            s.extend({
              cfg: s.extend({ format: _ }),
              encrypt: function (e, t, n, r) {
                r = this.cfg.extend(r);
                var i = e.createEncryptor(n, r),
                  s = i.finalize(t),
                  a = i.cfg;
                return g.create({
                  ciphertext: s,
                  key: n,
                  iv: a.iv,
                  algorithm: e,
                  mode: a.mode,
                  padding: a.padding,
                  blockSize: e.blockSize,
                  formatter: r.format,
                });
              },
              decrypt: function (e, t, n, r) {
                return (
                  (r = this.cfg.extend(r)),
                  (t = this._parse(t, r.format)),
                  e.createDecryptor(n, r).finalize(t.ciphertext)
                );
              },
              _parse: function (e, t) {
                return "string" == typeof e ? t.parse(e, this) : e;
              },
            })),
          (y = (r.kdf = {}).OpenSSL =
            {
              execute: function (e, t, n, r, i) {
                if ((r || (r = a.random(8)), i))
                  var s = c.create({ keySize: t + n, hasher: i }).compute(e, r);
                else var s = c.create({ keySize: t + n }).compute(e, r);
                var o = a.create(s.words.slice(t), 4 * n);
                return (
                  (s.sigBytes = 4 * t), g.create({ key: s, iv: o, salt: r })
                );
              },
            }),
          (x = i.PasswordBasedCipher =
            v.extend({
              cfg: v.cfg.extend({ kdf: y }),
              encrypt: function (e, t, n, r) {
                var i = (r = this.cfg.extend(r)).kdf.execute(
                  n,
                  e.keySize,
                  e.ivSize,
                  r.salt,
                  r.hasher
                );
                r.iv = i.iv;
                var s = v.encrypt.call(this, e, t, i.key, r);
                return s.mixIn(i), s;
              },
              decrypt: function (e, t, n, r) {
                (r = this.cfg.extend(r)), (t = this._parse(t, r.format));
                var i = r.kdf.execute(n, e.keySize, e.ivSize, t.salt, r.hasher);
                return (r.iv = i.iv), v.decrypt.call(this, e, t, i.key, r);
              },
            })))
        ));
    },
    7359: function (e, t, n) {
      var r;
      e.exports =
        r ||
        (function (e, t) {
          if (
            ("undefined" != typeof window &&
              window.crypto &&
              (r = window.crypto),
            "undefined" != typeof self && self.crypto && (r = self.crypto),
            "undefined" != typeof globalThis &&
              globalThis.crypto &&
              (r = globalThis.crypto),
            !r &&
              "undefined" != typeof window &&
              window.msCrypto &&
              (r = window.msCrypto),
            !r && void 0 !== n.g && n.g.crypto && (r = n.g.crypto),
            !r)
          )
            try {
              r = n(633);
            } catch (e) {}
          var r,
            i = function () {
              if (r) {
                if ("function" == typeof r.getRandomValues)
                  try {
                    return r.getRandomValues(new Uint32Array(1))[0];
                  } catch (e) {}
                if ("function" == typeof r.randomBytes)
                  try {
                    return r.randomBytes(4).readInt32LE();
                  } catch (e) {}
              }
              throw Error(
                "Native crypto module could not be used to get secure random number."
              );
            },
            s =
              Object.create ||
              (function () {
                function e() {}
                return function (t) {
                  var n;
                  return (
                    (e.prototype = t), (n = new e()), (e.prototype = null), n
                  );
                };
              })(),
            a = {},
            o = (a.lib = {}),
            l = (o.Base = {
              extend: function (e) {
                var t = s(this);
                return (
                  e && t.mixIn(e),
                  (t.hasOwnProperty("init") && this.init !== t.init) ||
                    (t.init = function () {
                      t.$super.init.apply(this, arguments);
                    }),
                  (t.init.prototype = t),
                  (t.$super = this),
                  t
                );
              },
              create: function () {
                var e = this.extend();
                return e.init.apply(e, arguments), e;
              },
              init: function () {},
              mixIn: function (e) {
                for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                e.hasOwnProperty("toString") && (this.toString = e.toString);
              },
              clone: function () {
                return this.init.prototype.extend(this);
              },
            }),
            u = (o.WordArray = l.extend({
              init: function (e, t) {
                (e = this.words = e || []),
                  void 0 != t
                    ? (this.sigBytes = t)
                    : (this.sigBytes = 4 * e.length);
              },
              toString: function (e) {
                return (e || h).stringify(this);
              },
              concat: function (e) {
                var t = this.words,
                  n = e.words,
                  r = this.sigBytes,
                  i = e.sigBytes;
                if ((this.clamp(), r % 4))
                  for (var s = 0; s < i; s++) {
                    var a = (n[s >>> 2] >>> (24 - (s % 4) * 8)) & 255;
                    t[(r + s) >>> 2] |= a << (24 - ((r + s) % 4) * 8);
                  }
                else
                  for (var o = 0; o < i; o += 4) t[(r + o) >>> 2] = n[o >>> 2];
                return (this.sigBytes += i), this;
              },
              clamp: function () {
                var t = this.words,
                  n = this.sigBytes;
                (t[n >>> 2] &= 4294967295 << (32 - (n % 4) * 8)),
                  (t.length = e.ceil(n / 4));
              },
              clone: function () {
                var e = l.clone.call(this);
                return (e.words = this.words.slice(0)), e;
              },
              random: function (e) {
                for (var t = [], n = 0; n < e; n += 4) t.push(i());
                return new u.init(t, e);
              },
            })),
            c = (a.enc = {}),
            h = (c.Hex = {
              stringify: function (e) {
                for (
                  var t = e.words, n = e.sigBytes, r = [], i = 0;
                  i < n;
                  i++
                ) {
                  var s = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
                  r.push((s >>> 4).toString(16)), r.push((15 & s).toString(16));
                }
                return r.join("");
              },
              parse: function (e) {
                for (var t = e.length, n = [], r = 0; r < t; r += 2)
                  n[r >>> 3] |=
                    parseInt(e.substr(r, 2), 16) << (24 - (r % 8) * 4);
                return new u.init(n, t / 2);
              },
            }),
            d = (c.Latin1 = {
              stringify: function (e) {
                for (
                  var t = e.words, n = e.sigBytes, r = [], i = 0;
                  i < n;
                  i++
                ) {
                  var s = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
                  r.push(String.fromCharCode(s));
                }
                return r.join("");
              },
              parse: function (e) {
                for (var t = e.length, n = [], r = 0; r < t; r++)
                  n[r >>> 2] |= (255 & e.charCodeAt(r)) << (24 - (r % 4) * 8);
                return new u.init(n, t);
              },
            }),
            p = (c.Utf8 = {
              stringify: function (e) {
                try {
                  return decodeURIComponent(escape(d.stringify(e)));
                } catch (e) {
                  throw Error("Malformed UTF-8 data");
                }
              },
              parse: function (e) {
                return d.parse(unescape(encodeURIComponent(e)));
              },
            }),
            f = (o.BufferedBlockAlgorithm = l.extend({
              reset: function () {
                (this._data = new u.init()), (this._nDataBytes = 0);
              },
              _append: function (e) {
                "string" == typeof e && (e = p.parse(e)),
                  this._data.concat(e),
                  (this._nDataBytes += e.sigBytes);
              },
              _process: function (t) {
                var n,
                  r = this._data,
                  i = r.words,
                  s = r.sigBytes,
                  a = this.blockSize,
                  o = s / (4 * a),
                  l =
                    (o = t
                      ? e.ceil(o)
                      : e.max((0 | o) - this._minBufferSize, 0)) * a,
                  c = e.min(4 * l, s);
                if (l) {
                  for (var h = 0; h < l; h += a) this._doProcessBlock(i, h);
                  (n = i.splice(0, l)), (r.sigBytes -= c);
                }
                return new u.init(n, c);
              },
              clone: function () {
                var e = l.clone.call(this);
                return (e._data = this._data.clone()), e;
              },
              _minBufferSize: 0,
            }));
          o.Hasher = f.extend({
            cfg: l.extend(),
            init: function (e) {
              (this.cfg = this.cfg.extend(e)), this.reset();
            },
            reset: function () {
              f.reset.call(this), this._doReset();
            },
            update: function (e) {
              return this._append(e), this._process(), this;
            },
            finalize: function (e) {
              return e && this._append(e), this._doFinalize();
            },
            blockSize: 16,
            _createHelper: function (e) {
              return function (t, n) {
                return new e.init(n).finalize(t);
              };
            },
            _createHmacHelper: function (e) {
              return function (t, n) {
                return new m.HMAC.init(e, n).finalize(t);
              };
            },
          });
          var m = (a.algo = {});
          return a;
        })(Math);
    },
    8139: function (e, t, n) {
      var r, i;
      e.exports =
        ((i = (r = n(7359)).lib.WordArray),
        (r.enc.Base64 = {
          stringify: function (e) {
            var t = e.words,
              n = e.sigBytes,
              r = this._map;
            e.clamp();
            for (var i = [], s = 0; s < n; s += 3)
              for (
                var a =
                    (((t[s >>> 2] >>> (24 - (s % 4) * 8)) & 255) << 16) |
                    (((t[(s + 1) >>> 2] >>> (24 - ((s + 1) % 4) * 8)) & 255) <<
                      8) |
                    ((t[(s + 2) >>> 2] >>> (24 - ((s + 2) % 4) * 8)) & 255),
                  o = 0;
                o < 4 && s + 0.75 * o < n;
                o++
              )
                i.push(r.charAt((a >>> (6 * (3 - o))) & 63));
            var l = r.charAt(64);
            if (l) for (; i.length % 4; ) i.push(l);
            return i.join("");
          },
          parse: function (e) {
            var t = e.length,
              n = this._map,
              r = this._reverseMap;
            if (!r) {
              r = this._reverseMap = [];
              for (var s = 0; s < n.length; s++) r[n.charCodeAt(s)] = s;
            }
            var a = n.charAt(64);
            if (a) {
              var o = e.indexOf(a);
              -1 !== o && (t = o);
            }
            return (function (e, t, n) {
              for (var r = [], s = 0, a = 0; a < t; a++)
                if (a % 4) {
                  var o =
                    (n[e.charCodeAt(a - 1)] << ((a % 4) * 2)) |
                    (n[e.charCodeAt(a)] >>> (6 - (a % 4) * 2));
                  (r[s >>> 2] |= o << (24 - (s % 4) * 8)), s++;
                }
              return i.create(r, s);
            })(e, t, r);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
        }),
        r.enc.Base64);
    },
    8307: function (e, t, n) {
      e.exports = n(7359).enc.Utf8;
    },
    6844: function (e, t, n) {
      var r, i, s, a, o, l, u;
      e.exports =
        ((r = n(7359)),
        n(1637),
        n(6423),
        (s = (i = r.lib).Base),
        (a = i.WordArray),
        (l = (o = r.algo).MD5),
        (u = o.EvpKDF =
          s.extend({
            cfg: s.extend({ keySize: 4, hasher: l, iterations: 1 }),
            init: function (e) {
              this.cfg = this.cfg.extend(e);
            },
            compute: function (e, t) {
              for (
                var n,
                  r = this.cfg,
                  i = r.hasher.create(),
                  s = a.create(),
                  o = s.words,
                  l = r.keySize,
                  u = r.iterations;
                o.length < l;

              ) {
                n && i.update(n), (n = i.update(e).finalize(t)), i.reset();
                for (var c = 1; c < u; c++) (n = i.finalize(n)), i.reset();
                s.concat(n);
              }
              return (s.sigBytes = 4 * l), s;
            },
          })),
        (r.EvpKDF = function (e, t, n) {
          return u.create(n).compute(e, t);
        }),
        r.EvpKDF);
    },
    6423: function (e, t, n) {
      var r, i, s;
      e.exports = void ((i = (r = n(7359)).lib.Base),
      (s = r.enc.Utf8),
      (r.algo.HMAC = i.extend({
        init: function (e, t) {
          (e = this._hasher = new e.init()),
            "string" == typeof t && (t = s.parse(t));
          var n = e.blockSize,
            r = 4 * n;
          t.sigBytes > r && (t = e.finalize(t)), t.clamp();
          for (
            var i = (this._oKey = t.clone()),
              a = (this._iKey = t.clone()),
              o = i.words,
              l = a.words,
              u = 0;
            u < n;
            u++
          )
            (o[u] ^= 1549556828), (l[u] ^= 909522486);
          (i.sigBytes = a.sigBytes = r), this.reset();
        },
        reset: function () {
          var e = this._hasher;
          e.reset(), e.update(this._iKey);
        },
        update: function (e) {
          return this._hasher.update(e), this;
        },
        finalize: function (e) {
          var t = this._hasher,
            n = t.finalize(e);
          return t.reset(), t.finalize(this._oKey.clone().concat(n));
        },
      })));
    },
    9174: function (e, t, n) {
      var r;
      e.exports =
        ((r = n(7359)),
        (function (e) {
          var t = r.lib,
            n = t.WordArray,
            i = t.Hasher,
            s = r.algo,
            a = [];
          !(function () {
            for (var t = 0; t < 64; t++)
              a[t] = (4294967296 * e.abs(e.sin(t + 1))) | 0;
          })();
          var o = (s.MD5 = i.extend({
            _doReset: function () {
              this._hash = new n.init([
                1732584193, 4023233417, 2562383102, 271733878,
              ]);
            },
            _doProcessBlock: function (e, t) {
              for (var n = 0; n < 16; n++) {
                var r = t + n,
                  i = e[r];
                e[r] =
                  (((i << 8) | (i >>> 24)) & 16711935) |
                  (((i << 24) | (i >>> 8)) & 4278255360);
              }
              var s = this._hash.words,
                o = e[t + 0],
                d = e[t + 1],
                p = e[t + 2],
                f = e[t + 3],
                m = e[t + 4],
                g = e[t + 5],
                _ = e[t + 6],
                v = e[t + 7],
                y = e[t + 8],
                x = e[t + 9],
                b = e[t + 10],
                S = e[t + 11],
                E = e[t + 12],
                M = e[t + 13],
                w = e[t + 14],
                T = e[t + 15],
                A = s[0],
                C = s[1],
                R = s[2],
                P = s[3];
              (A = l(A, C, R, P, o, 7, a[0])),
                (P = l(P, A, C, R, d, 12, a[1])),
                (R = l(R, P, A, C, p, 17, a[2])),
                (C = l(C, R, P, A, f, 22, a[3])),
                (A = l(A, C, R, P, m, 7, a[4])),
                (P = l(P, A, C, R, g, 12, a[5])),
                (R = l(R, P, A, C, _, 17, a[6])),
                (C = l(C, R, P, A, v, 22, a[7])),
                (A = l(A, C, R, P, y, 7, a[8])),
                (P = l(P, A, C, R, x, 12, a[9])),
                (R = l(R, P, A, C, b, 17, a[10])),
                (C = l(C, R, P, A, S, 22, a[11])),
                (A = l(A, C, R, P, E, 7, a[12])),
                (P = l(P, A, C, R, M, 12, a[13])),
                (R = l(R, P, A, C, w, 17, a[14])),
                (C = l(C, R, P, A, T, 22, a[15])),
                (A = u(A, C, R, P, d, 5, a[16])),
                (P = u(P, A, C, R, _, 9, a[17])),
                (R = u(R, P, A, C, S, 14, a[18])),
                (C = u(C, R, P, A, o, 20, a[19])),
                (A = u(A, C, R, P, g, 5, a[20])),
                (P = u(P, A, C, R, b, 9, a[21])),
                (R = u(R, P, A, C, T, 14, a[22])),
                (C = u(C, R, P, A, m, 20, a[23])),
                (A = u(A, C, R, P, x, 5, a[24])),
                (P = u(P, A, C, R, w, 9, a[25])),
                (R = u(R, P, A, C, f, 14, a[26])),
                (C = u(C, R, P, A, y, 20, a[27])),
                (A = u(A, C, R, P, M, 5, a[28])),
                (P = u(P, A, C, R, p, 9, a[29])),
                (R = u(R, P, A, C, v, 14, a[30])),
                (C = u(C, R, P, A, E, 20, a[31])),
                (A = c(A, C, R, P, g, 4, a[32])),
                (P = c(P, A, C, R, y, 11, a[33])),
                (R = c(R, P, A, C, S, 16, a[34])),
                (C = c(C, R, P, A, w, 23, a[35])),
                (A = c(A, C, R, P, d, 4, a[36])),
                (P = c(P, A, C, R, m, 11, a[37])),
                (R = c(R, P, A, C, v, 16, a[38])),
                (C = c(C, R, P, A, b, 23, a[39])),
                (A = c(A, C, R, P, M, 4, a[40])),
                (P = c(P, A, C, R, o, 11, a[41])),
                (R = c(R, P, A, C, f, 16, a[42])),
                (C = c(C, R, P, A, _, 23, a[43])),
                (A = c(A, C, R, P, x, 4, a[44])),
                (P = c(P, A, C, R, E, 11, a[45])),
                (R = c(R, P, A, C, T, 16, a[46])),
                (C = c(C, R, P, A, p, 23, a[47])),
                (A = h(A, C, R, P, o, 6, a[48])),
                (P = h(P, A, C, R, v, 10, a[49])),
                (R = h(R, P, A, C, w, 15, a[50])),
                (C = h(C, R, P, A, g, 21, a[51])),
                (A = h(A, C, R, P, E, 6, a[52])),
                (P = h(P, A, C, R, f, 10, a[53])),
                (R = h(R, P, A, C, b, 15, a[54])),
                (C = h(C, R, P, A, d, 21, a[55])),
                (A = h(A, C, R, P, y, 6, a[56])),
                (P = h(P, A, C, R, T, 10, a[57])),
                (R = h(R, P, A, C, _, 15, a[58])),
                (C = h(C, R, P, A, M, 21, a[59])),
                (A = h(A, C, R, P, m, 6, a[60])),
                (P = h(P, A, C, R, S, 10, a[61])),
                (R = h(R, P, A, C, p, 15, a[62])),
                (C = h(C, R, P, A, x, 21, a[63])),
                (s[0] = (s[0] + A) | 0),
                (s[1] = (s[1] + C) | 0),
                (s[2] = (s[2] + R) | 0),
                (s[3] = (s[3] + P) | 0);
            },
            _doFinalize: function () {
              var t = this._data,
                n = t.words,
                r = 8 * this._nDataBytes,
                i = 8 * t.sigBytes;
              n[i >>> 5] |= 128 << (24 - (i % 32));
              var s = e.floor(r / 4294967296);
              (n[(((i + 64) >>> 9) << 4) + 15] =
                (((s << 8) | (s >>> 24)) & 16711935) |
                (((s << 24) | (s >>> 8)) & 4278255360)),
                (n[(((i + 64) >>> 9) << 4) + 14] =
                  (((r << 8) | (r >>> 24)) & 16711935) |
                  (((r << 24) | (r >>> 8)) & 4278255360)),
                (t.sigBytes = (n.length + 1) * 4),
                this._process();
              for (var a = this._hash, o = a.words, l = 0; l < 4; l++) {
                var u = o[l];
                o[l] =
                  (((u << 8) | (u >>> 24)) & 16711935) |
                  (((u << 24) | (u >>> 8)) & 4278255360);
              }
              return a;
            },
            clone: function () {
              var e = i.clone.call(this);
              return (e._hash = this._hash.clone()), e;
            },
          }));
          function l(e, t, n, r, i, s, a) {
            var o = e + ((t & n) | (~t & r)) + i + a;
            return ((o << s) | (o >>> (32 - s))) + t;
          }
          function u(e, t, n, r, i, s, a) {
            var o = e + ((t & r) | (n & ~r)) + i + a;
            return ((o << s) | (o >>> (32 - s))) + t;
          }
          function c(e, t, n, r, i, s, a) {
            var o = e + (t ^ n ^ r) + i + a;
            return ((o << s) | (o >>> (32 - s))) + t;
          }
          function h(e, t, n, r, i, s, a) {
            var o = e + (n ^ (t | ~r)) + i + a;
            return ((o << s) | (o >>> (32 - s))) + t;
          }
          (r.MD5 = i._createHelper(o)), (r.HmacMD5 = i._createHmacHelper(o));
        })(Math),
        r.MD5);
    },
    1637: function (e, t, n) {
      var r, i, s, a, o, l, u;
      e.exports =
        ((s = (i = (r = n(7359)).lib).WordArray),
        (a = i.Hasher),
        (o = r.algo),
        (l = []),
        (u = o.SHA1 =
          a.extend({
            _doReset: function () {
              this._hash = new s.init([
                1732584193, 4023233417, 2562383102, 271733878, 3285377520,
              ]);
            },
            _doProcessBlock: function (e, t) {
              for (
                var n = this._hash.words,
                  r = n[0],
                  i = n[1],
                  s = n[2],
                  a = n[3],
                  o = n[4],
                  u = 0;
                u < 80;
                u++
              ) {
                if (u < 16) l[u] = 0 | e[t + u];
                else {
                  var c = l[u - 3] ^ l[u - 8] ^ l[u - 14] ^ l[u - 16];
                  l[u] = (c << 1) | (c >>> 31);
                }
                var h = ((r << 5) | (r >>> 27)) + o + l[u];
                u < 20
                  ? (h += ((i & s) | (~i & a)) + 1518500249)
                  : u < 40
                  ? (h += (i ^ s ^ a) + 1859775393)
                  : u < 60
                  ? (h += ((i & s) | (i & a) | (s & a)) - 1894007588)
                  : (h += (i ^ s ^ a) - 899497514),
                  (o = a),
                  (a = s),
                  (s = (i << 30) | (i >>> 2)),
                  (i = r),
                  (r = h);
              }
              (n[0] = (n[0] + r) | 0),
                (n[1] = (n[1] + i) | 0),
                (n[2] = (n[2] + s) | 0),
                (n[3] = (n[3] + a) | 0),
                (n[4] = (n[4] + o) | 0);
            },
            _doFinalize: function () {
              var e = this._data,
                t = e.words,
                n = 8 * this._nDataBytes,
                r = 8 * e.sigBytes;
              return (
                (t[r >>> 5] |= 128 << (24 - (r % 32))),
                (t[(((r + 64) >>> 9) << 4) + 14] = Math.floor(n / 4294967296)),
                (t[(((r + 64) >>> 9) << 4) + 15] = n),
                (e.sigBytes = 4 * t.length),
                this._process(),
                this._hash
              );
            },
            clone: function () {
              var e = a.clone.call(this);
              return (e._hash = this._hash.clone()), e;
            },
          })),
        (r.SHA1 = a._createHelper(u)),
        (r.HmacSHA1 = a._createHmacHelper(u)),
        r.SHA1);
    },
    161: function (e) {
      "use strict";
      var t = Object.prototype.hasOwnProperty,
        n = "~";
      function r() {}
      function i(e, t, n) {
        (this.fn = e), (this.context = t), (this.once = n || !1);
      }
      function s(e, t, r, s, a) {
        if ("function" != typeof r)
          throw TypeError("The listener must be a function");
        var o = new i(r, s || e, a),
          l = n ? n + t : t;
        return (
          e._events[l]
            ? e._events[l].fn
              ? (e._events[l] = [e._events[l], o])
              : e._events[l].push(o)
            : ((e._events[l] = o), e._eventsCount++),
          e
        );
      }
      function a(e, t) {
        0 == --e._eventsCount ? (e._events = new r()) : delete e._events[t];
      }
      function o() {
        (this._events = new r()), (this._eventsCount = 0);
      }
      Object.create &&
        ((r.prototype = Object.create(null)), new r().__proto__ || (n = !1)),
        (o.prototype.eventNames = function () {
          var e,
            r,
            i = [];
          if (0 === this._eventsCount) return i;
          for (r in (e = this._events))
            t.call(e, r) && i.push(n ? r.slice(1) : r);
          return Object.getOwnPropertySymbols
            ? i.concat(Object.getOwnPropertySymbols(e))
            : i;
        }),
        (o.prototype.listeners = function (e) {
          var t = n ? n + e : e,
            r = this._events[t];
          if (!r) return [];
          if (r.fn) return [r.fn];
          for (var i = 0, s = r.length, a = Array(s); i < s; i++)
            a[i] = r[i].fn;
          return a;
        }),
        (o.prototype.listenerCount = function (e) {
          var t = n ? n + e : e,
            r = this._events[t];
          return r ? (r.fn ? 1 : r.length) : 0;
        }),
        (o.prototype.emit = function (e, t, r, i, s, a) {
          var o = n ? n + e : e;
          if (!this._events[o]) return !1;
          var l,
            u,
            c = this._events[o],
            h = arguments.length;
          if (c.fn) {
            switch ((c.once && this.removeListener(e, c.fn, void 0, !0), h)) {
              case 1:
                return c.fn.call(c.context), !0;
              case 2:
                return c.fn.call(c.context, t), !0;
              case 3:
                return c.fn.call(c.context, t, r), !0;
              case 4:
                return c.fn.call(c.context, t, r, i), !0;
              case 5:
                return c.fn.call(c.context, t, r, i, s), !0;
              case 6:
                return c.fn.call(c.context, t, r, i, s, a), !0;
            }
            for (u = 1, l = Array(h - 1); u < h; u++) l[u - 1] = arguments[u];
            c.fn.apply(c.context, l);
          } else {
            var d,
              p = c.length;
            for (u = 0; u < p; u++)
              switch (
                (c[u].once && this.removeListener(e, c[u].fn, void 0, !0), h)
              ) {
                case 1:
                  c[u].fn.call(c[u].context);
                  break;
                case 2:
                  c[u].fn.call(c[u].context, t);
                  break;
                case 3:
                  c[u].fn.call(c[u].context, t, r);
                  break;
                case 4:
                  c[u].fn.call(c[u].context, t, r, i);
                  break;
                default:
                  if (!l)
                    for (d = 1, l = Array(h - 1); d < h; d++)
                      l[d - 1] = arguments[d];
                  c[u].fn.apply(c[u].context, l);
              }
          }
          return !0;
        }),
        (o.prototype.on = function (e, t, n) {
          return s(this, e, t, n, !1);
        }),
        (o.prototype.once = function (e, t, n) {
          return s(this, e, t, n, !0);
        }),
        (o.prototype.removeListener = function (e, t, r, i) {
          var s = n ? n + e : e;
          if (!this._events[s]) return this;
          if (!t) return a(this, s), this;
          var o = this._events[s];
          if (o.fn)
            o.fn !== t ||
              (i && !o.once) ||
              (r && o.context !== r) ||
              a(this, s);
          else {
            for (var l = 0, u = [], c = o.length; l < c; l++)
              (o[l].fn !== t ||
                (i && !o[l].once) ||
                (r && o[l].context !== r)) &&
                u.push(o[l]);
            u.length
              ? (this._events[s] = 1 === u.length ? u[0] : u)
              : a(this, s);
          }
          return this;
        }),
        (o.prototype.removeAllListeners = function (e) {
          var t;
          return (
            e
              ? ((t = n ? n + e : e), this._events[t] && a(this, t))
              : ((this._events = new r()), (this._eventsCount = 0)),
            this
          );
        }),
        (o.prototype.off = o.prototype.removeListener),
        (o.prototype.addListener = o.prototype.on),
        (o.prefixed = n),
        (o.EventEmitter = o),
        (e.exports = o);
    },
    4770: function (e, t, n) {
      "use strict";
      function r(e) {
        if (void 0 === e)
          throw ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function i(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          (e.__proto__ = t);
      }
      n.d(t, {
        $i: function () {
          return em;
        },
        DY: function () {
          return eb;
        },
        Fc: function () {
          return O;
        },
        Fo: function () {
          return nh;
        },
        GN: function () {
          return tE;
        },
        JV: function () {
          return nc;
        },
        Ks: function () {
          return ns;
        },
        Ok: function () {
          return eS;
        },
        Pr: function () {
          return eM;
        },
        S5: function () {
          return nn;
        },
        SI: function () {
          return J;
        },
        UI: function () {
          return th;
        },
        Wy: function () {
          return te;
        },
        Yv: function () {
          return nT;
        },
        bQ: function () {
          return Q;
        },
        cy: function () {
          return eT;
        },
        d4: function () {
          return Z;
        },
        fS: function () {
          return eE;
        },
        if: function () {
          return tQ;
        },
        kr: function () {
          return tw;
        },
        l1: function () {
          return tV;
        },
        lC: function () {
          return es;
        },
        m2: function () {
          return j;
        },
        p8: function () {
          return nw;
        },
        r9: function () {
          return z;
        },
        xr: function () {
          return tT;
        },
      });
      /*!
       * GSAP 3.12.2
       * https://greensock.com
       *
       * @license Copyright 2008-2023, GreenSock. All rights reserved.
       * Subject to the terms at https://greensock.com/standard-license or for
       * Club GreenSock members, the agreement issued with that membership.
       * @author: Jack Doyle, jack@greensock.com
       */ var s,
        a,
        o,
        l,
        u,
        c,
        h,
        d,
        p,
        f,
        m,
        g,
        _,
        v,
        y,
        x,
        b,
        S,
        E,
        M,
        w,
        T,
        A,
        C,
        R,
        P,
        O = {
          autoSleep: 120,
          force3D: "auto",
          nullTargetWarn: 1,
          units: { lineHeight: "" },
        },
        L = { duration: 0.5, overwrite: !1, delay: 0 },
        I = 2 * Math.PI,
        N = I / 4,
        D = 0,
        U = Math.sqrt,
        k = Math.cos,
        F = Math.sin,
        z = function (e) {
          return "string" == typeof e;
        },
        B = function (e) {
          return "function" == typeof e;
        },
        V = function (e) {
          return "number" == typeof e;
        },
        j = function (e) {
          return void 0 === e;
        },
        H = function (e) {
          return "object" == typeof e;
        },
        G = function (e) {
          return !1 !== e;
        },
        W = function () {
          return "undefined" != typeof window;
        },
        $ = function (e) {
          return B(e) || z(e);
        },
        X =
          ("function" == typeof ArrayBuffer && ArrayBuffer.isView) ||
          function () {},
        q = Array.isArray,
        Y = /(?:-?\.?\d|\.)+/gi,
        J = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
        Z = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
        K = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
        Q = /[+-]=-?[.\d]+/,
        ee = /[^,'"\[\]\s]+/gi,
        et = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
        en = {},
        er = {},
        ei = function (e) {
          return (er = eI(e, en)) && nw;
        },
        es = function (e, t) {
          return console.warn(
            "Invalid property",
            e,
            "set to",
            t,
            "Missing plugin? gsap.registerPlugin()"
          );
        },
        ea = function (e, t) {
          return !t && console.warn(e);
        },
        eo = function (e, t) {
          return (e && (en[e] = t) && er && (er[e] = t)) || en;
        },
        el = function () {
          return 0;
        },
        eu = { suppressEvents: !0, isStart: !0, kill: !1 },
        ec = { suppressEvents: !0, kill: !1 },
        eh = { suppressEvents: !0 },
        ed = {},
        ep = [],
        ef = {},
        em = {},
        eg = {},
        e_ = 30,
        ev = [],
        ey = "",
        ex = function (e) {
          var t,
            n,
            r = e[0];
          if ((H(r) || B(r) || (e = [e]), !(t = (r._gsap || {}).harness))) {
            for (n = ev.length; n-- && !ev[n].targetTest(r); );
            t = ev[n];
          }
          for (n = e.length; n--; )
            (e[n] && (e[n]._gsap || (e[n]._gsap = new tV(e[n], t)))) ||
              e.splice(n, 1);
          return e;
        },
        eb = function (e) {
          return e._gsap || ex(tr(e))[0]._gsap;
        },
        eS = function (e, t, n) {
          return (n = e[t]) && B(n)
            ? e[t]()
            : (j(n) && e.getAttribute && e.getAttribute(t)) || n;
        },
        eE = function (e, t) {
          return (e = e.split(",")).forEach(t) || e;
        },
        eM = function (e) {
          return Math.round(1e5 * e) / 1e5 || 0;
        },
        ew = function (e) {
          return Math.round(1e7 * e) / 1e7 || 0;
        },
        eT = function (e, t) {
          var n = t.charAt(0),
            r = parseFloat(t.substr(2));
          return (
            (e = parseFloat(e)),
            "+" === n ? e + r : "-" === n ? e - r : "*" === n ? e * r : e / r
          );
        },
        eA = function (e, t) {
          for (var n = t.length, r = 0; 0 > e.indexOf(t[r]) && ++r < n; );
          return r < n;
        },
        eC = function () {
          var e,
            t,
            n = ep.length,
            r = ep.slice(0);
          for (e = 0, ef = {}, ep.length = 0; e < n; e++)
            (t = r[e]) &&
              t._lazy &&
              (t.render(t._lazy[0], t._lazy[1], !0)._lazy = 0);
        },
        eR = function (e, t, n, r) {
          ep.length && !b && eC(),
            e.render(t, n, r || (b && t < 0 && (e._initted || e._startAt))),
            ep.length && !b && eC();
        },
        eP = function (e) {
          var t = parseFloat(e);
          return (t || 0 === t) && (e + "").match(ee).length < 2
            ? t
            : z(e)
            ? e.trim()
            : e;
        },
        eO = function (e) {
          return e;
        },
        eL = function (e, t) {
          for (var n in t) n in e || (e[n] = t[n]);
          return e;
        },
        eI = function (e, t) {
          for (var n in t) e[n] = t[n];
          return e;
        },
        eN = function e(t, n) {
          for (var r in n)
            "__proto__" !== r &&
              "constructor" !== r &&
              "prototype" !== r &&
              (t[r] = H(n[r]) ? e(t[r] || (t[r] = {}), n[r]) : n[r]);
          return t;
        },
        eD = function (e, t) {
          var n,
            r = {};
          for (n in e) n in t || (r[n] = e[n]);
          return r;
        },
        eU = function (e) {
          var t,
            n = e.parent || E,
            r = e.keyframes
              ? ((t = q(e.keyframes)),
                function (e, n) {
                  for (var r in n)
                    r in e ||
                      ("duration" === r && t) ||
                      "ease" === r ||
                      (e[r] = n[r]);
                })
              : eL;
          if (G(e.inherit))
            for (; n; ) r(e, n.vars.defaults), (n = n.parent || n._dp);
          return e;
        },
        ek = function (e, t) {
          for (
            var n = e.length, r = n === t.length;
            r && n-- && e[n] === t[n];

          );
          return n < 0;
        },
        eF = function (e, t, n, r, i) {
          void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
          var s,
            a = e[r];
          if (i) for (s = t[i]; a && a[i] > s; ) a = a._prev;
          return (
            a
              ? ((t._next = a._next), (a._next = t))
              : ((t._next = e[n]), (e[n] = t)),
            t._next ? (t._next._prev = t) : (e[r] = t),
            (t._prev = a),
            (t.parent = t._dp = e),
            t
          );
        },
        ez = function (e, t, n, r) {
          void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
          var i = t._prev,
            s = t._next;
          i ? (i._next = s) : e[n] === t && (e[n] = s),
            s ? (s._prev = i) : e[r] === t && (e[r] = i),
            (t._next = t._prev = t.parent = null);
        },
        eB = function (e, t) {
          e.parent &&
            (!t || e.parent.autoRemoveChildren) &&
            e.parent.remove &&
            e.parent.remove(e),
            (e._act = 0);
        },
        eV = function (e, t) {
          if (e && (!t || t._end > e._dur || t._start < 0))
            for (var n = e; n; ) (n._dirty = 1), (n = n.parent);
          return e;
        },
        ej = function (e) {
          for (var t = e.parent; t && t.parent; )
            (t._dirty = 1), t.totalDuration(), (t = t.parent);
          return e;
        },
        eH = function (e, t, n, r) {
          return (
            e._startAt &&
            (b
              ? e._startAt.revert(ec)
              : (e.vars.immediateRender && !e.vars.autoRevert) ||
                e._startAt.render(t, !0, r))
          );
        },
        eG = function (e) {
          return e._repeat
            ? eW(e._tTime, (e = e.duration() + e._rDelay)) * e
            : 0;
        },
        eW = function (e, t) {
          var n = Math.floor((e /= t));
          return e && n === e ? n - 1 : n;
        },
        e$ = function (e, t) {
          return (
            (e - t._start) * t._ts +
            (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
          );
        },
        eX = function (e) {
          return (e._end = ew(
            e._start + (e._tDur / Math.abs(e._ts || e._rts || 1e-8) || 0)
          ));
        },
        eq = function (e, t) {
          var n = e._dp;
          return (
            n &&
              n.smoothChildTiming &&
              e._ts &&
              ((e._start = ew(
                n._time -
                  (e._ts > 0
                    ? t / e._ts
                    : -(((e._dirty ? e.totalDuration() : e._tDur) - t) / e._ts))
              )),
              eX(e),
              n._dirty || eV(n, e)),
            e
          );
        },
        eY = function (e, t) {
          var n;
          if (
            ((t._time ||
              (!t._dur && t._initted) ||
              (t._start < e._time && (t._dur || !t.add))) &&
              ((n = e$(e.rawTime(), t)),
              (!t._dur || e9(0, t.totalDuration(), n) - t._tTime > 1e-8) &&
                t.render(n, !0)),
            eV(e, t)._dp && e._initted && e._time >= e._dur && e._ts)
          ) {
            if (e._dur < e.duration())
              for (n = e; n._dp; )
                n.rawTime() >= 0 && n.totalTime(n._tTime), (n = n._dp);
            e._zTime = -0.00000001;
          }
        },
        eJ = function (e, t, n, r) {
          return (
            t.parent && eB(t),
            (t._start = ew(
              (V(n) ? n : n || e !== E ? e6(e, n, t) : e._time) + t._delay
            )),
            (t._end = ew(
              t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)
            )),
            eF(e, t, "_first", "_last", e._sort ? "_start" : 0),
            e0(t) || (e._recent = t),
            r || eY(e, t),
            e._ts < 0 && eq(e, e._tTime),
            e
          );
        },
        eZ = function (e, t) {
          return (
            (en.ScrollTrigger || es("scrollTrigger", t)) &&
            en.ScrollTrigger.create(t, e)
          );
        },
        eK = function (e, t, n, r, i) {
          return (t0(e, t, i), e._initted)
            ? !n &&
              e._pt &&
              !b &&
              ((e._dur && !1 !== e.vars.lazy) || (!e._dur && e.vars.lazy)) &&
              C !== tT.frame
              ? (ep.push(e), (e._lazy = [i, r]), 1)
              : void 0
            : 1;
        },
        eQ = function e(t) {
          var n = t.parent;
          return (
            n && n._ts && n._initted && !n._lock && (0 > n.rawTime() || e(n))
          );
        },
        e0 = function (e) {
          var t = e.data;
          return "isFromStart" === t || "isStart" === t;
        },
        e1 = function (e, t, n, r) {
          var i,
            s,
            a,
            o = e.ratio,
            l =
              t < 0 ||
              (!t &&
                ((!e._start && eQ(e) && !(!e._initted && e0(e))) ||
                  ((e._ts < 0 || e._dp._ts < 0) && !e0(e))))
                ? 0
                : 1,
            u = e._rDelay,
            c = 0;
          if (
            (u &&
              e._repeat &&
              ((s = eW((c = e9(0, e._tDur, t)), u)),
              e._yoyo && 1 & s && (l = 1 - l),
              s !== eW(e._tTime, u) &&
                ((o = 1 - l),
                e.vars.repeatRefresh && e._initted && e.invalidate())),
            l !== o || b || r || 1e-8 === e._zTime || (!t && e._zTime))
          ) {
            if (!e._initted && eK(e, t, r, n, c)) return;
            for (
              a = e._zTime,
                e._zTime = t || (n ? 1e-8 : 0),
                n || (n = t && !a),
                e.ratio = l,
                e._from && (l = 1 - l),
                e._time = 0,
                e._tTime = c,
                i = e._pt;
              i;

            )
              i.r(l, i.d), (i = i._next);
            t < 0 && eH(e, t, n, !0),
              e._onUpdate && !n && tf(e, "onUpdate"),
              c && e._repeat && !n && e.parent && tf(e, "onRepeat"),
              (t >= e._tDur || t < 0) &&
                e.ratio === l &&
                (l && eB(e, 1),
                n ||
                  b ||
                  (tf(e, l ? "onComplete" : "onReverseComplete", !0),
                  e._prom && e._prom()));
          } else e._zTime || (e._zTime = t);
        },
        e2 = function (e, t, n) {
          var r;
          if (n > t)
            for (r = e._first; r && r._start <= n; ) {
              if ("isPause" === r.data && r._start > t) return r;
              r = r._next;
            }
          else
            for (r = e._last; r && r._start >= n; ) {
              if ("isPause" === r.data && r._start < t) return r;
              r = r._prev;
            }
        },
        e3 = function (e, t, n, r) {
          var i = e._repeat,
            s = ew(t) || 0,
            a = e._tTime / e._tDur;
          return (
            a && !r && (e._time *= s / e._dur),
            (e._dur = s),
            (e._tDur = i
              ? i < 0
                ? 1e10
                : ew(s * (i + 1) + e._rDelay * i)
              : s),
            a > 0 && !r && eq(e, (e._tTime = e._tDur * a)),
            e.parent && eX(e),
            n || eV(e.parent, e),
            e
          );
        },
        e4 = function (e) {
          return e instanceof tH ? eV(e) : e3(e, e._dur);
        },
        e5 = { _start: 0, endTime: el, totalDuration: el },
        e6 = function e(t, n, r) {
          var i,
            s,
            a,
            o = t.labels,
            l = t._recent || e5,
            u = t.duration() >= 1e8 ? l.endTime(!1) : t._dur;
          return z(n) && (isNaN(n) || n in o)
            ? ((s = n.charAt(0)),
              (a = "%" === n.substr(-1)),
              (i = n.indexOf("=")),
              "<" === s || ">" === s)
              ? (i >= 0 && (n = n.replace(/=/, "")),
                ("<" === s ? l._start : l.endTime(l._repeat >= 0)) +
                  (parseFloat(n.substr(1)) || 0) *
                    (a ? (i < 0 ? l : r).totalDuration() / 100 : 1))
              : i < 0
              ? (n in o || (o[n] = u), o[n])
              : ((s = parseFloat(n.charAt(i - 1) + n.substr(i + 1))),
                a && r && (s = (s / 100) * (q(r) ? r[0] : r).totalDuration()),
                i > 1 ? e(t, n.substr(0, i - 1), r) + s : u + s)
            : null == n
            ? u
            : +n;
        },
        e8 = function (e, t, n) {
          var r,
            i,
            s = V(t[1]),
            a = (s ? 2 : 1) + (e < 2 ? 0 : 1),
            o = t[a];
          if ((s && (o.duration = t[1]), (o.parent = n), e)) {
            for (r = o, i = n; i && !("immediateRender" in r); )
              (r = i.vars.defaults || {}), (i = G(i.vars.inherit) && i.parent);
            (o.immediateRender = G(r.immediateRender)),
              e < 2 ? (o.runBackwards = 1) : (o.startAt = t[a - 1]);
          }
          return new t8(t[0], o, t[a + 1]);
        },
        e7 = function (e, t) {
          return e || 0 === e ? t(e) : t;
        },
        e9 = function (e, t, n) {
          return n < e ? e : n > t ? t : n;
        },
        te = function (e, t) {
          return z(e) && (t = et.exec(e)) ? t[1] : "";
        },
        tt = [].slice,
        tn = function (e, t) {
          return (
            e &&
            H(e) &&
            "length" in e &&
            ((!t && !e.length) || (e.length - 1 in e && H(e[0]))) &&
            !e.nodeType &&
            e !== M
          );
        },
        tr = function (e, t, n) {
          var r;
          return S && !t && S.selector
            ? S.selector(e)
            : z(e) && !n && (w || !tA())
            ? tt.call((t || T).querySelectorAll(e), 0)
            : q(e)
            ? (void 0 === r && (r = []),
              e.forEach(function (e) {
                var t;
                return (z(e) && !n) || tn(e, 1)
                  ? (t = r).push.apply(t, tr(e))
                  : r.push(e);
              }) || r)
            : tn(e)
            ? tt.call(e, 0)
            : e
            ? [e]
            : [];
        },
        ti = function (e) {
          return (
            (e = tr(e)[0] || ea("Invalid scope") || {}),
            function (t) {
              var n = e.current || e.nativeElement || e;
              return tr(
                t,
                n.querySelectorAll
                  ? n
                  : n === e
                  ? ea("Invalid scope") || T.createElement("div")
                  : e
              );
            }
          );
        },
        ts = function (e) {
          return e.sort(function () {
            return 0.5 - Math.random();
          });
        },
        ta = function (e) {
          if (B(e)) return e;
          var t = H(e) ? e : { each: e },
            n = tU(t.ease),
            r = t.from || 0,
            i = parseFloat(t.base) || 0,
            s = {},
            a = r > 0 && r < 1,
            o = isNaN(r) || a,
            l = t.axis,
            u = r,
            c = r;
          return (
            z(r)
              ? (u = c = { center: 0.5, edges: 0.5, end: 1 }[r] || 0)
              : !a && o && ((u = r[0]), (c = r[1])),
            function (e, a, h) {
              var d,
                p,
                f,
                m,
                g,
                _,
                v,
                y,
                x,
                b = (h || t).length,
                S = s[b];
              if (!S) {
                if (!(x = "auto" === t.grid ? 0 : (t.grid || [1, 1e8])[1])) {
                  for (
                    v = -1e8;
                    v < (v = h[x++].getBoundingClientRect().left) && x < b;

                  );
                  x--;
                }
                for (
                  _ = 0,
                    S = s[b] = [],
                    d = o ? Math.min(x, b) * u - 0.5 : r % x,
                    p = 1e8 === x ? 0 : o ? (b * c) / x - 0.5 : (r / x) | 0,
                    v = 0,
                    y = 1e8;
                  _ < b;
                  _++
                )
                  (f = (_ % x) - d),
                    (m = p - ((_ / x) | 0)),
                    (S[_] = g =
                      l ? Math.abs("y" === l ? m : f) : U(f * f + m * m)),
                    g > v && (v = g),
                    g < y && (y = g);
                "random" === r && ts(S),
                  (S.max = v - y),
                  (S.min = y),
                  (S.v = b =
                    (parseFloat(t.amount) ||
                      parseFloat(t.each) *
                        (x > b
                          ? b - 1
                          : l
                          ? "y" === l
                            ? b / x
                            : x
                          : Math.max(x, b / x)) ||
                      0) * ("edges" === r ? -1 : 1)),
                  (S.b = b < 0 ? i - b : i),
                  (S.u = te(t.amount || t.each) || 0),
                  (n = n && b < 0 ? tN(n) : n);
              }
              return (
                (b = (S[e] - S.min) / S.max || 0),
                ew(S.b + (n ? n(b) : b) * S.v) + S.u
              );
            }
          );
        },
        to = function (e) {
          var t = Math.pow(10, ((e + "").split(".")[1] || "").length);
          return function (n) {
            var r = ew(Math.round(parseFloat(n) / e) * e * t);
            return (r - (r % 1)) / t + (V(n) ? 0 : te(n));
          };
        },
        tl = function (e, t) {
          var n,
            r,
            i = q(e);
          return (
            !i &&
              H(e) &&
              ((n = i = e.radius || 1e8),
              e.values
                ? (r = !V((e = tr(e.values))[0])) && (n *= n)
                : (e = to(e.increment))),
            e7(
              t,
              i
                ? B(e)
                  ? function (t) {
                      return Math.abs((r = e(t)) - t) <= n ? r : t;
                    }
                  : function (t) {
                      for (
                        var i,
                          s,
                          a = parseFloat(r ? t.x : t),
                          o = parseFloat(r ? t.y : 0),
                          l = 1e8,
                          u = 0,
                          c = e.length;
                        c--;

                      )
                        (i = r
                          ? (i = e[c].x - a) * i + (s = e[c].y - o) * s
                          : Math.abs(e[c] - a)) < l && ((l = i), (u = c));
                      return (
                        (u = !n || l <= n ? e[u] : t),
                        r || u === t || V(t) ? u : u + te(t)
                      );
                    }
                : to(e)
            )
          );
        },
        tu = function (e, t, n, r) {
          return e7(q(e) ? !t : !0 === n ? ((n = 0), !1) : !r, function () {
            return q(e)
              ? e[~~(Math.random() * e.length)]
              : (r =
                  (n = n || 1e-5) < 1
                    ? Math.pow(10, (n + "").length - 2)
                    : 1) &&
                  Math.floor(
                    Math.round(
                      (e - n / 2 + Math.random() * (t - e + 0.99 * n)) / n
                    ) *
                      n *
                      r
                  ) / r;
          });
        },
        tc = function (e, t, n) {
          return e7(n, function (n) {
            return e[~~t(n)];
          });
        },
        th = function (e) {
          for (var t, n, r, i, s = 0, a = ""; ~(t = e.indexOf("random(", s)); )
            (r = e.indexOf(")", t)),
              (i = "[" === e.charAt(t + 7)),
              (n = e.substr(t + 7, r - t - 7).match(i ? ee : Y)),
              (a +=
                e.substr(s, t - s) +
                tu(i ? n : +n[0], i ? 0 : +n[1], +n[2] || 1e-5)),
              (s = r + 1);
          return a + e.substr(s, e.length - s);
        },
        td = function (e, t, n, r, i) {
          var s = t - e,
            a = r - n;
          return e7(i, function (t) {
            return n + (((t - e) / s) * a || 0);
          });
        },
        tp = function (e, t, n) {
          var r,
            i,
            s,
            a = e.labels,
            o = 1e8;
          for (r in a)
            (i = a[r] - t) < 0 == !!n &&
              i &&
              o > (i = Math.abs(i)) &&
              ((s = r), (o = i));
          return s;
        },
        tf = function (e, t, n) {
          var r,
            i,
            s,
            a = e.vars,
            o = a[t],
            l = S,
            u = e._ctx;
          if (o)
            return (
              (r = a[t + "Params"]),
              (i = a.callbackScope || e),
              n && ep.length && eC(),
              u && (S = u),
              (s = r ? o.apply(i, r) : o.call(i)),
              (S = l),
              s
            );
        },
        tm = function (e) {
          return (
            eB(e),
            e.scrollTrigger && e.scrollTrigger.kill(!!b),
            1 > e.progress() && tf(e, "onInterrupt"),
            e
          );
        },
        tg = [],
        t_ = function (e) {
          if (W() && e) {
            var t = (e = (!e.name && e.default) || e).name,
              n = B(e),
              r =
                t && !n && e.init
                  ? function () {
                      this._props = [];
                    }
                  : e,
              i = {
                init: el,
                render: na,
                add: tZ,
                kill: nl,
                modifier: no,
                rawVars: 0,
              },
              s = {
                targetTest: 0,
                get: 0,
                getSetter: nn,
                aliases: {},
                register: 0,
              };
            if ((tA(), e !== r)) {
              if (em[t]) return;
              eL(r, eL(eD(e, i), s)),
                eI(r.prototype, eI(i, eD(e, s))),
                (em[(r.prop = t)] = r),
                e.targetTest && (ev.push(r), (ed[t] = 1)),
                (t =
                  ("css" === t
                    ? "CSS"
                    : t.charAt(0).toUpperCase() + t.substr(1)) + "Plugin");
            }
            eo(t, r), e.register && e.register(nw, r, nh);
          } else e && tg.push(e);
        },
        tv = {
          aqua: [0, 255, 255],
          lime: [0, 255, 0],
          silver: [192, 192, 192],
          black: [0, 0, 0],
          maroon: [128, 0, 0],
          teal: [0, 128, 128],
          blue: [0, 0, 255],
          navy: [0, 0, 128],
          white: [255, 255, 255],
          olive: [128, 128, 0],
          yellow: [255, 255, 0],
          orange: [255, 165, 0],
          gray: [128, 128, 128],
          purple: [128, 0, 128],
          green: [0, 128, 0],
          red: [255, 0, 0],
          pink: [255, 192, 203],
          cyan: [0, 255, 255],
          transparent: [255, 255, 255, 0],
        },
        ty = function (e, t, n) {
          return (
            ((6 * (e += e < 0 ? 1 : e > 1 ? -1 : 0) < 1
              ? t + (n - t) * e * 6
              : e < 0.5
              ? n
              : 3 * e < 2
              ? t + (n - t) * (2 / 3 - e) * 6
              : t) *
              255 +
              0.5) |
            0
          );
        },
        tx = function (e, t, n) {
          var r,
            i,
            s,
            a,
            o,
            l,
            u,
            c,
            h,
            d,
            p = e ? (V(e) ? [e >> 16, (e >> 8) & 255, 255 & e] : 0) : tv.black;
          if (!p) {
            if (
              ("," === e.substr(-1) && (e = e.substr(0, e.length - 1)), tv[e])
            )
              p = tv[e];
            else if ("#" === e.charAt(0)) {
              if (
                (e.length < 6 &&
                  (e =
                    "#" +
                    (r = e.charAt(1)) +
                    r +
                    (i = e.charAt(2)) +
                    i +
                    (s = e.charAt(3)) +
                    s +
                    (5 === e.length ? e.charAt(4) + e.charAt(4) : "")),
                9 === e.length)
              )
                return [
                  (p = parseInt(e.substr(1, 6), 16)) >> 16,
                  (p >> 8) & 255,
                  255 & p,
                  parseInt(e.substr(7), 16) / 255,
                ];
              p = [
                (e = parseInt(e.substr(1), 16)) >> 16,
                (e >> 8) & 255,
                255 & e,
              ];
            } else if ("hsl" === e.substr(0, 3)) {
              if (((p = d = e.match(Y)), t)) {
                if (~e.indexOf("="))
                  return (p = e.match(J)), n && p.length < 4 && (p[3] = 1), p;
              } else
                (a = (+p[0] % 360) / 360),
                  (o = +p[1] / 100),
                  (i = (l = +p[2] / 100) <= 0.5 ? l * (o + 1) : l + o - l * o),
                  (r = 2 * l - i),
                  p.length > 3 && (p[3] *= 1),
                  (p[0] = ty(a + 1 / 3, r, i)),
                  (p[1] = ty(a, r, i)),
                  (p[2] = ty(a - 1 / 3, r, i));
            } else p = e.match(Y) || tv.transparent;
            p = p.map(Number);
          }
          return (
            t &&
              !d &&
              ((l =
                ((u = Math.max(
                  (r = p[0] / 255),
                  (i = p[1] / 255),
                  (s = p[2] / 255)
                )) +
                  (c = Math.min(r, i, s))) /
                2),
              u === c
                ? (a = o = 0)
                : ((h = u - c),
                  (o = l > 0.5 ? h / (2 - u - c) : h / (u + c)),
                  (a =
                    (u === r
                      ? (i - s) / h + (i < s ? 6 : 0)
                      : u === i
                      ? (s - r) / h + 2
                      : (r - i) / h + 4) * 60)),
              (p[0] = ~~(a + 0.5)),
              (p[1] = ~~(100 * o + 0.5)),
              (p[2] = ~~(100 * l + 0.5))),
            n && p.length < 4 && (p[3] = 1),
            p
          );
        },
        tb = function (e) {
          var t = [],
            n = [],
            r = -1;
          return (
            e.split(tE).forEach(function (e) {
              var i = e.match(Z) || [];
              t.push.apply(t, i), n.push((r += i.length + 1));
            }),
            (t.c = n),
            t
          );
        },
        tS = function (e, t, n) {
          var r,
            i,
            s,
            a,
            o = "",
            l = (e + o).match(tE),
            u = t ? "hsla(" : "rgba(",
            c = 0;
          if (!l) return e;
          if (
            ((l = l.map(function (e) {
              return (
                (e = tx(e, t, 1)) &&
                u +
                  (t
                    ? e[0] + "," + e[1] + "%," + e[2] + "%," + e[3]
                    : e.join(",")) +
                  ")"
              );
            })),
            n && ((s = tb(e)), (r = n.c).join(o) !== s.c.join(o)))
          )
            for (a = (i = e.replace(tE, "1").split(Z)).length - 1; c < a; c++)
              o +=
                i[c] +
                (~r.indexOf(c)
                  ? l.shift() || u + "0,0,0,0)"
                  : (s.length ? s : l.length ? l : n).shift());
          if (!i)
            for (a = (i = e.split(tE)).length - 1; c < a; c++) o += i[c] + l[c];
          return o + i[a];
        },
        tE = (function () {
          var e,
            t =
              "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";
          for (e in tv) t += "|" + e + "\\b";
          return RegExp(t + ")", "gi");
        })(),
        tM = /hsl[a]?\(/,
        tw = function (e) {
          var t,
            n = e.join(" ");
          if (((tE.lastIndex = 0), tE.test(n)))
            return (
              (t = tM.test(n)),
              (e[1] = tS(e[1], t)),
              (e[0] = tS(e[0], t, tb(e[1]))),
              !0
            );
        },
        tT =
          ((h = Date.now),
          (d = 500),
          (p = 33),
          (m = f = h()),
          (g = 1e3 / 240),
          (_ = 1e3 / 240),
          (v = []),
          (y = function e(t) {
            var n,
              r,
              i,
              o,
              y = h() - m,
              x = !0 === t;
            if (
              (y > d && (f += y - p),
              (m += y),
              ((n = (i = m - f) - _) > 0 || x) &&
                ((o = ++l.frame),
                (u = i - 1e3 * l.time),
                (l.time = i /= 1e3),
                (_ += n + (n >= g ? 4 : g - n)),
                (r = 1)),
              x || (s = a(e)),
              r)
            )
              for (c = 0; c < v.length; c++) v[c](i, u, o, t);
          }),
          (l = {
            time: 0,
            frame: 0,
            tick: function () {
              y(!0);
            },
            deltaRatio: function (e) {
              return u / (1e3 / (e || 60));
            },
            wake: function () {
              A &&
                (!w &&
                  W() &&
                  ((T = (M = w = window).document || {}),
                  (en.gsap = nw),
                  (M.gsapVersions || (M.gsapVersions = [])).push(nw.version),
                  ei(er || M.GreenSockGlobals || (!M.gsap && M) || {}),
                  (o = M.requestAnimationFrame),
                  tg.forEach(t_)),
                s && l.sleep(),
                (a =
                  o ||
                  function (e) {
                    return setTimeout(e, (_ - 1e3 * l.time + 1) | 0);
                  }),
                (P = 1),
                y(2));
            },
            sleep: function () {
              (o ? M.cancelAnimationFrame : clearTimeout)(s), (P = 0), (a = el);
            },
            lagSmoothing: function (e, t) {
              p = Math.min(t || 33, (d = e || 1 / 0));
            },
            fps: function (e) {
              (g = 1e3 / (e || 240)), (_ = 1e3 * l.time + g);
            },
            add: function (e, t, n) {
              var r = t
                ? function (t, n, i, s) {
                    e(t, n, i, s), l.remove(r);
                  }
                : e;
              return l.remove(e), v[n ? "unshift" : "push"](r), tA(), r;
            },
            remove: function (e, t) {
              ~(t = v.indexOf(e)) && v.splice(t, 1) && c >= t && c--;
            },
            _listeners: v,
          })),
        tA = function () {
          return !P && tT.wake();
        },
        tC = {},
        tR = /^[\d.\-M][\d.\-,\s]/,
        tP = /["']/g,
        tO = function (e) {
          for (
            var t,
              n,
              r,
              i = {},
              s = e.substr(1, e.length - 3).split(":"),
              a = s[0],
              o = 1,
              l = s.length;
            o < l;
            o++
          )
            (n = s[o]),
              (t = o !== l - 1 ? n.lastIndexOf(",") : n.length),
              (r = n.substr(0, t)),
              (i[a] = isNaN(r) ? r.replace(tP, "").trim() : +r),
              (a = n.substr(t + 1).trim());
          return i;
        },
        tL = function (e) {
          var t = e.indexOf("(") + 1,
            n = e.indexOf(")"),
            r = e.indexOf("(", t);
          return e.substring(t, ~r && r < n ? e.indexOf(")", n + 1) : n);
        },
        tI = function (e) {
          var t = (e + "").split("("),
            n = tC[t[0]];
          return n && t.length > 1 && n.config
            ? n.config.apply(
                null,
                ~e.indexOf("{") ? [tO(t[1])] : tL(e).split(",").map(eP)
              )
            : tC._CE && tR.test(e)
            ? tC._CE("", e)
            : n;
        },
        tN = function (e) {
          return function (t) {
            return 1 - e(1 - t);
          };
        },
        tD = function e(t, n) {
          for (var r, i = t._first; i; )
            i instanceof tH
              ? e(i, n)
              : !i.vars.yoyoEase ||
                (i._yoyo && i._repeat) ||
                i._yoyo === n ||
                (i.timeline
                  ? e(i.timeline, n)
                  : ((r = i._ease),
                    (i._ease = i._yEase),
                    (i._yEase = r),
                    (i._yoyo = n))),
              (i = i._next);
        },
        tU = function (e, t) {
          return (e && (B(e) ? e : tC[e] || tI(e))) || t;
        },
        tk = function (e, t, n, r) {
          void 0 === n &&
            (n = function (e) {
              return 1 - t(1 - e);
            }),
            void 0 === r &&
              (r = function (e) {
                return e < 0.5 ? t(2 * e) / 2 : 1 - t((1 - e) * 2) / 2;
              });
          var i,
            s = { easeIn: t, easeOut: n, easeInOut: r };
          return (
            eE(e, function (e) {
              for (var t in ((tC[e] = en[e] = s),
              (tC[(i = e.toLowerCase())] = n),
              s))
                tC[
                  i +
                    ("easeIn" === t
                      ? ".in"
                      : "easeOut" === t
                      ? ".out"
                      : ".inOut")
                ] = tC[e + "." + t] = s[t];
            }),
            s
          );
        },
        tF = function (e) {
          return function (t) {
            return t < 0.5
              ? (1 - e(1 - 2 * t)) / 2
              : 0.5 + e((t - 0.5) * 2) / 2;
          };
        },
        tz = function e(t, n, r) {
          var i = n >= 1 ? n : 1,
            s = (r || (t ? 0.3 : 0.45)) / (n < 1 ? n : 1),
            a = (s / I) * (Math.asin(1 / i) || 0),
            o = function (e) {
              return 1 === e
                ? 1
                : i * Math.pow(2, -10 * e) * F((e - a) * s) + 1;
            },
            l =
              "out" === t
                ? o
                : "in" === t
                ? function (e) {
                    return 1 - o(1 - e);
                  }
                : tF(o);
          return (
            (s = I / s),
            (l.config = function (n, r) {
              return e(t, n, r);
            }),
            l
          );
        },
        tB = function e(t, n) {
          void 0 === n && (n = 1.70158);
          var r = function (e) {
              return e ? --e * e * ((n + 1) * e + n) + 1 : 0;
            },
            i =
              "out" === t
                ? r
                : "in" === t
                ? function (e) {
                    return 1 - r(1 - e);
                  }
                : tF(r);
          return (
            (i.config = function (n) {
              return e(t, n);
            }),
            i
          );
        };
      eE("Linear,Quad,Cubic,Quart,Quint,Strong", function (e, t) {
        var n = t < 5 ? t + 1 : t;
        tk(
          e + ",Power" + (n - 1),
          t
            ? function (e) {
                return Math.pow(e, n);
              }
            : function (e) {
                return e;
              },
          function (e) {
            return 1 - Math.pow(1 - e, n);
          },
          function (e) {
            return e < 0.5
              ? Math.pow(2 * e, n) / 2
              : 1 - Math.pow((1 - e) * 2, n) / 2;
          }
        );
      }),
        (tC.Linear.easeNone = tC.none = tC.Linear.easeIn),
        tk("Elastic", tz("in"), tz("out"), tz()),
        (tW = 2 * (tG = 1 / 2.75)),
        (t$ = 2.5 * tG),
        tk(
          "Bounce",
          function (e) {
            return 1 - tX(1 - e);
          },
          (tX = function (e) {
            return e < tG
              ? 7.5625 * e * e
              : e < tW
              ? 7.5625 * Math.pow(e - 1.5 / 2.75, 2) + 0.75
              : e < t$
              ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
              : 7.5625 * Math.pow(e - 2.625 / 2.75, 2) + 0.984375;
          })
        ),
        tk("Expo", function (e) {
          return e ? Math.pow(2, 10 * (e - 1)) : 0;
        }),
        tk("Circ", function (e) {
          return -(U(1 - e * e) - 1);
        }),
        tk("Sine", function (e) {
          return 1 === e ? 1 : -k(e * N) + 1;
        }),
        tk("Back", tB("in"), tB("out"), tB()),
        (tC.SteppedEase =
          tC.steps =
          en.SteppedEase =
            {
              config: function (e, t) {
                void 0 === e && (e = 1);
                var n = 1 / e,
                  r = e + (t ? 0 : 1),
                  i = t ? 1 : 0;
                return function (e) {
                  return (((r * e9(0, 0.99999999, e)) | 0) + i) * n;
                };
              },
            }),
        (L.ease = tC["quad.out"]),
        eE(
          "onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",
          function (e) {
            return (ey += e + "," + e + "Params,");
          }
        );
      var tV = function (e, t) {
          (this.id = D++),
            (e._gsap = this),
            (this.target = e),
            (this.harness = t),
            (this.get = t ? t.get : eS),
            (this.set = t ? t.getSetter : nn);
        },
        tj = (function () {
          function e(e) {
            (this.vars = e),
              (this._delay = +e.delay || 0),
              (this._repeat = e.repeat === 1 / 0 ? -2 : e.repeat || 0) &&
                ((this._rDelay = e.repeatDelay || 0),
                (this._yoyo = !!e.yoyo || !!e.yoyoEase)),
              (this._ts = 1),
              e3(this, +e.duration, 1, 1),
              (this.data = e.data),
              S && ((this._ctx = S), S.data.push(this)),
              P || tT.wake();
          }
          var t = e.prototype;
          return (
            (t.delay = function (e) {
              return e || 0 === e
                ? (this.parent &&
                    this.parent.smoothChildTiming &&
                    this.startTime(this._start + e - this._delay),
                  (this._delay = e),
                  this)
                : this._delay;
            }),
            (t.duration = function (e) {
              return arguments.length
                ? this.totalDuration(
                    this._repeat > 0 ? e + (e + this._rDelay) * this._repeat : e
                  )
                : this.totalDuration() && this._dur;
            }),
            (t.totalDuration = function (e) {
              return arguments.length
                ? ((this._dirty = 0),
                  e3(
                    this,
                    this._repeat < 0
                      ? e
                      : (e - this._repeat * this._rDelay) / (this._repeat + 1)
                  ))
                : this._tDur;
            }),
            (t.totalTime = function (e, t) {
              if ((tA(), !arguments.length)) return this._tTime;
              var n = this._dp;
              if (n && n.smoothChildTiming && this._ts) {
                for (
                  eq(this, e), !n._dp || n.parent || eY(n, this);
                  n && n.parent;

                )
                  n.parent._time !==
                    n._start +
                      (n._ts >= 0
                        ? n._tTime / n._ts
                        : -((n.totalDuration() - n._tTime) / n._ts)) &&
                    n.totalTime(n._tTime, !0),
                    (n = n.parent);
                !this.parent &&
                  this._dp.autoRemoveChildren &&
                  ((this._ts > 0 && e < this._tDur) ||
                    (this._ts < 0 && e > 0) ||
                    (!this._tDur && !e)) &&
                  eJ(this._dp, this, this._start - this._delay);
              }
              return (
                (this._tTime === e &&
                  (this._dur || t) &&
                  (!this._initted || 1e-8 !== Math.abs(this._zTime)) &&
                  (e || this._initted || (!this.add && !this._ptLookup))) ||
                  (this._ts || (this._pTime = e), eR(this, e, t)),
                this
              );
            }),
            (t.time = function (e, t) {
              return arguments.length
                ? this.totalTime(
                    Math.min(this.totalDuration(), e + eG(this)) %
                      (this._dur + this._rDelay) || (e ? this._dur : 0),
                    t
                  )
                : this._time;
            }),
            (t.totalProgress = function (e, t) {
              return arguments.length
                ? this.totalTime(this.totalDuration() * e, t)
                : this.totalDuration()
                ? Math.min(1, this._tTime / this._tDur)
                : this.ratio;
            }),
            (t.progress = function (e, t) {
              return arguments.length
                ? this.totalTime(
                    this.duration() *
                      (this._yoyo && !(1 & this.iteration()) ? 1 - e : e) +
                      eG(this),
                    t
                  )
                : this.duration()
                ? Math.min(1, this._time / this._dur)
                : this.ratio;
            }),
            (t.iteration = function (e, t) {
              var n = this.duration() + this._rDelay;
              return arguments.length
                ? this.totalTime(this._time + (e - 1) * n, t)
                : this._repeat
                ? eW(this._tTime, n) + 1
                : 1;
            }),
            (t.timeScale = function (e) {
              if (!arguments.length)
                return -0.00000001 === this._rts ? 0 : this._rts;
              if (this._rts === e) return this;
              var t =
                this.parent && this._ts
                  ? e$(this.parent._time, this)
                  : this._tTime;
              return (
                (this._rts = +e || 0),
                (this._ts = this._ps || -0.00000001 === e ? 0 : this._rts),
                this.totalTime(e9(-Math.abs(this._delay), this._tDur, t), !0),
                eX(this),
                ej(this)
              );
            }),
            (t.paused = function (e) {
              return arguments.length
                ? (this._ps !== e &&
                    ((this._ps = e),
                    e
                      ? ((this._pTime =
                          this._tTime ||
                          Math.max(-this._delay, this.rawTime())),
                        (this._ts = this._act = 0))
                      : (tA(),
                        (this._ts = this._rts),
                        this.totalTime(
                          this.parent && !this.parent.smoothChildTiming
                            ? this.rawTime()
                            : this._tTime || this._pTime,
                          1 === this.progress() &&
                            1e-8 !== Math.abs(this._zTime) &&
                            (this._tTime -= 1e-8)
                        ))),
                  this)
                : this._ps;
            }),
            (t.startTime = function (e) {
              if (arguments.length) {
                this._start = e;
                var t = this.parent || this._dp;
                return (
                  t &&
                    (t._sort || !this.parent) &&
                    eJ(t, this, e - this._delay),
                  this
                );
              }
              return this._start;
            }),
            (t.endTime = function (e) {
              return (
                this._start +
                (G(e) ? this.totalDuration() : this.duration()) /
                  Math.abs(this._ts || 1)
              );
            }),
            (t.rawTime = function (e) {
              var t = this.parent || this._dp;
              return t
                ? e &&
                  (!this._ts ||
                    (this._repeat && this._time && 1 > this.totalProgress()))
                  ? this._tTime % (this._dur + this._rDelay)
                  : this._ts
                  ? e$(t.rawTime(e), this)
                  : this._tTime
                : this._tTime;
            }),
            (t.revert = function (e) {
              void 0 === e && (e = eh);
              var t = b;
              return (
                (b = e),
                (this._initted || this._startAt) &&
                  (this.timeline && this.timeline.revert(e),
                  this.totalTime(-0.01, e.suppressEvents)),
                "nested" !== this.data && !1 !== e.kill && this.kill(),
                (b = t),
                this
              );
            }),
            (t.globalTime = function (e) {
              for (var t = this, n = arguments.length ? e : t.rawTime(); t; )
                (n = t._start + n / (t._ts || 1)), (t = t._dp);
              return !this.parent && this._sat
                ? this._sat.vars.immediateRender
                  ? -1 / 0
                  : this._sat.globalTime(e)
                : n;
            }),
            (t.repeat = function (e) {
              return arguments.length
                ? ((this._repeat = e === 1 / 0 ? -2 : e), e4(this))
                : -2 === this._repeat
                ? 1 / 0
                : this._repeat;
            }),
            (t.repeatDelay = function (e) {
              if (arguments.length) {
                var t = this._time;
                return (this._rDelay = e), e4(this), t ? this.time(t) : this;
              }
              return this._rDelay;
            }),
            (t.yoyo = function (e) {
              return arguments.length ? ((this._yoyo = e), this) : this._yoyo;
            }),
            (t.seek = function (e, t) {
              return this.totalTime(e6(this, e), G(t));
            }),
            (t.restart = function (e, t) {
              return this.play().totalTime(e ? -this._delay : 0, G(t));
            }),
            (t.play = function (e, t) {
              return null != e && this.seek(e, t), this.reversed(!1).paused(!1);
            }),
            (t.reverse = function (e, t) {
              return (
                null != e && this.seek(e || this.totalDuration(), t),
                this.reversed(!0).paused(!1)
              );
            }),
            (t.pause = function (e, t) {
              return null != e && this.seek(e, t), this.paused(!0);
            }),
            (t.resume = function () {
              return this.paused(!1);
            }),
            (t.reversed = function (e) {
              return arguments.length
                ? (!!e !== this.reversed() &&
                    this.timeScale(-this._rts || (e ? -0.00000001 : 0)),
                  this)
                : this._rts < 0;
            }),
            (t.invalidate = function () {
              return (
                (this._initted = this._act = 0),
                (this._zTime = -0.00000001),
                this
              );
            }),
            (t.isActive = function () {
              var e,
                t = this.parent || this._dp,
                n = this._start;
              return !!(
                !t ||
                (this._ts &&
                  this._initted &&
                  t.isActive() &&
                  (e = t.rawTime(!0)) >= n &&
                  e < this.endTime(!0) - 1e-8)
              );
            }),
            (t.eventCallback = function (e, t, n) {
              var r = this.vars;
              return arguments.length > 1
                ? (t
                    ? ((r[e] = t),
                      n && (r[e + "Params"] = n),
                      "onUpdate" === e && (this._onUpdate = t))
                    : delete r[e],
                  this)
                : r[e];
            }),
            (t.then = function (e) {
              var t = this;
              return new Promise(function (n) {
                var r = B(e) ? e : eO,
                  i = function () {
                    var e = t.then;
                    (t.then = null),
                      B(r) && (r = r(t)) && (r.then || r === t) && (t.then = e),
                      n(r),
                      (t.then = e);
                  };
                (t._initted && 1 === t.totalProgress() && t._ts >= 0) ||
                (!t._tTime && t._ts < 0)
                  ? i()
                  : (t._prom = i);
              });
            }),
            (t.kill = function () {
              tm(this);
            }),
            e
          );
        })();
      eL(tj.prototype, {
        _time: 0,
        _start: 0,
        _end: 0,
        _tTime: 0,
        _tDur: 0,
        _dirty: 0,
        _repeat: 0,
        _yoyo: !1,
        parent: null,
        _initted: !1,
        _rDelay: 0,
        _ts: 1,
        _dp: 0,
        ratio: 0,
        _zTime: -0.00000001,
        _prom: 0,
        _ps: !1,
        _rts: 1,
      });
      var tH = (function (e) {
        function t(t, n) {
          var i;
          return (
            void 0 === t && (t = {}),
            ((i = e.call(this, t) || this).labels = {}),
            (i.smoothChildTiming = !!t.smoothChildTiming),
            (i.autoRemoveChildren = !!t.autoRemoveChildren),
            (i._sort = G(t.sortChildren)),
            E && eJ(t.parent || E, r(i), n),
            t.reversed && i.reverse(),
            t.paused && i.paused(!0),
            t.scrollTrigger && eZ(r(i), t.scrollTrigger),
            i
          );
        }
        i(t, e);
        var n = t.prototype;
        return (
          (n.to = function (e, t, n) {
            return e8(0, arguments, this), this;
          }),
          (n.from = function (e, t, n) {
            return e8(1, arguments, this), this;
          }),
          (n.fromTo = function (e, t, n, r) {
            return e8(2, arguments, this), this;
          }),
          (n.set = function (e, t, n) {
            return (
              (t.duration = 0),
              (t.parent = this),
              eU(t).repeatDelay || (t.repeat = 0),
              (t.immediateRender = !!t.immediateRender),
              new t8(e, t, e6(this, n), 1),
              this
            );
          }),
          (n.call = function (e, t, n) {
            return eJ(this, t8.delayedCall(0, e, t), n);
          }),
          (n.staggerTo = function (e, t, n, r, i, s, a) {
            return (
              (n.duration = t),
              (n.stagger = n.stagger || r),
              (n.onComplete = s),
              (n.onCompleteParams = a),
              (n.parent = this),
              new t8(e, n, e6(this, i)),
              this
            );
          }),
          (n.staggerFrom = function (e, t, n, r, i, s, a) {
            return (
              (n.runBackwards = 1),
              (eU(n).immediateRender = G(n.immediateRender)),
              this.staggerTo(e, t, n, r, i, s, a)
            );
          }),
          (n.staggerFromTo = function (e, t, n, r, i, s, a, o) {
            return (
              (r.startAt = n),
              (eU(r).immediateRender = G(r.immediateRender)),
              this.staggerTo(e, t, r, i, s, a, o)
            );
          }),
          (n.render = function (e, t, n) {
            var r,
              i,
              s,
              a,
              o,
              l,
              u,
              c,
              h,
              d,
              p,
              f,
              m = this._time,
              g = this._dirty ? this.totalDuration() : this._tDur,
              _ = this._dur,
              v = e <= 0 ? 0 : ew(e),
              y = this._zTime < 0 != e < 0 && (this._initted || !_);
            if (
              (this !== E && v > g && e >= 0 && (v = g),
              v !== this._tTime || n || y)
            ) {
              if (
                (m !== this._time &&
                  _ &&
                  ((v += this._time - m), (e += this._time - m)),
                (r = v),
                (h = this._start),
                (l = !(c = this._ts)),
                y && (_ || (m = this._zTime), (e || !t) && (this._zTime = e)),
                this._repeat)
              ) {
                if (
                  ((p = this._yoyo),
                  (o = _ + this._rDelay),
                  this._repeat < -1 && e < 0)
                )
                  return this.totalTime(100 * o + e, t, n);
                if (
                  ((r = ew(v % o)),
                  v === g
                    ? ((a = this._repeat), (r = _))
                    : ((a = ~~(v / o)) && a === v / o && ((r = _), a--),
                      r > _ && (r = _)),
                  (d = eW(this._tTime, o)),
                  !m &&
                    this._tTime &&
                    d !== a &&
                    this._tTime - d * o - this._dur <= 0 &&
                    (d = a),
                  p && 1 & a && ((r = _ - r), (f = 1)),
                  a !== d && !this._lock)
                ) {
                  var x = p && 1 & d,
                    S = x === (p && 1 & a);
                  if (
                    (a < d && (x = !x),
                    (m = x ? 0 : v % _ ? _ : v),
                    (this._lock = 1),
                    (this.render(m || (f ? 0 : ew(a * o)), t, !_)._lock = 0),
                    (this._tTime = v),
                    !t && this.parent && tf(this, "onRepeat"),
                    this.vars.repeatRefresh &&
                      !f &&
                      (this.invalidate()._lock = 1),
                    (m && m !== this._time) ||
                      !this._ts !== l ||
                      (this.vars.onRepeat && !this.parent && !this._act) ||
                      ((_ = this._dur),
                      (g = this._tDur),
                      S &&
                        ((this._lock = 2),
                        (m = x ? _ : -0.0001),
                        this.render(m, !0),
                        this.vars.repeatRefresh && !f && this.invalidate()),
                      (this._lock = 0),
                      !this._ts && !l))
                  )
                    return this;
                  tD(this, f);
                }
              }
              if (
                (this._hasPause &&
                  !this._forcing &&
                  this._lock < 2 &&
                  (u = e2(this, ew(m), ew(r))) &&
                  (v -= r - (r = u._start)),
                (this._tTime = v),
                (this._time = r),
                (this._act = !c),
                this._initted ||
                  ((this._onUpdate = this.vars.onUpdate),
                  (this._initted = 1),
                  (this._zTime = e),
                  (m = 0)),
                !m && r && !t && !a && (tf(this, "onStart"), this._tTime !== v))
              )
                return this;
              if (r >= m && e >= 0)
                for (i = this._first; i; ) {
                  if (
                    ((s = i._next),
                    (i._act || r >= i._start) && i._ts && u !== i)
                  ) {
                    if (i.parent !== this) return this.render(e, t, n);
                    if (
                      (i.render(
                        i._ts > 0
                          ? (r - i._start) * i._ts
                          : (i._dirty ? i.totalDuration() : i._tDur) +
                              (r - i._start) * i._ts,
                        t,
                        n
                      ),
                      r !== this._time || (!this._ts && !l))
                    ) {
                      (u = 0), s && (v += this._zTime = -0.00000001);
                      break;
                    }
                  }
                  i = s;
                }
              else {
                i = this._last;
                for (var M = e < 0 ? e : r; i; ) {
                  if (
                    ((s = i._prev), (i._act || M <= i._end) && i._ts && u !== i)
                  ) {
                    if (i.parent !== this) return this.render(e, t, n);
                    if (
                      (i.render(
                        i._ts > 0
                          ? (M - i._start) * i._ts
                          : (i._dirty ? i.totalDuration() : i._tDur) +
                              (M - i._start) * i._ts,
                        t,
                        n || (b && (i._initted || i._startAt))
                      ),
                      r !== this._time || (!this._ts && !l))
                    ) {
                      (u = 0), s && (v += this._zTime = M ? -0.00000001 : 1e-8);
                      break;
                    }
                  }
                  i = s;
                }
              }
              if (
                u &&
                !t &&
                (this.pause(),
                (u.render(r >= m ? 0 : -0.00000001)._zTime = r >= m ? 1 : -1),
                this._ts)
              )
                return (this._start = h), eX(this), this.render(e, t, n);
              this._onUpdate && !t && tf(this, "onUpdate", !0),
                ((v === g && this._tTime >= this.totalDuration()) ||
                  (!v && m)) &&
                  (h === this._start || Math.abs(c) !== Math.abs(this._ts)) &&
                  !this._lock &&
                  ((e || !_) &&
                    ((v === g && this._ts > 0) || (!v && this._ts < 0)) &&
                    eB(this, 1),
                  t ||
                    (e < 0 && !m) ||
                    (!v && !m && g) ||
                    (tf(
                      this,
                      v === g && e >= 0 ? "onComplete" : "onReverseComplete",
                      !0
                    ),
                    this._prom &&
                      !(v < g && this.timeScale() > 0) &&
                      this._prom()));
            }
            return this;
          }),
          (n.add = function (e, t) {
            var n = this;
            if ((V(t) || (t = e6(this, t, e)), !(e instanceof tj))) {
              if (q(e))
                return (
                  e.forEach(function (e) {
                    return n.add(e, t);
                  }),
                  this
                );
              if (z(e)) return this.addLabel(e, t);
              if (!B(e)) return this;
              e = t8.delayedCall(0, e);
            }
            return this !== e ? eJ(this, e, t) : this;
          }),
          (n.getChildren = function (e, t, n, r) {
            void 0 === e && (e = !0),
              void 0 === t && (t = !0),
              void 0 === n && (n = !0),
              void 0 === r && (r = -1e8);
            for (var i = [], s = this._first; s; )
              s._start >= r &&
                (s instanceof t8
                  ? t && i.push(s)
                  : (n && i.push(s),
                    e && i.push.apply(i, s.getChildren(!0, t, n)))),
                (s = s._next);
            return i;
          }),
          (n.getById = function (e) {
            for (var t = this.getChildren(1, 1, 1), n = t.length; n--; )
              if (t[n].vars.id === e) return t[n];
          }),
          (n.remove = function (e) {
            return z(e)
              ? this.removeLabel(e)
              : B(e)
              ? this.killTweensOf(e)
              : (ez(this, e),
                e === this._recent && (this._recent = this._last),
                eV(this));
          }),
          (n.totalTime = function (t, n) {
            return arguments.length
              ? ((this._forcing = 1),
                !this._dp &&
                  this._ts &&
                  (this._start = ew(
                    tT.time -
                      (this._ts > 0
                        ? t / this._ts
                        : -((this.totalDuration() - t) / this._ts))
                  )),
                e.prototype.totalTime.call(this, t, n),
                (this._forcing = 0),
                this)
              : this._tTime;
          }),
          (n.addLabel = function (e, t) {
            return (this.labels[e] = e6(this, t)), this;
          }),
          (n.removeLabel = function (e) {
            return delete this.labels[e], this;
          }),
          (n.addPause = function (e, t, n) {
            var r = t8.delayedCall(0, t || el, n);
            return (
              (r.data = "isPause"),
              (this._hasPause = 1),
              eJ(this, r, e6(this, e))
            );
          }),
          (n.removePause = function (e) {
            var t = this._first;
            for (e = e6(this, e); t; )
              t._start === e && "isPause" === t.data && eB(t), (t = t._next);
          }),
          (n.killTweensOf = function (e, t, n) {
            for (var r = this.getTweensOf(e, n), i = r.length; i--; )
              tq !== r[i] && r[i].kill(e, t);
            return this;
          }),
          (n.getTweensOf = function (e, t) {
            for (var n, r = [], i = tr(e), s = this._first, a = V(t); s; )
              s instanceof t8
                ? eA(s._targets, i) &&
                  (a
                    ? (!tq || (s._initted && s._ts)) &&
                      s.globalTime(0) <= t &&
                      s.globalTime(s.totalDuration()) > t
                    : !t || s.isActive()) &&
                  r.push(s)
                : (n = s.getTweensOf(i, t)).length && r.push.apply(r, n),
                (s = s._next);
            return r;
          }),
          (n.tweenTo = function (e, t) {
            t = t || {};
            var n,
              r = this,
              i = e6(r, e),
              s = t,
              a = s.startAt,
              o = s.onStart,
              l = s.onStartParams,
              u = s.immediateRender,
              c = t8.to(
                r,
                eL(
                  {
                    ease: t.ease || "none",
                    lazy: !1,
                    immediateRender: !1,
                    time: i,
                    overwrite: "auto",
                    duration:
                      t.duration ||
                      Math.abs(
                        (i - (a && "time" in a ? a.time : r._time)) /
                          r.timeScale()
                      ) ||
                      1e-8,
                    onStart: function () {
                      if ((r.pause(), !n)) {
                        var e =
                          t.duration ||
                          Math.abs(
                            (i - (a && "time" in a ? a.time : r._time)) /
                              r.timeScale()
                          );
                        c._dur !== e && e3(c, e, 0, 1).render(c._time, !0, !0),
                          (n = 1);
                      }
                      o && o.apply(c, l || []);
                    },
                  },
                  t
                )
              );
            return u ? c.render(0) : c;
          }),
          (n.tweenFromTo = function (e, t, n) {
            return this.tweenTo(t, eL({ startAt: { time: e6(this, e) } }, n));
          }),
          (n.recent = function () {
            return this._recent;
          }),
          (n.nextLabel = function (e) {
            return void 0 === e && (e = this._time), tp(this, e6(this, e));
          }),
          (n.previousLabel = function (e) {
            return void 0 === e && (e = this._time), tp(this, e6(this, e), 1);
          }),
          (n.currentLabel = function (e) {
            return arguments.length
              ? this.seek(e, !0)
              : this.previousLabel(this._time + 1e-8);
          }),
          (n.shiftChildren = function (e, t, n) {
            void 0 === n && (n = 0);
            for (var r, i = this._first, s = this.labels; i; )
              i._start >= n && ((i._start += e), (i._end += e)), (i = i._next);
            if (t) for (r in s) s[r] >= n && (s[r] += e);
            return eV(this);
          }),
          (n.invalidate = function (t) {
            var n = this._first;
            for (this._lock = 0; n; ) n.invalidate(t), (n = n._next);
            return e.prototype.invalidate.call(this, t);
          }),
          (n.clear = function (e) {
            void 0 === e && (e = !0);
            for (var t, n = this._first; n; )
              (t = n._next), this.remove(n), (n = t);
            return (
              this._dp && (this._time = this._tTime = this._pTime = 0),
              e && (this.labels = {}),
              eV(this)
            );
          }),
          (n.totalDuration = function (e) {
            var t,
              n,
              r,
              i = 0,
              s = this._last,
              a = 1e8;
            if (arguments.length)
              return this.timeScale(
                (this._repeat < 0 ? this.duration() : this.totalDuration()) /
                  (this.reversed() ? -e : e)
              );
            if (this._dirty) {
              for (r = this.parent; s; )
                (t = s._prev),
                  s._dirty && s.totalDuration(),
                  (n = s._start) > a && this._sort && s._ts && !this._lock
                    ? ((this._lock = 1),
                      (eJ(this, s, n - s._delay, 1)._lock = 0))
                    : (a = n),
                  n < 0 &&
                    s._ts &&
                    ((i -= n),
                    ((!r && !this._dp) || (r && r.smoothChildTiming)) &&
                      ((this._start += n / this._ts),
                      (this._time -= n),
                      (this._tTime -= n)),
                    this.shiftChildren(-n, !1, -Infinity),
                    (a = 0)),
                  s._end > i && s._ts && (i = s._end),
                  (s = t);
              e3(this, this === E && this._time > i ? this._time : i, 1, 1),
                (this._dirty = 0);
            }
            return this._tDur;
          }),
          (t.updateRoot = function (e) {
            if ((E._ts && (eR(E, e$(e, E)), (C = tT.frame)), tT.frame >= e_)) {
              e_ += O.autoSleep || 120;
              var t = E._first;
              if ((!t || !t._ts) && O.autoSleep && tT._listeners.length < 2) {
                for (; t && !t._ts; ) t = t._next;
                t || tT.sleep();
              }
            }
          }),
          t
        );
      })(tj);
      eL(tH.prototype, { _lock: 0, _hasPause: 0, _forcing: 0 });
      var tG,
        tW,
        t$,
        tX,
        tq,
        tY,
        tJ = function (e, t, n, r, i, s, a) {
          var o,
            l,
            u,
            c,
            h,
            d,
            p,
            f,
            m = new nh(this._pt, e, t, 0, 1, ns, null, i),
            g = 0,
            _ = 0;
          for (
            m.b = n,
              m.e = r,
              n += "",
              r += "",
              (p = ~r.indexOf("random(")) && (r = th(r)),
              s && (s((f = [n, r]), e, t), (n = f[0]), (r = f[1])),
              l = n.match(K) || [];
            (o = K.exec(r));

          )
            (c = o[0]),
              (h = r.substring(g, o.index)),
              u ? (u = (u + 1) % 5) : "rgba(" === h.substr(-5) && (u = 1),
              c !== l[_++] &&
                ((d = parseFloat(l[_ - 1]) || 0),
                (m._pt = {
                  _next: m._pt,
                  p: h || 1 === _ ? h : ",",
                  s: d,
                  c: "=" === c.charAt(1) ? eT(d, c) - d : parseFloat(c) - d,
                  m: u && u < 4 ? Math.round : 0,
                }),
                (g = K.lastIndex));
          return (
            (m.c = g < r.length ? r.substring(g, r.length) : ""),
            (m.fp = a),
            (Q.test(r) || p) && (m.e = 0),
            (this._pt = m),
            m
          );
        },
        tZ = function (e, t, n, r, i, s, a, o, l, u) {
          B(r) && (r = r(i || 0, e, s));
          var c,
            h = e[t],
            d =
              "get" !== n
                ? n
                : B(h)
                ? l
                  ? e[
                      t.indexOf("set") || !B(e["get" + t.substr(3)])
                        ? t
                        : "get" + t.substr(3)
                    ](l)
                  : e[t]()
                : h,
            p = B(h) ? (l ? ne : t9) : t7;
          if (
            (z(r) &&
              (~r.indexOf("random(") && (r = th(r)),
              "=" === r.charAt(1) &&
                ((c = eT(d, r) + (te(d) || 0)) || 0 === c) &&
                (r = c)),
            !u || d !== r || tY)
          )
            return isNaN(d * r) || "" === r
              ? (h || t in e || es(t, r),
                tJ.call(this, e, t, d, r, p, o || O.stringFilter, l))
              : ((c = new nh(
                  this._pt,
                  e,
                  t,
                  +d || 0,
                  r - (d || 0),
                  "boolean" == typeof h ? ni : nr,
                  0,
                  p
                )),
                l && (c.fp = l),
                a && c.modifier(a, this, e),
                (this._pt = c));
        },
        tK = function (e, t, n, r, i) {
          if (
            (B(e) && (e = t4(e, i, t, n, r)),
            !H(e) || (e.style && e.nodeType) || q(e) || X(e))
          )
            return z(e) ? t4(e, i, t, n, r) : e;
          var s,
            a = {};
          for (s in e) a[s] = t4(e[s], i, t, n, r);
          return a;
        },
        tQ = function (e, t, n, r, i, s) {
          var a, o, l, u;
          if (
            em[e] &&
            !1 !==
              (a = new em[e]()).init(
                i,
                a.rawVars ? t[e] : tK(t[e], r, i, s, n),
                n,
                r,
                s
              ) &&
            ((n._pt = o =
              new nh(n._pt, i, e, 0, 1, a.render, a, 0, a.priority)),
            n !== R)
          )
            for (
              l = n._ptLookup[n._targets.indexOf(i)], u = a._props.length;
              u--;

            )
              l[a._props[u]] = o;
          return a;
        },
        t0 = function e(t, n, r) {
          var i,
            s,
            a,
            o,
            l,
            u,
            c,
            h,
            d,
            p,
            f,
            m,
            g,
            _ = t.vars,
            v = _.ease,
            y = _.startAt,
            S = _.immediateRender,
            M = _.lazy,
            w = _.onUpdate,
            T = _.onUpdateParams,
            A = _.callbackScope,
            C = _.runBackwards,
            R = _.yoyoEase,
            P = _.keyframes,
            O = _.autoRevert,
            I = t._dur,
            N = t._startAt,
            D = t._targets,
            U = t.parent,
            k = U && "nested" === U.data ? U.vars.targets : D,
            F = "auto" === t._overwrite && !x,
            z = t.timeline;
          if (
            (!z || (P && v) || (v = "none"),
            (t._ease = tU(v, L.ease)),
            (t._yEase = R ? tN(tU(!0 === R ? v : R, L.ease)) : 0),
            R &&
              t._yoyo &&
              !t._repeat &&
              ((R = t._yEase), (t._yEase = t._ease), (t._ease = R)),
            (t._from = !z && !!_.runBackwards),
            !z || (P && !_.stagger))
          ) {
            if (
              ((m = (h = D[0] ? eb(D[0]).harness : 0) && _[h.prop]),
              (i = eD(_, ed)),
              N &&
                (N._zTime < 0 && N.progress(1),
                n < 0 && C && S && !O
                  ? N.render(-1, !0)
                  : N.revert(C && I ? ec : eu),
                (N._lazy = 0)),
              y)
            ) {
              if (
                (eB(
                  (t._startAt = t8.set(
                    D,
                    eL(
                      {
                        data: "isStart",
                        overwrite: !1,
                        parent: U,
                        immediateRender: !0,
                        lazy: !N && G(M),
                        startAt: null,
                        delay: 0,
                        onUpdate: w,
                        onUpdateParams: T,
                        callbackScope: A,
                        stagger: 0,
                      },
                      y
                    )
                  ))
                ),
                (t._startAt._dp = 0),
                (t._startAt._sat = t),
                n < 0 && (b || (!S && !O)) && t._startAt.revert(ec),
                S && I && n <= 0 && r <= 0)
              ) {
                n && (t._zTime = n);
                return;
              }
            } else if (C && I && !N) {
              if (
                (n && (S = !1),
                (a = eL(
                  {
                    overwrite: !1,
                    data: "isFromStart",
                    lazy: S && !N && G(M),
                    immediateRender: S,
                    stagger: 0,
                    parent: U,
                  },
                  i
                )),
                m && (a[h.prop] = m),
                eB((t._startAt = t8.set(D, a))),
                (t._startAt._dp = 0),
                (t._startAt._sat = t),
                n < 0 &&
                  (b ? t._startAt.revert(ec) : t._startAt.render(-1, !0)),
                (t._zTime = n),
                S)
              ) {
                if (!n) return;
              } else e(t._startAt, 1e-8, 1e-8);
            }
            for (
              s = 0, t._pt = t._ptCache = 0, M = (I && G(M)) || (M && !I);
              s < D.length;
              s++
            ) {
              if (
                ((c = (l = D[s])._gsap || ex(D)[s]._gsap),
                (t._ptLookup[s] = p = {}),
                ef[c.id] && ep.length && eC(),
                (f = k === D ? s : k.indexOf(l)),
                h &&
                  !1 !== (d = new h()).init(l, m || i, t, f, k) &&
                  ((t._pt = o =
                    new nh(t._pt, l, d.name, 0, 1, d.render, d, 0, d.priority)),
                  d._props.forEach(function (e) {
                    p[e] = o;
                  }),
                  d.priority && (u = 1)),
                !h || m)
              )
                for (a in i)
                  em[a] && (d = tQ(a, i, t, f, l, k))
                    ? d.priority && (u = 1)
                    : (p[a] = o =
                        tZ.call(t, l, a, "get", i[a], f, k, 0, _.stringFilter));
              t._op && t._op[s] && t.kill(l, t._op[s]),
                F &&
                  t._pt &&
                  ((tq = t),
                  E.killTweensOf(l, p, t.globalTime(n)),
                  (g = !t.parent),
                  (tq = 0)),
                t._pt && M && (ef[c.id] = 1);
            }
            u && nc(t), t._onInit && t._onInit(t);
          }
          (t._onUpdate = w),
            (t._initted = (!t._op || t._pt) && !g),
            P && n <= 0 && z.render(1e8, !0, !0);
        },
        t1 = function (e, t, n, r, i, s, a) {
          var o,
            l,
            u,
            c,
            h = ((e._pt && e._ptCache) || (e._ptCache = {}))[t];
          if (!h)
            for (
              h = e._ptCache[t] = [], u = e._ptLookup, c = e._targets.length;
              c--;

            ) {
              if ((o = u[c][t]) && o.d && o.d._pt)
                for (o = o.d._pt; o && o.p !== t && o.fp !== t; ) o = o._next;
              if (!o)
                return (tY = 1), (e.vars[t] = "+=0"), t0(e, a), (tY = 0), 1;
              h.push(o);
            }
          for (c = h.length; c--; )
            ((o = (l = h[c])._pt || l).s =
              (r || 0 === r) && !i ? r : o.s + (r || 0) + s * o.c),
              (o.c = n - o.s),
              l.e && (l.e = eM(n) + te(l.e)),
              l.b && (l.b = o.s + te(l.b));
        },
        t2 = function (e, t) {
          var n,
            r,
            i,
            s,
            a = e[0] ? eb(e[0]).harness : 0,
            o = a && a.aliases;
          if (!o) return t;
          for (r in ((n = eI({}, t)), o))
            if (r in n)
              for (i = (s = o[r].split(",")).length; i--; ) n[s[i]] = n[r];
          return n;
        },
        t3 = function (e, t, n, r) {
          var i,
            s,
            a = t.ease || r || "power1.inOut";
          if (q(t))
            (s = n[e] || (n[e] = [])),
              t.forEach(function (e, n) {
                return s.push({ t: (n / (t.length - 1)) * 100, v: e, e: a });
              });
          else
            for (i in t)
              (s = n[i] || (n[i] = [])),
                "ease" === i || s.push({ t: parseFloat(e), v: t[i], e: a });
        },
        t4 = function (e, t, n, r, i) {
          return B(e)
            ? e.call(t, n, r, i)
            : z(e) && ~e.indexOf("random(")
            ? th(e)
            : e;
        },
        t5 = ey + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
        t6 = {};
      eE(t5 + ",id,stagger,delay,duration,paused,scrollTrigger", function (e) {
        return (t6[e] = 1);
      });
      var t8 = (function (e) {
        function t(t, n, i, s) {
          "number" == typeof n && ((i.duration = n), (n = i), (i = null));
          var a,
            o,
            l,
            u,
            c,
            h,
            d,
            p,
            f,
            m = (a = e.call(this, s ? n : eU(n)) || this).vars,
            g = m.duration,
            _ = m.delay,
            v = m.immediateRender,
            y = m.stagger,
            b = m.overwrite,
            S = m.keyframes,
            M = m.defaults,
            w = m.scrollTrigger,
            T = m.yoyoEase,
            A = n.parent || E,
            C = (q(t) || X(t) ? V(t[0]) : "length" in n) ? [t] : tr(t);
          if (
            ((a._targets = C.length
              ? ex(C)
              : ea(
                  "GSAP target " + t + " not found. https://greensock.com",
                  !O.nullTargetWarn
                ) || []),
            (a._ptLookup = []),
            (a._overwrite = b),
            S || y || $(g) || $(_))
          ) {
            if (
              ((n = a.vars),
              (o = a.timeline =
                new tH({
                  data: "nested",
                  defaults: M || {},
                  targets: A && "nested" === A.data ? A.vars.targets : C,
                })).kill(),
              (o.parent = o._dp = r(a)),
              (o._start = 0),
              y || $(g) || $(_))
            ) {
              if (((c = C.length), (p = y && ta(y)), H(y)))
                for (h in y) ~t5.indexOf(h) && (f || (f = {}), (f[h] = y[h]));
              for (l = 0; l < c; l++)
                ((u = eD(n, t6)).stagger = 0),
                  T && (u.yoyoEase = T),
                  f && eI(u, f),
                  (d = C[l]),
                  (u.duration = +t4(g, r(a), l, d, C)),
                  (u.delay = (+t4(_, r(a), l, d, C) || 0) - a._delay),
                  !y &&
                    1 === c &&
                    u.delay &&
                    ((a._delay = _ = u.delay), (a._start += _), (u.delay = 0)),
                  o.to(d, u, p ? p(l, d, C) : 0),
                  (o._ease = tC.none);
              o.duration() ? (g = _ = 0) : (a.timeline = 0);
            } else if (S) {
              eU(eL(o.vars.defaults, { ease: "none" })),
                (o._ease = tU(S.ease || n.ease || "none"));
              var R,
                P,
                L,
                I = 0;
              if (q(S))
                S.forEach(function (e) {
                  return o.to(C, e, ">");
                }),
                  o.duration();
              else {
                for (h in ((u = {}), S))
                  "ease" === h ||
                    "easeEach" === h ||
                    t3(h, S[h], u, S.easeEach);
                for (h in u)
                  for (
                    l = 0,
                      R = u[h].sort(function (e, t) {
                        return e.t - t.t;
                      }),
                      I = 0;
                    l < R.length;
                    l++
                  )
                    ((L = {
                      ease: (P = R[l]).e,
                      duration: ((P.t - (l ? R[l - 1].t : 0)) / 100) * g,
                    })[h] = P.v),
                      o.to(C, L, I),
                      (I += L.duration);
                o.duration() < g && o.to({}, { duration: g - o.duration() });
              }
            }
            g || a.duration((g = o.duration()));
          } else a.timeline = 0;
          return (
            !0 !== b || x || ((tq = r(a)), E.killTweensOf(C), (tq = 0)),
            eJ(A, r(a), i),
            n.reversed && a.reverse(),
            n.paused && a.paused(!0),
            (v ||
              (!g &&
                !S &&
                a._start === ew(A._time) &&
                G(v) &&
                (function e(t) {
                  return !t || (t._ts && e(t.parent));
                })(r(a)) &&
                "nested" !== A.data)) &&
              ((a._tTime = -0.00000001), a.render(Math.max(0, -_) || 0)),
            w && eZ(r(a), w),
            a
          );
        }
        i(t, e);
        var n = t.prototype;
        return (
          (n.render = function (e, t, n) {
            var r,
              i,
              s,
              a,
              o,
              l,
              u,
              c,
              h,
              d = this._time,
              p = this._tDur,
              f = this._dur,
              m = e < 0,
              g = e > p - 1e-8 && !m ? p : e < 1e-8 ? 0 : e;
            if (f) {
              if (
                g !== this._tTime ||
                !e ||
                n ||
                (!this._initted && this._tTime) ||
                (this._startAt && this._zTime < 0 !== m)
              ) {
                if (((r = g), (c = this.timeline), this._repeat)) {
                  if (((a = f + this._rDelay), this._repeat < -1 && m))
                    return this.totalTime(100 * a + e, t, n);
                  if (
                    ((r = ew(g % a)),
                    g === p
                      ? ((s = this._repeat), (r = f))
                      : ((s = ~~(g / a)) && s === g / a && ((r = f), s--),
                        r > f && (r = f)),
                    (l = this._yoyo && 1 & s) &&
                      ((h = this._yEase), (r = f - r)),
                    (o = eW(this._tTime, a)),
                    r === d && !n && this._initted)
                  )
                    return (this._tTime = g), this;
                  s === o ||
                    (c && this._yEase && tD(c, l),
                    !this.vars.repeatRefresh ||
                      l ||
                      this._lock ||
                      ((this._lock = n = 1),
                      (this.render(ew(a * s), !0).invalidate()._lock = 0)));
                }
                if (!this._initted) {
                  if (eK(this, m ? e : r, n, t, g))
                    return (this._tTime = 0), this;
                  if (d !== this._time) return this;
                  if (f !== this._dur) return this.render(e, t, n);
                }
                if (
                  ((this._tTime = g),
                  (this._time = r),
                  !this._act && this._ts && ((this._act = 1), (this._lazy = 0)),
                  (this.ratio = u = (h || this._ease)(r / f)),
                  this._from && (this.ratio = u = 1 - u),
                  r &&
                    !d &&
                    !t &&
                    !s &&
                    (tf(this, "onStart"), this._tTime !== g))
                )
                  return this;
                for (i = this._pt; i; ) i.r(u, i.d), (i = i._next);
                (c &&
                  c.render(
                    e < 0
                      ? e
                      : !r && l
                      ? -0.00000001
                      : c._dur * c._ease(r / this._dur),
                    t,
                    n
                  )) ||
                  (this._startAt && (this._zTime = e)),
                  this._onUpdate &&
                    !t &&
                    (m && eH(this, e, t, n), tf(this, "onUpdate")),
                  this._repeat &&
                    s !== o &&
                    this.vars.onRepeat &&
                    !t &&
                    this.parent &&
                    tf(this, "onRepeat"),
                  (g === this._tDur || !g) &&
                    this._tTime === g &&
                    (m && !this._onUpdate && eH(this, e, !0, !0),
                    (e || !f) &&
                      ((g === this._tDur && this._ts > 0) ||
                        (!g && this._ts < 0)) &&
                      eB(this, 1),
                    !t &&
                      !(m && !d) &&
                      (g || d || l) &&
                      (tf(
                        this,
                        g === p ? "onComplete" : "onReverseComplete",
                        !0
                      ),
                      this._prom &&
                        !(g < p && this.timeScale() > 0) &&
                        this._prom()));
              }
            } else e1(this, e, t, n);
            return this;
          }),
          (n.targets = function () {
            return this._targets;
          }),
          (n.invalidate = function (t) {
            return (
              (t && this.vars.runBackwards) || (this._startAt = 0),
              (this._pt =
                this._op =
                this._onUpdate =
                this._lazy =
                this.ratio =
                  0),
              (this._ptLookup = []),
              this.timeline && this.timeline.invalidate(t),
              e.prototype.invalidate.call(this, t)
            );
          }),
          (n.resetTo = function (e, t, n, r) {
            P || tT.wake(), this._ts || this.play();
            var i = Math.min(
              this._dur,
              (this._dp._time - this._start) * this._ts
            );
            return (this._initted || t0(this, i),
            t1(this, e, t, n, r, this._ease(i / this._dur), i))
              ? this.resetTo(e, t, n, r)
              : (eq(this, 0),
                this.parent ||
                  eF(
                    this._dp,
                    this,
                    "_first",
                    "_last",
                    this._dp._sort ? "_start" : 0
                  ),
                this.render(0));
          }),
          (n.kill = function (e, t) {
            if ((void 0 === t && (t = "all"), !e && (!t || "all" === t)))
              return (this._lazy = this._pt = 0), this.parent ? tm(this) : this;
            if (this.timeline) {
              var n = this.timeline.totalDuration();
              return (
                this.timeline.killTweensOf(e, t, tq && !0 !== tq.vars.overwrite)
                  ._first || tm(this),
                this.parent &&
                  n !== this.timeline.totalDuration() &&
                  e3(this, (this._dur * this.timeline._tDur) / n, 0, 1),
                this
              );
            }
            var r,
              i,
              s,
              a,
              o,
              l,
              u,
              c = this._targets,
              h = e ? tr(e) : c,
              d = this._ptLookup,
              p = this._pt;
            if ((!t || "all" === t) && ek(c, h))
              return "all" === t && (this._pt = 0), tm(this);
            for (
              r = this._op = this._op || [],
                "all" !== t &&
                  (z(t) &&
                    ((o = {}),
                    eE(t, function (e) {
                      return (o[e] = 1);
                    }),
                    (t = o)),
                  (t = t2(c, t))),
                u = c.length;
              u--;

            )
              if (~h.indexOf(c[u]))
                for (o in ((i = d[u]),
                "all" === t
                  ? ((r[u] = t), (a = i), (s = {}))
                  : ((s = r[u] = r[u] || {}), (a = t)),
                a))
                  (l = i && i[o]) &&
                    (("kill" in l.d && !0 !== l.d.kill(o)) ||
                      ez(this, l, "_pt"),
                    delete i[o]),
                    "all" !== s && (s[o] = 1);
            return this._initted && !this._pt && p && tm(this), this;
          }),
          (t.to = function (e, n) {
            return new t(e, n, arguments[2]);
          }),
          (t.from = function (e, t) {
            return e8(1, arguments);
          }),
          (t.delayedCall = function (e, n, r, i) {
            return new t(n, 0, {
              immediateRender: !1,
              lazy: !1,
              overwrite: !1,
              delay: e,
              onComplete: n,
              onReverseComplete: n,
              onCompleteParams: r,
              onReverseCompleteParams: r,
              callbackScope: i,
            });
          }),
          (t.fromTo = function (e, t, n) {
            return e8(2, arguments);
          }),
          (t.set = function (e, n) {
            return (
              (n.duration = 0), n.repeatDelay || (n.repeat = 0), new t(e, n)
            );
          }),
          (t.killTweensOf = function (e, t, n) {
            return E.killTweensOf(e, t, n);
          }),
          t
        );
      })(tj);
      eL(t8.prototype, {
        _targets: [],
        _lazy: 0,
        _startAt: 0,
        _op: 0,
        _onInit: 0,
      }),
        eE("staggerTo,staggerFrom,staggerFromTo", function (e) {
          t8[e] = function () {
            var t = new tH(),
              n = tt.call(arguments, 0);
            return (
              n.splice("staggerFromTo" === e ? 5 : 4, 0, 0), t[e].apply(t, n)
            );
          };
        });
      var t7 = function (e, t, n) {
          return (e[t] = n);
        },
        t9 = function (e, t, n) {
          return e[t](n);
        },
        ne = function (e, t, n, r) {
          return e[t](r.fp, n);
        },
        nt = function (e, t, n) {
          return e.setAttribute(t, n);
        },
        nn = function (e, t) {
          return B(e[t]) ? t9 : j(e[t]) && e.setAttribute ? nt : t7;
        },
        nr = function (e, t) {
          return t.set(t.t, t.p, Math.round((t.s + t.c * e) * 1e6) / 1e6, t);
        },
        ni = function (e, t) {
          return t.set(t.t, t.p, !!(t.s + t.c * e), t);
        },
        ns = function (e, t) {
          var n = t._pt,
            r = "";
          if (!e && t.b) r = t.b;
          else if (1 === e && t.e) r = t.e;
          else {
            for (; n; )
              (r =
                n.p +
                (n.m
                  ? n.m(n.s + n.c * e)
                  : Math.round((n.s + n.c * e) * 1e4) / 1e4) +
                r),
                (n = n._next);
            r += t.c;
          }
          t.set(t.t, t.p, r, t);
        },
        na = function (e, t) {
          for (var n = t._pt; n; ) n.r(e, n.d), (n = n._next);
        },
        no = function (e, t, n, r) {
          for (var i, s = this._pt; s; )
            (i = s._next), s.p === r && s.modifier(e, t, n), (s = i);
        },
        nl = function (e) {
          for (var t, n, r = this._pt; r; )
            (n = r._next),
              (r.p !== e || r.op) && r.op !== e
                ? r.dep || (t = 1)
                : ez(this, r, "_pt"),
              (r = n);
          return !t;
        },
        nu = function (e, t, n, r) {
          r.mSet(e, t, r.m.call(r.tween, n, r.mt), r);
        },
        nc = function (e) {
          for (var t, n, r, i, s = e._pt; s; ) {
            for (t = s._next, n = r; n && n.pr > s.pr; ) n = n._next;
            (s._prev = n ? n._prev : i) ? (s._prev._next = s) : (r = s),
              (s._next = n) ? (n._prev = s) : (i = s),
              (s = t);
          }
          e._pt = r;
        },
        nh = (function () {
          function e(e, t, n, r, i, s, a, o, l) {
            (this.t = t),
              (this.s = r),
              (this.c = i),
              (this.p = n),
              (this.r = s || nr),
              (this.d = a || this),
              (this.set = o || t7),
              (this.pr = l || 0),
              (this._next = e),
              e && (e._prev = this);
          }
          return (
            (e.prototype.modifier = function (e, t, n) {
              (this.mSet = this.mSet || this.set),
                (this.set = nu),
                (this.m = e),
                (this.mt = n),
                (this.tween = t);
            }),
            e
          );
        })();
      eE(
        ey +
          "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",
        function (e) {
          return (ed[e] = 1);
        }
      ),
        (en.TweenMax = en.TweenLite = t8),
        (en.TimelineLite = en.TimelineMax = tH),
        (E = new tH({
          sortChildren: !1,
          defaults: L,
          autoRemoveChildren: !0,
          id: "root",
          smoothChildTiming: !0,
        })),
        (O.stringFilter = tw);
      var nd = [],
        np = {},
        nf = [],
        nm = 0,
        ng = 0,
        n_ = function (e) {
          return (np[e] || nf).map(function (e) {
            return e();
          });
        },
        nv = function () {
          var e = Date.now(),
            t = [];
          e - nm > 2 &&
            (n_("matchMediaInit"),
            nd.forEach(function (e) {
              var n,
                r,
                i,
                s,
                a = e.queries,
                o = e.conditions;
              for (r in a)
                (n = M.matchMedia(a[r]).matches) && (i = 1),
                  n !== o[r] && ((o[r] = n), (s = 1));
              s && (e.revert(), i && t.push(e));
            }),
            n_("matchMediaRevert"),
            t.forEach(function (e) {
              return e.onMatch(e);
            }),
            (nm = e),
            n_("matchMedia"));
        },
        ny = (function () {
          function e(e, t) {
            (this.selector = t && ti(t)),
              (this.data = []),
              (this._r = []),
              (this.isReverted = !1),
              (this.id = ng++),
              e && this.add(e);
          }
          var t = e.prototype;
          return (
            (t.add = function (e, t, n) {
              B(e) && ((n = t), (t = e), (e = B));
              var r = this,
                i = function () {
                  var e,
                    i = S,
                    s = r.selector;
                  return (
                    i && i !== r && i.data.push(r),
                    n && (r.selector = ti(n)),
                    (S = r),
                    (e = t.apply(r, arguments)),
                    B(e) && r._r.push(e),
                    (S = i),
                    (r.selector = s),
                    (r.isReverted = !1),
                    e
                  );
                };
              return (r.last = i), e === B ? i(r) : e ? (r[e] = i) : i;
            }),
            (t.ignore = function (e) {
              var t = S;
              (S = null), e(this), (S = t);
            }),
            (t.getTweens = function () {
              var t = [];
              return (
                this.data.forEach(function (n) {
                  return n instanceof e
                    ? t.push.apply(t, n.getTweens())
                    : n instanceof t8 &&
                        !(n.parent && "nested" === n.parent.data) &&
                        t.push(n);
                }),
                t
              );
            }),
            (t.clear = function () {
              this._r.length = this.data.length = 0;
            }),
            (t.kill = function (e, t) {
              var n = this;
              if (e) {
                var r = this.getTweens();
                this.data.forEach(function (e) {
                  "isFlip" === e.data &&
                    (e.revert(),
                    e.getChildren(!0, !0, !1).forEach(function (e) {
                      return r.splice(r.indexOf(e), 1);
                    }));
                }),
                  r
                    .map(function (e) {
                      return { g: e.globalTime(0), t: e };
                    })
                    .sort(function (e, t) {
                      return t.g - e.g || -1 / 0;
                    })
                    .forEach(function (t) {
                      return t.t.revert(e);
                    }),
                  this.data.forEach(function (t) {
                    return !(t instanceof t8) && t.revert && t.revert(e);
                  }),
                  this._r.forEach(function (t) {
                    return t(e, n);
                  }),
                  (this.isReverted = !0);
              } else
                this.data.forEach(function (e) {
                  return e.kill && e.kill();
                });
              if ((this.clear(), t))
                for (var i = nd.length; i--; )
                  nd[i].id === this.id && nd.splice(i, 1);
            }),
            (t.revert = function (e) {
              this.kill(e || {});
            }),
            e
          );
        })(),
        nx = (function () {
          function e(e) {
            (this.contexts = []), (this.scope = e);
          }
          var t = e.prototype;
          return (
            (t.add = function (e, t, n) {
              H(e) || (e = { matches: e });
              var r,
                i,
                s,
                a = new ny(0, n || this.scope),
                o = (a.conditions = {});
              for (i in (S && !a.selector && (a.selector = S.selector),
              this.contexts.push(a),
              (t = a.add("onMatch", t)),
              (a.queries = e),
              e))
                "all" === i
                  ? (s = 1)
                  : (r = M.matchMedia(e[i])) &&
                    (0 > nd.indexOf(a) && nd.push(a),
                    (o[i] = r.matches) && (s = 1),
                    r.addListener
                      ? r.addListener(nv)
                      : r.addEventListener("change", nv));
              return s && t(a), this;
            }),
            (t.revert = function (e) {
              this.kill(e || {});
            }),
            (t.kill = function (e) {
              this.contexts.forEach(function (t) {
                return t.kill(e, !0);
              });
            }),
            e
          );
        })(),
        nb = {
          registerPlugin: function () {
            for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            t.forEach(function (e) {
              return t_(e);
            });
          },
          timeline: function (e) {
            return new tH(e);
          },
          getTweensOf: function (e, t) {
            return E.getTweensOf(e, t);
          },
          getProperty: function (e, t, n, r) {
            z(e) && (e = tr(e)[0]);
            var i = eb(e || {}).get,
              s = n ? eO : eP;
            return (
              "native" === n && (n = ""),
              e
                ? t
                  ? s(((em[t] && em[t].get) || i)(e, t, n, r))
                  : function (t, n, r) {
                      return s(((em[t] && em[t].get) || i)(e, t, n, r));
                    }
                : e
            );
          },
          quickSetter: function (e, t, n) {
            if ((e = tr(e)).length > 1) {
              var r = e.map(function (e) {
                  return nw.quickSetter(e, t, n);
                }),
                i = r.length;
              return function (e) {
                for (var t = i; t--; ) r[t](e);
              };
            }
            e = e[0] || {};
            var s = em[t],
              a = eb(e),
              o = (a.harness && (a.harness.aliases || {})[t]) || t,
              l = s
                ? function (t) {
                    var r = new s();
                    (R._pt = 0),
                      r.init(e, n ? t + n : t, R, 0, [e]),
                      r.render(1, r),
                      R._pt && na(1, R);
                  }
                : a.set(e, o);
            return s
              ? l
              : function (t) {
                  return l(e, o, n ? t + n : t, a, 1);
                };
          },
          quickTo: function (e, t, n) {
            var r,
              i = nw.to(
                e,
                eI((((r = {})[t] = "+=0.1"), (r.paused = !0), r), n || {})
              ),
              s = function (e, n, r) {
                return i.resetTo(t, e, n, r);
              };
            return (s.tween = i), s;
          },
          isTweening: function (e) {
            return E.getTweensOf(e, !0).length > 0;
          },
          defaults: function (e) {
            return e && e.ease && (e.ease = tU(e.ease, L.ease)), eN(L, e || {});
          },
          config: function (e) {
            return eN(O, e || {});
          },
          registerEffect: function (e) {
            var t = e.name,
              n = e.effect,
              r = e.plugins,
              i = e.defaults,
              s = e.extendTimeline;
            (r || "").split(",").forEach(function (e) {
              return (
                e &&
                !em[e] &&
                !en[e] &&
                ea(t + " effect requires " + e + " plugin.")
              );
            }),
              (eg[t] = function (e, t, r) {
                return n(tr(e), eL(t || {}, i), r);
              }),
              s &&
                (tH.prototype[t] = function (e, n, r) {
                  return this.add(eg[t](e, H(n) ? n : (r = n) && {}, this), r);
                });
          },
          registerEase: function (e, t) {
            tC[e] = tU(t);
          },
          parseEase: function (e, t) {
            return arguments.length ? tU(e, t) : tC;
          },
          getById: function (e) {
            return E.getById(e);
          },
          exportRoot: function (e, t) {
            void 0 === e && (e = {});
            var n,
              r,
              i = new tH(e);
            for (
              i.smoothChildTiming = G(e.smoothChildTiming),
                E.remove(i),
                i._dp = 0,
                i._time = i._tTime = E._time,
                n = E._first;
              n;

            )
              (r = n._next),
                (t ||
                  !(
                    !n._dur &&
                    n instanceof t8 &&
                    n.vars.onComplete === n._targets[0]
                  )) &&
                  eJ(i, n, n._start - n._delay),
                (n = r);
            return eJ(E, i, 0), i;
          },
          context: function (e, t) {
            return e ? new ny(e, t) : S;
          },
          matchMedia: function (e) {
            return new nx(e);
          },
          matchMediaRefresh: function () {
            return (
              nd.forEach(function (e) {
                var t,
                  n,
                  r = e.conditions;
                for (n in r) r[n] && ((r[n] = !1), (t = 1));
                t && e.revert();
              }) || nv()
            );
          },
          addEventListener: function (e, t) {
            var n = np[e] || (np[e] = []);
            ~n.indexOf(t) || n.push(t);
          },
          removeEventListener: function (e, t) {
            var n = np[e],
              r = n && n.indexOf(t);
            r >= 0 && n.splice(r, 1);
          },
          utils: {
            wrap: function e(t, n, r) {
              var i = n - t;
              return q(t)
                ? tc(t, e(0, t.length), n)
                : e7(r, function (e) {
                    return ((i + ((e - t) % i)) % i) + t;
                  });
            },
            wrapYoyo: function e(t, n, r) {
              var i = n - t,
                s = 2 * i;
              return q(t)
                ? tc(t, e(0, t.length - 1), n)
                : e7(r, function (e) {
                    return (
                      (e = (s + ((e - t) % s)) % s || 0),
                      t + (e > i ? s - e : e)
                    );
                  });
            },
            distribute: ta,
            random: tu,
            snap: tl,
            normalize: function (e, t, n) {
              return td(e, t, 0, 1, n);
            },
            getUnit: te,
            clamp: function (e, t, n) {
              return e7(n, function (n) {
                return e9(e, t, n);
              });
            },
            splitColor: tx,
            toArray: tr,
            selector: ti,
            mapRange: td,
            pipe: function () {
              for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
              return function (e) {
                return t.reduce(function (e, t) {
                  return t(e);
                }, e);
              };
            },
            unitize: function (e, t) {
              return function (n) {
                return e(parseFloat(n)) + (t || te(n));
              };
            },
            interpolate: function e(t, n, r, i) {
              var s = isNaN(t + n)
                ? 0
                : function (e) {
                    return (1 - e) * t + e * n;
                  };
              if (!s) {
                var a,
                  o,
                  l,
                  u,
                  c,
                  h = z(t),
                  d = {};
                if ((!0 === r && (i = 1) && (r = null), h))
                  (t = { p: t }), (n = { p: n });
                else if (q(t) && !q(n)) {
                  for (o = 1, l = [], c = (u = t.length) - 2; o < u; o++)
                    l.push(e(t[o - 1], t[o]));
                  u--,
                    (s = function (e) {
                      var t = Math.min(c, ~~(e *= u));
                      return l[t](e - t);
                    }),
                    (r = n);
                } else i || (t = eI(q(t) ? [] : {}, t));
                if (!l) {
                  for (a in n) tZ.call(d, t, a, "get", n[a]);
                  s = function (e) {
                    return na(e, d) || (h ? t.p : t);
                  };
                }
              }
              return e7(r, s);
            },
            shuffle: ts,
          },
          install: ei,
          effects: eg,
          ticker: tT,
          updateRoot: tH.updateRoot,
          plugins: em,
          globalTimeline: E,
          core: {
            PropTween: nh,
            globals: eo,
            Tween: t8,
            Timeline: tH,
            Animation: tj,
            getCache: eb,
            _removeLinkedListItem: ez,
            reverting: function () {
              return b;
            },
            context: function (e) {
              return e && S && (S.data.push(e), (e._ctx = S)), S;
            },
            suppressOverwrites: function (e) {
              return (x = e);
            },
          },
        };
      eE("to,from,fromTo,delayedCall,set,killTweensOf", function (e) {
        return (nb[e] = t8[e]);
      }),
        tT.add(tH.updateRoot),
        (R = nb.to({}, { duration: 0 }));
      var nS = function (e, t) {
          for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t; )
            n = n._next;
          return n;
        },
        nE = function (e, t) {
          var n,
            r,
            i,
            s = e._targets;
          for (n in t)
            for (r = s.length; r--; )
              (i = e._ptLookup[r][n]) &&
                (i = i.d) &&
                (i._pt && (i = nS(i, n)),
                i && i.modifier && i.modifier(t[n], e, s[r], n));
        },
        nM = function (e, t) {
          return {
            name: e,
            rawVars: 1,
            init: function (e, n, r) {
              r._onInit = function (e) {
                var r, i;
                if (
                  (z(n) &&
                    ((r = {}),
                    eE(n, function (e) {
                      return (r[e] = 1);
                    }),
                    (n = r)),
                  t)
                ) {
                  for (i in ((r = {}), n)) r[i] = t(n[i]);
                  n = r;
                }
                nE(e, n);
              };
            },
          };
        },
        nw =
          nb.registerPlugin(
            {
              name: "attr",
              init: function (e, t, n, r, i) {
                var s, a, o;
                for (s in ((this.tween = n), t))
                  (o = e.getAttribute(s) || ""),
                    ((a = this.add(
                      e,
                      "setAttribute",
                      (o || 0) + "",
                      t[s],
                      r,
                      i,
                      0,
                      0,
                      s
                    )).op = s),
                    (a.b = o),
                    this._props.push(s);
              },
              render: function (e, t) {
                for (var n = t._pt; n; )
                  b ? n.set(n.t, n.p, n.b, n) : n.r(e, n.d), (n = n._next);
              },
            },
            {
              name: "endArray",
              init: function (e, t) {
                for (var n = t.length; n--; )
                  this.add(e, n, e[n] || 0, t[n], 0, 0, 0, 0, 0, 1);
              },
            },
            nM("roundProps", to),
            nM("modifiers"),
            nM("snap", tl)
          ) || nb;
      (t8.version = tH.version = nw.version = "3.12.2"),
        (A = 1),
        W() && tA(),
        tC.Power0,
        tC.Power1,
        tC.Power2,
        tC.Power3,
        tC.Power4,
        tC.Linear,
        tC.Quad,
        tC.Cubic,
        tC.Quart,
        tC.Quint,
        tC.Strong,
        tC.Elastic,
        tC.Back,
        tC.SteppedEase,
        tC.Bounce;
      var nT = tC.Sine;
      tC.Expo, tC.Circ;
    },
    2001: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return eE;
        },
      });
      var r,
        i,
        s,
        a,
        o,
        l,
        u,
        c,
        h,
        d,
        p = n(4770),
        f = {},
        m = 180 / Math.PI,
        g = Math.PI / 180,
        _ = Math.atan2,
        v = /([A-Z])/g,
        y = /(left|right|width|margin|padding|x)/i,
        x = /[\s,\(]\S/,
        b = {
          autoAlpha: "opacity,visibility",
          scale: "scaleX,scaleY",
          alpha: "opacity",
        },
        S = function (e, t) {
          return t.set(
            t.t,
            t.p,
            Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u,
            t
          );
        },
        E = function (e, t) {
          return t.set(
            t.t,
            t.p,
            1 === e ? t.e : Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u,
            t
          );
        },
        M = function (e, t) {
          return t.set(
            t.t,
            t.p,
            e ? Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u : t.b,
            t
          );
        },
        w = function (e, t) {
          var n = t.s + t.c * e;
          t.set(t.t, t.p, ~~(n + (n < 0 ? -0.5 : 0.5)) + t.u, t);
        },
        T = function (e, t) {
          return t.set(t.t, t.p, e ? t.e : t.b, t);
        },
        A = function (e, t) {
          return t.set(t.t, t.p, 1 !== e ? t.b : t.e, t);
        },
        C = function (e, t, n) {
          return (e.style[t] = n);
        },
        R = function (e, t, n) {
          return e.style.setProperty(t, n);
        },
        P = function (e, t, n) {
          return (e._gsap[t] = n);
        },
        O = function (e, t, n) {
          return (e._gsap.scaleX = e._gsap.scaleY = n);
        },
        L = function (e, t, n, r, i) {
          var s = e._gsap;
          (s.scaleX = s.scaleY = n), s.renderTransform(i, s);
        },
        I = function (e, t, n, r, i) {
          var s = e._gsap;
          (s[t] = n), s.renderTransform(i, s);
        },
        N = "transform",
        D = N + "Origin",
        U = function e(t, n) {
          var r = this,
            i = this.target,
            s = i.style;
          if (t in f && s) {
            if (((this.tfm = this.tfm || {}), "transform" === t))
              return b.transform.split(",").forEach(function (t) {
                return e.call(r, t, n);
              });
            if (
              (~(t = b[t] || t).indexOf(",")
                ? t.split(",").forEach(function (e) {
                    return (r.tfm[e] = ee(i, e));
                  })
                : (this.tfm[t] = i._gsap.x ? i._gsap[t] : ee(i, t)),
              this.props.indexOf(N) >= 0)
            )
              return;
            i._gsap.svg &&
              ((this.svgo = i.getAttribute("data-svg-origin")),
              this.props.push(D, n, "")),
              (t = N);
          }
          (s || n) && this.props.push(t, n, s[t]);
        },
        k = function (e) {
          e.translate &&
            (e.removeProperty("translate"),
            e.removeProperty("scale"),
            e.removeProperty("rotate"));
        },
        F = function () {
          var e,
            t,
            n = this.props,
            r = this.target,
            i = r.style,
            s = r._gsap;
          for (e = 0; e < n.length; e += 3)
            n[e + 1]
              ? (r[n[e]] = n[e + 2])
              : n[e + 2]
              ? (i[n[e]] = n[e + 2])
              : i.removeProperty(
                  "--" === n[e].substr(0, 2)
                    ? n[e]
                    : n[e].replace(v, "-$1").toLowerCase()
                );
          if (this.tfm) {
            for (t in this.tfm) s[t] = this.tfm[t];
            s.svg &&
              (s.renderTransform(),
              r.setAttribute("data-svg-origin", this.svgo || "")),
              ((e = h()) && e.isStart) || i[N] || (k(i), (s.uncache = 1));
          }
        },
        z = function (e, t) {
          var n = { target: e, props: [], revert: F, save: U };
          return (
            e._gsap || p.p8.core.getCache(e),
            t &&
              t.split(",").forEach(function (e) {
                return n.save(e);
              }),
            n
          );
        },
        B = function (e, t) {
          var n = a.createElementNS
            ? a.createElementNS(
                (t || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"),
                e
              )
            : a.createElement(e);
          return n.style ? n : a.createElement(e);
        },
        V = function e(t, n, r) {
          var i = getComputedStyle(t);
          return (
            i[n] ||
            i.getPropertyValue(n.replace(v, "-$1").toLowerCase()) ||
            i.getPropertyValue(n) ||
            (!r && e(t, H(n) || n, 1)) ||
            ""
          );
        },
        j = "O,Moz,ms,Ms,Webkit".split(","),
        H = function (e, t, n) {
          var r = (t || u).style,
            i = 5;
          if (e in r && !n) return e;
          for (
            e = e.charAt(0).toUpperCase() + e.substr(1);
            i-- && !(j[i] + e in r);

          );
          return i < 0 ? null : (3 === i ? "ms" : i >= 0 ? j[i] : "") + e;
        },
        G = function () {
          "undefined" != typeof window &&
            window.document &&
            ((o = (a = window.document).documentElement),
            (u = B("div") || { style: {} }),
            B("div"),
            (D = (N = H(N)) + "Origin"),
            (u.style.cssText =
              "border-width:0;line-height:0;position:absolute;padding:0"),
            (d = !!H("perspective")),
            (h = p.p8.core.reverting),
            (l = 1));
        },
        W = function e(t) {
          var n,
            r = B(
              "svg",
              (this.ownerSVGElement &&
                this.ownerSVGElement.getAttribute("xmlns")) ||
                "http://www.w3.org/2000/svg"
            ),
            i = this.parentNode,
            s = this.nextSibling,
            a = this.style.cssText;
          if (
            (o.appendChild(r),
            r.appendChild(this),
            (this.style.display = "block"),
            t)
          )
            try {
              (n = this.getBBox()),
                (this._gsapBBox = this.getBBox),
                (this.getBBox = e);
            } catch (e) {}
          else this._gsapBBox && (n = this._gsapBBox());
          return (
            i && (s ? i.insertBefore(this, s) : i.appendChild(this)),
            o.removeChild(r),
            (this.style.cssText = a),
            n
          );
        },
        $ = function (e, t) {
          for (var n = t.length; n--; )
            if (e.hasAttribute(t[n])) return e.getAttribute(t[n]);
        },
        X = function (e) {
          var t;
          try {
            t = e.getBBox();
          } catch (n) {
            t = W.call(e, !0);
          }
          return (
            (t && (t.width || t.height)) ||
              e.getBBox === W ||
              (t = W.call(e, !0)),
            !t || t.width || t.x || t.y
              ? t
              : {
                  x: +$(e, ["x", "cx", "x1"]) || 0,
                  y: +$(e, ["y", "cy", "y1"]) || 0,
                  width: 0,
                  height: 0,
                }
          );
        },
        q = function (e) {
          return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && X(e));
        },
        Y = function (e, t) {
          if (t) {
            var n = e.style;
            t in f && t !== D && (t = N),
              n.removeProperty
                ? (("ms" === t.substr(0, 2) || "webkit" === t.substr(0, 6)) &&
                    (t = "-" + t),
                  n.removeProperty(t.replace(v, "-$1").toLowerCase()))
                : n.removeAttribute(t);
          }
        },
        J = function (e, t, n, r, i, s) {
          var a = new p.Fo(e._pt, t, n, 0, 1, s ? A : T);
          return (e._pt = a), (a.b = r), (a.e = i), e._props.push(n), a;
        },
        Z = { deg: 1, rad: 1, turn: 1 },
        K = { grid: 1, flex: 1 },
        Q = function e(t, n, r, i) {
          var s,
            o,
            l,
            c,
            h = parseFloat(r) || 0,
            d = (r + "").trim().substr((h + "").length) || "px",
            m = u.style,
            g = y.test(n),
            _ = "svg" === t.tagName.toLowerCase(),
            v = (_ ? "client" : "offset") + (g ? "Width" : "Height"),
            x = "px" === i,
            b = "%" === i;
          return i === d || !h || Z[i] || Z[d]
            ? h
            : ("px" === d || x || (h = e(t, n, r, "px")),
              (c = t.getCTM && q(t)),
              (b || "%" === d) && (f[n] || ~n.indexOf("adius")))
            ? ((s = c ? t.getBBox()[g ? "width" : "height"] : t[v]),
              (0, p.Pr)(b ? (h / s) * 100 : (h / 100) * s))
            : ((m[g ? "width" : "height"] = 100 + (x ? d : i)),
              (o =
                ~n.indexOf("adius") || ("em" === i && t.appendChild && !_)
                  ? t
                  : t.parentNode),
              c && (o = (t.ownerSVGElement || {}).parentNode),
              (o && o !== a && o.appendChild) || (o = a.body),
              (l = o._gsap) &&
                b &&
                l.width &&
                g &&
                l.time === p.xr.time &&
                !l.uncache)
            ? (0, p.Pr)((h / l.width) * 100)
            : ((b || "%" === d) &&
                !K[V(o, "display")] &&
                (m.position = V(t, "position")),
              o === t && (m.position = "static"),
              o.appendChild(u),
              (s = u[v]),
              o.removeChild(u),
              (m.position = "absolute"),
              g &&
                b &&
                (((l = (0, p.DY)(o)).time = p.xr.time), (l.width = o[v])),
              (0, p.Pr)(x ? (s * h) / 100 : s && h ? (100 / s) * h : 0));
        },
        ee = function (e, t, n, r) {
          var i;
          return (
            l || G(),
            t in b &&
              "transform" !== t &&
              ~(t = b[t]).indexOf(",") &&
              (t = t.split(",")[0]),
            f[t] && "transform" !== t
              ? ((i = ed(e, r)),
                (i =
                  "transformOrigin" !== t
                    ? i[t]
                    : i.svg
                    ? i.origin
                    : ep(V(e, D)) + " " + i.zOrigin + "px"))
              : (!(i = e.style[t]) ||
                  "auto" === i ||
                  r ||
                  ~(i + "").indexOf("calc(")) &&
                (i =
                  (es[t] && es[t](e, t, n)) ||
                  V(e, t) ||
                  (0, p.Ok)(e, t) ||
                  ("opacity" === t ? 1 : 0)),
            n && !~(i + "").trim().indexOf(" ") ? Q(e, t, i, n) + n : i
          );
        },
        et = function (e, t, n, r) {
          if (!n || "none" === n) {
            var i = H(t, e, 1),
              s = i && V(e, i, 1);
            s && s !== n
              ? ((t = i), (n = s))
              : "borderColor" === t && (n = V(e, "borderTopColor"));
          }
          var a,
            o,
            l,
            u,
            c,
            h,
            d,
            f,
            m,
            g,
            _,
            v = new p.Fo(this._pt, e.style, t, 0, 1, p.Ks),
            y = 0,
            x = 0;
          if (
            ((v.b = n),
            (v.e = r),
            (n += ""),
            "auto" == (r += "") &&
              ((e.style[t] = r), (r = V(e, t) || r), (e.style[t] = n)),
            (a = [n, r]),
            (0, p.kr)(a),
            (n = a[0]),
            (r = a[1]),
            (l = n.match(p.d4) || []),
            (r.match(p.d4) || []).length)
          ) {
            for (; (o = p.d4.exec(r)); )
              (d = o[0]),
                (m = r.substring(y, o.index)),
                c
                  ? (c = (c + 1) % 5)
                  : ("rgba(" === m.substr(-5) || "hsla(" === m.substr(-5)) &&
                    (c = 1),
                d !== (h = l[x++] || "") &&
                  ((u = parseFloat(h) || 0),
                  (_ = h.substr((u + "").length)),
                  "=" === d.charAt(1) && (d = (0, p.cy)(u, d) + _),
                  (f = parseFloat(d)),
                  (g = d.substr((f + "").length)),
                  (y = p.d4.lastIndex - g.length),
                  g ||
                    ((g = g || p.Fc.units[t] || _),
                    y !== r.length || ((r += g), (v.e += g))),
                  _ !== g && (u = Q(e, t, h, g) || 0),
                  (v._pt = {
                    _next: v._pt,
                    p: m || 1 === x ? m : ",",
                    s: u,
                    c: f - u,
                    m: (c && c < 4) || "zIndex" === t ? Math.round : 0,
                  }));
            v.c = y < r.length ? r.substring(y, r.length) : "";
          } else v.r = "display" === t && "none" === r ? A : T;
          return p.bQ.test(r) && (v.e = 0), (this._pt = v), v;
        },
        en = {
          top: "0%",
          bottom: "100%",
          left: "0%",
          right: "100%",
          center: "50%",
        },
        er = function (e) {
          var t = e.split(" "),
            n = t[0],
            r = t[1] || "50%";
          return (
            ("top" === n || "bottom" === n || "left" === r || "right" === r) &&
              ((e = n), (n = r), (r = e)),
            (t[0] = en[n] || n),
            (t[1] = en[r] || r),
            t.join(" ")
          );
        },
        ei = function (e, t) {
          if (t.tween && t.tween._time === t.tween._dur) {
            var n,
              r,
              i,
              s = t.t,
              a = s.style,
              o = t.u,
              l = s._gsap;
            if ("all" === o || !0 === o) (a.cssText = ""), (r = 1);
            else
              for (i = (o = o.split(",")).length; --i > -1; )
                f[(n = o[i])] &&
                  ((r = 1), (n = "transformOrigin" === n ? D : N)),
                  Y(s, n);
            r &&
              (Y(s, N),
              l &&
                (l.svg && s.removeAttribute("transform"),
                ed(s, 1),
                (l.uncache = 1),
                k(a)));
          }
        },
        es = {
          clearProps: function (e, t, n, r, i) {
            if ("isFromStart" !== i.data) {
              var s = (e._pt = new p.Fo(e._pt, t, n, 0, 0, ei));
              return (
                (s.u = r), (s.pr = -10), (s.tween = i), e._props.push(n), 1
              );
            }
          },
        },
        ea = [1, 0, 0, 1, 0, 0],
        eo = {},
        el = function (e) {
          return "matrix(1, 0, 0, 1, 0, 0)" === e || "none" === e || !e;
        },
        eu = function (e) {
          var t = V(e, N);
          return el(t) ? ea : t.substr(7).match(p.SI).map(p.Pr);
        },
        ec = function (e, t) {
          var n,
            r,
            i,
            s,
            a = e._gsap || (0, p.DY)(e),
            l = e.style,
            u = eu(e);
          return a.svg && e.getAttribute("transform")
            ? "1,0,0,1,0,0" ===
              (u = [
                (i = e.transform.baseVal.consolidate().matrix).a,
                i.b,
                i.c,
                i.d,
                i.e,
                i.f,
              ]).join(",")
              ? ea
              : u
            : (u !== ea ||
                e.offsetParent ||
                e === o ||
                a.svg ||
                ((i = l.display),
                (l.display = "block"),
                ((n = e.parentNode) && e.offsetParent) ||
                  ((s = 1), (r = e.nextElementSibling), o.appendChild(e)),
                (u = eu(e)),
                i ? (l.display = i) : Y(e, "display"),
                s &&
                  (r
                    ? n.insertBefore(e, r)
                    : n
                    ? n.appendChild(e)
                    : o.removeChild(e))),
              t && u.length > 6 ? [u[0], u[1], u[4], u[5], u[12], u[13]] : u);
        },
        eh = function (e, t, n, r, i, s) {
          var a,
            o,
            l,
            u,
            c = e._gsap,
            h = i || ec(e, !0),
            d = c.xOrigin || 0,
            p = c.yOrigin || 0,
            f = c.xOffset || 0,
            m = c.yOffset || 0,
            g = h[0],
            _ = h[1],
            v = h[2],
            y = h[3],
            x = h[4],
            b = h[5],
            S = t.split(" "),
            E = parseFloat(S[0]) || 0,
            M = parseFloat(S[1]) || 0;
          n
            ? h !== ea &&
              (o = g * y - _ * v) &&
              ((l = E * (y / o) + M * (-v / o) + (v * b - y * x) / o),
              (u = E * (-_ / o) + M * (g / o) - (g * b - _ * x) / o),
              (E = l),
              (M = u))
            : ((E =
                (a = X(e)).x + (~S[0].indexOf("%") ? (E / 100) * a.width : E)),
              (M =
                a.y +
                (~(S[1] || S[0]).indexOf("%") ? (M / 100) * a.height : M))),
            r || (!1 !== r && c.smooth)
              ? ((x = E - d),
                (b = M - p),
                (c.xOffset = f + (x * g + b * v) - x),
                (c.yOffset = m + (x * _ + b * y) - b))
              : (c.xOffset = c.yOffset = 0),
            (c.xOrigin = E),
            (c.yOrigin = M),
            (c.smooth = !!r),
            (c.origin = t),
            (c.originIsAbsolute = !!n),
            (e.style[D] = "0px 0px"),
            s &&
              (J(s, c, "xOrigin", d, E),
              J(s, c, "yOrigin", p, M),
              J(s, c, "xOffset", f, c.xOffset),
              J(s, c, "yOffset", m, c.yOffset)),
            e.setAttribute("data-svg-origin", E + " " + M);
        },
        ed = function (e, t) {
          var n = e._gsap || new p.l1(e);
          if ("x" in n && !t && !n.uncache) return n;
          var r,
            i,
            s,
            a,
            o,
            l,
            u,
            c,
            h,
            f,
            v,
            y,
            x,
            b,
            S,
            E,
            M,
            w,
            T,
            A,
            C,
            R,
            P,
            O,
            L,
            I,
            U,
            k,
            F,
            z,
            B,
            j,
            H = e.style,
            G = n.scaleX < 0,
            W = getComputedStyle(e),
            $ = V(e, D) || "0";
          return (
            (r = i = s = l = u = c = h = f = v = 0),
            (a = o = 1),
            (n.svg = !!(e.getCTM && q(e))),
            W.translate &&
              (("none" !== W.translate ||
                "none" !== W.scale ||
                "none" !== W.rotate) &&
                (H[N] =
                  ("none" !== W.translate
                    ? "translate3d(" +
                      (W.translate + " 0 0").split(" ").slice(0, 3).join(", ") +
                      ") "
                    : "") +
                  ("none" !== W.rotate ? "rotate(" + W.rotate + ") " : "") +
                  ("none" !== W.scale
                    ? "scale(" + W.scale.split(" ").join(",") + ") "
                    : "") +
                  ("none" !== W[N] ? W[N] : "")),
              (H.scale = H.rotate = H.translate = "none")),
            (b = ec(e, n.svg)),
            n.svg &&
              (n.uncache
                ? ((L = e.getBBox()),
                  ($ = n.xOrigin - L.x + "px " + (n.yOrigin - L.y) + "px"),
                  (O = ""))
                : (O = !t && e.getAttribute("data-svg-origin")),
              eh(e, O || $, !!O || n.originIsAbsolute, !1 !== n.smooth, b)),
            (y = n.xOrigin || 0),
            (x = n.yOrigin || 0),
            b !== ea &&
              ((w = b[0]),
              (T = b[1]),
              (A = b[2]),
              (C = b[3]),
              (r = R = b[4]),
              (i = P = b[5]),
              6 === b.length
                ? ((a = Math.sqrt(w * w + T * T)),
                  (o = Math.sqrt(C * C + A * A)),
                  (l = w || T ? _(T, w) * m : 0),
                  (h = A || C ? _(A, C) * m + l : 0) &&
                    (o *= Math.abs(Math.cos(h * g))),
                  n.svg &&
                    ((r -= y - (y * w + x * A)), (i -= x - (y * T + x * C))))
                : ((j = b[6]),
                  (z = b[7]),
                  (U = b[8]),
                  (k = b[9]),
                  (F = b[10]),
                  (B = b[11]),
                  (r = b[12]),
                  (i = b[13]),
                  (s = b[14]),
                  (u = (S = _(j, F)) * m),
                  S &&
                    ((O = R * (E = Math.cos(-S)) + U * (M = Math.sin(-S))),
                    (L = P * E + k * M),
                    (I = j * E + F * M),
                    (U = -(R * M) + U * E),
                    (k = -(P * M) + k * E),
                    (F = -(j * M) + F * E),
                    (B = -(z * M) + B * E),
                    (R = O),
                    (P = L),
                    (j = I)),
                  (c = (S = _(-A, F)) * m),
                  S &&
                    ((O = w * (E = Math.cos(-S)) - U * (M = Math.sin(-S))),
                    (L = T * E - k * M),
                    (I = A * E - F * M),
                    (B = C * M + B * E),
                    (w = O),
                    (T = L),
                    (A = I)),
                  (l = (S = _(T, w)) * m),
                  S &&
                    ((O = w * (E = Math.cos(S)) + T * (M = Math.sin(S))),
                    (L = R * E + P * M),
                    (T = T * E - w * M),
                    (P = P * E - R * M),
                    (w = O),
                    (R = L)),
                  u &&
                    Math.abs(u) + Math.abs(l) > 359.9 &&
                    ((u = l = 0), (c = 180 - c)),
                  (a = (0, p.Pr)(Math.sqrt(w * w + T * T + A * A))),
                  (o = (0, p.Pr)(Math.sqrt(P * P + j * j))),
                  (h = Math.abs((S = _(R, P))) > 2e-4 ? S * m : 0),
                  (v = B ? 1 / (B < 0 ? -B : B) : 0)),
              n.svg &&
                ((O = e.getAttribute("transform")),
                (n.forceCSS = e.setAttribute("transform", "") || !el(V(e, N))),
                O && e.setAttribute("transform", O))),
            Math.abs(h) > 90 &&
              270 > Math.abs(h) &&
              (G
                ? ((a *= -1),
                  (h += l <= 0 ? 180 : -180),
                  (l += l <= 0 ? 180 : -180))
                : ((o *= -1), (h += h <= 0 ? 180 : -180))),
            (t = t || n.uncache),
            (n.x =
              r -
              ((n.xPercent =
                r &&
                ((!t && n.xPercent) ||
                  (Math.round(e.offsetWidth / 2) === Math.round(-r) ? -50 : 0)))
                ? (e.offsetWidth * n.xPercent) / 100
                : 0) +
              "px"),
            (n.y =
              i -
              ((n.yPercent =
                i &&
                ((!t && n.yPercent) ||
                  (Math.round(e.offsetHeight / 2) === Math.round(-i)
                    ? -50
                    : 0)))
                ? (e.offsetHeight * n.yPercent) / 100
                : 0) +
              "px"),
            (n.z = s + "px"),
            (n.scaleX = (0, p.Pr)(a)),
            (n.scaleY = (0, p.Pr)(o)),
            (n.rotation = (0, p.Pr)(l) + "deg"),
            (n.rotationX = (0, p.Pr)(u) + "deg"),
            (n.rotationY = (0, p.Pr)(c) + "deg"),
            (n.skewX = h + "deg"),
            (n.skewY = f + "deg"),
            (n.transformPerspective = v + "px"),
            (n.zOrigin = parseFloat($.split(" ")[2]) || 0) && (H[D] = ep($)),
            (n.xOffset = n.yOffset = 0),
            (n.force3D = p.Fc.force3D),
            (n.renderTransform = n.svg ? ev : d ? e_ : em),
            (n.uncache = 0),
            n
          );
        },
        ep = function (e) {
          return (e = e.split(" "))[0] + " " + e[1];
        },
        ef = function (e, t, n) {
          var r = (0, p.Wy)(t);
          return (
            (0, p.Pr)(parseFloat(t) + parseFloat(Q(e, "x", n + "px", r))) + r
          );
        },
        em = function (e, t) {
          (t.z = "0px"),
            (t.rotationY = t.rotationX = "0deg"),
            (t.force3D = 0),
            e_(e, t);
        },
        eg = "0deg",
        e_ = function (e, t) {
          var n = t || this,
            r = n.xPercent,
            i = n.yPercent,
            s = n.x,
            a = n.y,
            o = n.z,
            l = n.rotation,
            u = n.rotationY,
            c = n.rotationX,
            h = n.skewX,
            d = n.skewY,
            p = n.scaleX,
            f = n.scaleY,
            m = n.transformPerspective,
            _ = n.force3D,
            v = n.target,
            y = n.zOrigin,
            x = "",
            b = ("auto" === _ && e && 1 !== e) || !0 === _;
          if (y && (c !== eg || u !== eg)) {
            var S,
              E = parseFloat(u) * g,
              M = Math.sin(E),
              w = Math.cos(E);
            (s = ef(v, s, -(M * (S = Math.cos((E = parseFloat(c) * g))) * y))),
              (a = ef(v, a, -(-Math.sin(E) * y))),
              (o = ef(v, o, -(w * S * y) + y));
          }
          "0px" !== m && (x += "perspective(" + m + ") "),
            (r || i) && (x += "translate(" + r + "%, " + i + "%) "),
            (b || "0px" !== s || "0px" !== a || "0px" !== o) &&
              (x +=
                "0px" !== o || b
                  ? "translate3d(" + s + ", " + a + ", " + o + ") "
                  : "translate(" + s + ", " + a + ") "),
            l !== eg && (x += "rotate(" + l + ") "),
            u !== eg && (x += "rotateY(" + u + ") "),
            c !== eg && (x += "rotateX(" + c + ") "),
            (h !== eg || d !== eg) && (x += "skew(" + h + ", " + d + ") "),
            (1 !== p || 1 !== f) && (x += "scale(" + p + ", " + f + ") "),
            (v.style[N] = x || "translate(0, 0)");
        },
        ev = function (e, t) {
          var n,
            r,
            i,
            s,
            a,
            o = t || this,
            l = o.xPercent,
            u = o.yPercent,
            c = o.x,
            h = o.y,
            d = o.rotation,
            f = o.skewX,
            m = o.skewY,
            _ = o.scaleX,
            v = o.scaleY,
            y = o.target,
            x = o.xOrigin,
            b = o.yOrigin,
            S = o.xOffset,
            E = o.yOffset,
            M = o.forceCSS,
            w = parseFloat(c),
            T = parseFloat(h);
          (d = parseFloat(d)),
            (f = parseFloat(f)),
            (m = parseFloat(m)) && ((f += m = parseFloat(m)), (d += m)),
            d || f
              ? ((d *= g),
                (f *= g),
                (n = Math.cos(d) * _),
                (r = Math.sin(d) * _),
                (i = -(Math.sin(d - f) * v)),
                (s = Math.cos(d - f) * v),
                f &&
                  ((m *= g),
                  (i *= a = Math.sqrt(1 + (a = Math.tan(f - m)) * a)),
                  (s *= a),
                  m &&
                    ((n *= a = Math.sqrt(1 + (a = Math.tan(m)) * a)),
                    (r *= a))),
                (n = (0, p.Pr)(n)),
                (r = (0, p.Pr)(r)),
                (i = (0, p.Pr)(i)),
                (s = (0, p.Pr)(s)))
              : ((n = _), (s = v), (r = i = 0)),
            ((w && !~(c + "").indexOf("px")) ||
              (T && !~(h + "").indexOf("px"))) &&
              ((w = Q(y, "x", c, "px")), (T = Q(y, "y", h, "px"))),
            (x || b || S || E) &&
              ((w = (0, p.Pr)(w + x - (x * n + b * i) + S)),
              (T = (0, p.Pr)(T + b - (x * r + b * s) + E))),
            (l || u) &&
              ((a = y.getBBox()),
              (w = (0, p.Pr)(w + (l / 100) * a.width)),
              (T = (0, p.Pr)(T + (u / 100) * a.height))),
            (a =
              "matrix(" +
              n +
              "," +
              r +
              "," +
              i +
              "," +
              s +
              "," +
              w +
              "," +
              T +
              ")"),
            y.setAttribute("transform", a),
            M && (y.style[N] = a);
        },
        ey = function (e, t, n, r, i) {
          var s,
            a,
            o = (0, p.r9)(i),
            l = parseFloat(i) * (o && ~i.indexOf("rad") ? m : 1) - r,
            u = r + l + "deg";
          return (
            o &&
              ("short" === (s = i.split("_")[1]) &&
                (l %= 360) != l % 180 &&
                (l += l < 0 ? 360 : -360),
              "cw" === s && l < 0
                ? (l = ((l + 36e9) % 360) - 360 * ~~(l / 360))
                : "ccw" === s &&
                  l > 0 &&
                  (l = ((l - 36e9) % 360) - 360 * ~~(l / 360))),
            (e._pt = a = new p.Fo(e._pt, t, n, r, l, E)),
            (a.e = u),
            (a.u = "deg"),
            e._props.push(n),
            a
          );
        },
        ex = function (e, t) {
          for (var n in t) e[n] = t[n];
          return e;
        },
        eb = function (e, t, n) {
          var r,
            i,
            s,
            a,
            o,
            l,
            u,
            c = ex({}, n._gsap),
            h = n.style;
          for (i in (c.svg
            ? ((s = n.getAttribute("transform")),
              n.setAttribute("transform", ""),
              (h[N] = t),
              (r = ed(n, 1)),
              Y(n, N),
              n.setAttribute("transform", s))
            : ((s = getComputedStyle(n)[N]),
              (h[N] = t),
              (r = ed(n, 1)),
              (h[N] = s)),
          f))
            (s = c[i]) !== (a = r[i]) &&
              0 > "perspective,force3D,transformOrigin,svgOrigin".indexOf(i) &&
              ((o =
                (0, p.Wy)(s) !== (u = (0, p.Wy)(a))
                  ? Q(n, i, s, u)
                  : parseFloat(s)),
              (l = parseFloat(a)),
              (e._pt = new p.Fo(e._pt, r, i, o, l - o, S)),
              (e._pt.u = u || 0),
              e._props.push(i));
          ex(r, c);
        };
      (0, p.fS)("padding,margin,Width,Radius", function (e, t) {
        var n = "Right",
          r = "Bottom",
          i = "Left",
          s = (
            t < 3 ? ["Top", n, r, i] : ["Top" + i, "Top" + n, r + n, r + i]
          ).map(function (n) {
            return t < 2 ? e + n : "border" + n + e;
          });
        es[t > 1 ? "border" + e : e] = function (e, t, n, r, i) {
          var a, o;
          if (arguments.length < 4)
            return 5 ===
              (o = (a = s.map(function (t) {
                return ee(e, t, n);
              })).join(" ")).split(a[0]).length
              ? a[0]
              : o;
          (a = (r + "").split(" ")),
            (o = {}),
            s.forEach(function (e, t) {
              return (o[e] = a[t] = a[t] || a[((t - 1) / 2) | 0]);
            }),
            e.init(t, o, i);
        };
      });
      var eS = {
        name: "css",
        register: G,
        targetTest: function (e) {
          return e.style && e.nodeType;
        },
        init: function (e, t, n, r, i) {
          var s,
            a,
            o,
            u,
            c,
            h,
            d,
            m,
            g,
            _,
            v,
            y,
            E,
            T,
            A,
            C,
            R = this._props,
            P = e.style,
            O = n.vars.startAt;
          for (d in (l || G(),
          (this.styles = this.styles || z(e)),
          (C = this.styles.props),
          (this.tween = n),
          t))
            if (
              "autoRound" !== d &&
              ((a = t[d]), !(p.$i[d] && (0, p.if)(d, t, n, r, e, i)))
            ) {
              if (
                ((c = typeof a),
                (h = es[d]),
                "function" === c && (c = typeof (a = a.call(n, r, e, i))),
                "string" === c && ~a.indexOf("random(") && (a = (0, p.UI)(a)),
                h)
              )
                h(this, e, d, a, n) && (A = 1);
              else if ("--" === d.substr(0, 2))
                (s = (getComputedStyle(e).getPropertyValue(d) + "").trim()),
                  (a += ""),
                  (p.GN.lastIndex = 0),
                  p.GN.test(s) || ((m = (0, p.Wy)(s)), (g = (0, p.Wy)(a))),
                  g ? m !== g && (s = Q(e, d, s, g) + g) : m && (a += m),
                  this.add(P, "setProperty", s, a, r, i, 0, 0, d),
                  R.push(d),
                  C.push(d, 0, P[d]);
              else if ("undefined" !== c) {
                if (
                  (O && d in O
                    ? ((s =
                        "function" == typeof O[d]
                          ? O[d].call(n, r, e, i)
                          : O[d]),
                      (0, p.r9)(s) &&
                        ~s.indexOf("random(") &&
                        (s = (0, p.UI)(s)),
                      (0, p.Wy)(s + "") ||
                        (s += p.Fc.units[d] || (0, p.Wy)(ee(e, d)) || ""),
                      "=" === (s + "").charAt(1) && (s = ee(e, d)))
                    : (s = ee(e, d)),
                  (u = parseFloat(s)),
                  (_ =
                    "string" === c && "=" === a.charAt(1) && a.substr(0, 2)) &&
                    (a = a.substr(2)),
                  (o = parseFloat(a)),
                  d in b &&
                    ("autoAlpha" === d &&
                      (1 === u &&
                        "hidden" === ee(e, "visibility") &&
                        o &&
                        (u = 0),
                      C.push("visibility", 0, P.visibility),
                      J(
                        this,
                        P,
                        "visibility",
                        u ? "inherit" : "hidden",
                        o ? "inherit" : "hidden",
                        !o
                      )),
                    "scale" !== d &&
                      "transform" !== d &&
                      ~(d = b[d]).indexOf(",") &&
                      (d = d.split(",")[0])),
                  (v = d in f))
                ) {
                  if (
                    (this.styles.save(d),
                    y ||
                      (((E = e._gsap).renderTransform && !t.parseTransform) ||
                        ed(e, t.parseTransform),
                      (T = !1 !== t.smoothOrigin && E.smooth),
                      ((y = this._pt =
                        new p.Fo(
                          this._pt,
                          P,
                          N,
                          0,
                          1,
                          E.renderTransform,
                          E,
                          0,
                          -1
                        )).dep = 1)),
                    "scale" === d)
                  )
                    (this._pt = new p.Fo(
                      this._pt,
                      E,
                      "scaleY",
                      E.scaleY,
                      (_ ? (0, p.cy)(E.scaleY, _ + o) : o) - E.scaleY || 0,
                      S
                    )),
                      (this._pt.u = 0),
                      R.push("scaleY", d),
                      (d += "X");
                  else if ("transformOrigin" === d) {
                    C.push(D, 0, P[D]),
                      (a = er(a)),
                      E.svg
                        ? eh(e, a, 0, T, 0, this)
                        : ((g = parseFloat(a.split(" ")[2]) || 0) !==
                            E.zOrigin && J(this, E, "zOrigin", E.zOrigin, g),
                          J(this, P, d, ep(s), ep(a)));
                    continue;
                  } else if ("svgOrigin" === d) {
                    eh(e, a, 1, T, 0, this);
                    continue;
                  } else if (d in eo) {
                    ey(this, E, d, u, _ ? (0, p.cy)(u, _ + a) : a);
                    continue;
                  } else if ("smoothOrigin" === d) {
                    J(this, E, "smooth", E.smooth, a);
                    continue;
                  } else if ("force3D" === d) {
                    E[d] = a;
                    continue;
                  } else if ("transform" === d) {
                    eb(this, a, e);
                    continue;
                  }
                } else d in P || (d = H(d) || d);
                if (
                  v ||
                  ((o || 0 === o) && (u || 0 === u) && !x.test(a) && d in P)
                )
                  (m = (s + "").substr((u + "").length)),
                    o || (o = 0),
                    (g = (0, p.Wy)(a) || (d in p.Fc.units ? p.Fc.units[d] : m)),
                    m !== g && (u = Q(e, d, s, g)),
                    (this._pt = new p.Fo(
                      this._pt,
                      v ? E : P,
                      d,
                      u,
                      (_ ? (0, p.cy)(u, _ + o) : o) - u,
                      v || ("px" !== g && "zIndex" !== d) || !1 === t.autoRound
                        ? S
                        : w
                    )),
                    (this._pt.u = g || 0),
                    m !== g &&
                      "%" !== g &&
                      ((this._pt.b = s), (this._pt.r = M));
                else if (d in P) et.call(this, e, d, s, _ ? _ + a : a);
                else if (d in e) this.add(e, d, s || e[d], _ ? _ + a : a, r, i);
                else if ("parseTransform" !== d) {
                  (0, p.lC)(d, a);
                  continue;
                }
                v || (d in P ? C.push(d, 0, P[d]) : C.push(d, 1, s || e[d])),
                  R.push(d);
              }
            }
          A && (0, p.JV)(this);
        },
        render: function (e, t) {
          if (t.tween._time || !h())
            for (var n = t._pt; n; ) n.r(e, n.d), (n = n._next);
          else t.styles.revert();
        },
        get: ee,
        aliases: b,
        getSetter: function (e, t, n) {
          var r = b[t];
          return (
            r && 0 > r.indexOf(",") && (t = r),
            t in f && t !== D && (e._gsap.x || ee(e, "x"))
              ? n && c === n
                ? "scale" === t
                  ? O
                  : P
                : ((c = n || {}), "scale" === t ? L : I)
              : e.style && !(0, p.m2)(e.style[t])
              ? C
              : ~t.indexOf("-")
              ? R
              : (0, p.S5)(e, t)
          );
        },
        core: { _removeProperty: Y, _getMatrix: ec },
      };
      (p.p8.utils.checkPrefix = H),
        (p.p8.core.getStyleSaver = z),
        (r = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent"),
        (i = "rotation,rotationX,rotationY,skewX,skewY"),
        (s = (0, p.fS)(
          r +
            "," +
            i +
            ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",
          function (e) {
            f[e] = 1;
          }
        )),
        (0, p.fS)(i, function (e) {
          (p.Fc.units[e] = "deg"), (eo[e] = 1);
        }),
        (b[s[13]] = r + "," + i),
        (0, p.fS)(
          "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",
          function (e) {
            var t = e.split(":");
            b[t[1]] = s[t[0]];
          }
        ),
        (0, p.fS)(
          "x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",
          function (e) {
            p.Fc.units[e] = "px";
          }
        ),
        p.p8.registerPlugin(eS);
      var eE = p.p8.registerPlugin(eS) || p.p8;
      eE.core.Tween;
    },
    3463: function (e, t, n) {
      "use strict";
      var r = n(3887),
        i = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0,
        },
        s = {
          name: !0,
          length: !0,
          prototype: !0,
          caller: !0,
          callee: !0,
          arguments: !0,
          arity: !0,
        },
        a = {
          $$typeof: !0,
          compare: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
          type: !0,
        },
        o = {};
      function l(e) {
        return r.isMemo(e) ? a : o[e.$$typeof] || i;
      }
      (o[r.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
      }),
        (o[r.Memo] = a);
      var u = Object.defineProperty,
        c = Object.getOwnPropertyNames,
        h = Object.getOwnPropertySymbols,
        d = Object.getOwnPropertyDescriptor,
        p = Object.getPrototypeOf,
        f = Object.prototype;
      e.exports = function e(t, n, r) {
        if ("string" != typeof n) {
          if (f) {
            var i = p(n);
            i && i !== f && e(t, i, r);
          }
          var a = c(n);
          h && (a = a.concat(h(n)));
          for (var o = l(t), m = l(n), g = 0; g < a.length; ++g) {
            var _ = a[g];
            if (!s[_] && !(r && r[_]) && !(m && m[_]) && !(o && o[_])) {
              var v = d(n, _);
              try {
                u(t, _, v);
              } catch (e) {}
            }
          }
        }
        return t;
      };
    },
    3459: function (e, t) {
      "use strict";
      /** @license React v16.13.1
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var n = "function" == typeof Symbol && Symbol.for,
        r = n ? Symbol.for("react.element") : 60103,
        i = n ? Symbol.for("react.portal") : 60106,
        s = n ? Symbol.for("react.fragment") : 60107,
        a = n ? Symbol.for("react.strict_mode") : 60108,
        o = n ? Symbol.for("react.profiler") : 60114,
        l = n ? Symbol.for("react.provider") : 60109,
        u = n ? Symbol.for("react.context") : 60110,
        c = n ? Symbol.for("react.async_mode") : 60111,
        h = n ? Symbol.for("react.concurrent_mode") : 60111,
        d = n ? Symbol.for("react.forward_ref") : 60112,
        p = n ? Symbol.for("react.suspense") : 60113,
        f = n ? Symbol.for("react.suspense_list") : 60120,
        m = n ? Symbol.for("react.memo") : 60115,
        g = n ? Symbol.for("react.lazy") : 60116,
        _ = n ? Symbol.for("react.block") : 60121,
        v = n ? Symbol.for("react.fundamental") : 60117,
        y = n ? Symbol.for("react.responder") : 60118,
        x = n ? Symbol.for("react.scope") : 60119;
      function b(e) {
        if ("object" == typeof e && null !== e) {
          var t = e.$$typeof;
          switch (t) {
            case r:
              switch ((e = e.type)) {
                case c:
                case h:
                case s:
                case o:
                case a:
                case p:
                  return e;
                default:
                  switch ((e = e && e.$$typeof)) {
                    case u:
                    case d:
                    case g:
                    case m:
                    case l:
                      return e;
                    default:
                      return t;
                  }
              }
            case i:
              return t;
          }
        }
      }
      function S(e) {
        return b(e) === h;
      }
      (t.AsyncMode = c),
        (t.ConcurrentMode = h),
        (t.ContextConsumer = u),
        (t.ContextProvider = l),
        (t.Element = r),
        (t.ForwardRef = d),
        (t.Fragment = s),
        (t.Lazy = g),
        (t.Memo = m),
        (t.Portal = i),
        (t.Profiler = o),
        (t.StrictMode = a),
        (t.Suspense = p),
        (t.isAsyncMode = function (e) {
          return S(e) || b(e) === c;
        }),
        (t.isConcurrentMode = S),
        (t.isContextConsumer = function (e) {
          return b(e) === u;
        }),
        (t.isContextProvider = function (e) {
          return b(e) === l;
        }),
        (t.isElement = function (e) {
          return "object" == typeof e && null !== e && e.$$typeof === r;
        }),
        (t.isForwardRef = function (e) {
          return b(e) === d;
        }),
        (t.isFragment = function (e) {
          return b(e) === s;
        }),
        (t.isLazy = function (e) {
          return b(e) === g;
        }),
        (t.isMemo = function (e) {
          return b(e) === m;
        }),
        (t.isPortal = function (e) {
          return b(e) === i;
        }),
        (t.isProfiler = function (e) {
          return b(e) === o;
        }),
        (t.isStrictMode = function (e) {
          return b(e) === a;
        }),
        (t.isSuspense = function (e) {
          return b(e) === p;
        }),
        (t.isValidElementType = function (e) {
          return (
            "string" == typeof e ||
            "function" == typeof e ||
            e === s ||
            e === h ||
            e === o ||
            e === a ||
            e === p ||
            e === f ||
            ("object" == typeof e &&
              null !== e &&
              (e.$$typeof === g ||
                e.$$typeof === m ||
                e.$$typeof === l ||
                e.$$typeof === u ||
                e.$$typeof === d ||
                e.$$typeof === v ||
                e.$$typeof === y ||
                e.$$typeof === x ||
                e.$$typeof === _))
          );
        }),
        (t.typeOf = b);
    },
    3887: function (e, t, n) {
      "use strict";
      e.exports = n(3459);
    },
    5705: function (e, t, n) {
      "use strict";
      let r;
      n.d(t, {
        Jc: function () {
          return eM;
        },
        ag: function () {
          return eE;
        },
        $G: function () {
          return _;
        },
      });
      var i = n(2784);
      n(4896), Object.create(null);
      let s = {};
      function a() {
        for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        ("string" == typeof t[0] && s[t[0]]) ||
          ("string" == typeof t[0] && (s[t[0]] = new Date()),
          (function () {
            if (console && console.warn) {
              for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
              "string" == typeof t[0] && (t[0] = `react-i18next:: ${t[0]}`),
                console.warn(...t);
            }
          })(...t));
      }
      let o = (e, t) => () => {
        if (e.isInitialized) t();
        else {
          let n = () => {
            setTimeout(() => {
              e.off("initialized", n);
            }, 0),
              t();
          };
          e.on("initialized", n);
        }
      };
      function l(e, t, n) {
        e.loadNamespaces(t, o(e, n));
      }
      function u(e, t, n, r) {
        "string" == typeof n && (n = [n]),
          n.forEach((t) => {
            0 > e.options.ns.indexOf(t) && e.options.ns.push(t);
          }),
          e.loadLanguages(t, o(e, r));
      }
      let c =
          /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,
        h = {
          "&amp;": "&",
          "&#38;": "&",
          "&lt;": "<",
          "&#60;": "<",
          "&gt;": ">",
          "&#62;": ">",
          "&apos;": "'",
          "&#39;": "'",
          "&quot;": '"',
          "&#34;": '"',
          "&nbsp;": " ",
          "&#160;": " ",
          "&copy;": "\xa9",
          "&#169;": "\xa9",
          "&reg;": "\xae",
          "&#174;": "\xae",
          "&hellip;": "…",
          "&#8230;": "…",
          "&#x2F;": "/",
          "&#47;": "/",
        },
        d = (e) => h[e],
        p = {
          bindI18n: "languageChanged",
          bindI18nStore: "",
          transEmptyNodeValue: "",
          transSupportBasicHtmlNodes: !0,
          transWrapTextNodes: "",
          transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
          useSuspense: !0,
          unescape: (e) => e.replace(c, d),
        },
        f = (0, i.createContext)();
      class m {
        constructor() {
          this.usedNamespaces = {};
        }
        addUsedNamespaces(e) {
          e.forEach((e) => {
            this.usedNamespaces[e] || (this.usedNamespaces[e] = !0);
          });
        }
        getUsedNamespaces() {
          return Object.keys(this.usedNamespaces);
        }
      }
      let g = (e, t) => {
        let n = (0, i.useRef)();
        return (
          (0, i.useEffect)(() => {
            n.current = t ? n.current : e;
          }, [e, t]),
          n.current
        );
      };
      function _(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          { i18n: n } = t,
          { i18n: s, defaultNS: o } = (0, i.useContext)(f) || {},
          c = n || s || r;
        if ((c && !c.reportNamespaces && (c.reportNamespaces = new m()), !c)) {
          a(
            "You will need to pass in an i18next instance by using initReactI18next"
          );
          let e = (e, t) =>
              "string" == typeof t
                ? t
                : t && "object" == typeof t && "string" == typeof t.defaultValue
                ? t.defaultValue
                : Array.isArray(e)
                ? e[e.length - 1]
                : e,
            t = [e, {}, !1];
          return (t.t = e), (t.i18n = {}), (t.ready = !1), t;
        }
        c.options.react &&
          void 0 !== c.options.react.wait &&
          a(
            "It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour."
          );
        let h = { ...p, ...c.options.react, ...t },
          { useSuspense: d, keyPrefix: _ } = h,
          v = e || o || (c.options && c.options.defaultNS);
        (v = "string" == typeof v ? [v] : v || ["translation"]),
          c.reportNamespaces.addUsedNamespaces &&
            c.reportNamespaces.addUsedNamespaces(v);
        let y =
          (c.isInitialized || c.initializedStoreOnce) &&
          v.every((e) =>
            (function (e, t) {
              let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              if (!t.languages || !t.languages.length)
                return (
                  a("i18n.languages were undefined or empty", t.languages), !0
                );
              let r = void 0 !== t.options.ignoreJSONStructure;
              return r
                ? t.hasLoadedNamespace(e, {
                    lng: n.lng,
                    precheck: (t, r) => {
                      if (
                        n.bindI18n &&
                        n.bindI18n.indexOf("languageChanging") > -1 &&
                        t.services.backendConnector.backend &&
                        t.isLanguageChangingTo &&
                        !r(t.isLanguageChangingTo, e)
                      )
                        return !1;
                    },
                  })
                : (function (e, t) {
                    let n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = t.languages[0],
                      i = !!t.options && t.options.fallbackLng,
                      s = t.languages[t.languages.length - 1];
                    if ("cimode" === r.toLowerCase()) return !0;
                    let a = (e, n) => {
                      let r = t.services.backendConnector.state[`${e}|${n}`];
                      return -1 === r || 2 === r;
                    };
                    return (
                      (!(
                        n.bindI18n &&
                        n.bindI18n.indexOf("languageChanging") > -1
                      ) ||
                        !t.services.backendConnector.backend ||
                        !t.isLanguageChangingTo ||
                        !!a(t.isLanguageChangingTo, e)) &&
                      !!(
                        t.hasResourceBundle(r, e) ||
                        !t.services.backendConnector.backend ||
                        (t.options.resources &&
                          !t.options.partialBundledLanguages) ||
                        (a(r, e) && (!i || a(s, e)))
                      )
                    );
                  })(e, t, n);
            })(e, c, h)
          );
        function x() {
          return c.getFixedT(
            t.lng || null,
            "fallback" === h.nsMode ? v : v[0],
            _
          );
        }
        let [b, S] = (0, i.useState)(x),
          E = v.join();
        t.lng && (E = `${t.lng}${E}`);
        let M = g(E),
          w = (0, i.useRef)(!0);
        (0, i.useEffect)(() => {
          let { bindI18n: e, bindI18nStore: n } = h;
          function r() {
            w.current && S(x);
          }
          return (
            (w.current = !0),
            y ||
              d ||
              (t.lng
                ? u(c, t.lng, v, () => {
                    w.current && S(x);
                  })
                : l(c, v, () => {
                    w.current && S(x);
                  })),
            y && M && M !== E && w.current && S(x),
            e && c && c.on(e, r),
            n && c && c.store.on(n, r),
            () => {
              (w.current = !1),
                e && c && e.split(" ").forEach((e) => c.off(e, r)),
                n && c && n.split(" ").forEach((e) => c.store.off(e, r));
            }
          );
        }, [c, E]);
        let T = (0, i.useRef)(!0);
        (0, i.useEffect)(() => {
          w.current && !T.current && S(x), (T.current = !1);
        }, [c, _]);
        let A = [b, c, y];
        if (((A.t = b), (A.i18n = c), (A.ready = y), y || (!y && !d))) return A;
        throw new Promise((e) => {
          t.lng ? u(c, t.lng, v, () => e()) : l(c, v, () => e());
        });
      }
      function v(e) {
        let { i18n: t, defaultNS: n, children: r } = e,
          s = (0, i.useMemo)(() => ({ i18n: t, defaultNS: n }), [t, n]);
        return (0, i.createElement)(f.Provider, { value: s }, r);
      }
      var y = n(7896),
        x = n(2802);
      function b(e, t, n) {
        return (
          (t = (0, x.Z)(t)) in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      var S = n(3463),
        E = n.n(S);
      function M(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
        return r;
      }
      function w(e, t) {
        if (e) {
          if ("string" == typeof e) return M(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          if (
            ("Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n)
          )
            return Array.from(e);
          if (
            "Arguments" === n ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return M(e, t);
        }
      }
      var T = n(6522);
      function A(e, t) {
        return (
          (function (e) {
            if (Array.isArray(e)) return e;
          })(e) ||
          (function (e, t) {
            var n =
              null == e
                ? null
                : ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
                  e["@@iterator"];
            if (null != n) {
              var r,
                i,
                s,
                a,
                o = [],
                l = !0,
                u = !1;
              try {
                if (((s = (n = n.call(e)).next), 0 === t)) {
                  if (Object(n) !== n) return;
                  l = !1;
                } else
                  for (
                    ;
                    !(l = (r = s.call(n)).done) &&
                    (o.push(r.value), o.length !== t);
                    l = !0
                  );
              } catch (e) {
                (u = !0), (i = e);
              } finally {
                try {
                  if (
                    !l &&
                    null != n.return &&
                    ((a = n.return()), Object(a) !== a)
                  )
                    return;
                } finally {
                  if (u) throw i;
                }
              }
              return o;
            }
          })(e, t) ||
          w(e, t) ||
          (function () {
            throw TypeError(
              "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          })()
        );
      }
      function C(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = (function (e, t) {
            if (null == e) return {};
            var n,
              r,
              i = {},
              s = Object.keys(e);
            for (r = 0; r < s.length; r++)
              (n = s[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
            return i;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var s = Object.getOwnPropertySymbols(e);
          for (r = 0; r < s.length; r++)
            (n = s[r]),
              !(t.indexOf(n) >= 0) &&
                Object.prototype.propertyIsEnumerable.call(e, n) &&
                (i[n] = e[n]);
        }
        return i;
      }
      var R = {
          defaultNS: "common",
          errorStackTraceLimit: 0,
          i18n: { defaultLocale: "en", locales: ["en"] },
          get initImmediate() {
            return "undefined" != typeof window;
          },
          interpolation: { escapeValue: !1 },
          load: "currentOnly",
          localeExtension: "json",
          localePath: "./public/locales",
          localeStructure: "{{lng}}/{{ns}}",
          react: { useSuspense: !1 },
          reloadOnPrerender: !1,
          serializeConfig: !0,
          use: [],
        },
        P = ["i18n"],
        O = ["i18n"];
      function L(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function I(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? L(Object(n), !0).forEach(function (t) {
                b(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : L(Object(n)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      var N = ["backend", "detection"],
        D = function (e) {
          if ("string" != typeof (null == e ? void 0 : e.lng))
            throw Error("config.lng was not passed into createConfig");
          var t,
            n,
            r,
            i = e.i18n,
            s = C(e, P),
            a = R.i18n,
            o = I(I(I(I({}, C(R, O)), s), a), i),
            l = o.defaultNS,
            u = o.lng,
            c = o.localeExtension,
            h = o.localePath,
            d = o.nonExplicitSupportedLngs,
            p = o.locales.filter(function (e) {
              return "default" !== e;
            });
          if ("cimode" === u) return o;
          if (
            void 0 === o.fallbackLng &&
            ((o.fallbackLng = o.defaultLocale), "default" === o.fallbackLng)
          ) {
            var f = A(p, 1);
            o.fallbackLng = f[0];
          }
          var m =
              null == e
                ? void 0
                : null === (t = e.interpolation) || void 0 === t
                ? void 0
                : t.prefix,
            g =
              null == e
                ? void 0
                : null === (n = e.interpolation) || void 0 === n
                ? void 0
                : n.suffix,
            _ = null != m ? m : "{{",
            v = null != g ? g : "}}";
          "string" != typeof (null == e ? void 0 : e.localeStructure) &&
            (m || g) &&
            (o.localeStructure = ""
              .concat(_, "lng")
              .concat(v, "/")
              .concat(_, "ns")
              .concat(v));
          var y = o.fallbackLng,
            x = o.localeStructure;
          if (d) {
            var b = function (e, t) {
              var n = A(t.split("-"), 1)[0];
              return (e[t] = [n]), e;
            };
            if ("string" == typeof y)
              o.fallbackLng = o.locales
                .filter(function (e) {
                  return e.includes("-");
                })
                .reduce(b, { default: [y] });
            else if (Array.isArray(y))
              o.fallbackLng = o.locales
                .filter(function (e) {
                  return e.includes("-");
                })
                .reduce(b, { default: y });
            else if ("object" === (0, T.Z)(y))
              o.fallbackLng = Object.entries(o.fallbackLng).reduce(function (
                e,
                t
              ) {
                var n,
                  r = A(t, 2),
                  i = r[0],
                  s = r[1];
                return (
                  (e[i] = i.includes("-")
                    ? ((n = [i.split("-")[0]].concat(
                        (function (e) {
                          if (Array.isArray(e)) return M(e);
                        })(s) ||
                          (function (e) {
                            if (
                              ("undefined" != typeof Symbol &&
                                null != e[Symbol.iterator]) ||
                              null != e["@@iterator"]
                            )
                              return Array.from(e);
                          })(s) ||
                          w(s) ||
                          (function () {
                            throw TypeError(
                              "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
                            );
                          })()
                      )),
                      Array.from(new Set(n)))
                    : s),
                  e
                );
              },
              y);
            else if ("function" == typeof y)
              throw Error(
                "If nonExplicitSupportedLngs is true, no functions are allowed for fallbackLng"
              );
          }
          return (
            (null == e
              ? void 0
              : null === (r = e.use) || void 0 === r
              ? void 0
              : r.some(function (e) {
                  return "backend" === e.type;
                })) ||
              ("string" == typeof h
                ? (o.backend = {
                    addPath: "".concat(h, "/").concat(x, ".missing.").concat(c),
                    loadPath: "".concat(h, "/").concat(x, ".").concat(c),
                  })
                : "function" != typeof h ||
                  (o.backend = {
                    addPath: function (e, t) {
                      return h(e, t, !0);
                    },
                    loadPath: function (e, t) {
                      return h(e, t, !1);
                    },
                  })),
            "string" == typeof o.ns || Array.isArray(o.ns) || (o.ns = [l]),
            N.forEach(function (t) {
              e[t] && (o[t] = I(I({}, o[t]), e[t]));
            }),
            o
          );
        };
      let U = {
        type: "logger",
        log(e) {
          this.output("log", e);
        },
        warn(e) {
          this.output("warn", e);
        },
        error(e) {
          this.output("error", e);
        },
        output(e, t) {
          console && console[e] && console[e].apply(console, t);
        },
      };
      class k {
        constructor(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          this.init(e, t);
        }
        init(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.prefix = t.prefix || "i18next:"),
            (this.logger = e || U),
            (this.options = t),
            (this.debug = t.debug);
        }
        log() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return this.forward(t, "log", "", !0);
        }
        warn() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return this.forward(t, "warn", "", !0);
        }
        error() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return this.forward(t, "error", "");
        }
        deprecate() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return this.forward(t, "warn", "WARNING DEPRECATED: ", !0);
        }
        forward(e, t, n, r) {
          return r && !this.debug
            ? null
            : ("string" == typeof e[0] && (e[0] = `${n}${this.prefix} ${e[0]}`),
              this.logger[t](e));
        }
        create(e) {
          return new k(this.logger, {
            prefix: `${this.prefix}:${e}:`,
            ...this.options,
          });
        }
        clone(e) {
          return (
            ((e = e || this.options).prefix = e.prefix || this.prefix),
            new k(this.logger, e)
          );
        }
      }
      var F = new k();
      class z {
        constructor() {
          this.observers = {};
        }
        on(e, t) {
          return (
            e.split(" ").forEach((e) => {
              (this.observers[e] = this.observers[e] || []),
                this.observers[e].push(t);
            }),
            this
          );
        }
        off(e, t) {
          if (this.observers[e]) {
            if (!t) {
              delete this.observers[e];
              return;
            }
            this.observers[e] = this.observers[e].filter((e) => e !== t);
          }
        }
        emit(e) {
          for (
            var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          if (this.observers[e]) {
            let t = [].concat(this.observers[e]);
            t.forEach((e) => {
              e(...n);
            });
          }
          if (this.observers["*"]) {
            let t = [].concat(this.observers["*"]);
            t.forEach((t) => {
              t.apply(t, [e, ...n]);
            });
          }
        }
      }
      function B() {
        let e, t;
        let n = new Promise((n, r) => {
          (e = n), (t = r);
        });
        return (n.resolve = e), (n.reject = t), n;
      }
      function V(e) {
        return null == e ? "" : "" + e;
      }
      function j(e, t, n) {
        function r(e) {
          return e && e.indexOf("###") > -1 ? e.replace(/###/g, ".") : e;
        }
        function i() {
          return !e || "string" == typeof e;
        }
        let s = "string" != typeof t ? [].concat(t) : t.split(".");
        for (; s.length > 1; ) {
          if (i()) return {};
          let t = r(s.shift());
          !e[t] && n && (e[t] = new n()),
            (e = Object.prototype.hasOwnProperty.call(e, t) ? e[t] : {});
        }
        return i() ? {} : { obj: e, k: r(s.shift()) };
      }
      function H(e, t, n) {
        let { obj: r, k: i } = j(e, t, Object);
        r[i] = n;
      }
      function G(e, t) {
        let { obj: n, k: r } = j(e, t);
        if (n) return n[r];
      }
      function W(e) {
        return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
      }
      var $ = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
      };
      function X(e) {
        return "string" == typeof e ? e.replace(/[&<>"'\/]/g, (e) => $[e]) : e;
      }
      let q = [" ", ",", "?", "!", ";"];
      function Y(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
        if (!e) return;
        if (e[t]) return e[t];
        let r = t.split(n),
          i = e;
        for (let e = 0; e < r.length; ++e) {
          if (!i || ("string" == typeof i[r[e]] && e + 1 < r.length)) return;
          if (void 0 === i[r[e]]) {
            let s = 2,
              a = r.slice(e, e + s).join(n),
              o = i[a];
            for (; void 0 === o && r.length > e + s; )
              s++, (o = i[(a = r.slice(e, e + s).join(n))]);
            if (void 0 === o) return;
            if (null === o) return null;
            if (t.endsWith(a)) {
              if ("string" == typeof o) return o;
              if (a && "string" == typeof o[a]) return o[a];
            }
            let l = r.slice(e + s).join(n);
            if (l) return Y(o, l, n);
            return;
          }
          i = i[r[e]];
        }
        return i;
      }
      function J(e) {
        return e && e.indexOf("_") > 0 ? e.replace("_", "-") : e;
      }
      class Z extends z {
        constructor(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : { ns: ["translation"], defaultNS: "translation" };
          super(),
            (this.data = e || {}),
            (this.options = t),
            void 0 === this.options.keySeparator &&
              (this.options.keySeparator = "."),
            void 0 === this.options.ignoreJSONStructure &&
              (this.options.ignoreJSONStructure = !0);
        }
        addNamespaces(e) {
          0 > this.options.ns.indexOf(e) && this.options.ns.push(e);
        }
        removeNamespaces(e) {
          let t = this.options.ns.indexOf(e);
          t > -1 && this.options.ns.splice(t, 1);
        }
        getResource(e, t, n) {
          let r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            i =
              void 0 !== r.keySeparator
                ? r.keySeparator
                : this.options.keySeparator,
            s =
              void 0 !== r.ignoreJSONStructure
                ? r.ignoreJSONStructure
                : this.options.ignoreJSONStructure,
            a = [e, t];
          n && "string" != typeof n && (a = a.concat(n)),
            n && "string" == typeof n && (a = a.concat(i ? n.split(i) : n)),
            e.indexOf(".") > -1 && (a = e.split("."));
          let o = G(this.data, a);
          return o || !s || "string" != typeof n
            ? o
            : Y(this.data && this.data[e] && this.data[e][t], n, i);
        }
        addResource(e, t, n, r) {
          let i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : { silent: !1 },
            s =
              void 0 !== i.keySeparator
                ? i.keySeparator
                : this.options.keySeparator,
            a = [e, t];
          n && (a = a.concat(s ? n.split(s) : n)),
            e.indexOf(".") > -1 && ((a = e.split(".")), (r = t), (t = a[1])),
            this.addNamespaces(t),
            H(this.data, a, r),
            i.silent || this.emit("added", e, t, n, r);
        }
        addResources(e, t, n) {
          let r =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { silent: !1 };
          for (let r in n)
            ("string" == typeof n[r] ||
              "[object Array]" === Object.prototype.toString.apply(n[r])) &&
              this.addResource(e, t, r, n[r], { silent: !0 });
          r.silent || this.emit("added", e, t, n);
        }
        addResourceBundle(e, t, n, r, i) {
          let s =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : { silent: !1 },
            a = [e, t];
          e.indexOf(".") > -1 &&
            ((a = e.split(".")), (r = n), (n = t), (t = a[1])),
            this.addNamespaces(t);
          let o = G(this.data, a) || {};
          r
            ? (function e(t, n, r) {
                for (let i in n)
                  "__proto__" !== i &&
                    "constructor" !== i &&
                    (i in t
                      ? "string" == typeof t[i] ||
                        t[i] instanceof String ||
                        "string" == typeof n[i] ||
                        n[i] instanceof String
                        ? r && (t[i] = n[i])
                        : e(t[i], n[i], r)
                      : (t[i] = n[i]));
                return t;
              })(o, n, i)
            : (o = { ...o, ...n }),
            H(this.data, a, o),
            s.silent || this.emit("added", e, t, n);
        }
        removeResourceBundle(e, t) {
          this.hasResourceBundle(e, t) && delete this.data[e][t],
            this.removeNamespaces(t),
            this.emit("removed", e, t);
        }
        hasResourceBundle(e, t) {
          return void 0 !== this.getResource(e, t);
        }
        getResourceBundle(e, t) {
          return (t || (t = this.options.defaultNS),
          "v1" === this.options.compatibilityAPI)
            ? { ...this.getResource(e, t) }
            : this.getResource(e, t);
        }
        getDataByLanguage(e) {
          return this.data[e];
        }
        hasLanguageSomeTranslations(e) {
          let t = this.getDataByLanguage(e),
            n = (t && Object.keys(t)) || [];
          return !!n.find((e) => t[e] && Object.keys(t[e]).length > 0);
        }
        toJSON() {
          return this.data;
        }
      }
      var K = {
        processors: {},
        addPostProcessor(e) {
          this.processors[e.name] = e;
        },
        handle(e, t, n, r, i) {
          return (
            e.forEach((e) => {
              this.processors[e] &&
                (t = this.processors[e].process(t, n, r, i));
            }),
            t
          );
        },
      };
      let Q = {};
      class ee extends z {
        constructor(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          super(),
            (function (e, t, n) {
              e.forEach((e) => {
                t[e] && (n[e] = t[e]);
              });
            })(
              [
                "resourceStore",
                "languageUtils",
                "pluralResolver",
                "interpolator",
                "backendConnector",
                "i18nFormat",
                "utils",
              ],
              e,
              this
            ),
            (this.options = t),
            void 0 === this.options.keySeparator &&
              (this.options.keySeparator = "."),
            (this.logger = F.create("translator"));
        }
        changeLanguage(e) {
          e && (this.language = e);
        }
        exists(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : { interpolation: {} };
          if (null == e) return !1;
          let n = this.resolve(e, t);
          return n && void 0 !== n.res;
        }
        extractFromKey(e, t) {
          let n =
            void 0 !== t.nsSeparator ? t.nsSeparator : this.options.nsSeparator;
          void 0 === n && (n = ":");
          let r =
              void 0 !== t.keySeparator
                ? t.keySeparator
                : this.options.keySeparator,
            i = t.ns || this.options.defaultNS || [],
            s = n && e.indexOf(n) > -1,
            a =
              !this.options.userDefinedKeySeparator &&
              !t.keySeparator &&
              !this.options.userDefinedNsSeparator &&
              !t.nsSeparator &&
              !(function (e, t, n) {
                (t = t || ""), (n = n || "");
                let r = q.filter((e) => 0 > t.indexOf(e) && 0 > n.indexOf(e));
                if (0 === r.length) return !0;
                let i = RegExp(
                    `(${r.map((e) => ("?" === e ? "\\?" : e)).join("|")})`
                  ),
                  s = !i.test(e);
                if (!s) {
                  let t = e.indexOf(n);
                  t > 0 && !i.test(e.substring(0, t)) && (s = !0);
                }
                return s;
              })(e, n, r);
          if (s && !a) {
            let t = e.match(this.interpolator.nestingRegexp);
            if (t && t.length > 0) return { key: e, namespaces: i };
            let s = e.split(n);
            (n !== r || (n === r && this.options.ns.indexOf(s[0]) > -1)) &&
              (i = s.shift()),
              (e = s.join(r));
          }
          return "string" == typeof i && (i = [i]), { key: e, namespaces: i };
        }
        translate(e, t, n) {
          if (
            ("object" != typeof t &&
              this.options.overloadTranslationOptionHandler &&
              (t = this.options.overloadTranslationOptionHandler(arguments)),
            "object" == typeof t && (t = { ...t }),
            t || (t = {}),
            null == e)
          )
            return "";
          Array.isArray(e) || (e = [String(e)]);
          let r =
              void 0 !== t.returnDetails
                ? t.returnDetails
                : this.options.returnDetails,
            i =
              void 0 !== t.keySeparator
                ? t.keySeparator
                : this.options.keySeparator,
            { key: s, namespaces: a } = this.extractFromKey(e[e.length - 1], t),
            o = a[a.length - 1],
            l = t.lng || this.language,
            u =
              t.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
          if (l && "cimode" === l.toLowerCase()) {
            if (u) {
              let e = t.nsSeparator || this.options.nsSeparator;
              return r
                ? {
                    res: `${o}${e}${s}`,
                    usedKey: s,
                    exactUsedKey: s,
                    usedLng: l,
                    usedNS: o,
                    usedParams: this.getUsedParamsDetails(t),
                  }
                : `${o}${e}${s}`;
            }
            return r
              ? {
                  res: s,
                  usedKey: s,
                  exactUsedKey: s,
                  usedLng: l,
                  usedNS: o,
                  usedParams: this.getUsedParamsDetails(t),
                }
              : s;
          }
          let c = this.resolve(e, t),
            h = c && c.res,
            d = (c && c.usedKey) || s,
            p = (c && c.exactUsedKey) || s,
            f = Object.prototype.toString.apply(h),
            m =
              void 0 !== t.joinArrays ? t.joinArrays : this.options.joinArrays,
            g = !this.i18nFormat || this.i18nFormat.handleAsObject,
            _ =
              "string" != typeof h &&
              "boolean" != typeof h &&
              "number" != typeof h;
          if (
            g &&
            h &&
            _ &&
            0 >
              [
                "[object Number]",
                "[object Function]",
                "[object RegExp]",
              ].indexOf(f) &&
            !("string" == typeof m && "[object Array]" === f)
          ) {
            if (!t.returnObjects && !this.options.returnObjects) {
              this.options.returnedObjectHandler ||
                this.logger.warn(
                  "accessing an object - but returnObjects options is not enabled!"
                );
              let e = this.options.returnedObjectHandler
                ? this.options.returnedObjectHandler(d, h, { ...t, ns: a })
                : `key '${s} (${this.language})' returned an object instead of string.`;
              return r
                ? ((c.res = e),
                  (c.usedParams = this.getUsedParamsDetails(t)),
                  c)
                : e;
            }
            if (i) {
              let e = "[object Array]" === f,
                n = e ? [] : {},
                r = e ? p : d;
              for (let e in h)
                if (Object.prototype.hasOwnProperty.call(h, e)) {
                  let s = `${r}${i}${e}`;
                  (n[e] = this.translate(s, { ...t, joinArrays: !1, ns: a })),
                    n[e] === s && (n[e] = h[e]);
                }
              h = n;
            }
          } else if (g && "string" == typeof m && "[object Array]" === f)
            (h = h.join(m)) && (h = this.extendTranslation(h, e, t, n));
          else {
            let r = !1,
              a = !1,
              u = void 0 !== t.count && "string" != typeof t.count,
              d = ee.hasDefaultValue(t),
              p = u ? this.pluralResolver.getSuffix(l, t.count, t) : "",
              f =
                t.ordinal && u
                  ? this.pluralResolver.getSuffix(l, t.count, { ordinal: !1 })
                  : "",
              m =
                t[`defaultValue${p}`] ||
                t[`defaultValue${f}`] ||
                t.defaultValue;
            !this.isValidLookup(h) && d && ((r = !0), (h = m)),
              this.isValidLookup(h) || ((a = !0), (h = s));
            let g =
                t.missingKeyNoValueFallbackToKey ||
                this.options.missingKeyNoValueFallbackToKey,
              _ = g && a ? void 0 : h,
              v = d && m !== h && this.options.updateMissing;
            if (a || r || v) {
              if (
                (this.logger.log(
                  v ? "updateKey" : "missingKey",
                  l,
                  o,
                  s,
                  v ? m : h
                ),
                i)
              ) {
                let e = this.resolve(s, { ...t, keySeparator: !1 });
                e &&
                  e.res &&
                  this.logger.warn(
                    "Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format."
                  );
              }
              let e = [],
                n = this.languageUtils.getFallbackCodes(
                  this.options.fallbackLng,
                  t.lng || this.language
                );
              if ("fallback" === this.options.saveMissingTo && n && n[0])
                for (let t = 0; t < n.length; t++) e.push(n[t]);
              else
                "all" === this.options.saveMissingTo
                  ? (e = this.languageUtils.toResolveHierarchy(
                      t.lng || this.language
                    ))
                  : e.push(t.lng || this.language);
              let r = (e, n, r) => {
                let i = d && r !== h ? r : _;
                this.options.missingKeyHandler
                  ? this.options.missingKeyHandler(e, o, n, i, v, t)
                  : this.backendConnector &&
                    this.backendConnector.saveMissing &&
                    this.backendConnector.saveMissing(e, o, n, i, v, t),
                  this.emit("missingKey", e, o, n, h);
              };
              this.options.saveMissing &&
                (this.options.saveMissingPlurals && u
                  ? e.forEach((e) => {
                      this.pluralResolver.getSuffixes(e, t).forEach((n) => {
                        r([e], s + n, t[`defaultValue${n}`] || m);
                      });
                    })
                  : r(e, s, m));
            }
            (h = this.extendTranslation(h, e, t, c, n)),
              a &&
                h === s &&
                this.options.appendNamespaceToMissingKey &&
                (h = `${o}:${s}`),
              (a || r) &&
                this.options.parseMissingKeyHandler &&
                (h =
                  "v1" !== this.options.compatibilityAPI
                    ? this.options.parseMissingKeyHandler(
                        this.options.appendNamespaceToMissingKey
                          ? `${o}:${s}`
                          : s,
                        r ? h : void 0
                      )
                    : this.options.parseMissingKeyHandler(h));
          }
          return r
            ? ((c.res = h), (c.usedParams = this.getUsedParamsDetails(t)), c)
            : h;
        }
        extendTranslation(e, t, n, r, i) {
          var s = this;
          if (this.i18nFormat && this.i18nFormat.parse)
            e = this.i18nFormat.parse(
              e,
              { ...this.options.interpolation.defaultVariables, ...n },
              n.lng || this.language || r.usedLng,
              r.usedNS,
              r.usedKey,
              { resolved: r }
            );
          else if (!n.skipInterpolation) {
            let a;
            n.interpolation &&
              this.interpolator.init({
                ...n,
                interpolation: {
                  ...this.options.interpolation,
                  ...n.interpolation,
                },
              });
            let o =
              "string" == typeof e &&
              (n &&
              n.interpolation &&
              void 0 !== n.interpolation.skipOnVariables
                ? n.interpolation.skipOnVariables
                : this.options.interpolation.skipOnVariables);
            if (o) {
              let t = e.match(this.interpolator.nestingRegexp);
              a = t && t.length;
            }
            let l = n.replace && "string" != typeof n.replace ? n.replace : n;
            if (
              (this.options.interpolation.defaultVariables &&
                (l = { ...this.options.interpolation.defaultVariables, ...l }),
              (e = this.interpolator.interpolate(
                e,
                l,
                n.lng || this.language,
                n
              )),
              o)
            ) {
              let t = e.match(this.interpolator.nestingRegexp),
                r = t && t.length;
              a < r && (n.nest = !1);
            }
            !n.lng &&
              "v1" !== this.options.compatibilityAPI &&
              r &&
              r.res &&
              (n.lng = r.usedLng),
              !1 !== n.nest &&
                (e = this.interpolator.nest(
                  e,
                  function () {
                    for (
                      var e = arguments.length, r = Array(e), a = 0;
                      a < e;
                      a++
                    )
                      r[a] = arguments[a];
                    return i && i[0] === r[0] && !n.context
                      ? (s.logger.warn(
                          `It seems you are nesting recursively key: ${r[0]} in key: ${t[0]}`
                        ),
                        null)
                      : s.translate(...r, t);
                  },
                  n
                )),
              n.interpolation && this.interpolator.reset();
          }
          let a = n.postProcess || this.options.postProcess,
            o = "string" == typeof a ? [a] : a;
          return (
            null != e &&
              o &&
              o.length &&
              !1 !== n.applyPostProcessor &&
              (e = K.handle(
                o,
                e,
                t,
                this.options && this.options.postProcessPassResolved
                  ? {
                      i18nResolved: {
                        ...r,
                        usedParams: this.getUsedParamsDetails(n),
                      },
                      ...n,
                    }
                  : n,
                this
              )),
            e
          );
        }
        resolve(e) {
          let t,
            n,
            r,
            i,
            s,
            a =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          return (
            "string" == typeof e && (e = [e]),
            e.forEach((e) => {
              if (this.isValidLookup(t)) return;
              let o = this.extractFromKey(e, a),
                l = o.key;
              n = l;
              let u = o.namespaces;
              this.options.fallbackNS &&
                (u = u.concat(this.options.fallbackNS));
              let c = void 0 !== a.count && "string" != typeof a.count,
                h =
                  c &&
                  !a.ordinal &&
                  0 === a.count &&
                  this.pluralResolver.shouldUseIntlApi(),
                d =
                  void 0 !== a.context &&
                  ("string" == typeof a.context ||
                    "number" == typeof a.context) &&
                  "" !== a.context,
                p = a.lngs
                  ? a.lngs
                  : this.languageUtils.toResolveHierarchy(
                      a.lng || this.language,
                      a.fallbackLng
                    );
              u.forEach((e) => {
                this.isValidLookup(t) ||
                  ((s = e),
                  !Q[`${p[0]}-${e}`] &&
                    this.utils &&
                    this.utils.hasLoadedNamespace &&
                    !this.utils.hasLoadedNamespace(s) &&
                    ((Q[`${p[0]}-${e}`] = !0),
                    this.logger.warn(
                      `key "${n}" for languages "${p.join(
                        ", "
                      )}" won't get resolved as namespace "${s}" was not yet loaded`,
                      "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                    )),
                  p.forEach((n) => {
                    let s;
                    if (this.isValidLookup(t)) return;
                    i = n;
                    let o = [l];
                    if (this.i18nFormat && this.i18nFormat.addLookupKeys)
                      this.i18nFormat.addLookupKeys(o, l, n, e, a);
                    else {
                      let e;
                      c && (e = this.pluralResolver.getSuffix(n, a.count, a));
                      let t = `${this.options.pluralSeparator}zero`,
                        r = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                      if (
                        (c &&
                          (o.push(l + e),
                          a.ordinal &&
                            0 === e.indexOf(r) &&
                            o.push(
                              l + e.replace(r, this.options.pluralSeparator)
                            ),
                          h && o.push(l + t)),
                        d)
                      ) {
                        let n = `${l}${this.options.contextSeparator}${a.context}`;
                        o.push(n),
                          c &&
                            (o.push(n + e),
                            a.ordinal &&
                              0 === e.indexOf(r) &&
                              o.push(
                                n + e.replace(r, this.options.pluralSeparator)
                              ),
                            h && o.push(n + t));
                      }
                    }
                    for (; (s = o.pop()); )
                      this.isValidLookup(t) ||
                        ((r = s), (t = this.getResource(n, e, s, a)));
                  }));
              });
            }),
            { res: t, usedKey: n, exactUsedKey: r, usedLng: i, usedNS: s }
          );
        }
        isValidLookup(e) {
          return (
            void 0 !== e &&
            !(!this.options.returnNull && null === e) &&
            !(!this.options.returnEmptyString && "" === e)
          );
        }
        getResource(e, t, n) {
          let r =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          return this.i18nFormat && this.i18nFormat.getResource
            ? this.i18nFormat.getResource(e, t, n, r)
            : this.resourceStore.getResource(e, t, n, r);
        }
        getUsedParamsDetails() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = e.replace && "string" != typeof e.replace,
            n = t ? e.replace : e;
          if (
            (t && void 0 !== e.count && (n.count = e.count),
            this.options.interpolation.defaultVariables &&
              (n = { ...this.options.interpolation.defaultVariables, ...n }),
            !t)
          )
            for (let e of ((n = { ...n }),
            [
              "defaultValue",
              "ordinal",
              "context",
              "replace",
              "lng",
              "lngs",
              "fallbackLng",
              "ns",
              "keySeparator",
              "nsSeparator",
              "returnObjects",
              "returnDetails",
              "joinArrays",
              "postProcess",
              "interpolation",
            ]))
              delete n[e];
          return n;
        }
        static hasDefaultValue(e) {
          let t = "defaultValue";
          for (let n in e)
            if (
              Object.prototype.hasOwnProperty.call(e, n) &&
              t === n.substring(0, t.length) &&
              void 0 !== e[n]
            )
              return !0;
          return !1;
        }
      }
      function et(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
      class en {
        constructor(e) {
          (this.options = e),
            (this.supportedLngs = this.options.supportedLngs || !1),
            (this.logger = F.create("languageUtils"));
        }
        getScriptPartFromCode(e) {
          if (!(e = J(e)) || 0 > e.indexOf("-")) return null;
          let t = e.split("-");
          return 2 === t.length
            ? null
            : (t.pop(), "x" === t[t.length - 1].toLowerCase())
            ? null
            : this.formatLanguageCode(t.join("-"));
        }
        getLanguagePartFromCode(e) {
          if (!(e = J(e)) || 0 > e.indexOf("-")) return e;
          let t = e.split("-");
          return this.formatLanguageCode(t[0]);
        }
        formatLanguageCode(e) {
          if ("string" == typeof e && e.indexOf("-") > -1) {
            let t = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"],
              n = e.split("-");
            return (
              this.options.lowerCaseLng
                ? (n = n.map((e) => e.toLowerCase()))
                : 2 === n.length
                ? ((n[0] = n[0].toLowerCase()),
                  (n[1] = n[1].toUpperCase()),
                  t.indexOf(n[1].toLowerCase()) > -1 &&
                    (n[1] = et(n[1].toLowerCase())))
                : 3 === n.length &&
                  ((n[0] = n[0].toLowerCase()),
                  2 === n[1].length && (n[1] = n[1].toUpperCase()),
                  "sgn" !== n[0] &&
                    2 === n[2].length &&
                    (n[2] = n[2].toUpperCase()),
                  t.indexOf(n[1].toLowerCase()) > -1 &&
                    (n[1] = et(n[1].toLowerCase())),
                  t.indexOf(n[2].toLowerCase()) > -1 &&
                    (n[2] = et(n[2].toLowerCase()))),
              n.join("-")
            );
          }
          return this.options.cleanCode || this.options.lowerCaseLng
            ? e.toLowerCase()
            : e;
        }
        isSupportedCode(e) {
          return (
            ("languageOnly" === this.options.load ||
              this.options.nonExplicitSupportedLngs) &&
              (e = this.getLanguagePartFromCode(e)),
            !this.supportedLngs ||
              !this.supportedLngs.length ||
              this.supportedLngs.indexOf(e) > -1
          );
        }
        getBestMatchFromCodes(e) {
          let t;
          return e
            ? (e.forEach((e) => {
                if (t) return;
                let n = this.formatLanguageCode(e);
                (!this.options.supportedLngs || this.isSupportedCode(n)) &&
                  (t = n);
              }),
              !t &&
                this.options.supportedLngs &&
                e.forEach((e) => {
                  if (t) return;
                  let n = this.getLanguagePartFromCode(e);
                  if (this.isSupportedCode(n)) return (t = n);
                  t = this.options.supportedLngs.find((e) => {
                    if (
                      e === n ||
                      (!(0 > e.indexOf("-") && 0 > n.indexOf("-")) &&
                        0 === e.indexOf(n))
                    )
                      return e;
                  });
                }),
              t || (t = this.getFallbackCodes(this.options.fallbackLng)[0]),
              t)
            : null;
        }
        getFallbackCodes(e, t) {
          if (!e) return [];
          if (
            ("function" == typeof e && (e = e(t)),
            "string" == typeof e && (e = [e]),
            "[object Array]" === Object.prototype.toString.apply(e))
          )
            return e;
          if (!t) return e.default || [];
          let n = e[t];
          return (
            n || (n = e[this.getScriptPartFromCode(t)]),
            n || (n = e[this.formatLanguageCode(t)]),
            n || (n = e[this.getLanguagePartFromCode(t)]),
            n || (n = e.default),
            n || []
          );
        }
        toResolveHierarchy(e, t) {
          let n = this.getFallbackCodes(t || this.options.fallbackLng || [], e),
            r = [],
            i = (e) => {
              e &&
                (this.isSupportedCode(e)
                  ? r.push(e)
                  : this.logger.warn(
                      `rejecting language code not found in supportedLngs: ${e}`
                    ));
            };
          return (
            "string" == typeof e && (e.indexOf("-") > -1 || e.indexOf("_") > -1)
              ? ("languageOnly" !== this.options.load &&
                  i(this.formatLanguageCode(e)),
                "languageOnly" !== this.options.load &&
                  "currentOnly" !== this.options.load &&
                  i(this.getScriptPartFromCode(e)),
                "currentOnly" !== this.options.load &&
                  i(this.getLanguagePartFromCode(e)))
              : "string" == typeof e && i(this.formatLanguageCode(e)),
            n.forEach((e) => {
              0 > r.indexOf(e) && i(this.formatLanguageCode(e));
            }),
            r
          );
        }
      }
      let er = [
          {
            lngs: [
              "ach",
              "ak",
              "am",
              "arn",
              "br",
              "fil",
              "gun",
              "ln",
              "mfe",
              "mg",
              "mi",
              "oc",
              "pt",
              "pt-BR",
              "tg",
              "tl",
              "ti",
              "tr",
              "uz",
              "wa",
            ],
            nr: [1, 2],
            fc: 1,
          },
          {
            lngs: [
              "af",
              "an",
              "ast",
              "az",
              "bg",
              "bn",
              "ca",
              "da",
              "de",
              "dev",
              "el",
              "en",
              "eo",
              "es",
              "et",
              "eu",
              "fi",
              "fo",
              "fur",
              "fy",
              "gl",
              "gu",
              "ha",
              "hi",
              "hu",
              "hy",
              "ia",
              "it",
              "kk",
              "kn",
              "ku",
              "lb",
              "mai",
              "ml",
              "mn",
              "mr",
              "nah",
              "nap",
              "nb",
              "ne",
              "nl",
              "nn",
              "no",
              "nso",
              "pa",
              "pap",
              "pms",
              "ps",
              "pt-PT",
              "rm",
              "sco",
              "se",
              "si",
              "so",
              "son",
              "sq",
              "sv",
              "sw",
              "ta",
              "te",
              "tk",
              "ur",
              "yo",
            ],
            nr: [1, 2],
            fc: 2,
          },
          {
            lngs: [
              "ay",
              "bo",
              "cgg",
              "fa",
              "ht",
              "id",
              "ja",
              "jbo",
              "ka",
              "km",
              "ko",
              "ky",
              "lo",
              "ms",
              "sah",
              "su",
              "th",
              "tt",
              "ug",
              "vi",
              "wo",
              "zh",
            ],
            nr: [1],
            fc: 3,
          },
          {
            lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
            nr: [1, 2, 5],
            fc: 4,
          },
          { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 },
          { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 },
          { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 },
          { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 },
          { lngs: ["fr"], nr: [1, 2], fc: 9 },
          { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 },
          { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 },
          { lngs: ["is"], nr: [1, 2], fc: 12 },
          { lngs: ["jv"], nr: [0, 1], fc: 13 },
          { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 },
          { lngs: ["lt"], nr: [1, 2, 10], fc: 15 },
          { lngs: ["lv"], nr: [1, 2, 0], fc: 16 },
          { lngs: ["mk"], nr: [1, 2], fc: 17 },
          { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 },
          { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 },
          { lngs: ["or"], nr: [2, 1], fc: 2 },
          { lngs: ["ro"], nr: [1, 2, 20], fc: 20 },
          { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 },
          { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 },
        ],
        ei = {
          1: function (e) {
            return Number(e > 1);
          },
          2: function (e) {
            return Number(1 != e);
          },
          3: function (e) {
            return 0;
          },
          4: function (e) {
            return Number(
              e % 10 == 1 && e % 100 != 11
                ? 0
                : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20)
                ? 1
                : 2
            );
          },
          5: function (e) {
            return Number(
              0 == e
                ? 0
                : 1 == e
                ? 1
                : 2 == e
                ? 2
                : e % 100 >= 3 && e % 100 <= 10
                ? 3
                : e % 100 >= 11
                ? 4
                : 5
            );
          },
          6: function (e) {
            return Number(1 == e ? 0 : e >= 2 && e <= 4 ? 1 : 2);
          },
          7: function (e) {
            return Number(
              1 == e
                ? 0
                : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20)
                ? 1
                : 2
            );
          },
          8: function (e) {
            return Number(1 == e ? 0 : 2 == e ? 1 : 8 != e && 11 != e ? 2 : 3);
          },
          9: function (e) {
            return Number(e >= 2);
          },
          10: function (e) {
            return Number(1 == e ? 0 : 2 == e ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4);
          },
          11: function (e) {
            return Number(
              1 == e || 11 == e
                ? 0
                : 2 == e || 12 == e
                ? 1
                : e > 2 && e < 20
                ? 2
                : 3
            );
          },
          12: function (e) {
            return Number(e % 10 != 1 || e % 100 == 11);
          },
          13: function (e) {
            return Number(0 !== e);
          },
          14: function (e) {
            return Number(1 == e ? 0 : 2 == e ? 1 : 3 == e ? 2 : 3);
          },
          15: function (e) {
            return Number(
              e % 10 == 1 && e % 100 != 11
                ? 0
                : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20)
                ? 1
                : 2
            );
          },
          16: function (e) {
            return Number(e % 10 == 1 && e % 100 != 11 ? 0 : 0 !== e ? 1 : 2);
          },
          17: function (e) {
            return Number(1 == e || (e % 10 == 1 && e % 100 != 11) ? 0 : 1);
          },
          18: function (e) {
            return Number(0 == e ? 0 : 1 == e ? 1 : 2);
          },
          19: function (e) {
            return Number(
              1 == e
                ? 0
                : 0 == e || (e % 100 > 1 && e % 100 < 11)
                ? 1
                : e % 100 > 10 && e % 100 < 20
                ? 2
                : 3
            );
          },
          20: function (e) {
            return Number(
              1 == e ? 0 : 0 == e || (e % 100 > 0 && e % 100 < 20) ? 1 : 2
            );
          },
          21: function (e) {
            return Number(
              e % 100 == 1
                ? 1
                : e % 100 == 2
                ? 2
                : e % 100 == 3 || e % 100 == 4
                ? 3
                : 0
            );
          },
          22: function (e) {
            return Number(
              1 == e ? 0 : 2 == e ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3
            );
          },
        },
        es = ["v1", "v2", "v3"],
        ea = ["v4"],
        eo = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 };
      class el {
        constructor(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.languageUtils = e),
            (this.options = t),
            (this.logger = F.create("pluralResolver")),
            (!this.options.compatibilityJSON ||
              ea.includes(this.options.compatibilityJSON)) &&
              ("undefined" == typeof Intl || !Intl.PluralRules) &&
              ((this.options.compatibilityJSON = "v3"),
              this.logger.error(
                "Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling."
              )),
            (this.rules = (function () {
              let e = {};
              return (
                er.forEach((t) => {
                  t.lngs.forEach((n) => {
                    e[n] = { numbers: t.nr, plurals: ei[t.fc] };
                  });
                }),
                e
              );
            })());
        }
        addRule(e, t) {
          this.rules[e] = t;
        }
        getRule(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (this.shouldUseIntlApi())
            try {
              return new Intl.PluralRules(J(e), {
                type: t.ordinal ? "ordinal" : "cardinal",
              });
            } catch {
              return;
            }
          return (
            this.rules[e] ||
            this.rules[this.languageUtils.getLanguagePartFromCode(e)]
          );
        }
        needsPlural(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = this.getRule(e, t);
          return this.shouldUseIntlApi()
            ? n && n.resolvedOptions().pluralCategories.length > 1
            : n && n.numbers.length > 1;
        }
        getPluralFormsOfKey(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          return this.getSuffixes(e, n).map((e) => `${t}${e}`);
        }
        getSuffixes(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = this.getRule(e, t);
          return n
            ? this.shouldUseIntlApi()
              ? n
                  .resolvedOptions()
                  .pluralCategories.sort((e, t) => eo[e] - eo[t])
                  .map(
                    (e) =>
                      `${this.options.prepend}${
                        t.ordinal ? `ordinal${this.options.prepend}` : ""
                      }${e}`
                  )
              : n.numbers.map((n) => this.getSuffix(e, n, t))
            : [];
        }
        getSuffix(e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            r = this.getRule(e, n);
          return r
            ? this.shouldUseIntlApi()
              ? `${this.options.prepend}${
                  n.ordinal ? `ordinal${this.options.prepend}` : ""
                }${r.select(t)}`
              : this.getSuffixRetroCompatible(r, t)
            : (this.logger.warn(`no plural rule found for: ${e}`), "");
        }
        getSuffixRetroCompatible(e, t) {
          let n = e.noAbs ? e.plurals(t) : e.plurals(Math.abs(t)),
            r = e.numbers[n];
          this.options.simplifyPluralSuffix &&
            2 === e.numbers.length &&
            1 === e.numbers[0] &&
            (2 === r ? (r = "plural") : 1 === r && (r = ""));
          let i = () =>
            this.options.prepend && r.toString()
              ? this.options.prepend + r.toString()
              : r.toString();
          return "v1" === this.options.compatibilityJSON
            ? 1 === r
              ? ""
              : "number" == typeof r
              ? `_plural_${r.toString()}`
              : i()
            : "v2" === this.options.compatibilityJSON ||
              (this.options.simplifyPluralSuffix &&
                2 === e.numbers.length &&
                1 === e.numbers[0])
            ? i()
            : this.options.prepend && n.toString()
            ? this.options.prepend + n.toString()
            : n.toString();
        }
        shouldUseIntlApi() {
          return !es.includes(this.options.compatibilityJSON);
        }
      }
      function eu(e, t, n) {
        let r =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : ".",
          i =
            !(arguments.length > 4) || void 0 === arguments[4] || arguments[4],
          s = (function (e, t, n) {
            let r = G(e, n);
            return void 0 !== r ? r : G(t, n);
          })(e, t, n);
        return (
          !s &&
            i &&
            "string" == typeof n &&
            void 0 === (s = Y(e, n, r)) &&
            (s = Y(t, n, r)),
          s
        );
      }
      class ec {
        constructor() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (this.logger = F.create("interpolator")),
            (this.options = e),
            (this.format =
              (e.interpolation && e.interpolation.format) || ((e) => e)),
            this.init(e);
        }
        init() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          e.interpolation || (e.interpolation = { escapeValue: !0 });
          let t = e.interpolation;
          (this.escape = void 0 !== t.escape ? t.escape : X),
            (this.escapeValue = void 0 === t.escapeValue || t.escapeValue),
            (this.useRawValueToEscape =
              void 0 !== t.useRawValueToEscape && t.useRawValueToEscape),
            (this.prefix = t.prefix ? W(t.prefix) : t.prefixEscaped || "{{"),
            (this.suffix = t.suffix ? W(t.suffix) : t.suffixEscaped || "}}"),
            (this.formatSeparator = t.formatSeparator
              ? t.formatSeparator
              : t.formatSeparator || ","),
            (this.unescapePrefix = t.unescapeSuffix
              ? ""
              : t.unescapePrefix || "-"),
            (this.unescapeSuffix = this.unescapePrefix
              ? ""
              : t.unescapeSuffix || ""),
            (this.nestingPrefix = t.nestingPrefix
              ? W(t.nestingPrefix)
              : t.nestingPrefixEscaped || W("$t(")),
            (this.nestingSuffix = t.nestingSuffix
              ? W(t.nestingSuffix)
              : t.nestingSuffixEscaped || W(")")),
            (this.nestingOptionsSeparator = t.nestingOptionsSeparator
              ? t.nestingOptionsSeparator
              : t.nestingOptionsSeparator || ","),
            (this.maxReplaces = t.maxReplaces ? t.maxReplaces : 1e3),
            (this.alwaysFormat = void 0 !== t.alwaysFormat && t.alwaysFormat),
            this.resetRegExp();
        }
        reset() {
          this.options && this.init(this.options);
        }
        resetRegExp() {
          let e = `${this.prefix}(.+?)${this.suffix}`;
          this.regexp = RegExp(e, "g");
          let t = `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;
          this.regexpUnescape = RegExp(t, "g");
          let n = `${this.nestingPrefix}(.+?)${this.nestingSuffix}`;
          this.nestingRegexp = RegExp(n, "g");
        }
        interpolate(e, t, n, r) {
          let i, s, a;
          let o =
            (this.options &&
              this.options.interpolation &&
              this.options.interpolation.defaultVariables) ||
            {};
          function l(e) {
            return e.replace(/\$/g, "$$$$");
          }
          let u = (e) => {
            if (0 > e.indexOf(this.formatSeparator)) {
              let i = eu(
                t,
                o,
                e,
                this.options.keySeparator,
                this.options.ignoreJSONStructure
              );
              return this.alwaysFormat
                ? this.format(i, void 0, n, { ...r, ...t, interpolationkey: e })
                : i;
            }
            let i = e.split(this.formatSeparator),
              s = i.shift().trim(),
              a = i.join(this.formatSeparator).trim();
            return this.format(
              eu(
                t,
                o,
                s,
                this.options.keySeparator,
                this.options.ignoreJSONStructure
              ),
              a,
              n,
              { ...r, ...t, interpolationkey: s }
            );
          };
          this.resetRegExp();
          let c =
              (r && r.missingInterpolationHandler) ||
              this.options.missingInterpolationHandler,
            h =
              r && r.interpolation && void 0 !== r.interpolation.skipOnVariables
                ? r.interpolation.skipOnVariables
                : this.options.interpolation.skipOnVariables,
            d = [
              { regex: this.regexpUnescape, safeValue: (e) => l(e) },
              {
                regex: this.regexp,
                safeValue: (e) => (this.escapeValue ? l(this.escape(e)) : l(e)),
              },
            ];
          return (
            d.forEach((t) => {
              for (a = 0; (i = t.regex.exec(e)); ) {
                let n = i[1].trim();
                if (void 0 === (s = u(n))) {
                  if ("function" == typeof c) {
                    let t = c(e, i, r);
                    s = "string" == typeof t ? t : "";
                  } else if (r && Object.prototype.hasOwnProperty.call(r, n))
                    s = "";
                  else if (h) {
                    s = i[0];
                    continue;
                  } else
                    this.logger.warn(
                      `missed to pass in variable ${n} for interpolating ${e}`
                    ),
                      (s = "");
                } else
                  "string" == typeof s ||
                    this.useRawValueToEscape ||
                    (s = V(s));
                let o = t.safeValue(s);
                if (
                  ((e = e.replace(i[0], o)),
                  h
                    ? ((t.regex.lastIndex += s.length),
                      (t.regex.lastIndex -= i[0].length))
                    : (t.regex.lastIndex = 0),
                  ++a >= this.maxReplaces)
                )
                  break;
              }
            }),
            e
          );
        }
        nest(e, t) {
          let n,
            r,
            i,
            s =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
          function a(e, t) {
            let n = this.nestingOptionsSeparator;
            if (0 > e.indexOf(n)) return e;
            let r = e.split(RegExp(`${n}[ ]*{`)),
              s = `{${r[1]}`;
            (e = r[0]), (s = this.interpolate(s, i));
            let a = s.match(/'/g),
              o = s.match(/"/g);
            ((a && a.length % 2 == 0 && !o) || o.length % 2 != 0) &&
              (s = s.replace(/'/g, '"'));
            try {
              (i = JSON.parse(s)), t && (i = { ...t, ...i });
            } catch (t) {
              return (
                this.logger.warn(
                  `failed parsing options string in nesting for key ${e}`,
                  t
                ),
                `${e}${n}${s}`
              );
            }
            return delete i.defaultValue, e;
          }
          for (; (n = this.nestingRegexp.exec(e)); ) {
            let o = [];
            ((i =
              (i = { ...s }).replace && "string" != typeof i.replace
                ? i.replace
                : i).applyPostProcessor = !1),
              delete i.defaultValue;
            let l = !1;
            if (
              -1 !== n[0].indexOf(this.formatSeparator) &&
              !/{.*}/.test(n[1])
            ) {
              let e = n[1].split(this.formatSeparator).map((e) => e.trim());
              (n[1] = e.shift()), (o = e), (l = !0);
            }
            if (
              (r = t(a.call(this, n[1].trim(), i), i)) &&
              n[0] === e &&
              "string" != typeof r
            )
              return r;
            "string" != typeof r && (r = V(r)),
              r ||
                (this.logger.warn(`missed to resolve ${n[1]} for nesting ${e}`),
                (r = "")),
              l &&
                (r = o.reduce(
                  (e, t) =>
                    this.format(e, t, s.lng, {
                      ...s,
                      interpolationkey: n[1].trim(),
                    }),
                  r.trim()
                )),
              (e = e.replace(n[0], r)),
              (this.regexp.lastIndex = 0);
          }
          return e;
        }
      }
      function eh(e) {
        let t = {};
        return function (n, r, i) {
          let s = r + JSON.stringify(i),
            a = t[s];
          return a || ((a = e(J(r), i)), (t[s] = a)), a(n);
        };
      }
      class ed {
        constructor() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (this.logger = F.create("formatter")),
            (this.options = e),
            (this.formats = {
              number: eh((e, t) => {
                let n = new Intl.NumberFormat(e, { ...t });
                return (e) => n.format(e);
              }),
              currency: eh((e, t) => {
                let n = new Intl.NumberFormat(e, { ...t, style: "currency" });
                return (e) => n.format(e);
              }),
              datetime: eh((e, t) => {
                let n = new Intl.DateTimeFormat(e, { ...t });
                return (e) => n.format(e);
              }),
              relativetime: eh((e, t) => {
                let n = new Intl.RelativeTimeFormat(e, { ...t });
                return (e) => n.format(e, t.range || "day");
              }),
              list: eh((e, t) => {
                let n = new Intl.ListFormat(e, { ...t });
                return (e) => n.format(e);
              }),
            }),
            this.init(e);
        }
        init(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : { interpolation: {} },
            n = t.interpolation;
          this.formatSeparator = n.formatSeparator
            ? n.formatSeparator
            : n.formatSeparator || ",";
        }
        add(e, t) {
          this.formats[e.toLowerCase().trim()] = t;
        }
        addCached(e, t) {
          this.formats[e.toLowerCase().trim()] = eh(t);
        }
        format(e, t, n) {
          let r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            i = t.split(this.formatSeparator),
            s = i.reduce((e, t) => {
              let { formatName: i, formatOptions: s } = (function (e) {
                let t = e.toLowerCase().trim(),
                  n = {};
                if (e.indexOf("(") > -1) {
                  let r = e.split("(");
                  t = r[0].toLowerCase().trim();
                  let i = r[1].substring(0, r[1].length - 1);
                  if ("currency" === t && 0 > i.indexOf(":"))
                    n.currency || (n.currency = i.trim());
                  else if ("relativetime" === t && 0 > i.indexOf(":"))
                    n.range || (n.range = i.trim());
                  else {
                    let e = i.split(";");
                    e.forEach((e) => {
                      if (!e) return;
                      let [t, ...r] = e.split(":"),
                        i = r
                          .join(":")
                          .trim()
                          .replace(/^'+|'+$/g, "");
                      n[t.trim()] || (n[t.trim()] = i),
                        "false" === i && (n[t.trim()] = !1),
                        "true" === i && (n[t.trim()] = !0),
                        isNaN(i) || (n[t.trim()] = parseInt(i, 10));
                    });
                  }
                }
                return { formatName: t, formatOptions: n };
              })(t);
              if (this.formats[i]) {
                let t = e;
                try {
                  let a =
                      (r &&
                        r.formatParams &&
                        r.formatParams[r.interpolationkey]) ||
                      {},
                    o = a.locale || a.lng || r.locale || r.lng || n;
                  t = this.formats[i](e, o, { ...s, ...r, ...a });
                } catch (e) {
                  this.logger.warn(e);
                }
                return t;
              }
              return (
                this.logger.warn(`there was no format function for ${i}`), e
              );
            }, e);
          return s;
        }
      }
      class ep extends z {
        constructor(e, t, n) {
          let r =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          super(),
            (this.backend = e),
            (this.store = t),
            (this.services = n),
            (this.languageUtils = n.languageUtils),
            (this.options = r),
            (this.logger = F.create("backendConnector")),
            (this.waitingReads = []),
            (this.maxParallelReads = r.maxParallelReads || 10),
            (this.readingCalls = 0),
            (this.maxRetries = r.maxRetries >= 0 ? r.maxRetries : 5),
            (this.retryTimeout = r.retryTimeout >= 1 ? r.retryTimeout : 350),
            (this.state = {}),
            (this.queue = []),
            this.backend &&
              this.backend.init &&
              this.backend.init(n, r.backend, r);
        }
        queueLoad(e, t, n, r) {
          let i = {},
            s = {},
            a = {},
            o = {};
          return (
            e.forEach((e) => {
              let r = !0;
              t.forEach((t) => {
                let a = `${e}|${t}`;
                !n.reload && this.store.hasResourceBundle(e, t)
                  ? (this.state[a] = 2)
                  : this.state[a] < 0 ||
                    (1 === this.state[a]
                      ? void 0 === s[a] && (s[a] = !0)
                      : ((this.state[a] = 1),
                        (r = !1),
                        void 0 === s[a] && (s[a] = !0),
                        void 0 === i[a] && (i[a] = !0),
                        void 0 === o[t] && (o[t] = !0)));
              }),
                r || (a[e] = !0);
            }),
            (Object.keys(i).length || Object.keys(s).length) &&
              this.queue.push({
                pending: s,
                pendingCount: Object.keys(s).length,
                loaded: {},
                errors: [],
                callback: r,
              }),
            {
              toLoad: Object.keys(i),
              pending: Object.keys(s),
              toLoadLanguages: Object.keys(a),
              toLoadNamespaces: Object.keys(o),
            }
          );
        }
        loaded(e, t, n) {
          let r = e.split("|"),
            i = r[0],
            s = r[1];
          t && this.emit("failedLoading", i, s, t),
            n && this.store.addResourceBundle(i, s, n),
            (this.state[e] = t ? -1 : 2);
          let a = {};
          this.queue.forEach((n) => {
            (function (e, t, n, r) {
              let { obj: i, k: s } = j(e, t, Object);
              (i[s] = i[s] || []),
                r && (i[s] = i[s].concat(n)),
                r || i[s].push(n);
            })(n.loaded, [i], s),
              void 0 !== n.pending[e] &&
                (delete n.pending[e], n.pendingCount--),
              t && n.errors.push(t),
              0 !== n.pendingCount ||
                n.done ||
                (Object.keys(n.loaded).forEach((e) => {
                  a[e] || (a[e] = {});
                  let t = n.loaded[e];
                  t.length &&
                    t.forEach((t) => {
                      void 0 === a[e][t] && (a[e][t] = !0);
                    });
                }),
                (n.done = !0),
                n.errors.length ? n.callback(n.errors) : n.callback());
          }),
            this.emit("loaded", a),
            (this.queue = this.queue.filter((e) => !e.done));
        }
        read(e, t, n) {
          let r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 0,
            i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : this.retryTimeout,
            s = arguments.length > 5 ? arguments[5] : void 0;
          if (!e.length) return s(null, {});
          if (this.readingCalls >= this.maxParallelReads) {
            this.waitingReads.push({
              lng: e,
              ns: t,
              fcName: n,
              tried: r,
              wait: i,
              callback: s,
            });
            return;
          }
          this.readingCalls++;
          let a = (a, o) => {
              if ((this.readingCalls--, this.waitingReads.length > 0)) {
                let e = this.waitingReads.shift();
                this.read(e.lng, e.ns, e.fcName, e.tried, e.wait, e.callback);
              }
              if (a && o && r < this.maxRetries) {
                setTimeout(() => {
                  this.read.call(this, e, t, n, r + 1, 2 * i, s);
                }, i);
                return;
              }
              s(a, o);
            },
            o = this.backend[n].bind(this.backend);
          if (2 === o.length) {
            try {
              let n = o(e, t);
              n && "function" == typeof n.then
                ? n.then((e) => a(null, e)).catch(a)
                : a(null, n);
            } catch (e) {
              a(e);
            }
            return;
          }
          return o(e, t, a);
        }
        prepareLoading(e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            r = arguments.length > 3 ? arguments[3] : void 0;
          if (!this.backend)
            return (
              this.logger.warn(
                "No backend was added via i18next.use. Will not load resources."
              ),
              r && r()
            );
          "string" == typeof e &&
            (e = this.languageUtils.toResolveHierarchy(e)),
            "string" == typeof t && (t = [t]);
          let i = this.queueLoad(e, t, n, r);
          if (!i.toLoad.length) return i.pending.length || r(), null;
          i.toLoad.forEach((e) => {
            this.loadOne(e);
          });
        }
        load(e, t, n) {
          this.prepareLoading(e, t, {}, n);
        }
        reload(e, t, n) {
          this.prepareLoading(e, t, { reload: !0 }, n);
        }
        loadOne(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "",
            n = e.split("|"),
            r = n[0],
            i = n[1];
          this.read(r, i, "read", void 0, void 0, (n, s) => {
            n &&
              this.logger.warn(
                `${t}loading namespace ${i} for language ${r} failed`,
                n
              ),
              !n &&
                s &&
                this.logger.log(
                  `${t}loaded namespace ${i} for language ${r}`,
                  s
                ),
              this.loaded(e, n, s);
          });
        }
        saveMissing(e, t, n, r, i) {
          let s =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : {},
            a =
              arguments.length > 6 && void 0 !== arguments[6]
                ? arguments[6]
                : () => {};
          if (
            this.services.utils &&
            this.services.utils.hasLoadedNamespace &&
            !this.services.utils.hasLoadedNamespace(t)
          ) {
            this.logger.warn(
              `did not save key "${n}" as the namespace "${t}" was not yet loaded`,
              "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
            );
            return;
          }
          if (null != n && "" !== n) {
            if (this.backend && this.backend.create) {
              let o = { ...s, isUpdate: i },
                l = this.backend.create.bind(this.backend);
              if (l.length < 6)
                try {
                  let i;
                  (i = 5 === l.length ? l(e, t, n, r, o) : l(e, t, n, r)) &&
                  "function" == typeof i.then
                    ? i.then((e) => a(null, e)).catch(a)
                    : a(null, i);
                } catch (e) {
                  a(e);
                }
              else l(e, t, n, r, a, o);
            }
            e && e[0] && this.store.addResource(e[0], t, n, r);
          }
        }
      }
      function ef() {
        return {
          debug: !1,
          initImmediate: !0,
          ns: ["translation"],
          defaultNS: ["translation"],
          fallbackLng: ["dev"],
          fallbackNS: !1,
          supportedLngs: !1,
          nonExplicitSupportedLngs: !1,
          load: "all",
          preload: !1,
          simplifyPluralSuffix: !0,
          keySeparator: ".",
          nsSeparator: ":",
          pluralSeparator: "_",
          contextSeparator: "_",
          partialBundledLanguages: !1,
          saveMissing: !1,
          updateMissing: !1,
          saveMissingTo: "fallback",
          saveMissingPlurals: !0,
          missingKeyHandler: !1,
          missingInterpolationHandler: !1,
          postProcess: !1,
          postProcessPassResolved: !1,
          returnNull: !1,
          returnEmptyString: !0,
          returnObjects: !1,
          joinArrays: !1,
          returnedObjectHandler: !1,
          parseMissingKeyHandler: !1,
          appendNamespaceToMissingKey: !1,
          appendNamespaceToCIMode: !1,
          overloadTranslationOptionHandler: function (e) {
            let t = {};
            if (
              ("object" == typeof e[1] && (t = e[1]),
              "string" == typeof e[1] && (t.defaultValue = e[1]),
              "string" == typeof e[2] && (t.tDescription = e[2]),
              "object" == typeof e[2] || "object" == typeof e[3])
            ) {
              let n = e[3] || e[2];
              Object.keys(n).forEach((e) => {
                t[e] = n[e];
              });
            }
            return t;
          },
          interpolation: {
            escapeValue: !0,
            format: (e, t, n, r) => e,
            prefix: "{{",
            suffix: "}}",
            formatSeparator: ",",
            unescapePrefix: "-",
            nestingPrefix: "$t(",
            nestingSuffix: ")",
            nestingOptionsSeparator: ",",
            maxReplaces: 1e3,
            skipOnVariables: !0,
          },
        };
      }
      function em(e) {
        return (
          "string" == typeof e.ns && (e.ns = [e.ns]),
          "string" == typeof e.fallbackLng && (e.fallbackLng = [e.fallbackLng]),
          "string" == typeof e.fallbackNS && (e.fallbackNS = [e.fallbackNS]),
          e.supportedLngs &&
            0 > e.supportedLngs.indexOf("cimode") &&
            (e.supportedLngs = e.supportedLngs.concat(["cimode"])),
          e
        );
      }
      function eg() {}
      class e_ extends z {
        constructor() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 ? arguments[1] : void 0;
          if (
            (super(),
            (this.options = em(e)),
            (this.services = {}),
            (this.logger = F),
            (this.modules = { external: [] }),
            !(function (e) {
              let t = Object.getOwnPropertyNames(Object.getPrototypeOf(e));
              t.forEach((t) => {
                "function" == typeof e[t] && (e[t] = e[t].bind(e));
              });
            })(this),
            t && !this.isInitialized && !e.isClone)
          ) {
            if (!this.options.initImmediate) return this.init(e, t), this;
            setTimeout(() => {
              this.init(e, t);
            }, 0);
          }
        }
        init() {
          var e = this;
          let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            n = arguments.length > 1 ? arguments[1] : void 0;
          "function" == typeof t && ((n = t), (t = {})),
            !t.defaultNS &&
              !1 !== t.defaultNS &&
              t.ns &&
              ("string" == typeof t.ns
                ? (t.defaultNS = t.ns)
                : 0 > t.ns.indexOf("translation") && (t.defaultNS = t.ns[0]));
          let r = ef();
          function i(e) {
            return e ? ("function" == typeof e ? new e() : e) : null;
          }
          if (
            ((this.options = { ...r, ...this.options, ...em(t) }),
            "v1" !== this.options.compatibilityAPI &&
              (this.options.interpolation = {
                ...r.interpolation,
                ...this.options.interpolation,
              }),
            void 0 !== t.keySeparator &&
              (this.options.userDefinedKeySeparator = t.keySeparator),
            void 0 !== t.nsSeparator &&
              (this.options.userDefinedNsSeparator = t.nsSeparator),
            !this.options.isClone)
          ) {
            let t;
            this.modules.logger
              ? F.init(i(this.modules.logger), this.options)
              : F.init(null, this.options),
              this.modules.formatter
                ? (t = this.modules.formatter)
                : "undefined" != typeof Intl && (t = ed);
            let n = new en(this.options);
            this.store = new Z(this.options.resources, this.options);
            let s = this.services;
            (s.logger = F),
              (s.resourceStore = this.store),
              (s.languageUtils = n),
              (s.pluralResolver = new el(n, {
                prepend: this.options.pluralSeparator,
                compatibilityJSON: this.options.compatibilityJSON,
                simplifyPluralSuffix: this.options.simplifyPluralSuffix,
              })),
              t &&
                (!this.options.interpolation.format ||
                  this.options.interpolation.format ===
                    r.interpolation.format) &&
                ((s.formatter = i(t)),
                s.formatter.init(s, this.options),
                (this.options.interpolation.format = s.formatter.format.bind(
                  s.formatter
                ))),
              (s.interpolator = new ec(this.options)),
              (s.utils = {
                hasLoadedNamespace: this.hasLoadedNamespace.bind(this),
              }),
              (s.backendConnector = new ep(
                i(this.modules.backend),
                s.resourceStore,
                s,
                this.options
              )),
              s.backendConnector.on("*", function (t) {
                for (
                  var n = arguments.length, r = Array(n > 1 ? n - 1 : 0), i = 1;
                  i < n;
                  i++
                )
                  r[i - 1] = arguments[i];
                e.emit(t, ...r);
              }),
              this.modules.languageDetector &&
                ((s.languageDetector = i(this.modules.languageDetector)),
                s.languageDetector.init &&
                  s.languageDetector.init(
                    s,
                    this.options.detection,
                    this.options
                  )),
              this.modules.i18nFormat &&
                ((s.i18nFormat = i(this.modules.i18nFormat)),
                s.i18nFormat.init && s.i18nFormat.init(this)),
              (this.translator = new ee(this.services, this.options)),
              this.translator.on("*", function (t) {
                for (
                  var n = arguments.length, r = Array(n > 1 ? n - 1 : 0), i = 1;
                  i < n;
                  i++
                )
                  r[i - 1] = arguments[i];
                e.emit(t, ...r);
              }),
              this.modules.external.forEach((e) => {
                e.init && e.init(this);
              });
          }
          if (
            ((this.format = this.options.interpolation.format),
            n || (n = eg),
            this.options.fallbackLng &&
              !this.services.languageDetector &&
              !this.options.lng)
          ) {
            let e = this.services.languageUtils.getFallbackCodes(
              this.options.fallbackLng
            );
            e.length > 0 && "dev" !== e[0] && (this.options.lng = e[0]);
          }
          this.services.languageDetector ||
            this.options.lng ||
            this.logger.warn(
              "init: no languageDetector is used and no lng is defined"
            ),
            [
              "getResource",
              "hasResourceBundle",
              "getResourceBundle",
              "getDataByLanguage",
            ].forEach((t) => {
              this[t] = function () {
                return e.store[t](...arguments);
              };
            }),
            [
              "addResource",
              "addResources",
              "addResourceBundle",
              "removeResourceBundle",
            ].forEach((t) => {
              this[t] = function () {
                return e.store[t](...arguments), e;
              };
            });
          let s = B(),
            a = () => {
              let e = (e, t) => {
                this.isInitialized &&
                  !this.initializedStoreOnce &&
                  this.logger.warn(
                    "init: i18next is already initialized. You should call init just once!"
                  ),
                  (this.isInitialized = !0),
                  this.options.isClone ||
                    this.logger.log("initialized", this.options),
                  this.emit("initialized", this.options),
                  s.resolve(t),
                  n(e, t);
              };
              if (
                this.languages &&
                "v1" !== this.options.compatibilityAPI &&
                !this.isInitialized
              )
                return e(null, this.t.bind(this));
              this.changeLanguage(this.options.lng, e);
            };
          return (
            this.options.resources || !this.options.initImmediate
              ? a()
              : setTimeout(a, 0),
            s
          );
        }
        loadResources(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : eg,
            n = t,
            r = "string" == typeof e ? e : this.language;
          if (
            ("function" == typeof e && (n = e),
            !this.options.resources || this.options.partialBundledLanguages)
          ) {
            if (
              r &&
              "cimode" === r.toLowerCase() &&
              (!this.options.preload || 0 === this.options.preload.length)
            )
              return n();
            let e = [],
              t = (t) => {
                if (!t || "cimode" === t) return;
                let n = this.services.languageUtils.toResolveHierarchy(t);
                n.forEach((t) => {
                  "cimode" !== t && 0 > e.indexOf(t) && e.push(t);
                });
              };
            if (r) t(r);
            else {
              let e = this.services.languageUtils.getFallbackCodes(
                this.options.fallbackLng
              );
              e.forEach((e) => t(e));
            }
            this.options.preload && this.options.preload.forEach((e) => t(e)),
              this.services.backendConnector.load(e, this.options.ns, (e) => {
                e ||
                  this.resolvedLanguage ||
                  !this.language ||
                  this.setResolvedLanguage(this.language),
                  n(e);
              });
          } else n(null);
        }
        reloadResources(e, t, n) {
          let r = B();
          return (
            e || (e = this.languages),
            t || (t = this.options.ns),
            n || (n = eg),
            this.services.backendConnector.reload(e, t, (e) => {
              r.resolve(), n(e);
            }),
            r
          );
        }
        use(e) {
          if (!e)
            throw Error(
              "You are passing an undefined module! Please check the object you are passing to i18next.use()"
            );
          if (!e.type)
            throw Error(
              "You are passing a wrong module! Please check the object you are passing to i18next.use()"
            );
          return (
            "backend" === e.type && (this.modules.backend = e),
            ("logger" === e.type || (e.log && e.warn && e.error)) &&
              (this.modules.logger = e),
            "languageDetector" === e.type &&
              (this.modules.languageDetector = e),
            "i18nFormat" === e.type && (this.modules.i18nFormat = e),
            "postProcessor" === e.type && K.addPostProcessor(e),
            "formatter" === e.type && (this.modules.formatter = e),
            "3rdParty" === e.type && this.modules.external.push(e),
            this
          );
        }
        setResolvedLanguage(e) {
          if (e && this.languages && !(["cimode", "dev"].indexOf(e) > -1))
            for (let e = 0; e < this.languages.length; e++) {
              let t = this.languages[e];
              if (
                !(["cimode", "dev"].indexOf(t) > -1) &&
                this.store.hasLanguageSomeTranslations(t)
              ) {
                this.resolvedLanguage = t;
                break;
              }
            }
        }
        changeLanguage(e, t) {
          var n = this;
          this.isLanguageChangingTo = e;
          let r = B();
          this.emit("languageChanging", e);
          let i = (e) => {
              (this.language = e),
                (this.languages =
                  this.services.languageUtils.toResolveHierarchy(e)),
                (this.resolvedLanguage = void 0),
                this.setResolvedLanguage(e);
            },
            s = (e, s) => {
              s
                ? (i(s),
                  this.translator.changeLanguage(s),
                  (this.isLanguageChangingTo = void 0),
                  this.emit("languageChanged", s),
                  this.logger.log("languageChanged", s))
                : (this.isLanguageChangingTo = void 0),
                r.resolve(function () {
                  return n.t(...arguments);
                }),
                t &&
                  t(e, function () {
                    return n.t(...arguments);
                  });
            },
            a = (t) => {
              e || t || !this.services.languageDetector || (t = []);
              let n =
                "string" == typeof t
                  ? t
                  : this.services.languageUtils.getBestMatchFromCodes(t);
              n &&
                (this.language || i(n),
                this.translator.language || this.translator.changeLanguage(n),
                this.services.languageDetector &&
                  this.services.languageDetector.cacheUserLanguage &&
                  this.services.languageDetector.cacheUserLanguage(n)),
                this.loadResources(n, (e) => {
                  s(e, n);
                });
            };
          return (
            e ||
            !this.services.languageDetector ||
            this.services.languageDetector.async
              ? !e &&
                this.services.languageDetector &&
                this.services.languageDetector.async
                ? 0 === this.services.languageDetector.detect.length
                  ? this.services.languageDetector.detect().then(a)
                  : this.services.languageDetector.detect(a)
                : a(e)
              : a(this.services.languageDetector.detect()),
            r
          );
        }
        getFixedT(e, t, n) {
          var r = this;
          let i = function (e, t) {
            let s, a;
            if ("object" != typeof t) {
              for (
                var o = arguments.length, l = Array(o > 2 ? o - 2 : 0), u = 2;
                u < o;
                u++
              )
                l[u - 2] = arguments[u];
              s = r.options.overloadTranslationOptionHandler([e, t].concat(l));
            } else s = { ...t };
            (s.lng = s.lng || i.lng),
              (s.lngs = s.lngs || i.lngs),
              (s.ns = s.ns || i.ns),
              (s.keyPrefix = s.keyPrefix || n || i.keyPrefix);
            let c = r.options.keySeparator || ".";
            return (
              (a =
                s.keyPrefix && Array.isArray(e)
                  ? e.map((e) => `${s.keyPrefix}${c}${e}`)
                  : s.keyPrefix
                  ? `${s.keyPrefix}${c}${e}`
                  : e),
              r.t(a, s)
            );
          };
          return (
            "string" == typeof e ? (i.lng = e) : (i.lngs = e),
            (i.ns = t),
            (i.keyPrefix = n),
            i
          );
        }
        t() {
          return this.translator && this.translator.translate(...arguments);
        }
        exists() {
          return this.translator && this.translator.exists(...arguments);
        }
        setDefaultNamespace(e) {
          this.options.defaultNS = e;
        }
        hasLoadedNamespace(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!this.isInitialized)
            return (
              this.logger.warn(
                "hasLoadedNamespace: i18next was not initialized",
                this.languages
              ),
              !1
            );
          if (!this.languages || !this.languages.length)
            return (
              this.logger.warn(
                "hasLoadedNamespace: i18n.languages were undefined or empty",
                this.languages
              ),
              !1
            );
          let n = t.lng || this.resolvedLanguage || this.languages[0],
            r = !!this.options && this.options.fallbackLng,
            i = this.languages[this.languages.length - 1];
          if ("cimode" === n.toLowerCase()) return !0;
          let s = (e, t) => {
            let n = this.services.backendConnector.state[`${e}|${t}`];
            return -1 === n || 2 === n;
          };
          if (t.precheck) {
            let e = t.precheck(this, s);
            if (void 0 !== e) return e;
          }
          return !!(
            this.hasResourceBundle(n, e) ||
            !this.services.backendConnector.backend ||
            (this.options.resources && !this.options.partialBundledLanguages) ||
            (s(n, e) && (!r || s(i, e)))
          );
        }
        loadNamespaces(e, t) {
          let n = B();
          return this.options.ns
            ? ("string" == typeof e && (e = [e]),
              e.forEach((e) => {
                0 > this.options.ns.indexOf(e) && this.options.ns.push(e);
              }),
              this.loadResources((e) => {
                n.resolve(), t && t(e);
              }),
              n)
            : (t && t(), Promise.resolve());
        }
        loadLanguages(e, t) {
          let n = B();
          "string" == typeof e && (e = [e]);
          let r = this.options.preload || [],
            i = e.filter((e) => 0 > r.indexOf(e));
          return i.length
            ? ((this.options.preload = r.concat(i)),
              this.loadResources((e) => {
                n.resolve(), t && t(e);
              }),
              n)
            : (t && t(), Promise.resolve());
        }
        dir(e) {
          if (
            (e ||
              (e =
                this.resolvedLanguage ||
                (this.languages && this.languages.length > 0
                  ? this.languages[0]
                  : this.language)),
            !e)
          )
            return "rtl";
          let t =
            (this.services && this.services.languageUtils) || new en(ef());
          return [
            "ar",
            "shu",
            "sqr",
            "ssh",
            "xaa",
            "yhd",
            "yud",
            "aao",
            "abh",
            "abv",
            "acm",
            "acq",
            "acw",
            "acx",
            "acy",
            "adf",
            "ads",
            "aeb",
            "aec",
            "afb",
            "ajp",
            "apc",
            "apd",
            "arb",
            "arq",
            "ars",
            "ary",
            "arz",
            "auz",
            "avl",
            "ayh",
            "ayl",
            "ayn",
            "ayp",
            "bbz",
            "pga",
            "he",
            "iw",
            "ps",
            "pbt",
            "pbu",
            "pst",
            "prp",
            "prd",
            "ug",
            "ur",
            "ydd",
            "yds",
            "yih",
            "ji",
            "yi",
            "hbo",
            "men",
            "xmn",
            "fa",
            "jpr",
            "peo",
            "pes",
            "prs",
            "dv",
            "sam",
            "ckb",
          ].indexOf(t.getLanguagePartFromCode(e)) > -1 ||
            e.toLowerCase().indexOf("-arab") > 1
            ? "rtl"
            : "ltr";
        }
        static createInstance() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 ? arguments[1] : void 0;
          return new e_(e, t);
        }
        cloneInstance() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : eg,
            n = e.forkResourceStore;
          n && delete e.forkResourceStore;
          let r = { ...this.options, ...e, isClone: !0 },
            i = new e_(r);
          return (
            (void 0 !== e.debug || void 0 !== e.prefix) &&
              (i.logger = i.logger.clone(e)),
            ["store", "services", "language"].forEach((e) => {
              i[e] = this[e];
            }),
            (i.services = { ...this.services }),
            (i.services.utils = {
              hasLoadedNamespace: i.hasLoadedNamespace.bind(i),
            }),
            n &&
              ((i.store = new Z(this.store.data, r)),
              (i.services.resourceStore = i.store)),
            (i.translator = new ee(i.services, r)),
            i.translator.on("*", function (e) {
              for (
                var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1;
                r < t;
                r++
              )
                n[r - 1] = arguments[r];
              i.emit(e, ...n);
            }),
            i.init(r, t),
            (i.translator.options = r),
            (i.translator.backendConnector.services.utils = {
              hasLoadedNamespace: i.hasLoadedNamespace.bind(i),
            }),
            i
          );
        }
        toJSON() {
          return {
            options: this.options,
            store: this.store,
            language: this.language,
            languages: this.languages,
            resolvedLanguage: this.resolvedLanguage,
          };
        }
      }
      let ev = e_.createInstance();
      (ev.createInstance = e_.createInstance),
        ev.createInstance,
        ev.dir,
        ev.init,
        ev.loadResources,
        ev.reloadResources,
        ev.use,
        ev.changeLanguage,
        ev.getFixedT,
        ev.t,
        ev.exists,
        ev.setDefaultNamespace,
        ev.hasLoadedNamespace,
        ev.loadNamespaces,
        ev.loadLanguages;
      var ey = function (e) {
          void 0 === e.ns && (e.ns = []);
          var t,
            n,
            r = ev.createInstance(e);
          return (
            r.isInitialized
              ? (t = Promise.resolve(ev.t))
              : (null == e ||
                  null === (n = e.use) ||
                  void 0 === n ||
                  n.forEach(function (e) {
                    return r.use(e);
                  }),
                "function" == typeof e.onPreInitI18next &&
                  e.onPreInitI18next(r),
                (t = r.init(e))),
            { i18n: r, initPromise: t }
          );
        },
        ex = i.createElement;
      function eb(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function eS(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? eb(Object(n), !0).forEach(function (t) {
                b(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : eb(Object(n)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      var eE = null,
        eM = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          return E()(function (n) {
            var r,
              s,
              a = (n.pageProps || {})._nextI18Next,
              o =
                null !== (r = null == a ? void 0 : a.initialLocale) &&
                void 0 !== r
                  ? r
                  : null == n
                  ? void 0
                  : null === (s = n.router) || void 0 === s
                  ? void 0
                  : s.locale,
              l = null == a ? void 0 : a.ns,
              u = (0, i.useMemo)(
                function () {
                  if (!a && !t) return null;
                  var e,
                    n = null != t ? t : null == a ? void 0 : a.userConfig;
                  if (!n)
                    throw Error(
                      "appWithTranslation was called without a next-i18next config"
                    );
                  if (!(null != n && n.i18n))
                    throw Error(
                      "appWithTranslation was called without config.i18n"
                    );
                  if (
                    !(
                      null != n &&
                      null !== (e = n.i18n) &&
                      void 0 !== e &&
                      e.defaultLocale
                    )
                  )
                    throw Error(
                      "config.i18n does not include a defaultLocale property"
                    );
                  var r = (a || {}).initialI18nStore,
                    i = null != t && t.resources ? t.resources : r;
                  o || (o = n.i18n.defaultLocale);
                  var s = ey(
                    eS(
                      eS({}, D(eS(eS({}, n), {}, { lng: o }))),
                      {},
                      { lng: o, ns: l, resources: i }
                    )
                  ).i18n;
                  return (eE = s), s;
                },
                [a, o, t, l]
              );
            return null !== u
              ? ex(v, { i18n: u }, ex(e, n))
              : ex(e, (0, y.Z)({ key: o }, n));
          }, e);
        };
    },
    314: function (e, t, n) {
      e.exports = n(4035);
    },
    6570: function (e, t, n) {
      (window.__NEXT_P = window.__NEXT_P || []).push([
        "/_app",
        function () {
          return n(9456);
        },
      ]);
    },
    3116: function (e, t) {
      "use strict";
      var n, r;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (function (e, t) {
          for (var n in t)
            Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
        })(t, {
          PrefetchKind: function () {
            return n;
          },
          ACTION_REFRESH: function () {
            return i;
          },
          ACTION_NAVIGATE: function () {
            return s;
          },
          ACTION_RESTORE: function () {
            return a;
          },
          ACTION_SERVER_PATCH: function () {
            return o;
          },
          ACTION_PREFETCH: function () {
            return l;
          },
          ACTION_FAST_REFRESH: function () {
            return u;
          },
          ACTION_SERVER_ACTION: function () {
            return c;
          },
        });
      let i = "refresh",
        s = "navigate",
        a = "restore",
        o = "server-patch",
        l = "prefetch",
        u = "fast-refresh",
        c = "server-action";
      ((r = n || (n = {})).AUTO = "auto"),
        (r.FULL = "full"),
        (r.TEMPORARY = "temporary"),
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
    },
    5146: function (e, t, n) {
      "use strict";
      function r(e, t, n, r) {
        return !1;
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getDomainLocale", {
          enumerable: !0,
          get: function () {
            return r;
          },
        }),
        n(7858),
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
    },
    920: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "Image", {
          enumerable: !0,
          get: function () {
            return v;
          },
        });
      let r = n(3219),
        i = n(6794),
        s = i._(n(2784)),
        a = r._(n(8316)),
        o = r._(n(7412)),
        l = n(1918),
        u = n(7686),
        c = n(5802);
      n(4759);
      let h = n(4365),
        d = r._(n(2088)),
        p = {
          deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
          imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
          path: "/_next/image",
          loader: "default",
          dangerouslyAllowSVG: !1,
          unoptimized: !1,
        };
      function f(e, t, n, r, i, s) {
        let a = null == e ? void 0 : e.src;
        if (!e || e["data-loaded-src"] === a) return;
        e["data-loaded-src"] = a;
        let o = "decode" in e ? e.decode() : Promise.resolve();
        o.catch(() => {}).then(() => {
          if (e.parentElement && e.isConnected) {
            if (("empty" !== t && i(!0), null == n ? void 0 : n.current)) {
              let t = new Event("load");
              Object.defineProperty(t, "target", { writable: !1, value: e });
              let r = !1,
                i = !1;
              n.current({
                ...t,
                nativeEvent: t,
                currentTarget: e,
                target: e,
                isDefaultPrevented: () => r,
                isPropagationStopped: () => i,
                persist: () => {},
                preventDefault: () => {
                  (r = !0), t.preventDefault();
                },
                stopPropagation: () => {
                  (i = !0), t.stopPropagation();
                },
              });
            }
            (null == r ? void 0 : r.current) && r.current(e);
          }
        });
      }
      function m(e) {
        let [t, n] = s.version.split("."),
          r = parseInt(t, 10),
          i = parseInt(n, 10);
        return r > 18 || (18 === r && i >= 3)
          ? { fetchPriority: e }
          : { fetchpriority: e };
      }
      let g = (0, s.forwardRef)((e, t) => {
        let {
          src: n,
          srcSet: r,
          sizes: i,
          height: a,
          width: o,
          decoding: l,
          className: u,
          style: c,
          fetchPriority: h,
          placeholder: d,
          loading: p,
          unoptimized: g,
          fill: _,
          onLoadRef: v,
          onLoadingCompleteRef: y,
          setBlurComplete: x,
          setShowAltText: b,
          onLoad: S,
          onError: E,
          ...M
        } = e;
        return s.default.createElement("img", {
          ...M,
          ...m(h),
          loading: p,
          width: o,
          height: a,
          decoding: l,
          "data-nimg": _ ? "fill" : "1",
          className: u,
          style: c,
          sizes: i,
          srcSet: r,
          src: n,
          ref: (0, s.useCallback)(
            (e) => {
              t &&
                ("function" == typeof t
                  ? t(e)
                  : "object" == typeof t && (t.current = e)),
                e && (E && (e.src = e.src), e.complete && f(e, d, v, y, x, g));
            },
            [n, d, v, y, x, E, g, t]
          ),
          onLoad: (e) => {
            let t = e.currentTarget;
            f(t, d, v, y, x, g);
          },
          onError: (e) => {
            b(!0), "empty" !== d && x(!0), E && E(e);
          },
        });
      });
      function _(e) {
        let { isAppRouter: t, imgAttributes: n } = e,
          r = {
            as: "image",
            imageSrcSet: n.srcSet,
            imageSizes: n.sizes,
            crossOrigin: n.crossOrigin,
            referrerPolicy: n.referrerPolicy,
            ...m(n.fetchPriority),
          };
        return t && a.default.preload
          ? (a.default.preload(n.src, r), null)
          : s.default.createElement(
              o.default,
              null,
              s.default.createElement("link", {
                key: "__nimg-" + n.src + n.srcSet + n.sizes,
                rel: "preload",
                href: n.srcSet ? void 0 : n.src,
                ...r,
              })
            );
      }
      let v = (0, s.forwardRef)((e, t) => {
        let n = (0, s.useContext)(h.RouterContext),
          r = (0, s.useContext)(c.ImageConfigContext),
          i = (0, s.useMemo)(() => {
            let e = p || r || u.imageConfigDefault,
              t = [...e.deviceSizes, ...e.imageSizes].sort((e, t) => e - t),
              n = e.deviceSizes.sort((e, t) => e - t);
            return { ...e, allSizes: t, deviceSizes: n };
          }, [r]),
          { onLoad: a, onLoadingComplete: o } = e,
          f = (0, s.useRef)(a);
        (0, s.useEffect)(() => {
          f.current = a;
        }, [a]);
        let m = (0, s.useRef)(o);
        (0, s.useEffect)(() => {
          m.current = o;
        }, [o]);
        let [v, y] = (0, s.useState)(!1),
          [x, b] = (0, s.useState)(!1),
          { props: S, meta: E } = (0, l.getImgProps)(e, {
            defaultLoader: d.default,
            imgConf: i,
            blurComplete: v,
            showAltText: x,
          });
        return s.default.createElement(
          s.default.Fragment,
          null,
          s.default.createElement(g, {
            ...S,
            unoptimized: E.unoptimized,
            placeholder: E.placeholder,
            fill: E.fill,
            onLoadRef: f,
            onLoadingCompleteRef: m,
            setBlurComplete: y,
            setShowAltText: b,
            ref: t,
          }),
          E.priority
            ? s.default.createElement(_, { isAppRouter: !n, imgAttributes: S })
            : null
        );
      });
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    3814: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "default", {
          enumerable: !0,
          get: function () {
            return x;
          },
        });
      let r = n(3219),
        i = r._(n(2784)),
        s = n(1068),
        a = n(3134),
        o = n(9585),
        l = n(1570),
        u = n(9868),
        c = n(4365),
        h = n(587),
        d = n(3629),
        p = n(5146),
        f = n(694),
        m = n(3116),
        g = new Set();
      function _(e, t, n, r, i, s) {
        if (!s && !(0, a.isLocalURL)(t)) return;
        if (!r.bypassPrefetchedCheck) {
          let i =
              void 0 !== r.locale
                ? r.locale
                : "locale" in e
                ? e.locale
                : void 0,
            s = t + "%" + n + "%" + i;
          if (g.has(s)) return;
          g.add(s);
        }
        let o = s ? e.prefetch(t, i) : e.prefetch(t, n, r);
        Promise.resolve(o).catch((e) => {});
      }
      function v(e) {
        return "string" == typeof e ? e : (0, o.formatUrl)(e);
      }
      let y = i.default.forwardRef(function (e, t) {
          let n, r;
          let {
            href: o,
            as: g,
            children: y,
            prefetch: x = null,
            passHref: b,
            replace: S,
            shallow: E,
            scroll: M,
            locale: w,
            onClick: T,
            onMouseEnter: A,
            onTouchStart: C,
            legacyBehavior: R = !1,
            ...P
          } = e;
          (n = y),
            R &&
              ("string" == typeof n || "number" == typeof n) &&
              (n = i.default.createElement("a", null, n));
          let O = i.default.useContext(c.RouterContext),
            L = i.default.useContext(h.AppRouterContext),
            I = null != O ? O : L,
            N = !O,
            D = !1 !== x,
            U = null === x ? m.PrefetchKind.AUTO : m.PrefetchKind.FULL,
            { href: k, as: F } = i.default.useMemo(() => {
              if (!O) {
                let e = v(o);
                return { href: e, as: g ? v(g) : e };
              }
              let [e, t] = (0, s.resolveHref)(O, o, !0);
              return { href: e, as: g ? (0, s.resolveHref)(O, g) : t || e };
            }, [O, o, g]),
            z = i.default.useRef(k),
            B = i.default.useRef(F);
          R && (r = i.default.Children.only(n));
          let V = R ? r && "object" == typeof r && r.ref : t,
            [j, H, G] = (0, d.useIntersection)({ rootMargin: "200px" }),
            W = i.default.useCallback(
              (e) => {
                (B.current !== F || z.current !== k) &&
                  (G(), (B.current = F), (z.current = k)),
                  j(e),
                  V &&
                    ("function" == typeof V
                      ? V(e)
                      : "object" == typeof V && (V.current = e));
              },
              [F, V, k, G, j]
            );
          i.default.useEffect(() => {
            I && H && D && _(I, k, F, { locale: w }, { kind: U }, N);
          }, [F, k, H, w, D, null == O ? void 0 : O.locale, I, N, U]);
          let $ = {
            ref: W,
            onClick(e) {
              R || "function" != typeof T || T(e),
                R &&
                  r.props &&
                  "function" == typeof r.props.onClick &&
                  r.props.onClick(e),
                I &&
                  !e.defaultPrevented &&
                  (function (e, t, n, r, s, o, l, u, c, h) {
                    let { nodeName: d } = e.currentTarget,
                      p = "A" === d.toUpperCase();
                    if (
                      p &&
                      ((function (e) {
                        let t = e.currentTarget,
                          n = t.getAttribute("target");
                        return (
                          (n && "_self" !== n) ||
                          e.metaKey ||
                          e.ctrlKey ||
                          e.shiftKey ||
                          e.altKey ||
                          (e.nativeEvent && 2 === e.nativeEvent.which)
                        );
                      })(e) ||
                        (!c && !(0, a.isLocalURL)(n)))
                    )
                      return;
                    e.preventDefault();
                    let f = () => {
                      let e = null == l || l;
                      "beforePopState" in t
                        ? t[s ? "replace" : "push"](n, r, {
                            shallow: o,
                            locale: u,
                            scroll: e,
                          })
                        : t[s ? "replace" : "push"](r || n, {
                            forceOptimisticNavigation: !h,
                            scroll: e,
                          });
                    };
                    c ? i.default.startTransition(f) : f();
                  })(e, I, k, F, S, E, M, w, N, D);
            },
            onMouseEnter(e) {
              R || "function" != typeof A || A(e),
                R &&
                  r.props &&
                  "function" == typeof r.props.onMouseEnter &&
                  r.props.onMouseEnter(e),
                I &&
                  (D || !N) &&
                  _(
                    I,
                    k,
                    F,
                    { locale: w, priority: !0, bypassPrefetchedCheck: !0 },
                    { kind: U },
                    N
                  );
            },
            onTouchStart(e) {
              R || "function" != typeof C || C(e),
                R &&
                  r.props &&
                  "function" == typeof r.props.onTouchStart &&
                  r.props.onTouchStart(e),
                I &&
                  (D || !N) &&
                  _(
                    I,
                    k,
                    F,
                    { locale: w, priority: !0, bypassPrefetchedCheck: !0 },
                    { kind: U },
                    N
                  );
            },
          };
          if ((0, l.isAbsoluteUrl)(F)) $.href = F;
          else if (!R || b || ("a" === r.type && !("href" in r.props))) {
            let e = void 0 !== w ? w : null == O ? void 0 : O.locale,
              t =
                (null == O ? void 0 : O.isLocaleDomain) &&
                (0, p.getDomainLocale)(
                  F,
                  e,
                  null == O ? void 0 : O.locales,
                  null == O ? void 0 : O.domainLocales
                );
            $.href =
              t ||
              (0, f.addBasePath)(
                (0, u.addLocale)(F, e, null == O ? void 0 : O.defaultLocale)
              );
          }
          return R
            ? i.default.cloneElement(r, $)
            : i.default.createElement("a", { ...P, ...$ }, n);
        }),
        x = y;
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    3629: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "useIntersection", {
          enumerable: !0,
          get: function () {
            return l;
          },
        });
      let r = n(2784),
        i = n(857),
        s = "function" == typeof IntersectionObserver,
        a = new Map(),
        o = [];
      function l(e) {
        let { rootRef: t, rootMargin: n, disabled: l } = e,
          u = l || !s,
          [c, h] = (0, r.useState)(!1),
          d = (0, r.useRef)(null),
          p = (0, r.useCallback)((e) => {
            d.current = e;
          }, []);
        (0, r.useEffect)(() => {
          if (s) {
            if (u || c) return;
            let e = d.current;
            if (e && e.tagName) {
              let r = (function (e, t, n) {
                let {
                  id: r,
                  observer: i,
                  elements: s,
                } = (function (e) {
                  let t;
                  let n = { root: e.root || null, margin: e.rootMargin || "" },
                    r = o.find(
                      (e) => e.root === n.root && e.margin === n.margin
                    );
                  if (r && (t = a.get(r))) return t;
                  let i = new Map(),
                    s = new IntersectionObserver((e) => {
                      e.forEach((e) => {
                        let t = i.get(e.target),
                          n = e.isIntersecting || e.intersectionRatio > 0;
                        t && n && t(n);
                      });
                    }, e);
                  return (
                    (t = { id: n, observer: s, elements: i }),
                    o.push(n),
                    a.set(n, t),
                    t
                  );
                })(n);
                return (
                  s.set(e, t),
                  i.observe(e),
                  function () {
                    if ((s.delete(e), i.unobserve(e), 0 === s.size)) {
                      i.disconnect(), a.delete(r);
                      let e = o.findIndex(
                        (e) => e.root === r.root && e.margin === r.margin
                      );
                      e > -1 && o.splice(e, 1);
                    }
                  }
                );
              })(e, (e) => e && h(e), {
                root: null == t ? void 0 : t.current,
                rootMargin: n,
              });
              return r;
            }
          } else if (!c) {
            let e = (0, i.requestIdleCallback)(() => h(!0));
            return () => (0, i.cancelIdleCallback)(e);
          }
        }, [u, n, t, c, d.current]);
        let f = (0, r.useCallback)(() => {
          h(!1);
        }, []);
        return [p, c, f];
      }
      ("function" == typeof t.default ||
        ("object" == typeof t.default && null !== t.default)) &&
        void 0 === t.default.__esModule &&
        (Object.defineProperty(t.default, "__esModule", { value: !0 }),
        Object.assign(t.default, t),
        (e.exports = t.default));
    },
    1918: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getImgProps", {
          enumerable: !0,
          get: function () {
            return o;
          },
        }),
        n(4759);
      let r = n(9933),
        i = n(7686);
      function s(e) {
        return void 0 !== e.default;
      }
      function a(e) {
        return void 0 === e
          ? e
          : "number" == typeof e
          ? Number.isFinite(e)
            ? e
            : NaN
          : "string" == typeof e && /^[0-9]+$/.test(e)
          ? parseInt(e, 10)
          : NaN;
      }
      function o(e, t) {
        var n;
        let o,
          l,
          u,
          {
            src: c,
            sizes: h,
            unoptimized: d = !1,
            priority: p = !1,
            loading: f,
            className: m,
            quality: g,
            width: _,
            height: v,
            fill: y = !1,
            style: x,
            onLoad: b,
            onLoadingComplete: S,
            placeholder: E = "empty",
            blurDataURL: M,
            fetchPriority: w,
            layout: T,
            objectFit: A,
            objectPosition: C,
            lazyBoundary: R,
            lazyRoot: P,
            ...O
          } = e,
          { imgConf: L, showAltText: I, blurComplete: N, defaultLoader: D } = t,
          U = L || i.imageConfigDefault;
        if ("allSizes" in U) o = U;
        else {
          let e = [...U.deviceSizes, ...U.imageSizes].sort((e, t) => e - t),
            t = U.deviceSizes.sort((e, t) => e - t);
          o = { ...U, allSizes: e, deviceSizes: t };
        }
        let k = O.loader || D;
        delete O.loader, delete O.srcSet;
        let F = "__next_img_default" in k;
        if (F) {
          if ("custom" === o.loader)
            throw Error(
              'Image with src "' +
                c +
                '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
            );
        } else {
          let e = k;
          k = (t) => {
            let { config: n, ...r } = t;
            return e(r);
          };
        }
        if (T) {
          "fill" === T && (y = !0);
          let e = {
            intrinsic: { maxWidth: "100%", height: "auto" },
            responsive: { width: "100%", height: "auto" },
          }[T];
          e && (x = { ...x, ...e });
          let t = { responsive: "100vw", fill: "100vw" }[T];
          t && !h && (h = t);
        }
        let z = "",
          B = a(_),
          V = a(v);
        if ("object" == typeof (n = c) && (s(n) || void 0 !== n.src)) {
          let e = s(c) ? c.default : c;
          if (!e.src)
            throw Error(
              "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                JSON.stringify(e)
            );
          if (!e.height || !e.width)
            throw Error(
              "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                JSON.stringify(e)
            );
          if (
            ((l = e.blurWidth),
            (u = e.blurHeight),
            (M = M || e.blurDataURL),
            (z = e.src),
            !y)
          ) {
            if (B || V) {
              if (B && !V) {
                let t = B / e.width;
                V = Math.round(e.height * t);
              } else if (!B && V) {
                let t = V / e.height;
                B = Math.round(e.width * t);
              }
            } else (B = e.width), (V = e.height);
          }
        }
        let j = !p && ("lazy" === f || void 0 === f);
        (!(c = "string" == typeof c ? c : z) ||
          c.startsWith("data:") ||
          c.startsWith("blob:")) &&
          ((d = !0), (j = !1)),
          o.unoptimized && (d = !0),
          F && c.endsWith(".svg") && !o.dangerouslyAllowSVG && (d = !0),
          p && (w = "high");
        let H = a(g),
          G = Object.assign(
            y
              ? {
                  position: "absolute",
                  height: "100%",
                  width: "100%",
                  left: 0,
                  top: 0,
                  right: 0,
                  bottom: 0,
                  objectFit: A,
                  objectPosition: C,
                }
              : {},
            I ? {} : { color: "transparent" },
            x
          ),
          W =
            N || "empty" === E
              ? null
              : "blur" === E
              ? 'url("data:image/svg+xml;charset=utf-8,' +
                (0, r.getImageBlurSvg)({
                  widthInt: B,
                  heightInt: V,
                  blurWidth: l,
                  blurHeight: u,
                  blurDataURL: M || "",
                  objectFit: G.objectFit,
                }) +
                '")'
              : 'url("' + E + '")',
          $ = W
            ? {
                backgroundSize: G.objectFit || "cover",
                backgroundPosition: G.objectPosition || "50% 50%",
                backgroundRepeat: "no-repeat",
                backgroundImage: W,
              }
            : {},
          X = (function (e) {
            let {
              config: t,
              src: n,
              unoptimized: r,
              width: i,
              quality: s,
              sizes: a,
              loader: o,
            } = e;
            if (r) return { src: n, srcSet: void 0, sizes: void 0 };
            let { widths: l, kind: u } = (function (e, t, n) {
                let { deviceSizes: r, allSizes: i } = e;
                if (n) {
                  let e = /(^|\s)(1?\d?\d)vw/g,
                    t = [];
                  for (let r; (r = e.exec(n)); r) t.push(parseInt(r[2]));
                  if (t.length) {
                    let e = 0.01 * Math.min(...t);
                    return {
                      widths: i.filter((t) => t >= r[0] * e),
                      kind: "w",
                    };
                  }
                  return { widths: i, kind: "w" };
                }
                if ("number" != typeof t) return { widths: r, kind: "w" };
                let s = [
                  ...new Set(
                    [t, 2 * t].map(
                      (e) => i.find((t) => t >= e) || i[i.length - 1]
                    )
                  ),
                ];
                return { widths: s, kind: "x" };
              })(t, i, a),
              c = l.length - 1;
            return {
              sizes: a || "w" !== u ? a : "100vw",
              srcSet: l
                .map(
                  (e, r) =>
                    o({ config: t, src: n, quality: s, width: e }) +
                    " " +
                    ("w" === u ? e : r + 1) +
                    u
                )
                .join(", "),
              src: o({ config: t, src: n, quality: s, width: l[c] }),
            };
          })({
            config: o,
            src: c,
            unoptimized: d,
            width: B,
            quality: H,
            sizes: h,
            loader: k,
          }),
          q = {
            ...O,
            loading: j ? "lazy" : f,
            fetchPriority: w,
            width: B,
            height: V,
            decoding: "async",
            className: m,
            style: { ...G, ...$ },
            sizes: X.sizes,
            srcSet: X.srcSet,
            src: X.src,
          },
          Y = { unoptimized: d, priority: p, placeholder: E, fill: y };
        return { props: q, meta: Y };
      }
    },
    9933: function (e, t) {
      "use strict";
      function n(e) {
        let {
            widthInt: t,
            heightInt: n,
            blurWidth: r,
            blurHeight: i,
            blurDataURL: s,
            objectFit: a,
          } = e,
          o = r ? 40 * r : t,
          l = i ? 40 * i : n,
          u = o && l ? "viewBox='0 0 " + o + " " + l + "'" : "";
        return (
          "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
          u +
          "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
          (u
            ? "none"
            : "contain" === a
            ? "xMidYMid"
            : "cover" === a
            ? "xMidYMid slice"
            : "none") +
          "' style='filter: url(%23b);' href='" +
          s +
          "'/%3E%3C/svg%3E"
        );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getImageBlurSvg", {
          enumerable: !0,
          get: function () {
            return n;
          },
        });
    },
    1963: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (function (e, t) {
          for (var n in t)
            Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
        })(t, {
          default: function () {
            return u;
          },
          unstable_getImgProps: function () {
            return l;
          },
        });
      let r = n(3219),
        i = n(1918),
        s = n(4759),
        a = n(920),
        o = r._(n(2088)),
        l = (e) => {
          (0, s.warnOnce)(
            "Warning: unstable_getImgProps() is experimental and may change or be removed at any time. Use at your own risk."
          );
          let { props: t } = (0, i.getImgProps)(e, {
            defaultLoader: o.default,
            imgConf: {
              deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
              imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
              path: "/_next/image",
              loader: "default",
              dangerouslyAllowSVG: !1,
              unoptimized: !1,
            },
          });
          for (let [e, n] of Object.entries(t)) void 0 === n && delete t[e];
          return { props: t };
        },
        u = a.Image;
    },
    2088: function (e, t) {
      "use strict";
      function n(e) {
        let { config: t, src: n, width: r, quality: i } = e;
        return (
          t.path +
          "?url=" +
          encodeURIComponent(n) +
          "&w=" +
          r +
          "&q=" +
          (i || 75)
        );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "default", {
          enumerable: !0,
          get: function () {
            return r;
          },
        }),
        (n.__next_img_default = !0);
      let r = n;
    },
    3189: function (e, t, n) {
      "use strict";
      n.d(t, {
        l: function () {
          return c;
        },
      });
      var r = n(2322),
        i = n(2784),
        s = n(1166),
        a = n.n(s),
        o = n(2001),
        l = n(8909),
        u = n(489);
      let c = (e) => {
        let {
            show: t = !0,
            animate: n = !0,
            animationDelay: s = 0,
            animationSteps: c = 6,
            animationStepDuration: h = 0.1,
            onAnimationComplete: d = l.Z,
            ascii: p,
            image: f,
            className: m = "",
          } = e,
          g = f ? "image" : "ascii",
          [_, v] = (0, i.useState)(n ? 0 : 1),
          y = i.useMemo(() => {
            let e = Math.ceil(_ * p.length),
              t = p.slice(0, e);
            return t;
          }, [_, p]);
        return (
          (0, i.useEffect)(() => {
            if ((!t && n && v(0), !n || !t)) return;
            let e = o.ZP.timeline({
              delay: s,
              onComplete: () => {
                v(1), d();
              },
            });
            for (let t = 0; t < c; t++)
              e.to(
                {},
                {
                  duration: null != h ? h : 0.2,
                  onStart: () => {
                    let e = (t + 1) / c;
                    v(e);
                  },
                }
              );
            return () => {
              e.kill();
            };
          }, [n, h, c, p, d, t, s]),
          (0, r.jsxs)(r.Fragment, {
            children: [
              "image" === g &&
                (0, r.jsx)("img", {
                  alt: "",
                  className: (0, u.Z)(a().asciiImage, m),
                  src: f,
                  style: {
                    "--reveal-progress": "".concat(
                      Math.round((1 - _) * 100),
                      "%"
                    ),
                  },
                }),
              "ascii" === g &&
                (0, r.jsx)("div", {
                  className: m,
                  children: y.map((e) =>
                    (0, r.jsx)(
                      "div",
                      { className: a().asciiLine, children: e },
                      e
                    )
                  ),
                }),
            ],
          })
        );
      };
    },
    1506: function (e, t, n) {
      "use strict";
      n.d(t, {
        o: function () {
          return o;
        },
      });
      var r = n(2322),
        i = n(2784),
        s = n(7937),
        a = n.n(s);
      let o = (0, i.forwardRef)((e, t) => {
        let {
            children: n,
            ratio: s,
            className: o,
            style: l,
            minHeight: u,
            maxHeight: c,
            ...h
          } = e,
          d = (0, i.useMemo)(
            () =>
              u || c
                ? "clamp("
                    .concat(u || "0px", ", calc(100% / (")
                    .concat(s, ")), ")
                    .concat(c || "9999px", ")")
                : "".concat(Math.round((1 / s) * 100), "%"),
            [s, u, c]
          );
        return (0, r.jsx)("div", {
          className: o,
          style: l,
          ...h,
          ref: t,
          children: (0, r.jsx)("div", {
            className: a().aspectRatio,
            style: { paddingTop: d },
            children: (0, r.jsx)("div", {
              className: a().aspectRatio__content,
              children: n,
            }),
          }),
        });
      });
      (o.displayName = "AspectRatio"),
        (o.defaultProps = { className: "", style: {}, ratio: 1 });
    },
    3367: function (e, t, n) {
      "use strict";
      n.d(t, {
        z: function () {
          return u;
        },
      });
      var r = n(2322);
      n(2784);
      var i = n(2995),
        s = n.n(i),
        a = n(9374),
        o = n(489);
      let l = (0, a.n)(s(), "button"),
        u = (e) => {
          let {
            onClick: t,
            variant: n = "primary",
            startIcon: i,
            label: s,
            endIcon: a,
            disabled: u = !1,
            children: c = null,
            className: h = "",
            style: d = {},
            ...p
          } = e;
          return (0, r.jsxs)("button", {
            onClick: t,
            "data-variant": n,
            disabled: u,
            className: (0, o.Z)(l(), h),
            style: { ...d },
            ...p,
            children: [
              i &&
                (0, r.jsx)("span", { className: l("leftIcon"), children: i }),
              c &&
                "round" !== n &&
                (0, r.jsx)("span", {
                  className: "".concat(l("label")),
                  children: c,
                }),
              a &&
                (0, r.jsx)("span", { className: l("rightIcon"), children: a }),
            ],
          });
        };
    },
    3562: function (e, t, n) {
      "use strict";
      n.d(t, {
        E3: function () {
          return x;
        },
        uf: function () {
          return f;
        },
        fz: function () {
          return v;
        },
        Zz: function () {
          return _;
        },
        i9: function () {
          return y;
        },
        m_: function () {
          return p;
        },
      });
      var r,
        i = n(8909),
        s = n(686),
        a = n(2784);
      function o(e) {
        return (
          null != e &&
          "object" == typeof e &&
          !0 === e["@@functional/placeholder"]
        );
      }
      function l(e) {
        return function t(n) {
          return 0 == arguments.length || o(n) ? t : e.apply(this, arguments);
        };
      }
      function u(e, t) {
        switch (e) {
          case 0:
            return function () {
              return t.apply(this, arguments);
            };
          case 1:
            return function (e) {
              return t.apply(this, arguments);
            };
          case 2:
            return function (e, n) {
              return t.apply(this, arguments);
            };
          case 3:
            return function (e, n, r) {
              return t.apply(this, arguments);
            };
          case 4:
            return function (e, n, r, i) {
              return t.apply(this, arguments);
            };
          case 5:
            return function (e, n, r, i, s) {
              return t.apply(this, arguments);
            };
          case 6:
            return function (e, n, r, i, s, a) {
              return t.apply(this, arguments);
            };
          case 7:
            return function (e, n, r, i, s, a, o) {
              return t.apply(this, arguments);
            };
          case 8:
            return function (e, n, r, i, s, a, o, l) {
              return t.apply(this, arguments);
            };
          case 9:
            return function (e, n, r, i, s, a, o, l, u) {
              return t.apply(this, arguments);
            };
          case 10:
            return function (e, n, r, i, s, a, o, l, u, c) {
              return t.apply(this, arguments);
            };
          default:
            throw Error(
              "First argument to _arity must be a non-negative integer no greater than ten"
            );
        }
      }
      var c =
          ((r = function (e, t) {
            return 1 === e
              ? l(t)
              : u(
                  e,
                  (function e(t, n, r) {
                    return function () {
                      for (
                        var i, s = [], a = 0, l = t, c = 0, h = !1;
                        c < n.length || a < arguments.length;

                      )
                        c < n.length && (!o(n[c]) || a >= arguments.length)
                          ? (i = n[c])
                          : ((i = arguments[a]), (a += 1)),
                          (s[c] = i),
                          o(i) ? (h = !0) : (l -= 1),
                          (c += 1);
                      return !h && l <= 0
                        ? r.apply(this, s)
                        : u(Math.max(0, l), e(t, s, r));
                    };
                  })(e, [], t)
                );
          }),
          function e(t, n) {
            switch (arguments.length) {
              case 0:
                return e;
              case 1:
                return o(t)
                  ? e
                  : l(function (e) {
                      return r(t, e);
                    });
              default:
                return o(t) && o(n)
                  ? e
                  : o(t)
                  ? l(function (e) {
                      return r(e, n);
                    })
                  : o(n)
                  ? l(function (e) {
                      return r(t, e);
                    })
                  : r(t, n);
            }
          }),
        h = l(function (e) {
          return c(e.length, e);
        });
      let d = new s.Z(),
        p = function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : i.Z,
            t = a.useCallback((e) => d.emit("log", e), []),
            n = a.useRef(e);
          return (
            a.useEffect(() => {
              n.current = e;
            }, [e]),
            a.useEffect(() => {
              let e = (e) => {
                var t;
                null === (t = n.current) || void 0 === t || t.call(n, e);
              };
              return (
                d.on("log", e),
                () => {
                  d.off("log", e);
                }
              );
            }, []),
            t
          );
        };
      function f(e) {
        let t = e.split(" "),
          n = {};
        for (let e = 0; e < t.length; e++) {
          let r = t[e];
          if (r.startsWith("-")) {
            let i, s;
            if (r.includes("=")) {
              let e = r.split("=");
              (i = e[0].startsWith("--") ? e[0].slice(2) : e[0].slice(1)),
                (s = "false" !== e[1] && ("true" === e[1] || e[1]));
            } else
              (i = r.startsWith("--") ? r.slice(2) : r.slice(1)),
                (s =
                  !(e + 1 < t.length) || !!t[e + 1].startsWith("-") || t[++e]);
            n[i] = s;
          }
        }
        return n;
      }
      let m = {
          reset: "\x1b[0m",
          bright: "\x1b[1m",
          dim: "\x1b[2m",
          underscore: "\x1b[4m",
          blink: "\x1b[5m",
          reverse: "\x1b[7m",
          hidden: "\x1b[8m",
          black: "\x1b[30m",
          red: "\x1b[31m",
          green: "\x1b[32m",
          yellow: "\x1b[33m",
          blue: "\x1b[34m",
          magenta: "\x1b[35m",
          cyan: "\x1b[36m",
          white: "\x1b[37m",
          BGblack: "\x1b[40m",
          BGred: "\x1b[41m",
          BGgreen: "\x1b[42m",
          BGyellow: "\x1b[43m",
          BGblue: "\x1b[44m",
          BGmagenta: "\x1b[45m",
          BGcyan: "\x1b[46m",
          BGwhite: "\x1b[47m",
        },
        g = h((e, t) => "".concat(m[e]).concat(t).concat("\x1b[0m")),
        _ = g("BGgreen"),
        v = g("BGred");
      g("BGyellow"), g("reset");
      let y = function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : "",
            t = e.split("/").pop();
          return {
            isDistrictSelectorRoute: "districts" === t,
            isDistrictRoute: "[district_id]" === t,
            isNodeStreamRoute: "[node_id]" === t,
          };
        },
        x = [
          "ls",
          "cd",
          "pwd",
          "mkdir",
          "rmdir",
          "rm",
          "cp",
          "mv",
          "touch",
          "cat",
          "more",
          "less",
          "head",
          "tail",
          "grep",
          "find",
          "chmod",
          "chown",
          "df",
          "du",
          "ps",
          "kill",
          "echo",
          "nano",
          "vim",
          "emacs",
          "sudo",
          "man",
          "top",
        ];
    },
    3702: function (e, t, n) {
      "use strict";
      n.d(t, {
        r: function () {
          return o;
        },
      });
      var r = n(2322),
        i = n(1426),
        s = n.n(i),
        a = n(5236);
      let o = (e) => {
        let {
          title: t,
          progressValue: n,
          hideBackground: i = !1,
          className: o,
          theme: l = "black",
        } = e;
        return (0, r.jsxs)("div", {
          className: "".concat(s().statusContainer, " ").concat(o),
          children: [
            t &&
              (0, r.jsx)("p", {
                className: s().statusContainer__title,
                children: t,
              }),
            (0, r.jsx)(a.k, {
              className: s().statusContainer__progressBar,
              progressValue: n,
              hideBackground: i,
              theme: l,
            }),
          ],
        });
      };
    },
    8868: function (e, t, n) {
      "use strict";
      n.d(t, {
        j: function () {
          return c;
        },
      });
      var r = n(2322);
      n(2784);
      var i = n(4775),
        s = n.n(i),
        a = n(9374),
        o = n(5126),
        l = n(3189);
      let u = (0, a.n)(s(), "error"),
        c = (e) => {
          let { title: t, body: n, showASCII: i = !0, ...a } = e,
            { translate: c } = (0, o.$G)();
          return (0, r.jsxs)("div", {
            className: u(),
            ...a,
            children: [
              (0, r.jsxs)("h6", {
                className: s().status,
                children: ["[", c("error", { fallback: "error" }), "]"],
              }),
              (0, r.jsx)("h1", { className: s().title, children: t }),
              (0, r.jsx)("p", { className: s().body, children: n }),
              (0, r.jsx)(l.l, {
                className: s().ascii,
                show: i,
                ascii: [],
                image: "/images/xero-logo-error.png",
              }),
            ],
          });
        };
    },
    3061: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return m;
        },
      });
      var r = n(2322),
        i = n(2784),
        s = n(6635),
        a = n(1218),
        o = n.n(a),
        l = n(3367),
        u = n(1322);
      n(7172);
      var c = n(2794),
        h = n(5632),
        d = n(6461),
        p = n(4255);
      let f = [
        {
          name: "3D-DOW-mask baked",
          url: "mask2-baked.glb",
          preset: "default",
        },
      ];
      function m() {
        let e = (0, i.useRef)(null),
          t = (0, i.useRef)(null),
          a = (0, s.EV)((e) => e.scene),
          m = (0, s.EV)((e) => e.isLoading),
          g = (0, s.EV)((e) => e.api),
          _ = (0, s.EV)((e) => e.effectPresetName),
          v = (0, s.EV)((e) => e.assetUrl),
          [y, x] = (0, i.useState)(null),
          b = (0, s.EV)((e) => e.totalProgress),
          S = (0, s.EV)((e) => e.channel1),
          E = (0, s.EV)((e) => e.channel2),
          M = (0, s.EV)((e) => e.channel3),
          w = (0, s.EV)((e) => e.channel4),
          T = (0, s.EV)((e) => e.assetWarnings),
          [A, C] = (0, i.useState)(!0),
          [R, P] = (0, i.useState)(!1),
          [O, L] = (0, i.useState)(!1),
          [I, N] = (0, i.useState)(!1),
          D = [
            (0, i.createRef)(),
            (0, i.createRef)(),
            (0, i.createRef)(),
            (0, i.createRef)(),
          ],
          U = [
            (0, i.createRef)(),
            (0, i.createRef)(),
            (0, i.createRef)(),
            (0, i.createRef)(),
          ],
          k = [C, P, L, N],
          F = [A, R, O, I],
          z = (0, i.useRef)(null),
          B = (0, h.useRouter)(),
          V = (function () {
            let e = (0, p.A)(),
              t = (0, i.useMemo)(() => {
                if (e) return;
                let t = window.location,
                  n = t.search,
                  r = t.href,
                  i = new URLSearchParams(n),
                  s =
                    r.includes("#debug") ||
                    r.includes("/_debug") ||
                    i.has("debug"),
                  a = r.includes("#production") || i.has("production");
                return s && !a;
              }, [e]);
            return t;
          })(),
          j = V || B.route.includes("/experience"),
          H = "/[locale]/districts/[district_id]" === B.pathname;
        (0, i.useEffect)(() => {
          var e;
          g.set({ totalProgress: 0 }),
            g.set({ channel1: 0 }),
            g.set({ channel2: 0 }),
            g.set({ channel3: 0 }),
            g.set({ channel4: 0 }),
            !(0, d.xb)(
              null === (e = B.query) || void 0 === e ? void 0 : e.node_id
            ) || B.route.includes("/experience")
              ? g.set({ scene: c.xs.GlitchScene })
              : "/[locale]" === B.route
              ? g.set({ scene: c.xs.LandingPage })
              : g.set({ scene: c.xs.Map });
        }, [B, g]),
          (0, i.useEffect)(() => {
            X();
          }, [S, E, M, w]),
          i.useEffect(() => {
            var e;
            let t = !(0, d.xb)(
              null === (e = B.query) || void 0 === e ? void 0 : e.node_id
            );
            t && s.h.setState({ activeNode: B.query.node_id });
          }, [B.query]),
          i.useEffect(() => {
            let t;
            return (
              (async function () {
                u.Z.init(),
                  e.current && u.Z.el && e.current.appendChild(u.Z.el);
                let r = (
                  await Promise.all([n.e(520), n.e(374)]).then(n.bind(n, 8174))
                ).default;
                (t = new r()),
                  await t.init(),
                  document.body.appendChild(t.debug.tweakPaneElement);
                let i = t.debug.tweakPaneElement;
                (i.style.position = "fixed"),
                  (i.style.top = "20px"),
                  (i.style.right = "20px"),
                  (i.style.zIndex = "10000");
              })().then(() => {
                x(t);
              }),
              () => {
                t && t.destroy();
              }
            );
          }, []);
        let G = (e) => {
            let t = k[e],
              n = U[e];
            t && n.current && t(!F[e]);
          },
          W = (e) => {
            $(e);
          },
          $ = (e) => {
            for (let t = 0; t < 4; t++) {
              let n = D[t].current;
              if (n && F[t] && e && e.target === n) {
                let e = Number(n.value) / 100;
                g.set({ ["channel" + (t + 1)]: e });
              }
            }
          },
          X = () => {
            let e = 0;
            for (let t = 0; t < 4; t++) F[t] && e++;
            if (0 === e) return 0;
            let t = 1 / e,
              n =
                S * t * Number(F[0]) +
                E * t * Number(F[1]) +
                M * t * Number(F[2]) +
                w * t * Number(F[3]);
            (n = Math.min(S, n)),
              F[1] && (n = Math.min(n, E)),
              F[2] && (n = Math.min(n, M)),
              F[3] && (n = Math.min(n, w)),
              g.set({ totalProgress: n }),
              z.current &&
                z.current.style.setProperty(
                  "--background-size",
                  "".concat(q(z.current), "%")
                );
            for (let e = 0; e < 4; e++) {
              let t = D[e].current;
              t &&
                !F[e] &&
                ((t.value = String(100 * n)),
                g.set({ ["channel" + (e + 1)]: n }));
            }
          },
          q = (e) => {
            let t = +e.min || 0,
              n = +e.max || 100,
              r = +e.value;
            return ((r - t) / (n - t)) * 100;
          };
        return (0, r.jsxs)(r.Fragment, {
          children: [
            (0, r.jsx)("div", { className: o().tweakpaneContainer, ref: t }),
            (0, r.jsx)("div", {
              className: o().threeContainer,
              "data-route": H ? "district" : "",
              ref: e,
              id: "webglInputElement",
            }),
            (0, r.jsx)("div", {
              style: {
                fontFamily: "ABCDiatypeMono-Regular",
                fontWeight: 400,
                opacity: 0,
              },
              children: "&npsp;",
            }),
            j &&
              (0, r.jsx)("div", {
                className: o().ui,
                "data-debug": !0,
                children:
                  a === c.xs.GlitchScene &&
                  (0, r.jsxs)(r.Fragment, {
                    children: [
                      (0, r.jsx)("div", {
                        className: o().ui__ctaContainerTop,
                        children: (0, r.jsxs)("div", {
                          className: o().ui__sliderContainer,
                          children: [
                            [
                              "channel1",
                              "channel2",
                              "channel3",
                              "channel4",
                            ].map((e, t) =>
                              (0, r.jsxs)(
                                "div",
                                {
                                  className: o().ui__sliderRow,
                                  children: [
                                    e,
                                    ":",
                                    (0, r.jsx)("input", {
                                      type: "checkbox",
                                      ref: U[t],
                                      checked: F[t],
                                      onChange: () => {
                                        G(t);
                                      },
                                    }),
                                    (0, r.jsx)("input", {
                                      type: "range",
                                      disabled: !F[t],
                                      id: e,
                                      name: e,
                                      min: "0",
                                      max: "100",
                                      defaultValue: "0",
                                      ref: D[t],
                                      onChange: W,
                                    }),
                                  ],
                                },
                                e
                              )
                            ),
                            (0, r.jsx)("input", {
                              className: o().ui__globalSliderContainer,
                              type: "range",
                              min: "0",
                              max: "100",
                              value: 100 * b,
                              ref: z,
                              readOnly: !0,
                            }),
                          ],
                        }),
                      }),
                      (0, r.jsxs)("div", {
                        className: o().ui__main,
                        children: [
                          (0, r.jsxs)("div", {
                            className: o().ui__header,
                            children: ["Effect preset: ", _],
                          }),
                          (0, r.jsxs)("div", {
                            className: o().ui__header,
                            children: ["Asset: ", String(v)],
                          }),
                        ],
                      }),
                      (0, r.jsxs)("div", {
                        className: o().ui__ctaContainer,
                        children: [
                          (0, r.jsx)("div", {
                            className: o().ui__row,
                            children: (0, r.jsxs)("select", {
                              className: o().ui__assets,
                              onChange: (e) => {
                                s.h.getState().api.set({ assetWarnings: [] });
                                let t = f.find(
                                  (t) => t.name === e.target.value
                                );
                                t &&
                                  g.set({
                                    assetUrl: t.url,
                                    effectPresetName: t.preset,
                                  });
                              },
                              children: [
                                (0, r.jsx)("option", {
                                  children: "Select asset...",
                                }),
                                f.map((e, t) =>
                                  (0, r.jsx)("option", { children: e.name }, t)
                                ),
                              ],
                            }),
                          }),
                          (0, r.jsxs)("div", {
                            className: o().ui__row,
                            children: [
                              "Triggers:",
                              (0, r.jsx)(l.z, {
                                className: o().ui__cta,
                                disabled: m,
                                onClick: () =>
                                  g.trigger.invoke({ type: s.zn.GlitchError }),
                                children: "Error",
                              }),
                              (0, r.jsx)(l.z, {
                                className: o().ui__cta,
                                disabled: m,
                                onClick: () => {
                                  g.trigger.invoke({
                                    type: s.zn.DecryptedStart,
                                  });
                                },
                                children: "Decrypted",
                              }),
                              (0, r.jsx)(l.z, {
                                className: o().ui__cta,
                                disabled: m,
                                onClick: () => {
                                  g.trigger.invoke({ type: s.zn.DecryptedEnd });
                                },
                                children: "Kick out",
                              }),
                            ],
                          }),
                          (0, r.jsx)("div", {
                            className: o().ui__warnings,
                            children: (0, r.jsx)("ul", {
                              children: T.map((e, t) =>
                                (0, r.jsx)("li", { children: e }, t)
                              ),
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
              }),
          ],
        });
      }
    },
    5206: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return i;
        },
        Z: function () {
          return y;
        },
      });
      var r,
        i,
        s = n(2322),
        a = n(2784),
        o = n(3622),
        l = n.n(o),
        u = n(5126),
        c = n(7510),
        h = n(3367),
        d = n(2443),
        p = n.n(d),
        f = n(9374),
        m = n(489);
      let g = (0, f.n)(p(), "select");
      function _(e) {
        let {
          options: t,
          value: n,
          onChange: r,
          placeholder: i,
          className: a = "",
          style: o = {},
          ...l
        } = e;
        return (0, s.jsxs)("div", {
          className: p().wrapper,
          children: [
            (0, s.jsxs)("select", {
              className: (0, m.Z)(g(), a),
              style: o,
              value: null != n ? n : "",
              onChange: (e) => {
                r(e.target.value);
              },
              ...l,
              children: [
                i && (0, s.jsx)("option", { value: "", children: i }),
                t.map((e) =>
                  (0, s.jsx)(
                    "option",
                    { value: e.value, children: e.label },
                    e.value
                  )
                ),
              ],
            }),
            (0, s.jsx)("svg", {
              className: p().arrow,
              width: "8",
              height: "8",
              viewBox: "0 0 8 8",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: (0, s.jsx)("path", {
                d: "M0.888688 0.572H7.92069L4.40469 7.244L0.888688 0.572Z",
                fill: "black",
              }),
            }),
          ],
        });
      }
      var v = n(2794);
      ((r = i || (i = {}))[(r.PrivacyPolicy = 1)] = "PrivacyPolicys"),
        (r[(r.CookiePolicy = 2)] = "CookiePolicy"),
        (r[(r.TermsOfService = 3)] = "TermsOfService");
      var y = (e) => {
        var t;
        let { show: n, variant: r = i.PrivacyPolicy, onClose: o } = e,
          { i18n: d, translate: p } = (0, u.$G)(),
          f = (0, a.useMemo)(
            () =>
              v.K7.map((e) => ({
                language: e,
                label: p("language_".concat(e), { fallback: e }),
                url: p("privacy_policy_url", { fallback: "#" }),
              })),
            [p]
          ),
          m = (0, a.useMemo)(
            () =>
              v.K7.map((e) => ({
                language: e,
                label: p("language_".concat(e), { fallback: e }),
                url: p("cookie_policy_url", { fallback: "#" }),
              })),
            [p]
          ),
          g = (0, a.useMemo)(
            () =>
              v.K7.map((e) => ({
                language: e,
                label: p("language_".concat(e), { fallback: e }),
                url: p("tos_url", { fallback: "#" }),
              })),
            [p]
          ),
          y = (0, a.useMemo)(() => {
            switch (r) {
              case i.PrivacyPolicy:
                return f;
              case i.CookiePolicy:
                return m;
              case i.TermsOfService:
                return g;
            }
          }, [m, r, f, g]),
          x = (0, a.useMemo)(() => {
            switch (r) {
              case i.PrivacyPolicy:
                return p("pp_window_title", { fallback: "Privacy Policy" });
              case i.CookiePolicy:
                return p("cp_window_title", { fallback: "Cookie Policy" });
              case i.TermsOfService:
                return p("tos_window_title", { fallback: "Terms of Service" });
            }
          }, [r, p]),
          b = (0, a.useMemo)(() => {
            switch (r) {
              case i.PrivacyPolicy:
                return p("pp_window_body", {
                  fallback: "Choose language to view privacy policy",
                });
              case i.CookiePolicy:
                return p("cp_window_title", {
                  fallback: "Choose language to view cookie policy",
                });
              case i.TermsOfService:
                return p("tos_window_title", {
                  fallback: "Choose language to view terms of service",
                });
            }
          }, [r, p]),
          [S, E] = (0, a.useState)(
            (null == y ? void 0 : y.map((e) => e.language).includes(d.language))
              ? d.language
              : "en"
          ),
          M = (0, a.useCallback)(() => {
            let e = null == y ? void 0 : y.find((e) => e.language === S);
            e && window.open(e.url, "_blank");
          }, [S, y]);
        return (0, s.jsx)(c.R, {
          show: n,
          draggable: !1,
          title: null != x ? x : "",
          canExit: !0,
          onClose: o,
          className: l().window,
          children: (0, s.jsxs)("div", {
            className: l().content,
            children: [
              b && (0, s.jsx)("p", { className: l().body, children: b }),
              (0, s.jsx)(_, {
                value: S,
                onChange: E,
                options:
                  null !==
                    (t =
                      null == y
                        ? void 0
                        : y.map((e) => ({
                            value: e.language,
                            label: e.label,
                          }))) && void 0 !== t
                    ? t
                    : [],
              }),
              (0, s.jsx)(h.z, {
                className: l().cta,
                onClick: M,
                children: p("legal_window_cta_label", { fallback: "View PDF" }),
              }),
            ],
          }),
        });
      };
    },
    3231: function (e, t, n) {
      "use strict";
      n.d(t, {
        U: function () {
          return o;
        },
        B: function () {
          return u;
        },
      });
      var r = n(2322);
      n(2784);
      var i = n(5126),
        s = n(9097),
        a = n.n(s);
      let o = (e) => {
        let { children: t, href: n, ...s } = e,
          { i18n: o } = (0, i.$G)(),
          l = "/".concat(o.language).concat(n);
        return (0, r.jsx)(a(), { href: l, scroll: !1, ...s, children: t });
      };
      var l = n(5705);
      let u = (e) => {
        var t;
        let n =
            null !==
              (t = null === l.ag || void 0 === l.ag ? void 0 : l.ag.language) &&
            void 0 !== t
              ? t
              : "",
          r = "/" === e;
        return n ? (r ? "/".concat(n) : "/".concat(n).concat(e)) : e;
      };
    },
    7384: function (e, t, n) {
      "use strict";
      n.d(t, {
        D: function () {
          return o;
        },
        c: function () {
          return a;
        },
      });
      var r = n(3973),
        i = n(3445),
        s = n(782);
      let a = (0, r.M)()(
          (0, s.XR)((e) => ({
            localUserId: null,
            setLocalUserId: (t) => e({ localUserId: t }),
            numberOfConnectedUsers: 1,
            setNumberOfConnectedUsers: (t) => e({ numberOfConnectedUsers: t }),
            isPrivateRoom: !1,
            setIsPrivateRoom: (t) => e({ isPrivateRoom: t }),
            privateRoomParams: void 0,
            setPrivateRoomParams: (t) => e({ privateRoomParams: t }),
          }))
        ),
        o = (e) => {
          let t = null != e ? e : (e) => e;
          return (0, i.oR)(a, t);
        };
    },
    5236: function (e, t, n) {
      "use strict";
      n.d(t, {
        k: function () {
          return u;
        },
      });
      var r = n(2322);
      n(2784);
      var i = n(4950),
        s = n.n(i),
        a = n(9374),
        o = n(4255);
      let l = (0, a.n)(s(), "progressBar"),
        u = (e) => {
          let {
              progressValue: t,
              hideBackground: n = !1,
              theme: i = "black",
              className: s,
            } = e,
            a = (0, o.A)();
          return (
            !a &&
            (0, r.jsxs)("div", {
              className: "".concat(l(), " ").concat(s),
              "data-theme": i,
              "data-hide-background": n,
              children: [
                (0, r.jsx)("span", { className: l("bracket"), children: "[" }),
                (0, r.jsxs)("div", {
                  className: l("barContainer"),
                  children: [
                    (0, r.jsx)("span", { className: l("barBg") }),
                    (0, r.jsx)("span", {
                      className: ""
                        .concat(l("barSection"), " ")
                        .concat(l("one")),
                      style: { width: "".concat(t > 33 ? 33 : t, "%") },
                    }),
                    (0, r.jsx)("span", {
                      className: ""
                        .concat(l("barSection"), " ")
                        .concat(l("two")),
                      style: {
                        width: "".concat(
                          t > 66 ? 33 : t > 33 ? t - 33 : 0,
                          "%"
                        ),
                      },
                    }),
                    (0, r.jsx)("span", {
                      className: ""
                        .concat(l("barSection"), " ")
                        .concat(l("three")),
                      style: { width: "".concat(t > 66 ? t - 66 : 0, "%") },
                    }),
                  ],
                }),
                (0, r.jsx)("span", { className: l("bracket"), children: "]" }),
              ],
            })
          );
        };
    },
    1121: function (e, t, n) {
      "use strict";
      n.d(t, {
        v: function () {
          return f;
        },
      });
      var r = n(2322),
        i = n(2784),
        s = n(3132),
        a = n.n(s),
        o = n(9374),
        l = n(1506),
        u = n(489),
        c = n(7510),
        h = n(7933),
        d = n(2285);
      let p = (0, o.n)(a(), "puzzleContainer"),
        f = (e) => {
          let {
              title: t = "Decrypt",
              className: n = "",
              ratio: s = 1.6,
              isFullscreen: a = !1,
              showTitleInFullscreen: o = !1,
              children: f,
              progressBars: m,
              config: g,
              style: _ = {},
              windowProps: v = {},
              ...y
            } = e,
            x = a ? "div" : l.o,
            [b, S] = (0, i.useState)("150%"),
            E = () => {
              S("".concat(0.65 * window.innerHeight, "px"));
            };
          return (
            (0, i.useEffect)(
              () => (
                (null == g ? void 0 : g.decryptionType) ===
                  d.Ou.PATTERN_UNLOCK && window.addEventListener("resize", E),
                () => {
                  (null == g ? void 0 : g.decryptionType) ===
                    d.Ou.PATTERN_UNLOCK &&
                    window.removeEventListener("resize", E);
                }
              ),
              [g]
            ),
            (0, r.jsxs)("div", {
              className: (0, u.Z)(p(), n),
              "data-is-fullscreen": a,
              "data-decryption-type": null == g ? void 0 : g.decryptionType,
              "data-participants": null == g ? void 0 : g.participants,
              style: {
                ..._,
                "--community-unlock-columns":
                  (null == g ? void 0 : g.decryptionType) ===
                  d.Ou.COMMUNITY_UNLOCK
                    ? (0, h.p)(null == g ? void 0 : g.participants)[0]
                    : null == g
                    ? void 0
                    : g.participants,
              },
              ...y,
              children: [
                (0, r.jsx)("div", {
                  "aria-hidden": "true",
                  className: p("background"),
                }),
                a && !o
                  ? (0, r.jsx)("div", { className: p("sketch"), children: f })
                  : (0, r.jsxs)(c.R, {
                      id: "puzzle-container-window",
                      title: t,
                      isPuzzle: !0,
                      canExit: !0,
                      isFullscreen: a,
                      theme: c.$.Puzzle,
                      ...v,
                      children: [
                        m,
                        (0, r.jsx)(x, {
                          ratio: s,
                          minHeight: "0px",
                          maxHeight: "".concat(b),
                          className: "".concat(p("sketch"), " puzzleSketch"),
                          children: f,
                        }),
                      ],
                    }),
              ],
            })
          );
        };
    },
    778: function (e, t, n) {
      "use strict";
      n.d(t, {
        m: function () {
          return s;
        },
      });
      var r = n(3615),
        i = n(686);
      class s extends i.Z {
        onInteractionSuccess() {
          this.updateSuccessRate("add", this.boost),
            this.emit("success", this.successRate);
        }
        onInteractionFail() {
          let { quiet: e } =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : { quiet: !1 };
          this.updateSuccessRate("subtract", this.injury),
            e || this.emit("fail", this.successRate);
        }
        updateSuccessRate(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
          "add" === e
            ? (this.successRate += Math.abs(t))
            : "subtract" === e
            ? (this.successRate -= Math.abs(t))
            : "commit" === e && (this.successRate = t),
            (this.successRate = (0, r.uZ)(this.successRate, 0, 1)),
            this.emit("update-success-rate", this.successRate);
        }
        _bind() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          for (let e of t) {
            if (!this[e])
              throw Error("The function ".concat(e, " is not defined"));
            this[e] = this[e].bind(this);
          }
        }
        constructor() {
          super(), (this.successRate = 0), (this.boost = 0), (this.injury = 0);
        }
      }
    },
    7933: function (e, t, n) {
      "use strict";
      function r() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        if (0 === e) return [0, 0];
        if (e % 2 != 0) throw Error("Number must be divisible by 2.");
        let t = Math.floor(Math.sqrt(e));
        for (let n = t; n > 0; n--)
          if (e % n == 0) {
            let t = n,
              r = e / n;
            return t > r ? [t, r] : [r, t];
          }
        return [e, 1];
      }
      function i() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        if (0 === e) return 0;
        let [t, n] = r(e);
        return t / n;
      }
      n.d(t, {
        g: function () {
          return i;
        },
        p: function () {
          return r;
        },
      });
    },
    5400: function (e, t, n) {
      "use strict";
      n.d(t, {
        gD: function () {
          return x;
        },
      });
      var r = n(778);
      let i = { SOLUTION_PREVIEW_TIMEOUT_MS: 300 };
      class s extends r.m {
        get userSolution() {
          return this._userSolution;
        }
        set userSolution(e) {
          (this._userSolution = e), this.emit("update");
        }
        get isSolutionPreviewVisible() {
          return this._isSolutionPreviewVisible;
        }
        set isSolutionPreviewVisible(e) {
          (this._isSolutionPreviewVisible = e), this.emit("update");
        }
        async start() {}
        update() {}
        stop() {}
        canAddPointToUserSolution(e) {
          if (this.isSolutionPreviewVisible) return !1;
          let t = 0 === this.userSolution.length,
            n = this.userSolution.includes(e);
          if (t) return !0;
          if (n) return !1;
          {
            let t = this.userSolution[this.userSolution.length - 1],
              n = this.grid[t],
              r = this.grid[e],
              i = Math.abs(n[0] - r[0]),
              s = Math.abs(n[1] - r[1]);
            if (i > 0.5 || s > 0.5) return !1;
          }
          return !0;
        }
        addPointToUserSolution(e) {
          this.userSolution = [...this.userSolution, e];
        }
        commitSolution() {
          let e = this.isUserSolutionCorrect();
          (this.isSolutionPreviewVisible = !0),
            this.solutionPreviewTimeoutId &&
              clearTimeout(this.solutionPreviewTimeoutId),
            e
              ? (this.updateSuccessRate("commit", 1),
                this.onInteractionSuccess())
              : (this.userSolution.length > 0 && this.onInteractionFail(),
                this.updateSuccessRate("commit", 0),
                (this.solutionPreviewTimeoutId = setTimeout(() => {
                  this.reset();
                }, i.SOLUTION_PREVIEW_TIMEOUT_MS)));
        }
        isGridPointIndexInSolution(e) {
          return this.solution.includes(e);
        }
        isGridPointIndexInUserSolution(e) {
          return this.userSolution.includes(e);
        }
        reset() {
          (this.userSolution = []),
            (this.isSolutionPreviewVisible = !1),
            (this.solutionPreviewTimeoutId = null);
        }
        isUserSolutionCorrect() {
          let e = this.userSolution,
            t = [...this.userSolution].reverse(),
            n = e.length === this.solution.length,
            r =
              e.every((e, t) => e === this.solution[t]) ||
              t.every((e, t) => e === this.solution[t]);
          return n && r;
        }
        kill() {
          this.removeAllListeners(),
            this.solutionPreviewTimeoutId &&
              clearTimeout(this.solutionPreviewTimeoutId);
        }
        constructor(e) {
          super(),
            (this.solution = []),
            (this._userSolution = []),
            (this.successRate = 0),
            (this.grid = [
              [0, 0],
              [0.5, 0],
              [1, 0],
              [0, 0.5],
              [0.5, 0.5],
              [1, 0.5],
              [0, 1],
              [0.5, 1],
              [1, 1],
            ]),
            (this._isSolutionPreviewVisible = !1),
            (this.solutionPreviewTimeoutId = null),
            (this.solution = e);
        }
      }
      var a = n(2322),
        o = n(2784),
        l = n(6927),
        u = n(4377),
        c = n.n(u),
        h = n(6461),
        d = n(4217),
        p = n(1051),
        f = n(6231),
        m = n(7452),
        g = n.n(m),
        _ = n(8307),
        v = n.n(_),
        y = n(7701);
      let x = (e) => {
          let { state: t, showSolution: n = !1, solution: r } = e,
            i = o.useMemo(() => {
              if (!(0, h.HD)(r)) return null != r ? r : [0, 3, 6, 4, 8, 5, 2];
              {
                let e = g().decrypt(r, y.M).toString(v());
                return e.split(",").map(Number);
              }
            }, [r]),
            [u] = o.useState(() => new s(i)),
            [m, _] = o.useReducer((e) => e + 1, 0),
            x = (0, f.Y)(),
            E = "gameplay" === t;
          (0, l.n)(
            () => (
              u.start(),
              u.on("update-success-rate", e.onSuccessRateChange),
              u.on("success", e.onInteractionSuccess),
              u.on("fail", e.onInteractionFail),
              u.on("update", _),
              () => {
                u.kill();
              }
            )
          );
          let M = o.useRef(!1),
            w = (e) => {
              if (!E) return;
              M.current = !0;
              let t = "grid-tile" === e.target.dataset.type;
              if (t) {
                let t = Number(e.target.dataset.tileIndex);
                u.canAddPointToUserSolution(t) && u.addPointToUserSolution(t);
              }
            },
            T = (e) => {
              if (!E || !M.current) return;
              let { clientX: t, clientY: n } = e.changedTouches
                  ? e.changedTouches[0]
                  : e,
                r = I.current.findIndex((e) => (0, d.fv)(e, t, n));
              r > -1 &&
                u.canAddPointToUserSolution(r) &&
                u.addPointToUserSolution(r);
            },
            A = () => {
              E && ((M.current = !1), u.commitSolution());
            },
            C = (e, t) => {
              let n = e.isGridPointIndexInUserSolution(t)
                ? e.isSolutionPreviewVisible
                  ? e.isUserSolutionCorrect()
                    ? "success"
                    : "fail"
                  : "active"
                : "locked";
              return n;
            },
            R = (e, t) => {
              if (!(0, h.hj)(e) || !(0, h.hj)(t)) return;
              let [n, r] = u.grid[e],
                [i, s] = u.grid[t],
                a =
                  1 === Math.sign(i - n)
                    ? "right"
                    : -1 === Math.sign(i - n)
                    ? "left"
                    : void 0,
                o =
                  1 === Math.sign(s - r)
                    ? "down"
                    : -1 === Math.sign(s - r)
                    ? "up"
                    : void 0,
                l = [a, o].filter(Boolean).join("-");
              return l;
            },
            { width: P, height: O } = (0, p.i)(),
            L = o.useRef(null),
            I = o.useRef([]);
          o.useEffect(() => {
            L.current &&
              (I.current = Array.from(L.current.children).map((e) =>
                e.getBoundingClientRect()
              ));
          }, [P, O]);
          let N = x
            ? { onTouchStart: w, onTouchMove: T, onTouchEnd: A }
            : { onMouseDown: w, onMouseMove: T, onMouseUp: A };
          return (0, a.jsxs)("div", {
            className: c().container,
            ...N,
            children: [
              n &&
                (0, a.jsx)("div", {
                  className: c().grid,
                  "data-type": "solution",
                  children: u.grid.map((e, t) => {
                    let n = u.isGridPointIndexInSolution(t)
                        ? "active"
                        : "locked",
                      r = u.solution.indexOf(t),
                      i =
                        u.isGridPointIndexInSolution(t) &&
                        r < u.solution.length - 1,
                      s = u.solution[r + 1];
                    return (0, a.jsx)(
                      b,
                      {
                        status: n,
                        interactive: !1,
                        children:
                          i &&
                          (0, a.jsx)(S, { variant: R(t, s), status: "active" }),
                      },
                      "solution-grid-tile-".concat(t, "}")
                    );
                  }),
                }),
              (0, a.jsxs)("div", {
                className: c().grid,
                ref: L,
                children: [
                  u.grid.map((e, t) =>
                    (0, a.jsx)(
                      b,
                      {
                        status: "locked",
                        "data-tile-index": t,
                        style: {
                          gridRow: Math.floor(t / 3) + 1,
                          gridColumn: (t % 3) + 1,
                        },
                      },
                      "base-grid-tile".concat(t, "}")
                    )
                  ),
                  u.userSolution.map((e, t, n) => {
                    let r = t < n.length - 1,
                      i = n[t + 1];
                    return (0, a.jsx)(
                      b,
                      {
                        interactive: !1,
                        status: C(u, e),
                        style: {
                          gridRow: Math.floor(e / 3) + 1,
                          gridColumn: (e % 3) + 1,
                          "--node-variant": t % 8,
                        },
                        children:
                          r &&
                          (0, a.jsx)(S, { variant: R(e, i), status: C(u, e) }),
                      },
                      "user-solution-tile-".concat(e)
                    );
                  }),
                ],
              }),
            ],
          });
        },
        b = (e) => {
          let { status: t, interactive: n = !0, children: r = null, ...i } = e;
          return (0, a.jsx)("div", {
            className: c().grid__tile,
            "data-status": t,
            "data-interactive": n,
            "data-type": "grid-tile",
            ...i,
            children: r,
          });
        },
        S = (e) => {
          let { variant: t, status: n, ...r } = e;
          return (0, a.jsx)("div", {
            className: c().grid__line,
            "data-variant": t,
            "data-status": n,
            ...r,
          });
        };
    },
    2763: function (e, t, n) {
      "use strict";
      n.d(t, {
        R: function () {
          return J;
        },
        L: function () {
          return Z;
        },
      });
      var r,
        i = n(3973),
        s = n(3445),
        a = n(2285),
        o = Symbol.for("immer-nothing"),
        l = Symbol.for("immer-draftable"),
        u = Symbol.for("immer-state");
      function c(e, ...t) {
        throw Error(
          `[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`
        );
      }
      var h = Object.getPrototypeOf;
      function d(e) {
        return !!e && !!e[u];
      }
      function p(e) {
        return (
          !!e &&
          (m(e) ||
            Array.isArray(e) ||
            !!e[l] ||
            !!e.constructor?.[l] ||
            x(e) ||
            b(e))
        );
      }
      var f = Object.prototype.constructor.toString();
      function m(e) {
        if (!e || "object" != typeof e) return !1;
        let t = h(e);
        if (null === t) return !0;
        let n = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
        return (
          n === Object ||
          ("function" == typeof n && Function.toString.call(n) === f)
        );
      }
      function g(e, t) {
        0 === _(e)
          ? Object.entries(e).forEach(([n, r]) => {
              t(n, r, e);
            })
          : e.forEach((n, r) => t(r, n, e));
      }
      function _(e) {
        let t = e[u];
        return t ? t.type_ : Array.isArray(e) ? 1 : x(e) ? 2 : b(e) ? 3 : 0;
      }
      function v(e, t) {
        return 2 === _(e)
          ? e.has(t)
          : Object.prototype.hasOwnProperty.call(e, t);
      }
      function y(e, t, n) {
        let r = _(e);
        2 === r ? e.set(t, n) : 3 === r ? e.add(n) : (e[t] = n);
      }
      function x(e) {
        return e instanceof Map;
      }
      function b(e) {
        return e instanceof Set;
      }
      function S(e) {
        return e.copy_ || e.base_;
      }
      function E(e, t) {
        if (x(e)) return new Map(e);
        if (b(e)) return new Set(e);
        if (Array.isArray(e)) return Array.prototype.slice.call(e);
        if (!t && m(e)) {
          if (!h(e)) {
            let t = Object.create(null);
            return Object.assign(t, e);
          }
          return { ...e };
        }
        let n = Object.getOwnPropertyDescriptors(e);
        delete n[u];
        let r = Reflect.ownKeys(n);
        for (let t = 0; t < r.length; t++) {
          let i = r[t],
            s = n[i];
          !1 === s.writable && ((s.writable = !0), (s.configurable = !0)),
            (s.get || s.set) &&
              (n[i] = {
                configurable: !0,
                writable: !0,
                enumerable: s.enumerable,
                value: e[i],
              });
        }
        return Object.create(h(e), n);
      }
      function M(e, t = !1) {
        return (
          T(e) ||
            d(e) ||
            !p(e) ||
            (_(e) > 1 && (e.set = e.add = e.clear = e.delete = w),
            Object.freeze(e),
            t && g(e, (e, t) => M(t, !0), !0)),
          e
        );
      }
      function w() {
        c(2);
      }
      function T(e) {
        return Object.isFrozen(e);
      }
      var A = {};
      function C(e) {
        let t = A[e];
        return t || c(0, e), t;
      }
      function R(e, t) {
        t &&
          (C("Patches"),
          (e.patches_ = []),
          (e.inversePatches_ = []),
          (e.patchListener_ = t));
      }
      function P(e) {
        O(e), e.drafts_.forEach(I), (e.drafts_ = null);
      }
      function O(e) {
        e === r && (r = e.parent_);
      }
      function L(e) {
        return (r = {
          drafts_: [],
          parent_: r,
          immer_: e,
          canAutoFreeze_: !0,
          unfinalizedDrafts_: 0,
        });
      }
      function I(e) {
        let t = e[u];
        0 === t.type_ || 1 === t.type_ ? t.revoke_() : (t.revoked_ = !0);
      }
      function N(e, t) {
        t.unfinalizedDrafts_ = t.drafts_.length;
        let n = t.drafts_[0],
          r = void 0 !== e && e !== n;
        return (
          r
            ? (n[u].modified_ && (P(t), c(4)),
              p(e) && ((e = D(t, e)), t.parent_ || k(t, e)),
              t.patches_ &&
                C("Patches").generateReplacementPatches_(
                  n[u].base_,
                  e,
                  t.patches_,
                  t.inversePatches_
                ))
            : (e = D(t, n, [])),
          P(t),
          t.patches_ && t.patchListener_(t.patches_, t.inversePatches_),
          e !== o ? e : void 0
        );
      }
      function D(e, t, n) {
        if (T(t)) return t;
        let r = t[u];
        if (!r) return g(t, (i, s) => U(e, r, t, i, s, n), !0), t;
        if (r.scope_ !== e) return t;
        if (!r.modified_) return k(e, r.base_, !0), r.base_;
        if (!r.finalized_) {
          (r.finalized_ = !0), r.scope_.unfinalizedDrafts_--;
          let t = r.copy_,
            i = t,
            s = !1;
          3 === r.type_ && ((i = new Set(t)), t.clear(), (s = !0)),
            g(i, (i, a) => U(e, r, t, i, a, n, s)),
            k(e, t, !1),
            n &&
              e.patches_ &&
              C("Patches").generatePatches_(
                r,
                n,
                e.patches_,
                e.inversePatches_
              );
        }
        return r.copy_;
      }
      function U(e, t, n, r, i, s, a) {
        if (d(i)) {
          let a =
              s && t && 3 !== t.type_ && !v(t.assigned_, r)
                ? s.concat(r)
                : void 0,
            o = D(e, i, a);
          if ((y(n, r, o), !d(o))) return;
          e.canAutoFreeze_ = !1;
        } else a && n.add(i);
        if (p(i) && !T(i)) {
          if (!e.immer_.autoFreeze_ && e.unfinalizedDrafts_ < 1) return;
          D(e, i), (t && t.scope_.parent_) || k(e, i);
        }
      }
      function k(e, t, n = !1) {
        !e.parent_ && e.immer_.autoFreeze_ && e.canAutoFreeze_ && M(t, n);
      }
      var F = {
          get(e, t) {
            if (t === u) return e;
            let n = S(e);
            if (!v(n, t))
              return (function (e, t, n) {
                let r = V(t, n);
                return r
                  ? "value" in r
                    ? r.value
                    : r.get?.call(e.draft_)
                  : void 0;
              })(e, n, t);
            let r = n[t];
            return e.finalized_ || !p(r)
              ? r
              : r === B(e.base_, t)
              ? (H(e), (e.copy_[t] = G(r, e)))
              : r;
          },
          has: (e, t) => t in S(e),
          ownKeys: (e) => Reflect.ownKeys(S(e)),
          set(e, t, n) {
            let r = V(S(e), t);
            if (r?.set) return r.set.call(e.draft_, n), !0;
            if (!e.modified_) {
              let r = B(S(e), t),
                i = r?.[u];
              if (i && i.base_ === n)
                return (e.copy_[t] = n), (e.assigned_[t] = !1), !0;
              if (
                (n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r) &&
                (void 0 !== n || v(e.base_, t))
              )
                return !0;
              H(e), j(e);
            }
            return (
              !!(
                (e.copy_[t] === n && (void 0 !== n || t in e.copy_)) ||
                (Number.isNaN(n) && Number.isNaN(e.copy_[t]))
              ) || ((e.copy_[t] = n), (e.assigned_[t] = !0), !0)
            );
          },
          deleteProperty: (e, t) => (
            void 0 !== B(e.base_, t) || t in e.base_
              ? ((e.assigned_[t] = !1), H(e), j(e))
              : delete e.assigned_[t],
            e.copy_ && delete e.copy_[t],
            !0
          ),
          getOwnPropertyDescriptor(e, t) {
            let n = S(e),
              r = Reflect.getOwnPropertyDescriptor(n, t);
            return r
              ? {
                  writable: !0,
                  configurable: 1 !== e.type_ || "length" !== t,
                  enumerable: r.enumerable,
                  value: n[t],
                }
              : r;
          },
          defineProperty() {
            c(11);
          },
          getPrototypeOf: (e) => h(e.base_),
          setPrototypeOf() {
            c(12);
          },
        },
        z = {};
      function B(e, t) {
        let n = e[u],
          r = n ? S(n) : e;
        return r[t];
      }
      function V(e, t) {
        if (!(t in e)) return;
        let n = h(e);
        for (; n; ) {
          let e = Object.getOwnPropertyDescriptor(n, t);
          if (e) return e;
          n = h(n);
        }
      }
      function j(e) {
        !e.modified_ && ((e.modified_ = !0), e.parent_ && j(e.parent_));
      }
      function H(e) {
        e.copy_ ||
          (e.copy_ = E(e.base_, e.scope_.immer_.useStrictShallowCopy_));
      }
      function G(e, t) {
        let n = x(e)
            ? C("MapSet").proxyMap_(e, t)
            : b(e)
            ? C("MapSet").proxySet_(e, t)
            : (function (e, t) {
                let n = Array.isArray(e),
                  i = {
                    type_: n ? 1 : 0,
                    scope_: t ? t.scope_ : r,
                    modified_: !1,
                    finalized_: !1,
                    assigned_: {},
                    parent_: t,
                    base_: e,
                    draft_: null,
                    copy_: null,
                    revoke_: null,
                    isManual_: !1,
                  },
                  s = i,
                  a = F;
                n && ((s = [i]), (a = z));
                let { revoke: o, proxy: l } = Proxy.revocable(s, a);
                return (i.draft_ = l), (i.revoke_ = o), l;
              })(e, t),
          i = t ? t.scope_ : r;
        return i.drafts_.push(n), n;
      }
      g(F, (e, t) => {
        z[e] = function () {
          return (arguments[0] = arguments[0][0]), t.apply(this, arguments);
        };
      }),
        (z.deleteProperty = function (e, t) {
          return z.set.call(this, e, t, void 0);
        }),
        (z.set = function (e, t, n) {
          return F.set.call(this, e[0], t, n, e[0]);
        });
      var W = new (class {
          constructor(e) {
            (this.autoFreeze_ = !0),
              (this.useStrictShallowCopy_ = !1),
              (this.produce = (e, t, n) => {
                let r;
                if ("function" == typeof e && "function" != typeof t) {
                  let n = t;
                  t = e;
                  let r = this;
                  return function (e = n, ...i) {
                    return r.produce(e, (e) => t.call(this, e, ...i));
                  };
                }
                if (
                  ("function" != typeof t && c(6),
                  void 0 !== n && "function" != typeof n && c(7),
                  p(e))
                ) {
                  let i = L(this),
                    s = G(e, void 0),
                    a = !0;
                  try {
                    (r = t(s)), (a = !1);
                  } finally {
                    a ? P(i) : O(i);
                  }
                  return R(i, n), N(r, i);
                }
                if (e && "object" == typeof e) c(1, e);
                else {
                  if (
                    (void 0 === (r = t(e)) && (r = e),
                    r === o && (r = void 0),
                    this.autoFreeze_ && M(r, !0),
                    n)
                  ) {
                    let t = [],
                      i = [];
                    C("Patches").generateReplacementPatches_(e, r, t, i),
                      n(t, i);
                  }
                  return r;
                }
              }),
              (this.produceWithPatches = (e, t) => {
                let n, r;
                if ("function" == typeof e)
                  return (t, ...n) =>
                    this.produceWithPatches(t, (t) => e(t, ...n));
                let i = this.produce(e, t, (e, t) => {
                  (n = e), (r = t);
                });
                return [i, n, r];
              }),
              "boolean" == typeof e?.autoFreeze &&
                this.setAutoFreeze(e.autoFreeze),
              "boolean" == typeof e?.useStrictShallowCopy &&
                this.setUseStrictShallowCopy(e.useStrictShallowCopy);
          }
          createDraft(e) {
            var t;
            p(e) || c(8),
              d(e) &&
                (d((t = e)) || c(10, t),
                (e = (function e(t) {
                  let n;
                  if (!p(t) || T(t)) return t;
                  let r = t[u];
                  if (r) {
                    if (!r.modified_) return r.base_;
                    (r.finalized_ = !0),
                      (n = E(t, r.scope_.immer_.useStrictShallowCopy_));
                  } else n = E(t, !0);
                  return (
                    g(n, (t, r) => {
                      y(n, t, e(r));
                    }),
                    r && (r.finalized_ = !1),
                    n
                  );
                })(t)));
            let n = L(this),
              r = G(e, void 0);
            return (r[u].isManual_ = !0), O(n), r;
          }
          finishDraft(e, t) {
            let n = e && e[u];
            (n && n.isManual_) || c(9);
            let { scope_: r } = n;
            return R(r, t), N(void 0, r);
          }
          setAutoFreeze(e) {
            this.autoFreeze_ = e;
          }
          setUseStrictShallowCopy(e) {
            this.useStrictShallowCopy_ = e;
          }
          applyPatches(e, t) {
            let n;
            for (n = t.length - 1; n >= 0; n--) {
              let r = t[n];
              if (0 === r.path.length && "replace" === r.op) {
                e = r.value;
                break;
              }
            }
            n > -1 && (t = t.slice(n + 1));
            let r = C("Patches").applyPatches_;
            return d(e) ? r(e, t) : this.produce(e, (e) => r(e, t));
          }
        })(),
        $ = W.produce;
      W.produceWithPatches.bind(W),
        W.setAutoFreeze.bind(W),
        W.setUseStrictShallowCopy.bind(W),
        W.applyPatches.bind(W),
        W.createDraft.bind(W),
        W.finishDraft.bind(W);
      var X = n(782),
        q = n(6635),
        Y = n(7384);
      let J = (0, i.M)()(
          (0, X.XR)((e) => ({
            config: null,
            puzzleState: "idle",
            puzzleStateCache: void 0,
            dispatch: (t) =>
              e((e) =>
                (function (e, t) {
                  var n, r, i, s, o, l, u;
                  if ("NETWORK_CONNECTION_LOST" === t.type)
                    return {
                      ...e,
                      puzzleState: "network-error",
                      puzzleStateCache: e.puzzleState,
                    };
                  if ("ATTEMPTING_NETWORK_RECONNECT" === t.type)
                    return {
                      ...e,
                      puzzleState: "attempting-network-reconnect",
                      puzzleStateCache: e.puzzleState,
                    };
                  if ("ATTEMPTING_TO_JOIN_FULL_ROOM" === t.type)
                    return { ...e, puzzleState: "room-is-full" };
                  if ("PRIVATE_ROOM_IN_USE" === t.type)
                    return { ...e, puzzleState: "room-is-in-use" };
                  if ("ROOM_PREVIOUSLY_USED" === t.type)
                    return { ...e, puzzleState: "room-previously-used" };
                  switch (e.puzzleState) {
                    case "idle":
                      if ("INIT" === t.type)
                        return { ...e, puzzleState: "loading" };
                      break;
                    case "loading": {
                      let u = !1,
                        c =
                          null === (n = e.config) || void 0 === n
                            ? void 0
                            : n.isMultiplayer,
                        h = !1 === q.h.getState().isLoading;
                      if (
                        ("LOADED_WEBGL_ASSETS" === t.type && (u = !0),
                        "LOADED_MULTIPLAYER" === t.type && (u = h),
                        u)
                      ) {
                        let t =
                            (null === (r = e.config) || void 0 === r
                              ? void 0
                              : r.decryptionType) === a.Ou.AUTO_ACCESS,
                          n =
                            (null === (i = e.config) || void 0 === i
                              ? void 0
                              : i.decryptionType) === a.Ou.AUTO_ACCESS ||
                            (null === (s = e.config) || void 0 === s
                              ? void 0
                              : s.decryptionType) === a.Ou.PATTERN_UNLOCK ||
                            (null === (o = e.config) || void 0 === o
                              ? void 0
                              : o.decryptionType) === a.Ou.COMMUNITY_UNLOCK;
                        if (t) return { ...e, puzzleState: "puzzle-success" };
                        if (!1 === c)
                          return {
                            ...e,
                            puzzleState: n ? "gameplay" : "lobby-singleplayer",
                          };
                        return {
                          ...e,
                          puzzleState: n
                            ? "gameplay"
                            : (
                                null === (l = e.config) || void 0 === l
                                  ? void 0
                                  : l.isMultiplayerPublic
                              )
                            ? "lobby-multiplayer-public"
                            : "lobby-multiplayer-private",
                        };
                      }
                      break;
                    }
                    case "lobby-singleplayer":
                      if ("CLICK_CTA" === t.type)
                        return { ...e, puzzleState: "gameplay" };
                      break;
                    case "lobby-multiplayer-public":
                      if ("SET_ROOM_PRIVATE" === t.type)
                        return {
                          ...e,
                          puzzleState: "lobby-multiplayer-private",
                        };
                    case "lobby-multiplayer-private":
                      if ("MULTIPLAYER_READY" === t.type)
                        return { ...e, puzzleState: "gameplay" };
                      break;
                    case "gameplay":
                      if ("DECRYPTION_COMPLETE" === t.type)
                        return { ...e, puzzleState: "puzzle-success" };
                      if ("DECRYPTION_FAIL" === t.type)
                        return { ...e, puzzleState: "puzzle-fail" };
                      break;
                    case "puzzle-success":
                      if ("SUCCESS_TIMER_COMPLETE" === t.type) {
                        let t = !!(null === (u = e.config) || void 0 === u
                          ? void 0
                          : u.downloadAsset);
                        return {
                          ...e,
                          puzzleState: t
                            ? "puzzle-complete-download-asset"
                            : "puzzle-complete-watch-asset",
                        };
                      }
                    case "puzzle-complete-download-asset":
                    case "puzzle-complete-watch-asset":
                      if (
                        "CLICK_EXIT_CTA" === t.type ||
                        "ASSET_VIEW_COUNTDOWN_COMPLETE" === t.type
                      )
                        return {
                          ...e,
                          puzzleState: "puzzle-complete-outro-animation",
                        };
                      break;
                    case "puzzle-complete-outro-animation":
                      break;
                    case "network-error":
                      if ("NETWORK_CONNECTION_RESTORED" === t.type)
                        return {
                          ...e,
                          puzzleState: e.puzzleStateCache,
                          puzzleStateCache: void 0,
                        };
                      break;
                    case "room-is-full":
                      if ("LEAVE_PRIVATE_ROOM" === t.type)
                        return {
                          ...e,
                          puzzleState: "lobby-multiplayer-public",
                        };
                      if ("MULTIPLAYER_READY" === t.type)
                        return { ...e, puzzleState: "gameplay" };
                  }
                  return e;
                })(e, t)
              ),
            decryptionLevel: { global: 0, users: [] },
            setLocalUserDecryptionLevel: (t, n) =>
              e(
                $((e) => {
                  let r = e.decryptionLevel.users.find((e) => e.uuid === t);
                  r
                    ? (r.decryptionLevel = n)
                    : e.decryptionLevel.users.push({
                        uuid: t,
                        decryptionLevel: n,
                      });
                })
              ),
            setRemoteUsersDecryptionLevel: (t) =>
              e(
                $((e) => {
                  let n = e.decryptionLevel.users.find(
                    (e) => e.uuid === Y.c.getState().localUserId
                  );
                  e.decryptionLevel.users = [n, ...t].filter(Boolean);
                })
              ),
            setGlobalDecryptionLevel: (t) =>
              e(
                $((e) => {
                  e.decryptionLevel.global = t;
                })
              ),
            reset: () =>
              e({
                config: null,
                puzzleState: "idle",
                decryptionLevel: { global: 0, users: [] },
              }),
            api: { set: (t) => e((e) => ({ ...e, ...t })) },
          }))
        ),
        Z = (e) => {
          let t = null != e ? e : (e) => e;
          return (0, s.oR)(J, t);
        };
    },
    6956: function (e, t, n) {
      "use strict";
      n.d(t, {
        L: function () {
          return l;
        },
      });
      var r = n(2322);
      n(2784);
      var i = n(489),
        s = n(6461),
        a = n(1744),
        o = n.n(a);
      let l = (e) => {
        let { className: t = "", style: n = {}, ...a } = e,
          l = (() => {
            if (!((0, s.hj)(a.width) || (0, s.hj)(a.height))) return {};
            {
              var e, t;
              let n =
                  null !==
                    (t =
                      null !== (e = a.width) && void 0 !== e ? e : a.height) &&
                  void 0 !== t
                    ? t
                    : 0,
                r = (0, s.hj)(a.width) ? "horizontal" : "vertical";
              return "vertical" === r
                ? { height: "".concat(n, "px"), width: "100%" }
                : { width: "".concat(n, "px"), display: "inline-block" };
            }
          })();
        return (0, r.jsx)("div", {
          className: (0, i.Z)(o().spacer, t),
          style: { ...n, ...l },
          "aria-hidden": "true",
          ...a,
        });
      };
    },
    7510: function (e, t, n) {
      "use strict";
      n.d(t, {
        R: function () {
          return _;
        },
        $: function () {
          return i;
        },
      });
      var r,
        i,
        s = n(2322),
        a = n(2784),
        o = n(617),
        l = n.n(o),
        u = n(9374),
        c = n(5632),
        h = n(9097),
        d = n.n(h),
        p = n(4109),
        f = n(1687),
        m = n(3670);
      let g = (0, u.n)(l(), "window");
      ((r = i || (i = {})).GrayOnGray = "gray-gray"),
        (r.GrayOnWhite = "gray-white"),
        (r.Puzzle = "puzzle"),
        (r.PurpleOnPurple = "purple"),
        (r.GreenOnGreen = "green");
      let _ = a.forwardRef((e, t) => {
        let {
            title: n,
            children: r,
            isPuzzle: o = !1,
            className: l,
            style: u = {},
            canExit: h = !1,
            show: _ = !0,
            theme: v = i.GrayOnWhite,
            active: y = !0,
            onClose: x,
            draggable: b = !1,
            ...S
          } = e,
          E = (0, c.useRouter)(),
          M = (0, f.c)(0),
          w = (0, f.c)(0),
          [T, A] = (0, a.useState)({ x: 0, y: 0 });
        (0, a.useEffect)(() => {
          let e = () => {
            let e = document.getElementById("window");
            if (!e) return;
            let { x: t, y: n } = e.getBoundingClientRect();
            A({ x: t, y: n });
          };
          return (
            e(),
            window.addEventListener("resize", e),
            () => {
              window.removeEventListener("resize", e);
            }
          );
        }, [_]);
        let C = (0, a.useCallback)(
          (e, t) => {
            let { delta: n } = t,
              r = document.getElementById("window");
            if (!r) return;
            let { width: i, height: s } = r.getBoundingClientRect(),
              a = w.get() + n.x,
              o = M.get() + n.y,
              l = a <= -T.x,
              u = a >= window.innerWidth - i - T.x,
              c = o <= -T.y,
              h = o >= window.innerHeight - s - T.y;
            w.set(l ? -T.x : u ? window.innerWidth - i - T.x : a),
              M.set(c ? -T.y : h ? window.innerHeight - s - T.y : o);
          },
          [w, M, T]
        );
        return (0, s.jsxs)(
          m.E.div,
          {
            ref: t,
            id: "window",
            transition: { when: "afterChildren" },
            className: "".concat(g(), " ").concat(l),
            "data-theme": v,
            "data-active": y,
            "data-is-fullscreen": S.isFullscreen,
            style: {
              display: _ ? "" : "none",
              x: b ? w : void 0,
              y: b ? M : void 0,
              ...u,
            },
            ...S,
            children: [
              (0, s.jsx)(
                m.E.div,
                {
                  className: g("tileBackground"),
                  initial: { opacity: 0 },
                  animate: { opacity: 1 },
                  transition: { duration: 0, delay: 0.1 },
                  exit: { opacity: 0, transition: { duration: 0, delay: 0.1 } },
                },
                "tile-bg"
              ),
              (0, s.jsxs)(
                m.E.div,
                {
                  className: g("topLayer"),
                  initial: { opacity: 0 },
                  animate: { opacity: 1 },
                  transition: { duration: 0, delay: 0.2 },
                  exit: { opacity: 0, transition: { duration: 0, delay: 0 } },
                  children: [
                    (0, s.jsx)(m.E.div, {
                      className: g("topbar"),
                      drag: !!b,
                      dragElastic: !1,
                      dragMomentum: !1,
                      dragListener: !1,
                      onPan: b ? C : void 0,
                      style: { cursor: b ? "grab" : "default" },
                      children: (0, s.jsxs)("div", {
                        className: g("titlebox"),
                        children: [
                          (0, s.jsx)("p", { children: n }),
                          h &&
                            !x &&
                            (0, s.jsxs)(s.Fragment, {
                              children: [
                                (0, s.jsx)(d(), {
                                  href: o
                                    ? "/"
                                        .concat(E.query.locale, "/districts/")
                                        .concat(E.query.district_id)
                                    : "#",
                                  className: g("closeIconClickArea"),
                                }),
                                (0, s.jsx)(d(), {
                                  href: o
                                    ? "/"
                                        .concat(E.query.locale, "/districts/")
                                        .concat(E.query.district_id)
                                    : "#",
                                  className: g("closeIcon"),
                                  children: (0, s.jsx)(p.oHP, {}),
                                }),
                              ],
                            }),
                          h &&
                            x &&
                            (0, s.jsxs)(s.Fragment, {
                              children: [
                                (0, s.jsx)("div", {
                                  onClick: x,
                                  className: g("closeIconClickArea"),
                                }),
                                (0, s.jsx)("div", {
                                  className: g("closeIcon"),
                                  children: (0, s.jsx)(p.oHP, {}),
                                }),
                              ],
                            }),
                        ],
                      }),
                    }),
                    (0, s.jsx)("div", {
                      className: g("inner"),
                      "data-is-puzzle": o,
                      children: r,
                    }),
                  ],
                },
                "top-layer"
              ),
            ],
          },
          S.id
        );
      });
      _.displayName = "Window";
    },
    2794: function (e, t, n) {
      "use strict";
      var r, i;
      n.d(t, {
        $z: function () {
          return h;
        },
        F8: function () {
          return c;
        },
        K7: function () {
          return p;
        },
        KT: function () {
          return y;
        },
        S9: function () {
          return g;
        },
        TQ: function () {
          return s;
        },
        Z6: function () {
          return l;
        },
        bF: function () {
          return u;
        },
        d6: function () {
          return m;
        },
        dh: function () {
          return a;
        },
        hg: function () {
          return o;
        },
        nM: function () {
          return _;
        },
        w5: function () {
          return v;
        },
        wU: function () {
          return f;
        },
        xs: function () {
          return r;
        },
        zt: function () {
          return d;
        },
      });
      let s = !1;
      ((i = r || (r = {})).Map = "map"),
        (i.GlitchScene = "glitch-scene"),
        (i.LandingPage = "landing-page");
      let a = 4,
        o = 800,
        l = 2e3,
        u = /^[\w\+\.-]+@([\w-]+\.)+[\w-]{2,4}$/,
        c = /#\/.*\/.*/,
        h = /#\/([^\/]+)\/([^\/]+)/,
        d = {
          hidden: { clipPath: "inset(-40px calc(100% + 40px) -40px -40px)" },
          visible: {
            clipPath: "inset(-40px -40px -40px -40px)",
            transition: { duration: 0.15, ease: [0.23, 0.44, 0.73, 0.76] },
          },
        },
        p = ["en"],
        f = 0.98,
        m = 0.9,
        g = 3e3,
        _ = [0, 0.25, 0.5, 0.75, 1],
        v = [..._].reverse(),
        y = {
          0.25: "console_puzzle_25",
          0.5: "console_puzzle_50",
          0.75: "console_puzzle_75",
          1: "console_puzzle_100",
        };
    },
    6566: function (e, t, n) {
      "use strict";
      n.d(t, {
        a: function () {
          return o;
        },
        c: function () {
          return l;
        },
      });
      var r = n(2784),
        i = n(7643);
      function s(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          [n, s] = (0, r.useState)(t);
        return (
          (0, i.LI)(() => {
            let t = matchMedia(e);
            function n() {
              s(t.matches);
            }
            return (
              n(),
              t.addEventListener("change", n),
              () => {
                t.removeEventListener("change", n);
              }
            );
          }, [e]),
          n
        );
      }
      let a = { mobile: 450, tablet: 768, desktopSmall: 1024, desktop: 1440 };
      function o(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return s(
          "(min-".concat(t ? "height" : "width", ":").concat(a[e], "px)")
        );
      }
      function l(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return s(
          "(max-".concat(t ? "height" : "width", ":").concat(a[e], "px)")
        );
      }
    },
    4145: function (e, t, n) {
      "use strict";
      n.d(t, {
        q: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = (e) => (0, r.useEffect)(() => e, []);
    },
    4255: function (e, t, n) {
      "use strict";
      n.d(t, {
        A: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = () => {
        let [e, t] = (0, r.useState)(!0);
        return (
          (0, r.useEffect)(() => {
            t(!1);
          }, []),
          e
        );
      };
    },
    6231: function (e, t, n) {
      "use strict";
      n.d(t, {
        Y: function () {
          return s;
        },
      });
      var r = n(2784),
        i = n(7643);
      function s() {
        let [e, t] = (0, r.useState)(!1);
        return (
          (0, i.LI)(() => {
            t(window.matchMedia("(pointer: coarse)").matches);
          }, []),
          e
        );
      }
    },
    9985: function (e, t, n) {
      "use strict";
      n.d(t, {
        q: function () {
          return i;
        },
      });
      var r = n(2784);
      function i() {
        for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return r.useMemo(
          () =>
            t.every((e) => null == e)
              ? null
              : (e) => {
                  t.forEach((t) => {
                    "function" == typeof t ? t(e) : t && (t.current = e);
                  });
                },
          t
        );
      }
    },
    6927: function (e, t, n) {
      "use strict";
      n.d(t, {
        n: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = (e) => (0, r.useEffect)(e, []);
    },
    5126: function (e, t, n) {
      "use strict";
      n.d(t, {
        $G: function () {
          return a;
        },
        Iu: function () {
          return o;
        },
      });
      var r = n(5705),
        i = n(2784);
      let s = (e, t) => {
          if (!t) return e;
          for (let n = 0; n < t.length; n++) {
            let r = RegExp("\\{" + n + "\\}", "gm");
            e = e.replace(r, t[n]);
          }
          let n = e
            .split("{")
            .map((e) => {
              if ((e.replace("}", ""), e.split("|").length > 1)) {
                var n;
                let r = null !== (n = e.split("}")[1]) && void 0 !== n ? n : "",
                  i = e.split("}")[0].split("|"),
                  s = Number(i[0]),
                  a = i[1],
                  o = i[2],
                  l = Number(t[s]);
                return (1 === l ? a : o) + r;
              }
              return e;
            })
            .join("")
            .replace("}", "");
          return n;
        },
        a = () => {
          let { t: e, i18n: t } = (0, r.$G)(),
            n = (0, i.useCallback)(
              function (t) {
                let { fallback: n, args: r } =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  i = s(e(t), null == r ? void 0 : r.map((e) => String(e)));
                return i === t && null != n ? n : i;
              },
              [e]
            );
          return { translate: n, i18n: t };
        },
        o = function (e) {
          var t;
          let { fallback: n, args: i } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            a = s(
              null !==
                (t = null === r.ag || void 0 === r.ag ? void 0 : r.ag.t(e)) &&
                void 0 !== t
                ? t
                : e,
              i
            );
          return a === e && null != n ? n : a;
        };
    },
    1051: function (e, t, n) {
      "use strict";
      n.d(t, {
        i: function () {
          return s;
        },
      });
      var r = n(2784);
      let i = function (e) {
          let t,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 100;
          return function () {
            for (var r = arguments.length, i = Array(r), s = 0; s < r; s++)
              i[s] = arguments[s];
            clearTimeout(t), (t = setTimeout(() => e.apply(this, i), n));
          };
        },
        s = function () {
          let { wait: e = 100 } =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            [t, n] = r.useState({
              width: window.innerWidth,
              height: window.innerHeight,
            });
          return (
            r.useEffect(() => {
              let t;
              function r() {
                n({ width: window.innerWidth, height: window.innerHeight });
              }
              return (
                (t = 0 !== e ? i(r, e) : r)(new Event("resize")),
                window.addEventListener("resize", t, { passive: !0 }),
                () => window.removeEventListener("resize", t)
              );
            }, [e]),
            t
          );
        };
    },
    9456: function (e, t, n) {
      "use strict";
      let r, i, s, a, o;
      n.r(t),
        n.d(t, {
          default: function () {
            return nO;
          },
        });
      var l = n(2322);
      n(620), n(2851), n(2149);
      var u = n(9097),
        c = n.n(u),
        h = n(5705),
        d = n(7643),
        p = n(2784),
        f = n(3445);
      let m = {
          light: {
            "--color-theme-text": "var(--color-black)",
            "--color-theme-background": "white",
            "--color-theme-text-inverted": "white",
            "--color-theme-background-inverted": "var(--color-black)",
          },
          dark: {
            "--color-theme-text": "white",
            "--color-theme-background": "var(--color-gray)",
            "--color-theme-text-inverted": "var(--color-gray)",
            "--color-theme-background-inverted": "white",
          },
        },
        g = (0, f.Ue)()((e) => ({
          theme: "dark",
          setTheme: (t) => e({ theme: t }),
        })),
        _ = () => {
          let { theme: e, setTheme: t } = g();
          return { theme: e, setTheme: t };
        },
        v = (e) => {
          let { ...t } = e,
            n = g((e) => e.theme);
          return (
            (0, p.useEffect)(() => {
              let e = document.querySelector(":root");
              e &&
                Object.entries(m[n]).forEach((t) =>
                  e.style.setProperty(t[0], t[1])
                );
            }, [n]),
            (0, l.jsx)(l.Fragment, { children: t.children })
          );
        };
      var y = n(5274),
        x = n.n(y),
        b = n(9374),
        S = function () {
          return (S =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var i in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
              return e;
            }).apply(this, arguments);
        },
        E = function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              0 > t.indexOf(r) &&
              (n[r] = e[r]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, r = Object.getOwnPropertySymbols(e);
              i < r.length;
              i++
            )
              0 > t.indexOf(r[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          return n;
        },
        M = !1,
        w = (0, p.forwardRef)(function (e, t) {
          var n = e.style,
            r = E(e, ["style"]),
            i = T();
          !M &&
            (null == n ? void 0 : n.height) &&
            ((M = !0),
            console.warn(
              "<Div100vh /> overrides the height property of the style prop"
            ));
          var s = S(S({}, n), { height: i ? i + "px" : "100vh" });
          return p.createElement("div", S({ ref: t, style: s }, r));
        });
      function T() {
        var e,
          t,
          n,
          r = (0, p.useState)(A),
          i = r[0],
          s = r[1],
          a =
            ((t = (e = (0, p.useState)(!1))[0]),
            (n = e[1]),
            (0, p.useEffect)(function () {
              C() && n(!0);
            }, []),
            t);
        return (
          (0, p.useEffect)(
            function () {
              if (a)
                return (
                  window.addEventListener("resize", e),
                  function () {
                    return window.removeEventListener("resize", e);
                  }
                );
              function e() {
                s(A());
              }
            },
            [a]
          ),
          a ? i : null
        );
      }
      function A() {
        return C() ? window.innerHeight : null;
      }
      function C() {
        return "undefined" != typeof window && "undefined" != typeof document;
      }
      w.displayName = "Div100vh";
      var R = n(6566),
        P = n(5632),
        O = n(7195),
        L = n.n(O),
        I = n(7896);
      let N = (0, p.forwardRef)((e, t) => {
        let { children: n, ...r } = e,
          i = p.Children.toArray(n),
          s = i.find(k);
        if (s) {
          let e = s.props.children,
            n = i.map((t) =>
              t !== s
                ? t
                : p.Children.count(e) > 1
                ? p.Children.only(null)
                : (0, p.isValidElement)(e)
                ? e.props.children
                : null
            );
          return (0, p.createElement)(
            D,
            (0, I.Z)({}, r, { ref: t }),
            (0, p.isValidElement)(e) ? (0, p.cloneElement)(e, void 0, n) : null
          );
        }
        return (0, p.createElement)(D, (0, I.Z)({}, r, { ref: t }), n);
      });
      N.displayName = "Slot";
      let D = (0, p.forwardRef)((e, t) => {
        let { children: n, ...r } = e;
        return (0, p.isValidElement)(n)
          ? (0, p.cloneElement)(n, {
              ...(function (e, t) {
                let n = { ...t };
                for (let r in t) {
                  let i = e[r],
                    s = t[r],
                    a = /^on[A-Z]/.test(r);
                  a
                    ? i && s
                      ? (n[r] = (...e) => {
                          s(...e), i(...e);
                        })
                      : i && (n[r] = i)
                    : "style" === r
                    ? (n[r] = { ...i, ...s })
                    : "className" === r &&
                      (n[r] = [i, s].filter(Boolean).join(" "));
                }
                return { ...e, ...n };
              })(r, n.props),
              ref: t
                ? (function (...e) {
                    return (t) =>
                      e.forEach((e) => {
                        "function" == typeof e
                          ? e(t)
                          : null != e && (e.current = t);
                      });
                  })(t, n.ref)
                : n.ref,
            })
          : p.Children.count(n) > 1
          ? p.Children.only(null)
          : null;
      });
      D.displayName = "SlotClone";
      let U = ({ children: e }) => (0, p.createElement)(p.Fragment, null, e);
      function k(e) {
        return (0, p.isValidElement)(e) && e.type === U;
      }
      var F = n(489);
      let z = (0, b.n)(L(), "breadcrumbs"),
        B = (e) => {
          let { children: t, className: n = "", ...r } = e;
          return (0, l.jsx)("div", {
            className: (0, F.Z)(n),
            ...r,
            children: t,
          });
        },
        V = (e) => {
          let { asChild: t, className: n, ...r } = e,
            i = t ? N : "button";
          return (0, l.jsx)(i, { className: (0, F.Z)(z("item"), n), ...r });
        };
      var j = n(1426),
        H = n.n(j),
        G = n(8909);
      let W = (0, b.n)(H(), "dashboardPanel"),
        $ = p.forwardRef((e, t) => {
          let {
            style: n,
            className: r,
            onClick: i = G.Z,
            title: s = "title",
            activeMobilePanel: a,
            close: o,
            expanded: u,
            toggleExpanded: c,
            ...h
          } = e;
          return (0, l.jsxs)("div", {
            ref: t,
            className: (0, F.Z)(W(), r),
            style: n,
            onClick: i,
            children: [
              (0, l.jsxs)("div", {
                className: W("titleBar"),
                onClick: (e) => {
                  e.stopPropagation(), c && c();
                },
                children: [
                  (0, l.jsx)("div", {
                    className: W("titlebox"),
                    children: (0, l.jsx)("p", { children: s }),
                  }),
                  (0, l.jsx)("div", {
                    className: W("toggleSizeBtn"),
                    "data-expanded": u,
                    children: (0, l.jsx)("p", { children: "↑" }),
                  }),
                ],
              }),
              (0, l.jsx)(N, { className: W("content"), ...h }),
            ],
          });
        });
      $.displayName = "DashboardPanel";
      var X = n(3702),
        q = n(6956),
        Y = n(5126),
        J = n(6176);
      let Z = () => {
          let [e, t] = (0, p.useState)("");
          return (
            (0, p.useEffect)(() => {
              let e;
              return (
                (e = setInterval(() => {
                  let e = new Date(),
                    n = e.getHours().toString().padStart(2, "0"),
                    r = e.getMinutes().toString().padStart(2, "0"),
                    i = e.getSeconds().toString().padStart(2, "0");
                  t(
                    "2097-"
                      .concat(e.getMonth() + 1, "-")
                      .concat(e.getDate(), " ")
                      .concat(n, ":")
                      .concat(r, ":")
                      .concat(i)
                  );
                }, 1e3)),
                () => {
                  clearInterval(e);
                }
              );
            }, []),
            (0, l.jsx)("span", { children: e })
          );
        },
        K = (e) => {
          let { botVersion: t, securityStatus: n } = e,
            r = parseInt(t),
            i = (0, J.qr)((e) => e.userId),
            { translate: s } = (0, Y.$G)();
          return (0, l.jsxs)("div", {
            className: H().dashboardPanelContent,
            children: [
              (0, l.jsxs)("div", {
                children: [
                  (0, l.jsxs)("span", {
                    className: H().dashboardPanelContentLine,
                    children: [
                      "[",
                      (0, l.jsx)("span", {
                        className: H().dashboardPanelContentLabel,
                        children: s("dashboard_data_panel_network_label"),
                      }),
                      "]",
                    ],
                  }),
                  s("dashboard_data_panel_network_value"),
                ],
              }),
              (0, l.jsxs)("div", {
                children: [
                  (0, l.jsxs)("span", {
                    className: H().dashboardPanelContentLine,
                    children: [
                      "[",
                      (0, l.jsx)("span", {
                        className: H().dashboardPanelContentLabel,
                        children: s("dashboard_data_panel_id_label"),
                      }),
                      "]",
                    ],
                  }),
                  "#",
                  i,
                ],
              }),
              (0, l.jsxs)("div", {
                children: [
                  (0, l.jsxs)("span", {
                    className: H().dashboardPanelContentLine,
                    children: [
                      "[",
                      (0, l.jsx)("span", {
                        className: H().dashboardPanelContentLabel,
                        children: s("dashboard_data_panel_date_label"),
                      }),
                      "]",
                    ],
                  }),
                  (0, l.jsx)(Z, {}),
                ],
              }),
              (0, l.jsx)(q.L, { height: 16 }),
              (0, l.jsx)(X.r, {
                title: s("dashboard_data_panel_ai_progress_label"),
                progressValue: r,
              }),
              (0, l.jsx)(q.L, { height: 2 }),
              (0, l.jsx)(X.r, {
                title: s("dashboard_data_panel_security_status_label"),
                progressValue: n,
              }),
            ],
          });
        },
        Q = (e) => {
          let { botVersion: t, securityStatus: n } = e,
            r = parseInt(t),
            [i, s] = (0, p.useState)(!1),
            { translate: a } = (0, Y.$G)(),
            o = (e) => {
              s(e.target.scrollTop > 0);
            };
          return (
            (0, p.useEffect)(() => {
              let e = document.querySelector("#webglInputElement");
              if (e)
                return (
                  e.addEventListener("scroll", o),
                  () => {
                    e.removeEventListener("scroll", o);
                  }
                );
            }, []),
            (0, l.jsxs)("div", {
              className: H().dashboardPanelPreview,
              "data-scrolling": i,
              children: [
                (0, l.jsx)(X.r, {
                  className: H().previewPanelProgressBar,
                  title: a("dashboard_data_panel_ai_progress_label"),
                  progressValue: r,
                  theme: "white",
                }),
                (0, l.jsx)(X.r, {
                  className: H().previewPanelProgressBar,
                  title: a("dashboard_data_panel_security_status_label"),
                  progressValue: n,
                  theme: "white",
                }),
              ],
            })
          );
        };
      var ee = n(4109);
      let et = () => {
        let [e, t] = (0, p.useReducer)((e, t) => {
          switch (t.type) {
            case "OPEN_PANEL":
              return t.payload;
            case "CLOSE_PANEL":
            case "CLICK_OUTSIDE":
              return null;
            default:
              return e;
          }
        }, null);
        return [e, t];
      };
      var en = n(8761),
        er = n.n(en),
        ei = n(4255),
        es = n(3562),
        ea = n(2285),
        eo = n(3231),
        el = n(6461);
      let eu = (e) => (e.includes("#") ? e.split("#")[1] : e);
      var ec = n(7384),
        eh = n(2763),
        ed = n(1737);
      let ep = (e) => e_.hasOwnProperty(e) || eg(e) || em(e),
        ef = (e) => es.E3.includes(e),
        em = (e) => "help" === e,
        eg = (e) => "clear" === e,
        e_ = {
          whoami: {
            description: () =>
              (0, Y.Iu)("console_command_whoami_description", {
                fallback: "Show current user id",
              }),
            usage: ["whoami"],
            handler: (e, t) => {
              var n;
              return (0, Y.Iu)("console_command_whoami_success", {
                args: [
                  null !== (n = t.appStore.userId) && void 0 !== n ? n : "",
                ],
                fallback: "".concat(t.appStore.userId),
              });
            },
          },
          list: {
            description: () =>
              (0, Y.Iu)("console_command_list_description", {
                fallback: "List all districts and nodes",
              }),
            usage: ["list"],
            handler: (e, t) => {
              let { districts: n = [] } = t.appStore,
                { isDistrictSelectorRoute: r, isDistrictRoute: i } = (0, es.i9)(
                  t.router.pathname
                ),
                s = [],
                a = "",
                o = [],
                l = "";
              if (
                (r &&
                  ((s = n.filter((e) => e.status === ea.Ie.ONLINE)),
                  (a = "console_command_list_districts"),
                  (l = "console_command_list_district")),
                i)
              ) {
                var u, c, h;
                let e = t.appStore.districts.find(
                  (e) => e.id === t.router.query.district_id
                );
                (s =
                  null !==
                    (c =
                      null == e
                        ? void 0
                        : null === (u = e.streamNodes) || void 0 === u
                        ? void 0
                        : u.filter(
                            (e) =>
                              e.status === ea.Ie.ONLINE &&
                              e.type === ea.jl.DEFAULT
                          )) && void 0 !== c
                    ? c
                    : []),
                  (o = [
                    null !== (h = null == e ? void 0 : e.id) && void 0 !== h
                      ? h
                      : "",
                  ]),
                  (a = "console_command_list_nodes"),
                  (l = "console_command_list_node");
              }
              return s.length
                ? [
                    "",
                    (0, Y.Iu)(a, {
                      args: o,
                      fallback: "Listing all districts and nodes",
                    }),
                    ...s.map((e) => {
                      let t = e.status === ea.Ie.ONLINE,
                        n = t ? es.Zz : es.fz;
                      return (0, Y.Iu)(l, {
                        args: [
                          e.id,
                          n("[".concat(e.status.toUpperCase(), "]")),
                        ],
                        fallback: ""
                          .concat(e.id, " - ")
                          .concat(e.status.toUpperCase()),
                      });
                    }),
                  ].join("\n\r")
                : (0, Y.Iu)("console_command_list_no_items", {
                    fallback: "No items to list",
                  });
            },
          },
          info: {
            description: () =>
              (0, Y.Iu)("console_command_info_description", {
                fallback: "Show info about district or stream node",
              }),
            usage: ["info -district <district_id>", "info -node <node_id>"],
            handler: (e, t) => {
              let { node: n, district: r } = (0, es.uf)(e),
                { isNodeStreamRoute: i, isDistrictRoute: s } = (0, es.i9)(
                  t.router.pathname
                );
              if (r || (!n && s)) {
                let e = null != r ? r : t.router.query.district_id,
                  n = t.appStore.districts.find((t) => t.id === e);
                if (!n)
                  return (0, Y.Iu)("console_command_info_district_invalid_id", {
                    args: [e],
                    fallback: "Unable to locate district",
                  });
                {
                  var a;
                  let e = n.status === ea.Ie.ONLINE,
                    t = e
                      ? (null !== (a = n.streamNodes) && void 0 !== a
                          ? a
                          : []
                        ).filter((e) => e.status === ea.Ie.ONLINE)
                      : [],
                    r = n.description,
                    i = (0, ed.K)(n.consoleInfo),
                    s = e ? es.Zz : es.fz;
                  return [
                    "",
                    (0, Y.Iu)("console_command_info_district", {
                      args: [
                        n.id,
                        s("[".concat(n.status.toUpperCase(), "]")),
                        t.length,
                      ],
                      fallback: "District "
                        .concat(n.id, " - ")
                        .concat(
                          n.status.toUpperCase(),
                          "\nNumber of online stream nodes: "
                        )
                        .concat(t.length),
                    }),
                    ...[r, i].filter(Boolean),
                  ].join("\n\r");
                }
              }
              if (n || (!r && i)) {
                let e = null != n ? n : t.router.query.node_id,
                  r = t.appStore.districts
                    .flatMap((e) => e.streamNodes)
                    .filter(Boolean),
                  i = (null != r ? r : []).find((t) => t.id === e),
                  s = (null == i ? void 0 : i.status) === ea.Ie.ONLINE,
                  a = s ? es.Zz : es.fz;
                return i
                  ? (0, Y.Iu)("console_command_info_node", {
                      args: [i.id, a("[".concat(i.status.toUpperCase(), "]"))],
                    })
                  : (0, Y.Iu)("console_command_info_node_invalid_id", {
                      args: [e],
                      fallback: "Unable to locate node",
                    });
              }
              return [
                "",
                (0, Y.Iu)("console_command_info_no_params"),
                "",
                (0, Y.Iu)("console_command_usage"),
                ...e_.info.usage,
                "",
              ];
            },
          },
          district: {
            description: () =>
              (0, Y.Iu)("console_command_district_description", {
                fallback: "Select district to breach",
              }),
            usage: ["district <district_id>"],
            handler: (e, t) => {
              let n = eu(e.split(" ")[0]);
              if (!n)
                return [
                  "",
                  (0, Y.Iu)("console_command_district_no_params"),
                  "",
                  (0, Y.Iu)("console_command_usage"),
                  ...e_.district.usage,
                  "",
                ];
              let r = t.appStore.districts
                .filter((e) => e.status === ea.Ie.ONLINE)
                .find((e) => e.id === n);
              return r
                ? (t.router.push((0, eo.B)("/districts/".concat(eu(n)))),
                  [
                    "",
                    (0, Y.Iu)("console_command_district_selected", {
                      fallback: "District selected",
                    }),
                    (0, Y.Iu)("console_command_district_run_breach", {
                      args: [n],
                      fallback:
                        "Run district breach command for district ".concat(n),
                    }),
                    "",
                  ].join("\n\r"))
                : (0, Y.Iu)("console_command_district_not_found", {
                    args: [n],
                    fallback: "Unable to locate district with id ".concat(n),
                  });
            },
          },
          node: {
            description: () =>
              (0, Y.Iu)("console_command_node_description", {
                fallback: "Select stream node to decrypt",
              }),
            usage: ["node <node_id>", "node <node_id> --private"],
            handler: (e, t) => {
              let n = eu(e.split(" ")[0]);
              if (!n)
                return [
                  "",
                  (0, Y.Iu)("console_command_node_no_params"),
                  "",
                  (0, Y.Iu)("console_command_usage"),
                  ...e_.node.usage,
                  "",
                ];
              let r = t.appStore.districts.find(
                  (e) => e.id === t.router.query.district_id
                ),
                i = null == r ? void 0 : r.streamNodes.some((e) => e.id === n),
                { isDistrictRoute: s } = (0, es.i9)(t.router.pathname),
                a =
                  e.split(" ").length > 1 &&
                  "--private" === eu(e.split(" ")[1]);
              ec.c.setState({ isPrivateRoom: a });
              let o =
                e.split(" ").length > 1 &&
                "--community" === eu(e.split(" ")[1]);
              if ((!s || !i) && !o)
                return (0, Y.Iu)("console_command_node_not_found", {
                  args: [n],
                  fallback:
                    "Unable to locate district containing node with id: ".concat(
                      n
                    ),
                });
              {
                let [e] = t.router.asPath.split("?");
                return (
                  t.router.push(e.concat("/".concat(eu(n)))),
                  [
                    "",
                    (0, Y.Iu)("console_command_node_start_encryption", {
                      args: [n],
                      fallback:
                        "Beginning asset encryption on stream node ".concat(n),
                    }),
                    "",
                  ].join("\n\r")
                );
              }
            },
          },
          private: {
            description: () =>
              (0, Y.Iu)("console_command_private_description", {
                fallback:
                  "Creating private asset decryption room in current node",
              }),
            usage: ["private"],
            handler: (e, t) => {
              var n;
              let { isNodeStreamRoute: r } = (0, es.i9)(t.router.pathname),
                i =
                  null === (n = eh.R.getState().config) || void 0 === n
                    ? void 0
                    : n.isMultiplayer,
                s = eh.R.getState().puzzleState;
              return r && i && "lobby-multiplayer-public" === s
                ? (ec.c.setState({ isPrivateRoom: !0 }),
                  eh.R.getState().dispatch({ type: "SET_ROOM_PRIVATE" }),
                  (0, Y.Iu)("console_command_private_begin", {
                    fallback: "Creating a enclosed decryption room...",
                  }))
                : (0, Y.Iu)("console_command_private_not_allowed", {
                    fallback: "Cant make this room private",
                  });
            },
          },
          exit: {
            description: () =>
              (0, Y.Iu)("console_command_exit_description", {
                fallback: "Exit the current room | district | node",
              }),
            usage: ["exit"],
            handler: (e, t) => {
              let {
                  isNodeStreamRoute: n,
                  isDistrictRoute: r,
                  isDistrictSelectorRoute: i,
                } = (0, es.i9)(t.router.pathname),
                s = "";
              i && (s = "console_command_exit_district_selector_success"),
                r && (s = "console_command_exit_district_success"),
                n && (s = "console_command_exit_node_success");
              let a = t.router.asPath.split("/").pop(),
                o = t.router.asPath.split("/").slice(0, -1).join("/");
              return (
                t.router.push(o),
                (0, Y.Iu)(s, { args: [a], fallback: "Exiting" })
              );
            },
          },
        },
        ev = {
          description: () =>
            (0, Y.Iu)("console_command_help_description", {
              fallback: "Show help",
            }),
          handler: (e, t) => {
            function n(e, n) {
              let r = t.term.cols - 11 - 3,
                i = n,
                s = [];
              for (; i.length > 0; )
                if ((i = i.trimStart()).length < r) s.push(i), (i = "");
                else {
                  let e = -1;
                  if (" " === i[r]) e = r;
                  else
                    for (let t = r - 1; t >= 0; t--)
                      if (" " === i[t]) {
                        e = t;
                        break;
                      }
                  s.push(i.substring(0, e)), (i = i.substring(e));
                }
              let a =
                "".concat(e.padEnd(11, ".")).concat(s[0]) +
                s.slice(1).map((e) => "\r\n  ".concat(" ".repeat(9)).concat(e));
              return a;
            }
            return [
              "",
              (0, Y.Iu)("console_command_help_success", {
                fallback: "Welcome to DOW\nHere is the list of all commands",
              }),
              "",
              ...Object.keys(e_).map((e) => {
                let t = e_[e],
                  r = (0, el.mf)(t.description)
                    ? t.description()
                    : t.description;
                return n(e, r);
              }),
              n(
                "clear",
                (0, Y.Iu)("console_command_clear_description", {
                  fallback: "Clear the console",
                })
              ),
              "",
            ].join("\n\r");
          },
        };
      var ey = n(2588),
        ex = n(9985),
        eb = n(2152);
      let eS = (0, b.n)(er(), "Console"),
        eE = {
          foreground: "#000",
          background: "#757575",
          selectionBackground: "#5DA5D533",
          selectionInactiveBackground: "#555555AA",
          black: "#1E1E1D",
          brightBlack: "#262625",
          red: "#FF0000",
          brightRed: "#FF7272",
          green: "#ADFF00",
          brightGreen: "#72FF72",
          yellow: "#CCCC5B",
          brightYellow: "#FFFF72",
          blue: "#5D5DD3",
          brightBlue: "#7279FF",
          magenta: "#BC5ED1",
          brightMagenta: "#E572FF",
          cyan: "#5DA5D5",
          brightCyan: "#72F0FF",
          white: "#F8F8F8",
          brightWhite: "#FFFFFF",
        },
        eM = (e) => {
          let { className: t = "", ...r } = e,
            i = (0, J.qr)(),
            s = p.useRef(null),
            a = p.useRef(""),
            o = (0, P.useRouter)(),
            u = (0, ei.A)(),
            [c, h] = p.useState(null),
            d = (0, J.qr)((e) => e.isApplicationLocked),
            [f, m] = p.useState(null),
            {
              add: g,
              size: _,
              remove: v,
              first: y,
            } = (function (e = []) {
              let [t, n] = p.useState(e),
                r = p.useCallback((e) => {
                  n((t) => [...t, e]);
                }, []),
                i = p.useCallback(() => {
                  let e;
                  return n(([t, ...n]) => ((e = t), n)), e;
                }, []),
                s = p.useCallback(() => {
                  n([]);
                }, []);
              return {
                add: r,
                remove: i,
                clear: s,
                first: t[0],
                last: t[t.length - 1],
                size: t.length,
                queue: t,
              };
            })([]),
            { translate: x } = (0, Y.$G)(),
            b = (0, p.useCallback)(
              (e) => {
                if ((0, el.kJ)(e)) {
                  e.forEach((e) => {
                    e.split("\n").forEach((e) => g(e));
                  });
                  return;
                }
                if (!(0, el.xb)(e)) {
                  let t = e.split("\n");
                  t.forEach((e) => g(e));
                }
              },
              [g]
            );
          (0, es.m_)(b),
            (0, p.useEffect)(() => {
              if (!c || d) return;
              let e = setTimeout(() => {
                0 === _ ? c.prompt() : (c.writeln(y), v());
              }, 30);
              return () => {
                clearTimeout(e);
              };
            }, [_, d, c]);
          let S = (0, p.useRef)({ router: o, term: null, appStore: i }).current;
          (0, p.useEffect)(() => {
            (S.router = o), (S.appStore = i);
          }, [i, o]);
          let E = (0, p.useCallback)(() => {
              if (f && c)
                try {
                  f.fit(), c.scrollToBottom();
                } catch (e) {}
            }, [f, c]),
            M = (function (e, t) {
              let { debounce: n = 100 } = t,
                r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : [],
                [i, s] = p.useState(null),
                a = p.useRef(e);
              p.useEffect(() => {
                a.current = e;
              }, [e]),
                p.useEffect(() => {
                  if (!i) return;
                  let e = (0, ey.D)((e) => {
                      let [t] = e;
                      return a.current(t);
                    }, n),
                    t = new ResizeObserver(e);
                  return (
                    t.observe(i),
                    () => {
                      t.disconnect();
                    }
                  );
                }, [i, n, ...r]);
              let o = p.useCallback((e) => {
                null !== e && s(e);
              }, []);
              return o;
            })(E, { debounce: 100 });
          (0, p.useEffect)(() => {
            if (u) return;
            let e = null,
              t = async () => {
                let { Terminal: t } = await n
                    .e(190)
                    .then(n.t.bind(n, 7289, 23)),
                  { FitAddon: r } = await n.e(440).then(n.t.bind(n, 8440, 23)),
                  o = new r();
                h(
                  (e = new t({
                    fontFamily: "ABCDiatypeMono-Regular",
                    fontSize: 12,
                    lineHeight: 1,
                    theme: eE,
                    cursorBlink: !0,
                    cursorInactiveStyle: "block",
                  }))
                ),
                  m(o),
                  (S.term = e),
                  e.loadAddon(o),
                  e.open(s.current),
                  o.fit(),
                  b(
                    x("console_district_user_set", {
                      args: [i.userId],
                      fallback: "User id set to #".concat(i.userId),
                    })
                  ),
                  b(
                    x("console_district_user_validated", {
                      fallback: "User validated and online",
                    })
                  ),
                  b(x("console_welcome")),
                  (e.prompt = () => {
                    null == e || e.write("\r$ "), (a.current = "$ ");
                  }),
                  e.prompt(),
                  e.onData((t) => {
                    switch (t) {
                      case "\x03":
                        e.write("^C");
                        break;
                      case "\r":
                        b("");
                        let [n, ...r] = a.current.split("$ ")[1].split(" "),
                          i = r.join(" ");
                        if (
                          (ep(n) &&
                            (0, eb.bq)({
                              event: "triggered_console_command",
                              console_command: n,
                            }),
                          ep(n))
                        ) {
                          if (em(n)) b(ev.handler("", S));
                          else if (eg(n)) e.writeln(""), e.clear();
                          else
                            try {
                              let e = e_[n];
                              if (!e)
                                throw Error("Invalid command: ".concat(n));
                              let t = e.handler(i, S);
                              (0, el.xb)(t) || b(t);
                            } catch (t) {
                              let e = t instanceof Error ? t.message : t;
                              b(e);
                            }
                        } else {
                          e.writeln("");
                          let t = ef(n)
                            ? x("console_valid_terminal_command", {
                                fallback: "Invalid command",
                              })
                            : x("console_invalid_command", {
                                fallback: "Invalid command",
                              });
                          b(t);
                        }
                        (a.current = ""), e.prompt();
                        break;
                      case "\x7f":
                        e._core.buffer.x > 2 &&
                          ((a.current = a.current.slice(0, -1)),
                          e.write("\b \b"));
                        break;
                      default:
                        ((t >= " " && t <= "~") || t >= "\xa0") &&
                          ((a.current += t), e.write(t));
                    }
                  });
              };
            return (
              t().then(() => {
                E();
              }),
              () => {
                null == e || e.dispose();
              }
            );
          }, [u]);
          let w = (0, ex.q)(M, s);
          return (0, l.jsx)("div", {
            ref: w,
            className: (0, F.Z)(eS(), t),
            ...r,
          });
        },
        ew = (e) => {
          let { className: t } = e;
          return (0, l.jsxs)("svg", {
            className: t,
            width: "96",
            height: "97",
            viewBox: "0 0 96 97",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [
              (0, l.jsx)("mask", {
                id: "mask0_354_5533",
                maskUnits: "userSpaceOnUse",
                x: "0",
                y: "0",
                width: "96",
                height: "97",
                children: (0, l.jsx)("rect", {
                  y: "0.5",
                  width: "96",
                  height: "96",
                  fill: "#D9D9D9",
                }),
              }),
              (0, l.jsxs)("g", {
                mask: "url(#mask0_354_5533)",
                children: [
                  (0, l.jsx)("path", {
                    d: "M41.1886 92.732L38.5531 79.6455C37.1144 79.1617 35.2429 78.3055 32.9384 77.0768C30.6339 75.8482 28.199 74.2902 25.6336 72.4027L13.1057 76.5087L6.24512 64.5253L16.1757 55.7786C15.9624 54.6539 15.7945 53.5118 15.672 52.3521C15.5495 51.1925 15.4882 49.9411 15.4882 48.5979C15.4882 47.4616 15.5598 46.2847 15.703 45.0672C15.8462 43.8497 16.0165 42.5343 16.2139 41.1211L6.24512 32.4509L13.1057 20.6633L25.7481 24.8218C27.5401 23.227 29.5152 21.8257 31.6733 20.6178C33.8313 19.4099 36.1087 18.3683 38.5055 17.493L41.1886 4.26807H54.8096L57.445 17.4023C59.8132 18.2998 62.0245 19.3271 64.0791 20.4841C66.1337 21.6412 68.1063 23.087 69.9969 24.8218L82.8926 20.6633L89.7532 32.4509L79.3308 41.4701C79.5758 42.6825 79.7517 43.8378 79.8584 44.9359C79.965 46.034 80.0182 47.2348 80.0182 48.5382C80.0182 49.8098 79.9609 51.0108 79.8463 52.1413C79.7318 53.2719 79.5886 54.4811 79.4167 55.769L89.6433 64.5253L82.7827 76.5087L69.9969 72.2547C68.1986 73.8717 66.2936 75.2515 64.2819 76.3942C62.2704 77.5368 59.9914 78.6046 57.445 79.5977L54.8096 92.732H41.1886ZM45.7834 86.7786H50.0782L52.5526 74.284C55.5915 73.7048 58.3786 72.6878 60.9138 71.2332C63.449 69.7786 65.7526 67.8036 67.8247 65.3082L79.8513 69.4762L82.0714 65.8642L72.4415 57.4878C72.8967 55.9536 73.2651 54.4642 73.5468 53.0197C73.8285 51.5751 73.9693 50.0813 73.9693 48.5382C73.9693 46.9483 73.8388 45.4674 73.5778 44.0956C73.3168 42.7238 72.938 41.2613 72.4415 39.708L82.1669 31.1476L80.0471 27.5238L67.7387 31.6441C66.0709 29.5052 63.8079 27.6098 60.9496 25.9578C58.0913 24.3058 55.2728 23.2507 52.4942 22.7924L50.1888 10.2215H45.705L43.5041 22.7081C40.3084 23.264 37.4525 24.2438 34.9364 25.6475C32.4204 27.0511 30.0595 29.05 27.8537 31.6441L15.9511 27.5238L13.7072 31.1476L23.1509 39.4502C22.6543 40.8602 22.2613 42.331 21.9716 43.8626C21.682 45.3942 21.5371 46.9507 21.5371 48.532C21.5371 50.1069 21.6716 51.6392 21.9406 53.1288C22.2095 54.6184 22.5763 56.1048 23.041 57.5881L13.7072 65.8525L15.9501 69.4762L27.7677 65.5039C29.9098 67.9771 32.2827 69.9426 34.8864 71.4003C37.4899 72.858 40.343 73.8559 43.4456 74.3938L45.7834 86.7786Z",
                  }),
                  (0, l.jsx)("circle", {
                    cx: "47.9994",
                    cy: "48.5",
                    r: "12.3698",
                    strokeWidth: "5.90769",
                    fill: "none",
                  }),
                ],
              }),
            ],
          });
        };
      var eT = n(8045),
        eA = n.n(eT),
        eC = n(7510),
        eR = n(1506),
        eP = n(5206);
      let eO = (0, b.n)(eA(), "settingsWindow"),
        eL = (e) => {
          let { closeSettingsWindow: t, ...n } = e,
            { translate: r } = (0, Y.$G)(),
            i = (0, p.useRef)(null),
            s = (0, p.useRef)(null),
            a = () => {
              var e, t, n, r, a;
              (
                null === (e = i.current) || void 0 === e
                  ? void 0
                  : e.classList.contains(eA().show)
              )
                ? (null === (t = i.current) ||
                    void 0 === t ||
                    t.classList.remove(eA().show),
                  null === (n = s.current) ||
                    void 0 === n ||
                    n.classList.remove(eA().hide))
                : (null === (r = i.current) ||
                    void 0 === r ||
                    r.classList.add(eA().show),
                  null === (a = s.current) ||
                    void 0 === a ||
                    a.classList.add(eA().hide));
            },
            [o, u] = (0, p.useState)(-100),
            [c, h] = (0, p.useState)(-100);
          (0, p.useEffect)(() => {
            var e, t;
            let n =
                null === (e = document.querySelector(".".concat(eO()))) ||
                void 0 === e
                  ? void 0
                  : e.getBoundingClientRect(),
              r =
                null === (t = document.querySelector(".scrollAreaContent")) ||
                void 0 === t
                  ? void 0
                  : t.getBoundingClientRect();
            if (!n || !r) {
              u(50), h(50);
              return;
            }
            let i = 100 - ((40 + n.width) / r.width) * 100,
              s = 100 - ((110 + n.height) / r.height) * 100,
              a = (40 / n.height) * 100,
              o = (40 / n.width) * 100,
              l = Math.floor(Math.random() * (i - o)) + o,
              c = Math.floor(Math.random() * (s - a)) + a;
            u(l), h(c);
          }, []);
          let [d, f] = (0, p.useState)(),
            m = (0, p.useCallback)((e) => {
              e.preventDefault(), f(eP.$.PrivacyPolicy);
            }, []),
            g = (0, p.useCallback)((e) => {
              e.preventDefault(), f(eP.$.CookiePolicy);
            }, []),
            _ = (0, p.useCallback)((e) => {
              e.preventDefault(), f(eP.$.TermsOfService);
            }, []),
            v = (0, p.useCallback)(() => {
              f(void 0);
            }, []);
          return (0, l.jsxs)(l.Fragment, {
            children: [
              (0, l.jsx)(eP.Z, { show: !!d, variant: d, onClose: v }),
              (0, l.jsxs)(eC.R, {
                title: r("settings_window_title"),
                canExit: !0,
                className: eO(),
                onClose: t,
                style: { left: "".concat(o, "%"), top: "".concat(c, "%") },
                id: n.id,
                children: [
                  (0, l.jsx)(eR.o, {
                    ratio: 320 / 155,
                    className: eO("imageContainer"),
                    children: (0, l.jsx)("img", {
                      className: eO("settingsImage"),
                      src: "/images/xero-logo-petscii.png",
                    }),
                  }),
                  (0, l.jsx)("p", {
                    className: eO("versionCopy"),
                    children: r("settings_version"),
                  }),
                  (0, l.jsxs)("div", {
                    className: eO("info"),
                    children: [
                      (0, l.jsxs)("div", {
                        ref: s,
                        className: eO("infoCollapsed"),
                        onClick: a,
                        children: [
                          (0, l.jsx)("p", {
                            children: r("settings_info_label"),
                          }),
                          (0, l.jsx)("span", { children: "+" }),
                        ],
                      }),
                      (0, l.jsxs)("div", {
                        ref: i,
                        className: eO("other"),
                        onClick: a,
                        children: [
                          (0, l.jsxs)("div", {
                            className: eO("infoCollapsed"),
                            children: [
                              (0, l.jsx)("p", {
                                children: r("settings_copyright_information"),
                              }),
                              (0, l.jsx)("p", { children: "-" }),
                            ],
                          }),
                          (0, l.jsx)("p", {
                            children: r("settings_rightsreserved_information"),
                          }),
                          (0, l.jsx)("a", {
                            className: eA().link,
                            onClick: m,
                            children: r("home_footer_link_pp_label"),
                          }),
                          (0, l.jsx)("a", {
                            className: eA().link,
                            onClick: g,
                            children: r("home_footer_link_cookie_label"),
                          }),
                          (0, l.jsx)("a", {
                            className: eA().link,
                            onClick: _,
                            children: r("home_footer_link_tos_label"),
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            ],
          });
        };
      var eI = n(5239),
        eN = n(6927);
      let eD = (0, b.n)(x(), "dashboard"),
        eU = (e) => {
          let {
              title: t = "OS title",
              dataPanelMainContent: n,
              dataPanelPreviewContent: r,
              breadcrumbs: i = [],
              children: s,
              withWebGL: a = !1,
            } = e,
            o = p.useRef(null),
            u = (0, R.a)("tablet"),
            h = !u,
            f = T(),
            m = (0, es.m_)(),
            g = (0, J.qr)((e) => e.userId),
            _ = (0, J.qr)((e) => e.isPageTransitionInProgress),
            { translate: v } = (0, Y.$G)();
          (0, d.LI)(() => {
            var e;
            null === (e = o.current) ||
              void 0 === e ||
              e.style.setProperty(
                "--dashboard-height",
                f ? "".concat(f, "px") : "100%"
              );
          }, []),
            (0, eN.n)(() => {
              m(
                v("console_loading_interface", {
                  fallback: "Loading interface",
                })
              ),
                m(v("console_district_querying_user")),
                m(v("console_district_assigning_user")),
                m(
                  v("console_district_user_set", {
                    args: [g],
                    fallback: "User id set to #".concat(g),
                  })
                ),
                m(
                  v("console_district_user_validated", {
                    fallback: "User validated and online",
                  })
                );
            });
          let [y, x] = et(),
            b = p.useRef(null),
            [S, E] = (0, p.useState)(!1),
            M = () => {
              E((e) => !e);
            },
            A = (0, P.useRouter)(),
            C = "/[locale]/districts" === A.pathname,
            O = (0, p.useRef)(!1);
          return (
            (0, p.useEffect)(() => {
              var e;
              let t =
                null === (e = window) || void 0 === e
                  ? void 0
                  : e.visualViewport;
              if (!t) return;
              let n = () => {
                var e, n, r;
                let i = f && t.height < f;
                if (i && !O.current) return;
                null === (e = o.current) ||
                  void 0 === e ||
                  e.style.setProperty(
                    "--dashboard-height",
                    f ? "".concat(f, "px") : "100%"
                  );
                let s = t.height;
                s !== f
                  ? null === (n = o.current) ||
                    void 0 === n ||
                    n.style.setProperty("height", "".concat(s, "px"))
                  : null === (r = o.current) ||
                    void 0 === r ||
                    r.style.setProperty("height", "var(--dashboard-height)");
              };
              return (
                t.addEventListener("resize", n),
                () => {
                  t.removeEventListener("resize", n);
                }
              );
            }, [f]),
            (0, l.jsxs)(w, {
              className: eD(),
              ref: o,
              children: [
                (0, l.jsxs)("div", {
                  className: eD("titleBar"),
                  children: [
                    (0, l.jsxs)("div", {
                      className: eD("titleBarIconContainer"),
                      onClick: M,
                      children: [
                        (0, l.jsx)("div", {
                          className: eD("titleBarIconClickArea"),
                        }),
                        (0, l.jsx)("div", {
                          className: eD("titleBarIconInner"),
                          children: (0, l.jsx)(ew, {
                            className: eD("titleBarIcon"),
                          }),
                        }),
                      ],
                    }),
                    (0, l.jsx)("div", {
                      className: eD("titleContainer"),
                      children: (0, l.jsx)("p", {
                        className: eD("title"),
                        children: h ? i[i.length - 1].label : t,
                      }),
                    }),
                    h &&
                      (0, l.jsxs)(l.Fragment, {
                        children: [
                          (0, l.jsx)(c(), {
                            href: i[i.length > 1 ? i.length - 2 : i.length - 1]
                              .href,
                            className: eD("dashboardCloseIconClickArea"),
                          }),
                          (0, l.jsx)(c(), {
                            href: i[i.length > 1 ? i.length - 2 : i.length - 1]
                              .href,
                            className: eD("dashboardCloseIcon"),
                            children: (0, l.jsx)(ee.oHP, {}),
                          }),
                        ],
                      }),
                    u &&
                      (0, l.jsxs)(l.Fragment, {
                        children: [
                          (0, l.jsx)(c(), {
                            href: "/".concat(A.query.locale),
                            className: eD("dashboardCloseIconClickArea"),
                          }),
                          (0, l.jsx)(c(), {
                            href: "/".concat(A.query.locale),
                            className: eD("dashboardCloseIcon"),
                            children: (0, l.jsx)(ee.oHP, {}),
                          }),
                        ],
                      }),
                  ],
                }),
                (0, l.jsxs)("div", {
                  className: eD("main"),
                  children: [
                    h &&
                      (0, l.jsx)(N, {
                        className: eD("dataPanelPreviewContent"),
                        children: r,
                      }),
                    u &&
                      (0, l.jsxs)("div", {
                        className: eD("desktopSidebar"),
                        children: [
                          (0, l.jsx)(N, { children: n }),
                          (0, l.jsx)(eM, { className: eD("desktopConsole") }),
                        ],
                      }),
                    (0, l.jsxs)("div", {
                      className: eD("body"),
                      "data-district-selector": C,
                      children: [
                        u &&
                          (0, l.jsx)(B, {
                            className: eD("breadcrumbs"),
                            children: i.map((e, t) =>
                              (0, l.jsx)(
                                V,
                                {
                                  asChild: !0,
                                  className: eD("breadcrumb"),
                                  "data-disabled": _,
                                  children: (0, l.jsxs)("div", {
                                    children: [
                                      t === i.length - 1
                                        ? (0, l.jsx)("div", {
                                            className: eD("breadcrumbLabel"),
                                            children: e.label,
                                          })
                                        : (0, l.jsx)(c(), {
                                            href: e.href,
                                            className: eD("breadcrumbLabel"),
                                            children: e.label,
                                          }),
                                      0 !== t &&
                                        t === i.length - 1 &&
                                        (0, l.jsx)(c(), {
                                          href: i[t - 1].href,
                                          className: eD("breadcrumbCloseIcon"),
                                          children: (0, l.jsx)(ee.oHP, {}),
                                        }),
                                    ],
                                  }),
                                },
                                t
                              )
                            ),
                          }),
                        (0, l.jsxs)("div", {
                          className: "".concat(
                            eD("content"),
                            " scrollAreaContent"
                          ),
                          "data-allow-scroll": !a,
                          onClick: () => x({ type: "CLICK_OUTSIDE" }),
                          children: [
                            (0, l.jsx)(eI.M, {
                              children:
                                S &&
                                (0, l.jsx)(eL, {
                                  id: "settings-window",
                                  closeSettingsWindow: M,
                                }),
                            }),
                            s,
                          ],
                        }),
                        h &&
                          (0, l.jsx)("div", {
                            className: eD("mobileConsolePanel"),
                            "data-expanded": "console" === y,
                            onFocus: () => (O.current = !0),
                            onBlur: () => (O.current = !1),
                            children: (0, l.jsx)($, {
                              ref: b,
                              title: "CONSOLE",
                              activeMobilePanel: y,
                              expanded: "console" === y,
                              toggleExpanded: () => {
                                x({
                                  type:
                                    "console" === y
                                      ? "CLOSE_PANEL"
                                      : "OPEN_PANEL",
                                  payload: "console",
                                });
                              },
                              children: (0, l.jsx)(eM, {}),
                            }),
                          }),
                      ],
                    }),
                  ],
                }),
              ],
            })
          );
        };
      var ek = n(3061),
        eF = n(9954),
        ez = n.n(eF),
        eB = n(1121),
        eV = n(5400),
        ej = n(5236),
        eH = n(2001),
        eG = n(3189),
        eW = n(4145);
      let e$ = {
          ASCII_REVEAL_INTERVAL: 0.1,
          ASCII_REVEAL_STEPS: 5,
          LINE_REVEAL_INTERVAL: 1,
          UNLOCK_PREVIEW_DURATION: 1.6,
          OUTRO_ANIMATION_DELAY: 0.2,
        },
        eX = (e) => {
          let { onUnlock: t = G.Z, initialState: n } = e,
            r = (0, R.c)("desktopSmall"),
            { translate: i } = (0, Y.$G)(),
            [s, a] = p.useState(null != n ? n : "intro"),
            [o, u] = p.useState(!1),
            [c, h] = p.useState(0),
            [d, f] = p.useState([]),
            m = p.useRef(),
            g = p.useRef();
          (0, eW.q)(() => {
            g.current && clearTimeout(g.current), m.current && m.current.kill();
          }),
            p.useEffect(() => {
              switch (
                (g.current && clearTimeout(g.current),
                m.current && m.current.kill(),
                s)
              ) {
                case "intro":
                  _().then(() => a("locked"));
                  break;
                case "unlocked-preview":
                  g.current = setTimeout(() => {
                    a("outro-ascii");
                  }, 1e3 * e$.UNLOCK_PREVIEW_DURATION);
                  break;
                case "outro-progress-bar":
                  v().finally(() => a("unlocked"));
                  break;
                case "unlocked":
                  t();
              }
            }, [s]);
          let _ = p.useCallback(
              () =>
                new Promise((e) => {
                  let t = eH.ZP.timeline({ onComplete: e });
                  m.current = t;
                  let n = i("system_unlock_actions", {
                    fallback:
                      "\n      Initializing X≡R\xd8 Tool Load Sequence\n\n      Loading Lock Screen Module\n\n      Rendering graphical interface\n\n      Initiliazing district index\n    ",
                  }).split("\n");
                  n.forEach((e) =>
                    t.to(
                      {},
                      {
                        duration: e$.LINE_REVEAL_INTERVAL,
                        onStart: () => f((t) => [...t, e]),
                      }
                    )
                  );
                  let r = { current: 0 };
                  t.fromTo(
                    r,
                    { current: 0 },
                    {
                      current: 1,
                      duration: e$.LINE_REVEAL_INTERVAL,
                      ease: "steps(10)",
                      onUpdate: () => {
                        let e = Math.floor(100 * r.current);
                        h(e);
                      },
                      onStart: () => {
                        u(!0),
                          f((e) => [
                            ...e,
                            i("system_unlock_action_3", {
                              fallback: "Scanning nodes",
                            }),
                          ]);
                      },
                      onComplete: () => {
                        u(!1);
                      },
                    }
                  );
                }),
              []
            ),
            v = p.useCallback(
              () =>
                new Promise((e) => {
                  let t = eH.ZP.timeline({ onComplete: e });
                  m.current = t;
                  let n = { current: 0 };
                  t.fromTo(
                    n,
                    { current: 0 },
                    {
                      current: 1,
                      duration: e$.LINE_REVEAL_INTERVAL,
                      ease: "steps(10)",
                      onUpdate: () => {
                        let e = Math.floor(100 * n.current);
                        h(e);
                      },
                    }
                  );
                }),
              []
            ),
            y = p.useCallback(() => a("outro-progress-bar"), []);
          return (0, l.jsxs)("div", {
            className: ez().unlockScreen,
            "data-loading": "intro" === s,
            "data-scanning-assets": o,
            "data-state": s,
            style: {
              "--line-reveal-interval": "".concat(e$.LINE_REVEAL_INTERVAL, "s"),
              "--_line-complete-content": '"['.concat(
                i("system_unlock_action_complete", { fallback: "COMPLETE" }),
                ']"'
              ),
            },
            children: [
              (0, l.jsxs)("div", {
                className: ez().unlockScreen__content,
                children: [
                  d.map((e, t, n) =>
                    (0, l.jsx)(
                      "div",
                      {
                        className: ez().unlockScreen__line,
                        "data-last-line": t === n.length - 1,
                        children: e,
                      },
                      e
                    )
                  ),
                  (0, l.jsx)(eG.l, {
                    ascii: [],
                    animate: !0,
                    className: ez().unlockScreen__ascii,
                    animationDelay: e$.OUTRO_ANIMATION_DELAY,
                    show: s.includes("outro"),
                    animationStepDuration: e$.ASCII_REVEAL_INTERVAL,
                    animationSteps: e$.ASCII_REVEAL_STEPS,
                    onAnimationComplete: y,
                    image: "/images/xero-logo-boot.png",
                  }),
                  (0, l.jsx)("div", {
                    className: ez().unlockScreen__mapInitLine,
                    children: i("system_unlock_initializing_interface", {
                      fallback: "Initiliazing interface",
                    }),
                  }),
                  (0, l.jsx)(ej.k, {
                    className: ez().unlockScreen__progressBar,
                    theme: "white",
                    progressValue: c,
                  }),
                ],
              }),
              (0, l.jsxs)(eI.M, {
                children: [
                  "unlocked-preview" === s &&
                    (0, l.jsxs)(
                      eC.R,
                      {
                        id: "puzzle-success-window",
                        title: i("system_unlock_success"),
                        theme: eC.$.GreenOnGreen,
                        className: ez().unlockScreen__successWindow,
                        children: [
                          (0, l.jsx)("p", {
                            className: ez().unlockScreen__successCopy,
                            children: i("system_unlock_credentials_verified", {
                              fallback: "Credentials verified",
                            }),
                          }),
                          (0, l.jsx)("p", {
                            className: ez().unlockScreen__successCopy,
                            children: i("system_unlock_starting_system", {
                              fallback: "Starting System",
                            }),
                          }),
                        ],
                      },
                      "puzzle-success-window"
                    ),
                  ["locked", "unlocked-preview"].includes(s) &&
                    (0, l.jsx)(eB.v, {
                      className: ez().unlockScreen__puzzleContainer,
                      title: i("system_unlock_puzzle_title", {
                        fallback: "Draw pattern to unlock app",
                      }),
                      ratio: 2 / 3,
                      isFullscreen: r,
                      showTitleInFullscreen: !0,
                      windowProps: { canExit: !1 },
                      children: (0, l.jsx)(l.Fragment, {
                        children: (0, l.jsx)(eV.gD, {
                          state: "gameplay",
                          onSuccessRateChange: (e) => {
                            e >= 1 && a("unlocked-preview");
                          },
                          onInteractionSuccess: G.Z,
                          onInteractionFail: G.Z,
                          solution: [0, 3, 6, 4, 8, 5, 2],
                          showSolution: !0,
                        }),
                      }),
                    }),
                ],
              }),
            ],
          });
        };
      var eq = JSON.parse(
        '["                            ▄▄","M I N D S C A N     ▄▌             ▀▀▀█   b y   C Y P H E R","              ▄                             ","           ▄  ▌                ▄","        ▄  ▀▄   ▌           ▄▀ ▄█▀                ▄","    ▄▀ ▄██▀   ▌         ▄█ ▄███▄                   ▄","   █▀ ██████▄▄▌▄        █  ███▀██▄▄             ▄▄████▄","   █▄ ▀███▄▄       ▄    ▀█ ▀██ ▄▄█▀██▄▄▄     ▄▄█▀████▀██","    ▀▄ ▀█▀████▄▄   ░░▀▄   ▀  ▀█ ██▓░▀▄ ▀▀▀▀▀   ▄██▀█▀▓░█▌","     ▀█ ▓█ ▄▀▄   ▀  ▄ ▀█▄  ▄  █ ██▀ ▄█▌   ▄▄▄ ▀▀  ▄█ ░▄█","      █ ░█ ██ █▄    ▀██▄██  ▀█▄▄▄▄███▀ ▄         ██▀▄█▀ ▄","▌█▀▄▄██▄█▀██▀ ██▌ ▄   ████▌    ▀▀▀▀  ▄▄▀        ████▀▄▄▓░"," ▀█▄▄███ ▀▀ ▄██▀ ▄█    ██▀         ▄▀▀         ███████▀","░░ ▀▀████████▀   ▀    █▀        ▀▄▄    ▄ ▄▄▄▄ ████ █▓░","▓▓▓▄▄▄ ▀▀▀▀   ▄    ▄ ▀     ▄▄▄▀███▀▀▀     ▀████ ██ ▀█▄","███████▀▀███▀▀ ▄▄█▀ ▄▄▄▄█▀█▄  █▀░  ░░░ ░  ░███  █▓    ▀","▀██▀▀██▌▀▀ ▄▄█▀██    ▀█▀ ██▀ █  ▓░░▓▓▓░▓  ██▀▄█ █░  ░░  ▌","▌█████▀ ▄█▀  ███     ▄▄ ▓██ █ ░░█▓▓███▓▀ ██▀▄██░█  ░░░  ░","▌▀▀▀▀ ▄▀▄▄█ ██▀   ▄ ▄██ ░▓▀█  ▓▓██████▀ ██▀███▀▓▓  ░░░  \xb1 ░","██▄  █ ███▀▄██ ▄▄██▄███▄   █░ █▀▀▀███▀ █▀█ ██▀▄█▄▄▄▄ ▀▀░▓░▓","██▀ █▀ ▀▄███████▀▀▀▀██████▄█▓   ░ ██▀ █▌ █▄▄██▀▀▀    ▄ ▓█▓█","█▄  █▄███▀▀▀▄▄▄█▀▀▀██▄▄▀▀████░  \xb1 ██ █▌  ▀▀  █▄▄█▀▀    ████","██  █▀▀▄▄▄ ▀▀         ▀▀█▄ ▀█▓  ▓ █  ▌   ▄█▀▀▀      ▄▄▄ ███","▀█ ▀ ▄▀▀    ▄▄▄ ▀▀▀▀██▄▄▄ ▀▄ ▀  █   ▌ ▄▀  ▄▄▄█▀▀▀▀  ▄▄▄▄███","▌▀█▄▄▄▄▄   ▀▀           ▀▀█▄▄ ▀ █  ▄▄██▀▀    ▄▄▄▓▓▓▓███████","▌▀▀▀▀▀▀▀▀▀▀▀        ▄▄ ▀▀█▄▄█▀▀██▀▀▀▄▄█▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀","                ░░▀       ▄█▀▀██▀▀▀                        "]'
      );
      let eY = {
          ASCII_REVEAL_INTERVAL: 0.2,
          ASCII_REVEAL_STEPS: 5,
          LINE_REVEAL_INTERVAL: 0.2,
        },
        eJ = () => {
          let { translate: e } = (0, Y.$G)(),
            [t, n] = p.useState([]),
            [r] = p.useState(!1),
            i = p.useCallback(() => {
              let t = eH.ZP.timeline();
              t.to(
                {},
                {
                  duration: eY.LINE_REVEAL_INTERVAL,
                  onStart: () =>
                    n((t) => [
                      ...t,
                      e("system_locked", { fallback: "SYSTEM OFFLINE" }),
                    ]),
                }
              ),
                t.to(
                  {},
                  {
                    duration: eY.LINE_REVEAL_INTERVAL,
                    onStart: () =>
                      n((t) => [
                        ...t,
                        e("system_locked_encouragement", {
                          fallback: "CHECK BACK LATER",
                        }),
                      ]),
                  }
                );
            }, [e]),
            s = p.useCallback(async () => {
              i();
            }, [i]);
          return (0, l.jsx)("div", {
            className: ez().unlockScreen,
            "data-initializing-map": r,
            style: {
              "--line-reveal-interval": "".concat(eY.LINE_REVEAL_INTERVAL, "s"),
              "--_line-complete-content": '"['.concat(
                e("system_unlock_action_complete", { fallback: "COMPLETE" }),
                ']"'
              ),
            },
            children: (0, l.jsxs)("div", {
              className: ez().unlockScreen__content,
              children: [
                (0, l.jsx)(eG.l, {
                  animate: !0,
                  show: !0,
                  animationStepDuration: eY.ASCII_REVEAL_INTERVAL,
                  animationSteps: eY.ASCII_REVEAL_STEPS,
                  onAnimationComplete: s,
                  ascii: eq,
                }),
                (0, l.jsx)("div", {
                  className: ez().unlockScreen__locked,
                  children: t.map((e) => (0, l.jsx)("p", { children: e }, e)),
                }),
                (0, l.jsx)("div", {
                  className: ez().unlockScreen__mapInitLine,
                  children: e("system_unlock_action_4", {
                    fallback: "Initiliazing map",
                  }),
                }),
              ],
            }),
          });
        },
        eZ = (e) => {
          let { enabled: t = !1 } = e,
            n = (0, P.useRouter)(),
            { district_id: r } = n.query,
            i = p.useRef();
          p.useEffect(() => {
            if (r && t)
              return (
                (i.current = Date.now()),
                (0, eb.bq)({ event: "started_mind" }),
                () => {
                  let e = (0, el.hj)(i.current)
                    ? Math.floor((Date.now() - i.current) / 1e3)
                    : 0;
                  (0, eb.bq)({
                    event: "left_mind",
                    mind_info: { timeSpent: e },
                  });
                }
              );
          }, [r, t]);
        };
      var eK = n(4698),
        eQ = n.n(eK),
        e0 = n(6635),
        e1 = n(2794);
      let e2 = () => {
        let [e, t] = p.useState(!1),
          n = (function (e, t = 500) {
            let [n, r] = p.useState(e),
              i = p.useRef(null);
            return (
              p.useEffect(() => {
                let n = Date.now();
                if (i.current && n >= i.current + t) (i.current = n), r(e);
                else {
                  let s = window.setTimeout(() => {
                    (i.current = n), r(e);
                  }, t);
                  return () => window.clearTimeout(s);
                }
              }, [e, t]),
              n
            );
          })(e, e1.hg),
          [r, i] = p.useState(50),
          s = (0, e0.EV)((e) => e.isLoading),
          a = (0, J.qr)((e) => e.setIsPageTransitionInProgress),
          o = (0, P.useRouter)(),
          { events: u } = o,
          c = p.useRef(""),
          h = p.useRef(null),
          [d, f] = p.useState(!1);
        p.useEffect(() => {
          let e = (e) => {
              t(!0), f(!1), (c.current = e);
            },
            n = () => {
              t(!1),
                h.current && clearTimeout(h.current),
                (h.current = setTimeout(() => f(!0), e1.Z6));
            };
          return (
            u.on("routeChangeStart", e),
            u.on("routeChangeComplete", n),
            u.on("routeChangeError", n),
            () => {
              u.off("routeChangeStart", e),
                u.off("routeChangeComplete", n),
                u.off("routeChangeError", n);
            }
          );
        }, [u]);
        let m = p.useMemo(() => {
          let e = "districts" === c.current.split("/").pop();
          return !e && !d && (n || s);
        }, [n, s, d]);
        return (
          p.useEffect(() => {
            a(m);
          }, [m, a]),
          p.useEffect(() => {
            if (!m) return;
            let e = eH.ZP.timeline({ repeat: -1 }),
              t = { current: 0 };
            return (
              e.fromTo(
                t,
                { current: 0 },
                {
                  current: 1,
                  duration: 0.6,
                  ease: "steps(3)",
                  onUpdate: () => {
                    let e = Math.floor(100 * t.current);
                    i(e);
                  },
                }
              ),
              () => {
                e.kill(), i(0);
              }
            );
          }, [m]),
          (0, l.jsx)("div", {
            className: eQ().container,
            "data-show": m,
            children: (0, l.jsxs)("div", {
              className: eQ().content,
              children: [
                (0, l.jsx)("div", {
                  className: eQ().header,
                  children: "Initializing",
                }),
                (0, l.jsx)(ej.k, {
                  className: eQ().progressBar,
                  theme: "white",
                  progressValue: r,
                }),
              ],
            }),
          })
        );
      };
      var e3 = n(4952),
        e4 = n.n(e3),
        e5 = n(6577),
        e6 = n.n(e5);
      let e8 = (0, b.n)(e4(), "rotatePhoneScreen"),
        e7 = () => {
          let { translate: e } = (0, Y.$G)(),
            t = (0, p.useRef)(null),
            n = (0, p.useMemo)(
              () => [
                ...e("phone_screen_commands", {
                  fallback:
                    "\n            scanning resolution...\n\n            detecting ratio...\n\n            revealing device statistics...\n\n            ......\n\n            ....\n\n            ..\n\n            ERROR: incorrect device orientation\n\n            ROTATE DEVICE TO CONTINUE\n\n            >\n          ",
                }).split("\n"),
              ],
              [e]
            ),
            [r, i] = p.useState([]);
          return (
            (0, p.useEffect)(() => {
              let e = setInterval(() => {
                i((e) => {
                  let t = n[e.length % n.length];
                  return [...e, t];
                }),
                  setTimeout(() => {
                    var e;
                    return null === (e = t.current) || void 0 === e
                      ? void 0
                      : e.scrollTo(0, t.current.scrollHeight);
                  }, 10);
              }, 200);
              return () => clearInterval(e);
            }, [n]),
            (0, l.jsxs)("div", {
              ref: t,
              className: e8(),
              children: [
                (0, l.jsx)("div", {
                  className: e4().textContainer,
                  children: r.map((e, t) =>
                    (0, l.jsx)(
                      "div",
                      { className: e4().line, children: e },
                      "".concat(t, "-").concat(e)
                    )
                  ),
                }),
                (0, l.jsx)("div", {
                  className: e4().iconContainer,
                  children: (0, l.jsx)(e6(), {
                    src: "/images/phone-rotate.gif",
                    alt: "",
                    width: 144,
                    height: 144,
                  }),
                }),
              ],
            })
          );
        };
      var e9 = n(4897),
        te = n(8999),
        tt = n(3699),
        tn = n(9660),
        tr = n(3232);
      let ti = [
          /^Script error\.?$/,
          /^Javascript error: Script error\.? on line 0$/,
        ],
        ts = [
          /^.*\/healthcheck$/,
          /^.*\/healthy$/,
          /^.*\/live$/,
          /^.*\/ready$/,
          /^.*\/heartbeat$/,
          /^.*\/health$/,
          /^.*\/healthz$/,
        ];
      class ta {
        static __initStatic() {
          this.id = "InboundFilters";
        }
        constructor(e = {}) {
          (this.name = ta.id), (this._options = e);
        }
        setupOnce(e, t) {}
        processEvent(e, t, n) {
          var r;
          let i = n.getOptions(),
            s = (function (e = {}, t = {}) {
              return {
                allowUrls: [...(e.allowUrls || []), ...(t.allowUrls || [])],
                denyUrls: [...(e.denyUrls || []), ...(t.denyUrls || [])],
                ignoreErrors: [
                  ...(e.ignoreErrors || []),
                  ...(t.ignoreErrors || []),
                  ...(e.disableErrorDefaults ? [] : ti),
                ],
                ignoreTransactions: [
                  ...(e.ignoreTransactions || []),
                  ...(t.ignoreTransactions || []),
                  ...(e.disableTransactionDefaults ? [] : ts),
                ],
                ignoreInternal: void 0 === e.ignoreInternal || e.ignoreInternal,
              };
            })(this._options, i);
          return (
            s.ignoreInternal &&
            (function (e) {
              try {
                return "SentryError" === e.exception.values[0].type;
              } catch (e) {}
              return !1;
            })(e)
              ? (tr.X &&
                  te.kg.warn(`Event dropped due to being internal Sentry Error.
Event: ${(0, tt.jH)(e)}`),
                0)
              : ((r = s.ignoreErrors),
                !e.type &&
                  r &&
                  r.length &&
                  (function (e) {
                    let t;
                    let n = [];
                    e.message && n.push(e.message);
                    try {
                      t = e.exception.values[e.exception.values.length - 1];
                    } catch (e) {}
                    return (
                      t &&
                        t.value &&
                        (n.push(t.value),
                        t.type && n.push(`${t.type}: ${t.value}`)),
                      tr.X &&
                        0 === n.length &&
                        te.kg.error(
                          `Could not extract message for event ${(0, tt.jH)(e)}`
                        ),
                      n
                    );
                  })(e).some((e) => (0, tn.U0)(e, r)))
              ? (tr.X &&
                  te.kg
                    .warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${(0, tt.jH)(e)}`),
                0)
              : !(function (e, t) {
                  if ("transaction" !== e.type || !t || !t.length) return !1;
                  let n = e.transaction;
                  return !!n && (0, tn.U0)(n, t);
                })(e, s.ignoreTransactions)
              ? !(function (e, t) {
                  if (!t || !t.length) return !1;
                  let n = to(e);
                  return !!n && (0, tn.U0)(n, t);
                })(e, s.denyUrls)
                ? (function (e, t) {
                    if (!t || !t.length) return !0;
                    let n = to(e);
                    return !n || (0, tn.U0)(n, t);
                  })(e, s.allowUrls) ||
                  (tr.X &&
                    te.kg
                      .warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${(0, tt.jH)(e)}.
Url: ${to(e)}`),
                  0)
                : (tr.X &&
                    te.kg
                      .warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${(0, tt.jH)(e)}.
Url: ${to(e)}`),
                  0)
              : (tr.X &&
                  te.kg
                    .warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${(0, tt.jH)(e)}`),
                0)
          )
            ? e
            : null;
        }
      }
      function to(e) {
        try {
          let t;
          try {
            t = e.exception.values[0].stacktrace.frames;
          } catch (e) {}
          return t
            ? (function (e = []) {
                for (let t = e.length - 1; t >= 0; t--) {
                  let n = e[t];
                  if (
                    n &&
                    "<anonymous>" !== n.filename &&
                    "[native code]" !== n.filename
                  )
                    return n.filename || null;
                }
                return null;
              })(t)
            : null;
        } catch (t) {
          return (
            tr.X &&
              te.kg.error(`Cannot extract url for event ${(0, tt.jH)(e)}`),
            null
          );
        }
      }
      ta.__initStatic();
      var tl = n(1995);
      class tu {
        static __initStatic() {
          this.id = "FunctionToString";
        }
        constructor() {
          this.name = tu.id;
        }
        setupOnce() {
          r = Function.prototype.toString;
          try {
            Function.prototype.toString = function (...e) {
              let t = (0, tl.HK)(this) || this;
              return r.apply(t, e);
            };
          } catch (e) {}
        }
      }
      tu.__initStatic();
      var tc = n(9446),
        th = n(1982);
      let td =
        /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
      function tp(e) {
        return {
          protocol: e.protocol,
          publicKey: e.publicKey || "",
          pass: e.pass || "",
          host: e.host,
          port: e.port || "",
          path: e.path || "",
          projectId: e.projectId,
        };
      }
      let tf = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
      var tm = n(63);
      let tg = tm.n2,
        t_ = 0;
      function tv(e, t = {}, n) {
        if ("function" != typeof e) return e;
        try {
          let t = e.__sentry_wrapped__;
          if (t) return t;
          if ((0, tl.HK)(e)) return e;
        } catch (t) {
          return e;
        }
        let r = function () {
          let r = Array.prototype.slice.call(arguments);
          try {
            n && "function" == typeof n && n.apply(this, arguments);
            let i = r.map((e) => tv(e, t));
            return e.apply(this, i);
          } catch (e) {
            throw (
              (t_++,
              setTimeout(() => {
                t_--;
              }),
              (0, e9.$e)((n) => {
                n.addEventProcessor(
                  (e) => (
                    t.mechanism &&
                      ((0, tt.Db)(e, void 0, void 0),
                      (0, tt.EG)(e, t.mechanism)),
                    (e.extra = { ...e.extra, arguments: r }),
                    e
                  )
                ),
                  (0, e9.Tb)(e);
              }),
              e)
            );
          }
        };
        try {
          for (let t in e)
            Object.prototype.hasOwnProperty.call(e, t) && (r[t] = e[t]);
        } catch (e) {}
        (0, tl.$Q)(r, e), (0, tl.xp)(e, "__sentry_wrapped__", r);
        try {
          let t = Object.getOwnPropertyDescriptor(r, "name");
          t.configurable &&
            Object.defineProperty(r, "name", { get: () => e.name });
        } catch (e) {}
        return r;
      }
      let ty = "<anonymous>";
      function tx(e) {
        try {
          if (!e || "function" != typeof e) return ty;
          return e.name || ty;
        } catch (e) {
          return ty;
        }
      }
      let tb = {},
        tS = {};
      function tE(e, t) {
        (tb[e] = tb[e] || []), tb[e].push(t);
      }
      function tM(e, t) {
        tS[e] || (t(), (tS[e] = !0));
      }
      function tw(e, t) {
        let n = e && tb[e];
        if (n)
          for (let r of n)
            try {
              r(t);
            } catch (t) {
              th.X &&
                te.kg.error(
                  `Error while triggering instrumentation handler.
Type: ${e}
Name: ${tx(r)}
Error:`,
                  t
                );
            }
      }
      let tT = null;
      function tA() {
        (tT = tm.n2.onerror),
          (tm.n2.onerror = function (e, t, n, r, i) {
            return (
              tw("error", { column: r, error: i, line: n, msg: e, url: t }),
              !!tT && !tT.__SENTRY_LOADER__ && tT.apply(this, arguments)
            );
          }),
          (tm.n2.onerror.__SENTRY_INSTRUMENTED__ = !0);
      }
      var tC = n(1757);
      let tR = null;
      function tP() {
        (tR = tm.n2.onunhandledrejection),
          (tm.n2.onunhandledrejection = function (e) {
            return (
              tw("unhandledrejection", e),
              !tR || !!tR.__SENTRY_LOADER__ || tR.apply(this, arguments)
            );
          }),
          (tm.n2.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0);
      }
      var tO = n(4194);
      function tL(e, t) {
        let n = tN(e, t),
          r = {
            type: t && t.name,
            value: (function (e) {
              let t = e && e.message;
              return t
                ? t.error && "string" == typeof t.error.message
                  ? t.error.message
                  : t
                : "No error message";
            })(t),
          };
        return (
          n.length && (r.stacktrace = { frames: n }),
          void 0 === r.type &&
            "" === r.value &&
            (r.value = "Unrecoverable error caught"),
          r
        );
      }
      function tI(e, t) {
        return { exception: { values: [tL(e, t)] } };
      }
      function tN(e, t) {
        let n = t.stacktrace || t.stack || "",
          r = (function (e) {
            if (e) {
              if ("number" == typeof e.framesToPop) return e.framesToPop;
              if (tD.test(e.message)) return 1;
            }
            return 0;
          })(t);
        try {
          return e(n, r);
        } catch (e) {}
        return [];
      }
      let tD = /Minified React error #\d+;/i;
      function tU(e, t, r, i, s) {
        let a;
        if ((0, tC.VW)(t) && t.error) return tI(e, t.error);
        if ((0, tC.TX)(t) || (0, tC.fm)(t)) {
          if ("stack" in t) a = tI(e, t);
          else {
            let n = t.name || ((0, tC.TX)(t) ? "DOMError" : "DOMException"),
              s = t.message ? `${n}: ${t.message}` : n;
            (a = tk(e, s, r, i)), (0, tt.Db)(a, s);
          }
          return (
            "code" in t &&
              (a.tags = { ...a.tags, "DOMException.code": `${t.code}` }),
            a
          );
        }
        return (0, tC.VZ)(t)
          ? tI(e, t)
          : ((0, tC.PO)(t) || (0, tC.cO)(t)
              ? (a = (function (e, t, r, i) {
                  let s = (0, tc.Gd)(),
                    a = s.getClient(),
                    o = a && a.getOptions().normalizeDepth,
                    l = {
                      exception: {
                        values: [
                          {
                            type: (0, tC.cO)(t)
                              ? t.constructor.name
                              : i
                              ? "UnhandledRejection"
                              : "Error",
                            value: (function (e, { isUnhandledRejection: t }) {
                              let n = (0, tl.zf)(e),
                                r = t ? "promise rejection" : "exception";
                              if ((0, tC.VW)(e))
                                return `Event \`ErrorEvent\` captured as ${r} with message \`${e.message}\``;
                              if ((0, tC.cO)(e)) {
                                let t = (function (e) {
                                  try {
                                    let t = Object.getPrototypeOf(e);
                                    return t ? t.constructor.name : void 0;
                                  } catch (e) {}
                                })(e);
                                return `Event \`${t}\` (type=${e.type}) captured as ${r}`;
                              }
                              return `Object captured as ${r} with keys: ${n}`;
                            })(t, { isUnhandledRejection: i }),
                          },
                        ],
                      },
                      extra: {
                        __serialized__: (function e(t, r = 3, i = 102400) {
                          let s = (function (e, t = 100, r = Infinity) {
                            try {
                              return (function e(
                                t,
                                r,
                                i = Infinity,
                                s = Infinity,
                                a = (function () {
                                  let e = "function" == typeof WeakSet,
                                    t = e ? new WeakSet() : [];
                                  return [
                                    function (n) {
                                      if (e)
                                        return !!t.has(n) || (t.add(n), !1);
                                      for (let e = 0; e < t.length; e++) {
                                        let r = t[e];
                                        if (r === n) return !0;
                                      }
                                      return t.push(n), !1;
                                    },
                                    function (n) {
                                      if (e) t.delete(n);
                                      else
                                        for (let e = 0; e < t.length; e++)
                                          if (t[e] === n) {
                                            t.splice(e, 1);
                                            break;
                                          }
                                    },
                                  ];
                                })()
                              ) {
                                let [o, l] = a;
                                if (
                                  null == r ||
                                  (["number", "boolean", "string"].includes(
                                    typeof r
                                  ) &&
                                    !(0, tC.i2)(r))
                                )
                                  return r;
                                let u = (function (e, t) {
                                  try {
                                    if (
                                      "domain" === e &&
                                      t &&
                                      "object" == typeof t &&
                                      t._events
                                    )
                                      return "[Domain]";
                                    if ("domainEmitter" === e)
                                      return "[DomainEmitter]";
                                    if (void 0 !== n.g && t === n.g)
                                      return "[Global]";
                                    if (
                                      "undefined" != typeof window &&
                                      t === window
                                    )
                                      return "[Window]";
                                    if (
                                      "undefined" != typeof document &&
                                      t === document
                                    )
                                      return "[Document]";
                                    if ((0, tC.y1)(t)) return "[VueViewModel]";
                                    if ((0, tC.Cy)(t))
                                      return "[SyntheticEvent]";
                                    if ("number" == typeof t && t != t)
                                      return "[NaN]";
                                    if ("function" == typeof t)
                                      return `[Function: ${tx(t)}]`;
                                    if ("symbol" == typeof t)
                                      return `[${String(t)}]`;
                                    if ("bigint" == typeof t)
                                      return `[BigInt: ${String(t)}]`;
                                    let r = (function (e) {
                                      let t = Object.getPrototypeOf(e);
                                      return t
                                        ? t.constructor.name
                                        : "null prototype";
                                    })(t);
                                    if (/^HTML(\w*)Element$/.test(r))
                                      return `[HTMLElement: ${r}]`;
                                    return `[object ${r}]`;
                                  } catch (e) {
                                    return `**non-serializable** (${e})`;
                                  }
                                })(t, r);
                                if (!u.startsWith("[object ")) return u;
                                if (r.__sentry_skip_normalization__) return r;
                                let c =
                                  "number" ==
                                  typeof r.__sentry_override_normalization_depth__
                                    ? r.__sentry_override_normalization_depth__
                                    : i;
                                if (0 === c) return u.replace("object ", "");
                                if (o(r)) return "[Circular ~]";
                                if (r && "function" == typeof r.toJSON)
                                  try {
                                    let t = r.toJSON();
                                    return e("", t, c - 1, s, a);
                                  } catch (e) {}
                                let h = Array.isArray(r) ? [] : {},
                                  d = 0,
                                  p = (0, tl.Sh)(r);
                                for (let t in p) {
                                  if (
                                    !Object.prototype.hasOwnProperty.call(p, t)
                                  )
                                    continue;
                                  if (d >= s) {
                                    h[t] = "[MaxProperties ~]";
                                    break;
                                  }
                                  let n = p[t];
                                  (h[t] = e(t, n, c - 1, s, a)), d++;
                                }
                                return l(r), h;
                              })("", e, t, r);
                            } catch (e) {
                              return { ERROR: `**non-serializable** (${e})` };
                            }
                          })(t, r);
                          return ~-encodeURI(JSON.stringify(s)).split(/%..|./)
                            .length > i
                            ? e(t, r - 1, i)
                            : s;
                        })(t, o),
                      },
                    };
                  if (r) {
                    let t = tN(e, r);
                    t.length &&
                      (l.exception.values[0].stacktrace = { frames: t });
                  }
                  return l;
                })(e, t, r, s))
              : ((a = tk(e, t, r, i)), (0, tt.Db)(a, `${t}`, void 0)),
            (0, tt.EG)(a, { synthetic: !0 }),
            a);
      }
      function tk(e, t, n, r) {
        let i = { message: t };
        if (r && n) {
          let r = tN(e, n);
          r.length &&
            (i.exception = {
              values: [{ value: t, stacktrace: { frames: r } }],
            });
        }
        return i;
      }
      class tF {
        static __initStatic() {
          this.id = "GlobalHandlers";
        }
        constructor(e) {
          (this.name = tF.id),
            (this._options = { onerror: !0, onunhandledrejection: !0, ...e }),
            (this._installFunc = { onerror: tz, onunhandledrejection: tB });
        }
        setupOnce() {
          Error.stackTraceLimit = 50;
          let e = this._options;
          for (let t in e) {
            let n = this._installFunc[t];
            n &&
              e[t] &&
              (tf && te.kg.log(`Global Handler attached: ${t}`),
              n(),
              (this._installFunc[t] = void 0));
          }
        }
      }
      function tz() {
        !(function (e) {
          let t = "error";
          tE(t, e), tM(t, tA);
        })((e) => {
          let [t, n, r] = tj();
          if (!t.getIntegration(tF)) return;
          let { msg: i, url: s, line: a, column: o, error: l } = e;
          if (t_ > 0) return;
          let u =
            void 0 === l && (0, tC.HD)(i)
              ? (function (e, t, n, r) {
                  let i = (0, tC.VW)(e) ? e.message : e,
                    s = "Error",
                    a = i.match(
                      /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i
                    );
                  a && ((s = a[1]), (i = a[2]));
                  let o = { exception: { values: [{ type: s, value: i }] } };
                  return tV(o, t, n, r);
                })(i, s, a, o)
              : tV(tU(n, l || i, void 0, r, !1), s, a, o);
          (u.level = "error"),
            t.captureEvent(u, {
              originalException: l,
              mechanism: { handled: !1, type: "onerror" },
            });
        });
      }
      function tB() {
        !(function (e) {
          let t = "unhandledrejection";
          tE(t, e), tM(t, tP);
        })((e) => {
          let [t, n, r] = tj();
          if (!t.getIntegration(tF)) return;
          if (t_ > 0) return !0;
          let i = (function (e) {
              if ((0, tC.pt)(e)) return e;
              try {
                if ("reason" in e) return e.reason;
                if ("detail" in e && "reason" in e.detail)
                  return e.detail.reason;
              } catch (e) {}
              return e;
            })(e),
            s = (0, tC.pt)(i)
              ? {
                  exception: {
                    values: [
                      {
                        type: "UnhandledRejection",
                        value: `Non-Error promise rejection captured with value: ${String(
                          i
                        )}`,
                      },
                    ],
                  },
                }
              : tU(n, i, void 0, r, !0);
          (s.level = "error"),
            t.captureEvent(s, {
              originalException: i,
              mechanism: { handled: !1, type: "onunhandledrejection" },
            });
        });
      }
      function tV(e, t, n, r) {
        let i = (e.exception = e.exception || {}),
          s = (i.values = i.values || []),
          a = (s[0] = s[0] || {}),
          o = (a.stacktrace = a.stacktrace || {}),
          l = (o.frames = o.frames || []),
          u = isNaN(parseInt(r, 10)) ? void 0 : r,
          c = isNaN(parseInt(n, 10)) ? void 0 : n,
          h = (0, tC.HD)(t) && t.length > 0 ? t : (0, tO.l4)();
        return (
          0 === l.length &&
            l.push({
              colno: u,
              filename: h,
              function: "?",
              in_app: !0,
              lineno: c,
            }),
          e
        );
      }
      function tj() {
        let e = (0, tc.Gd)(),
          t = e.getClient(),
          n = (t && t.getOptions()) || {
            stackParser: () => [],
            attachStacktrace: !1,
          };
        return [e, n.stackParser, n.attachStacktrace];
      }
      tF.__initStatic();
      let tH = [
        "EventTarget",
        "Window",
        "Node",
        "ApplicationCache",
        "AudioTrackList",
        "BroadcastChannel",
        "ChannelMergerNode",
        "CryptoOperation",
        "EventSource",
        "FileReader",
        "HTMLUnknownElement",
        "IDBDatabase",
        "IDBRequest",
        "IDBTransaction",
        "KeyOperation",
        "MediaController",
        "MessagePort",
        "ModalWindow",
        "Notification",
        "SVGElementInstance",
        "Screen",
        "SharedWorker",
        "TextTrack",
        "TextTrackCue",
        "TextTrackList",
        "WebSocket",
        "WebSocketWorker",
        "Worker",
        "XMLHttpRequest",
        "XMLHttpRequestEventTarget",
        "XMLHttpRequestUpload",
      ];
      class tG {
        static __initStatic() {
          this.id = "TryCatch";
        }
        constructor(e) {
          (this.name = tG.id),
            (this._options = {
              XMLHttpRequest: !0,
              eventTarget: !0,
              requestAnimationFrame: !0,
              setInterval: !0,
              setTimeout: !0,
              ...e,
            });
        }
        setupOnce() {
          this._options.setTimeout && (0, tl.hl)(tg, "setTimeout", tW),
            this._options.setInterval && (0, tl.hl)(tg, "setInterval", tW),
            this._options.requestAnimationFrame &&
              (0, tl.hl)(tg, "requestAnimationFrame", t$),
            this._options.XMLHttpRequest &&
              "XMLHttpRequest" in tg &&
              (0, tl.hl)(XMLHttpRequest.prototype, "send", tX);
          let e = this._options.eventTarget;
          if (e) {
            let t = Array.isArray(e) ? e : tH;
            t.forEach(tq);
          }
        }
      }
      function tW(e) {
        return function (...t) {
          let n = t[0];
          return (
            (t[0] = tv(n, {
              mechanism: {
                data: { function: tx(e) },
                handled: !1,
                type: "instrument",
              },
            })),
            e.apply(this, t)
          );
        };
      }
      function t$(e) {
        return function (t) {
          return e.apply(this, [
            tv(t, {
              mechanism: {
                data: { function: "requestAnimationFrame", handler: tx(e) },
                handled: !1,
                type: "instrument",
              },
            }),
          ]);
        };
      }
      function tX(e) {
        return function (...t) {
          let n = this;
          return (
            ["onload", "onerror", "onprogress", "onreadystatechange"].forEach(
              (e) => {
                e in n &&
                  "function" == typeof n[e] &&
                  (0, tl.hl)(n, e, function (t) {
                    let n = {
                        mechanism: {
                          data: { function: e, handler: tx(t) },
                          handled: !1,
                          type: "instrument",
                        },
                      },
                      r = (0, tl.HK)(t);
                    return r && (n.mechanism.data.handler = tx(r)), tv(t, n);
                  });
              }
            ),
            e.apply(this, t)
          );
        };
      }
      function tq(e) {
        let t = tg[e] && tg[e].prototype;
        t &&
          t.hasOwnProperty &&
          t.hasOwnProperty("addEventListener") &&
          ((0, tl.hl)(t, "addEventListener", function (t) {
            return function (n, r, i) {
              try {
                "function" == typeof r.handleEvent &&
                  (r.handleEvent = tv(r.handleEvent, {
                    mechanism: {
                      data: {
                        function: "handleEvent",
                        handler: tx(r),
                        target: e,
                      },
                      handled: !1,
                      type: "instrument",
                    },
                  }));
              } catch (e) {}
              return t.apply(this, [
                n,
                tv(r, {
                  mechanism: {
                    data: {
                      function: "addEventListener",
                      handler: tx(r),
                      target: e,
                    },
                    handled: !1,
                    type: "instrument",
                  },
                }),
                i,
              ]);
            };
          }),
          (0, tl.hl)(t, "removeEventListener", function (e) {
            return function (t, n, r) {
              try {
                let i = n && n.__sentry_wrapped__;
                i && e.call(this, t, i, r);
              } catch (e) {}
              return e.call(this, t, n, r);
            };
          }));
      }
      function tY() {
        "console" in tm.n2 &&
          te.RU.forEach(function (e) {
            e in tm.n2.console &&
              (0, tl.hl)(tm.n2.console, e, function (t) {
                return (
                  (te.LD[e] = t),
                  function (...t) {
                    tw("console", { args: t, level: e });
                    let n = te.LD[e];
                    n && n.apply(tm.n2.console, t);
                  }
                );
              });
          });
      }
      tG.__initStatic();
      let tJ = tm.n2;
      function tZ() {
        if (!tJ.document) return;
        let e = tw.bind(null, "dom"),
          t = tK(e, !0);
        tJ.document.addEventListener("click", t, !1),
          tJ.document.addEventListener("keypress", t, !1),
          ["EventTarget", "Node"].forEach((t) => {
            let n = tJ[t] && tJ[t].prototype;
            n &&
              n.hasOwnProperty &&
              n.hasOwnProperty("addEventListener") &&
              ((0, tl.hl)(n, "addEventListener", function (t) {
                return function (n, r, i) {
                  if ("click" === n || "keypress" == n)
                    try {
                      let r = (this.__sentry_instrumentation_handlers__ =
                          this.__sentry_instrumentation_handlers__ || {}),
                        s = (r[n] = r[n] || { refCount: 0 });
                      if (!s.handler) {
                        let r = tK(e);
                        (s.handler = r), t.call(this, n, r, i);
                      }
                      s.refCount++;
                    } catch (e) {}
                  return t.call(this, n, r, i);
                };
              }),
              (0, tl.hl)(n, "removeEventListener", function (e) {
                return function (t, n, r) {
                  if ("click" === t || "keypress" == t)
                    try {
                      let n = this.__sentry_instrumentation_handlers__ || {},
                        i = n[t];
                      i &&
                        (i.refCount--,
                        i.refCount <= 0 &&
                          (e.call(this, t, i.handler, r),
                          (i.handler = void 0),
                          delete n[t]),
                        0 === Object.keys(n).length &&
                          delete this.__sentry_instrumentation_handlers__);
                    } catch (e) {}
                  return e.call(this, t, n, r);
                };
              }));
          });
      }
      function tK(e, t = !1) {
        return (n) => {
          if (!n || n._sentryCaptured) return;
          let r = (function (e) {
            try {
              return e.target;
            } catch (e) {
              return null;
            }
          })(n);
          if (
            "keypress" === n.type &&
            (!r ||
              !r.tagName ||
              ("INPUT" !== r.tagName &&
                "TEXTAREA" !== r.tagName &&
                !r.isContentEditable))
          )
            return;
          (0, tl.xp)(n, "_sentryCaptured", !0),
            r && !r._sentryId && (0, tl.xp)(r, "_sentryId", (0, tt.DM)());
          let o = "keypress" === n.type ? "input" : n.type;
          !(function (e) {
            if (e.type !== s) return !1;
            try {
              if (!e.target || e.target._sentryId !== a) return !1;
            } catch (e) {}
            return !0;
          })(n) &&
            (e({ event: n, name: o, global: t }),
            (s = n.type),
            (a = r ? r._sentryId : void 0)),
            clearTimeout(i),
            (i = tJ.setTimeout(() => {
              (a = void 0), (s = void 0);
            }, 1e3));
        };
      }
      let tQ = tm.n2,
        t0 = "__sentry_xhr_v3__";
      function t1() {
        if (!tQ.XMLHttpRequest) return;
        let e = XMLHttpRequest.prototype;
        (0, tl.hl)(e, "open", function (e) {
          return function (...t) {
            let n = Date.now(),
              r = (0, tC.HD)(t[0]) ? t[0].toUpperCase() : void 0,
              i = (function (e) {
                if ((0, tC.HD)(e)) return e;
                try {
                  return e.toString();
                } catch (e) {}
              })(t[1]);
            if (!r || !i) return;
            (this[t0] = { method: r, url: i, request_headers: {} }),
              "POST" === r &&
                i.match(/sentry_key/) &&
                (this.__sentry_own_request__ = !0);
            let s = () => {
              let e = this[t0];
              if (e && 4 === this.readyState) {
                try {
                  e.status_code = this.status;
                } catch (e) {}
                let t = {
                  args: [r, i],
                  endTimestamp: Date.now(),
                  startTimestamp: n,
                  xhr: this,
                };
                tw("xhr", t);
              }
            };
            return (
              "onreadystatechange" in this &&
              "function" == typeof this.onreadystatechange
                ? (0, tl.hl)(this, "onreadystatechange", function (e) {
                    return function (...t) {
                      return s(), e.apply(this, t);
                    };
                  })
                : this.addEventListener("readystatechange", s),
              (0, tl.hl)(this, "setRequestHeader", function (e) {
                return function (...t) {
                  let [n, r] = t,
                    i = this[t0];
                  return (
                    i &&
                      (0, tC.HD)(n) &&
                      (0, tC.HD)(r) &&
                      (i.request_headers[n.toLowerCase()] = r),
                    e.apply(this, t)
                  );
                };
              }),
              e.apply(this, t)
            );
          };
        }),
          (0, tl.hl)(e, "send", function (e) {
            return function (...t) {
              let n = this[t0];
              if (!n) return;
              void 0 !== t[0] && (n.body = t[0]);
              let r = {
                args: [n.method, n.url],
                startTimestamp: Date.now(),
                xhr: this,
              };
              return tw("xhr", r), e.apply(this, t);
            };
          });
      }
      let t2 = (0, tm.Rf)();
      function t3(e) {
        return (
          e &&
          /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString())
        );
      }
      function t4() {
        (function () {
          if ("string" == typeof EdgeRuntime) return !0;
          if (
            !(function () {
              if (!("fetch" in t2)) return !1;
              try {
                return (
                  new Headers(),
                  new Request("http://www.example.com"),
                  new Response(),
                  !0
                );
              } catch (e) {
                return !1;
              }
            })()
          )
            return !1;
          if (t3(t2.fetch)) return !0;
          let e = !1,
            t = t2.document;
          if (t && "function" == typeof t.createElement)
            try {
              let n = t.createElement("iframe");
              (n.hidden = !0),
                t.head.appendChild(n),
                n.contentWindow &&
                  n.contentWindow.fetch &&
                  (e = t3(n.contentWindow.fetch)),
                t.head.removeChild(n);
            } catch (e) {
              th.X &&
                te.kg.warn(
                  "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
                  e
                );
            }
          return e;
        })() &&
          (0, tl.hl)(tm.n2, "fetch", function (e) {
            return function (...t) {
              let { method: n, url: r } = (function (e) {
                  if (0 === e.length) return { method: "GET", url: "" };
                  if (2 === e.length) {
                    let [t, n] = e;
                    return {
                      url: t6(t),
                      method: t5(n, "method")
                        ? String(n.method).toUpperCase()
                        : "GET",
                    };
                  }
                  let t = e[0];
                  return {
                    url: t6(t),
                    method: t5(t, "method")
                      ? String(t.method).toUpperCase()
                      : "GET",
                  };
                })(t),
                i = {
                  args: t,
                  fetchData: { method: n, url: r },
                  startTimestamp: Date.now(),
                };
              return (
                tw("fetch", { ...i }),
                e.apply(tm.n2, t).then(
                  (e) => {
                    let t = { ...i, endTimestamp: Date.now(), response: e };
                    return tw("fetch", t), e;
                  },
                  (e) => {
                    let t = { ...i, endTimestamp: Date.now(), error: e };
                    throw (tw("fetch", t), e);
                  }
                )
              );
            };
          });
      }
      function t5(e, t) {
        return !!e && "object" == typeof e && !!e[t];
      }
      function t6(e) {
        return "string" == typeof e
          ? e
          : e
          ? t5(e, "url")
            ? e.url
            : e.toString
            ? e.toString()
            : ""
          : "";
      }
      let t8 = (0, tm.Rf)(),
        t7 = tm.n2;
      function t9() {
        if (
          !(function () {
            let e = t8.chrome,
              t = e && e.app && e.app.runtime,
              n =
                "history" in t8 &&
                !!t8.history.pushState &&
                !!t8.history.replaceState;
            return !t && n;
          })()
        )
          return;
        let e = t7.onpopstate;
        function t(e) {
          return function (...t) {
            let n = t.length > 2 ? t[2] : void 0;
            if (n) {
              let e = o,
                t = String(n);
              (o = t), tw("history", { from: e, to: t });
            }
            return e.apply(this, t);
          };
        }
        (t7.onpopstate = function (...t) {
          let n = t7.location.href,
            r = o;
          if (((o = n), tw("history", { from: r, to: n }), e))
            try {
              return e.apply(this, t);
            } catch (e) {}
        }),
          (0, tl.hl)(t7.history, "pushState", t),
          (0, tl.hl)(t7.history, "replaceState", t);
      }
      let ne = ["fatal", "error", "warning", "log", "info", "debug"];
      function nt(e) {
        if (!e) return {};
        let t = e.match(
          /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/
        );
        if (!t) return {};
        let n = t[6] || "",
          r = t[8] || "";
        return {
          host: t[4],
          path: t[5],
          protocol: t[2],
          search: n,
          hash: r,
          relative: t[5] + n + r,
        };
      }
      class nn {
        static __initStatic() {
          this.id = "Breadcrumbs";
        }
        constructor(e) {
          (this.name = nn.id),
            (this.options = {
              console: !0,
              dom: !0,
              fetch: !0,
              history: !0,
              sentry: !0,
              xhr: !0,
              ...e,
            });
        }
        setupOnce() {
          if (
            (this.options.console &&
              (function (e) {
                let t = "console";
                tE(t, e), tM(t, tY);
              })(ni),
            this.options.dom)
          ) {
            var e;
            tE(
              "dom",
              ((e = this.options.dom),
              function (t) {
                let n;
                let r = "object" == typeof e ? e.serializeAttribute : void 0,
                  i =
                    "object" == typeof e && "number" == typeof e.maxStringLength
                      ? e.maxStringLength
                      : void 0;
                i &&
                  i > 1024 &&
                  (tf &&
                    te.kg.warn(
                      `\`dom.maxStringLength\` cannot exceed 1024, but a value of ${i} was configured. Sentry will use 1024 instead.`
                    ),
                  (i = 1024)),
                  "string" == typeof r && (r = [r]);
                try {
                  let e = t.event;
                  n =
                    e && e.target
                      ? (0, tO.Rt)(e.target, {
                          keyAttrs: r,
                          maxStringLength: i,
                        })
                      : (0, tO.Rt)(e, { keyAttrs: r, maxStringLength: i });
                } catch (e) {
                  n = "<unknown>";
                }
                0 !== n.length &&
                  (0, tc.Gd)().addBreadcrumb(
                    { category: `ui.${t.name}`, message: n },
                    { event: t.event, name: t.name, global: t.global }
                  );
              })
            ),
              tM("dom", tZ);
          }
          if (
            (this.options.xhr && (tE("xhr", ns), tM("xhr", t1)),
            this.options.fetch &&
              (function (e) {
                let t = "fetch";
                tE(t, e), tM(t, t4);
              })(na),
            this.options.history &&
              (function (e) {
                let t = "history";
                tE(t, e), tM(t, t9);
              })(no),
            this.options.sentry)
          ) {
            let e = (0, e9.s3)();
            e && e.on && e.on("beforeSendEvent", nr);
          }
        }
      }
      function nr(e) {
        (0, tc.Gd)().addBreadcrumb(
          {
            category: `sentry.${
              "transaction" === e.type ? "transaction" : "event"
            }`,
            event_id: e.event_id,
            level: e.level,
            message: (0, tt.jH)(e),
          },
          { event: e }
        );
      }
      function ni(e) {
        var t;
        let n = {
          category: "console",
          data: { arguments: e.args, logger: "console" },
          level:
            "warn" === (t = e.level) ? "warning" : ne.includes(t) ? t : "log",
          message: (0, tn.nK)(e.args, " "),
        };
        if ("assert" === e.level) {
          if (!1 !== e.args[0]) return;
          (n.message = `Assertion failed: ${
            (0, tn.nK)(e.args.slice(1), " ") || "console.assert"
          }`),
            (n.data.arguments = e.args.slice(1));
        }
        (0, tc.Gd)().addBreadcrumb(n, { input: e.args, level: e.level });
      }
      function ns(e) {
        let { startTimestamp: t, endTimestamp: n } = e,
          r = e.xhr[t0];
        if (!t || !n || !r) return;
        let { method: i, url: s, status_code: a, body: o } = r,
          l = { xhr: e.xhr, input: o, startTimestamp: t, endTimestamp: n };
        (0, tc.Gd)().addBreadcrumb(
          {
            category: "xhr",
            data: { method: i, url: s, status_code: a },
            type: "http",
          },
          l
        );
      }
      function na(e) {
        let { startTimestamp: t, endTimestamp: n } = e;
        if (
          !(
            !n ||
            (e.fetchData.url.match(/sentry_key/) &&
              "POST" === e.fetchData.method)
          )
        ) {
          if (e.error) {
            let r = e.fetchData,
              i = {
                data: e.error,
                input: e.args,
                startTimestamp: t,
                endTimestamp: n,
              };
            (0, tc.Gd)().addBreadcrumb(
              { category: "fetch", data: r, level: "error", type: "http" },
              i
            );
          } else {
            let r = e.response,
              i = { ...e.fetchData, status_code: r && r.status },
              s = {
                input: e.args,
                response: r,
                startTimestamp: t,
                endTimestamp: n,
              };
            (0, tc.Gd)().addBreadcrumb(
              { category: "fetch", data: i, type: "http" },
              s
            );
          }
        }
      }
      function no(e) {
        let t = e.from,
          n = e.to,
          r = nt(tg.location.href),
          i = t ? nt(t) : void 0,
          s = nt(n);
        (i && i.path) || (i = r),
          r.protocol === s.protocol && r.host === s.host && (n = s.relative),
          r.protocol === i.protocol && r.host === i.host && (t = i.relative),
          (0, tc.Gd)().addBreadcrumb({
            category: "navigation",
            data: { from: t, to: n },
          });
      }
      function nl(e, t) {
        (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
          (e.mechanism = {
            ...e.mechanism,
            is_exception_group: !0,
            exception_id: t,
          });
      }
      function nu(e, t, n, r) {
        (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
          (e.mechanism = {
            ...e.mechanism,
            type: "chained",
            source: t,
            exception_id: n,
            parent_id: r,
          });
      }
      nn.__initStatic();
      class nc {
        static __initStatic() {
          this.id = "LinkedErrors";
        }
        constructor(e = {}) {
          (this.name = nc.id),
            (this._key = e.key || "cause"),
            (this._limit = e.limit || 5);
        }
        setupOnce() {}
        preprocessEvent(e, t, n) {
          let r = n.getOptions();
          !(function (e, t, n = 250, r, i, s, a) {
            if (
              !s.exception ||
              !s.exception.values ||
              !a ||
              !(0, tC.V9)(a.originalException, Error)
            )
              return;
            let o =
              s.exception.values.length > 0
                ? s.exception.values[s.exception.values.length - 1]
                : void 0;
            o &&
              (s.exception.values = (function e(t, n, r, i, s, a, o, l) {
                if (a.length >= r + 1) return a;
                let u = [...a];
                if ((0, tC.V9)(i[s], Error)) {
                  nl(o, l);
                  let a = t(n, i[s]),
                    c = u.length;
                  nu(a, s, c, l), (u = e(t, n, r, i[s], s, [a, ...u], a, c));
                }
                return (
                  Array.isArray(i.errors) &&
                    i.errors.forEach((i, a) => {
                      if ((0, tC.V9)(i, Error)) {
                        nl(o, l);
                        let c = t(n, i),
                          h = u.length;
                        nu(c, `errors[${a}]`, h, l),
                          (u = e(t, n, r, i, s, [c, ...u], c, h));
                      }
                    }),
                  u
                );
              })(e, t, i, a.originalException, r, s.exception.values, o, 0).map(
                (e) => (e.value && (e.value = (0, tn.$G)(e.value, n)), e)
              ));
          })(tL, r.stackParser, r.maxValueLength, this._key, this._limit, e, t);
        }
      }
      nc.__initStatic();
      class nh {
        static __initStatic() {
          this.id = "HttpContext";
        }
        constructor() {
          this.name = nh.id;
        }
        setupOnce() {}
        preprocessEvent(e) {
          if (!tg.navigator && !tg.location && !tg.document) return;
          let t =
              (e.request && e.request.url) || (tg.location && tg.location.href),
            { referrer: n } = tg.document || {},
            { userAgent: r } = tg.navigator || {},
            i = {
              ...(e.request && e.request.headers),
              ...(n && { Referer: n }),
              ...(r && { "User-Agent": r }),
            },
            s = { ...e.request, ...(t && { url: t }), headers: i };
          e.request = s;
        }
      }
      nh.__initStatic();
      class nd {
        static __initStatic() {
          this.id = "Dedupe";
        }
        constructor() {
          this.name = nd.id;
        }
        setupOnce(e, t) {}
        processEvent(e) {
          if (e.type) return e;
          try {
            var t;
            if (
              (t = this._previousEvent) &&
              ((function (e, t) {
                let n = e.message,
                  r = t.message;
                return !!(
                  (n || r) &&
                  (!n || r) &&
                  (n || !r) &&
                  n === r &&
                  nf(e, t) &&
                  np(e, t)
                );
              })(e, t) ||
                (function (e, t) {
                  let n = nm(t),
                    r = nm(e);
                  return !!(
                    n &&
                    r &&
                    n.type === r.type &&
                    n.value === r.value &&
                    nf(e, t) &&
                    np(e, t)
                  );
                })(e, t))
            )
              return (
                tf &&
                  te.kg.warn(
                    "Event dropped due to being a duplicate of previously captured event."
                  ),
                null
              );
          } catch (e) {}
          return (this._previousEvent = e);
        }
      }
      function np(e, t) {
        let n = ng(e),
          r = ng(t);
        if (!n && !r) return !0;
        if ((n && !r) || (!n && r) || r.length !== n.length) return !1;
        for (let e = 0; e < r.length; e++) {
          let t = r[e],
            i = n[e];
          if (
            t.filename !== i.filename ||
            t.lineno !== i.lineno ||
            t.colno !== i.colno ||
            t.function !== i.function
          )
            return !1;
        }
        return !0;
      }
      function nf(e, t) {
        let n = e.fingerprint,
          r = t.fingerprint;
        if (!n && !r) return !0;
        if ((n && !r) || (!n && r)) return !1;
        try {
          return !(n.join("") !== r.join(""));
        } catch (e) {
          return !1;
        }
      }
      function nm(e) {
        return e.exception && e.exception.values && e.exception.values[0];
      }
      function ng(e) {
        let t = e.exception;
        if (t)
          try {
            return t.values[0].stacktrace.frames;
          } catch (e) {}
      }
      function n_(e = {}, t = (0, tc.Gd)()) {
        if (!tg.document) {
          tf &&
            te.kg.error("Global document not defined in showReportDialog call");
          return;
        }
        let { client: n, scope: r } = t.getStackTop(),
          i = e.dsn || (n && n.getDsn());
        if (!i) {
          tf && te.kg.error("DSN not configured for showReportDialog call");
          return;
        }
        r && (e.user = { ...r.getUser(), ...e.user }),
          e.eventId || (e.eventId = t.lastEventId());
        let s = tg.document.createElement("script");
        (s.async = !0),
          (s.crossOrigin = "anonymous"),
          (s.src = (function (e, t) {
            let n = (function (e) {
              let t =
                "string" == typeof e
                  ? (function (e) {
                      let t = td.exec(e);
                      if (!t) {
                        (0, te.Cf)(() => {
                          console.error(`Invalid Sentry Dsn: ${e}`);
                        });
                        return;
                      }
                      let [n, r, i = "", s, a = "", o] = t.slice(1),
                        l = "",
                        u = o,
                        c = u.split("/");
                      if (
                        (c.length > 1 &&
                          ((l = c.slice(0, -1).join("/")), (u = c.pop())),
                        u)
                      ) {
                        let e = u.match(/^\d+/);
                        e && (u = e[0]);
                      }
                      return tp({
                        host: s,
                        pass: i,
                        path: l,
                        projectId: u,
                        port: a,
                        protocol: n,
                        publicKey: r,
                      });
                    })(e)
                  : tp(e);
              if (
                t &&
                (function (e) {
                  if (!th.X) return !0;
                  let { port: t, projectId: n, protocol: r } = e,
                    i = ["protocol", "publicKey", "host", "projectId"].find(
                      (t) =>
                        !e[t] &&
                        (te.kg.error(`Invalid Sentry Dsn: ${t} missing`), !0)
                    );
                  return (
                    !i &&
                    (n.match(/^\d+$/)
                      ? "http" === r || "https" === r
                        ? !(t && isNaN(parseInt(t, 10))) ||
                          (te.kg.error(`Invalid Sentry Dsn: Invalid port ${t}`),
                          !1)
                        : (te.kg.error(
                            `Invalid Sentry Dsn: Invalid protocol ${r}`
                          ),
                          !1)
                      : (te.kg.error(
                          `Invalid Sentry Dsn: Invalid projectId ${n}`
                        ),
                        !1))
                  );
                })(t)
              )
                return t;
            })(e);
            if (!n) return "";
            let r = `${(function (e) {
                let t = e.protocol ? `${e.protocol}:` : "",
                  n = e.port ? `:${e.port}` : "";
                return `${t}//${e.host}${n}${e.path ? `/${e.path}` : ""}/api/`;
              })(n)}embed/error-page/`,
              i = `dsn=${(function (e, t = !1) {
                let {
                  host: n,
                  path: r,
                  pass: i,
                  port: s,
                  projectId: a,
                  protocol: o,
                  publicKey: l,
                } = e;
                return `${o}://${l}${t && i ? `:${i}` : ""}@${n}${
                  s ? `:${s}` : ""
                }/${r ? `${r}/` : r}${a}`;
              })(n)}`;
            for (let e in t)
              if ("dsn" !== e && "onClose" !== e) {
                if ("user" === e) {
                  let e = t.user;
                  if (!e) continue;
                  e.name && (i += `&name=${encodeURIComponent(e.name)}`),
                    e.email && (i += `&email=${encodeURIComponent(e.email)}`);
                } else
                  i += `&${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`;
              }
            return `${r}?${i}`;
          })(i, e)),
          e.onLoad && (s.onload = e.onLoad);
        let { onClose: a } = e;
        if (a) {
          let e = (t) => {
            if ("__sentry_reportdialog_closed__" === t.data)
              try {
                a();
              } finally {
                tg.removeEventListener("message", e);
              }
          };
          tg.addEventListener("message", e);
        }
        let o = tg.document.head || tg.document.body;
        o
          ? o.appendChild(s)
          : tf &&
            te.kg.error(
              "Not injecting report dialog. No injection point found in HTML"
            );
      }
      nd.__initStatic(),
        new ta(),
        new tu(),
        new tG(),
        new nn(),
        new tF(),
        new nc(),
        new nd(),
        new nh(),
        n(3463);
      let nv = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
        ny = { componentStack: null, error: null, eventId: null };
      class nx extends p.Component {
        constructor(e) {
          super(e),
            nx.prototype.__init.call(this),
            (this.state = ny),
            (this._openFallbackReportDialog = !0);
          let t = (0, e9.s3)();
          t &&
            t.on &&
            e.showDialog &&
            ((this._openFallbackReportDialog = !1),
            t.on("afterSendEvent", (t) => {
              t.type ||
                t.event_id !== this._lastEventId ||
                n_({ ...e.dialogOptions, eventId: this._lastEventId });
            }));
        }
        componentDidCatch(e, { componentStack: t }) {
          let {
            beforeCapture: n,
            onError: r,
            showDialog: i,
            dialogOptions: s,
          } = this.props;
          (0, e9.$e)((a) => {
            if (
              (function (e) {
                let t = e.match(/^([^.]+)/);
                return null !== t && parseInt(t[0]) >= 17;
              })(p.version) &&
              (0, tC.VZ)(e)
            ) {
              let n = Error(e.message);
              (n.name = `React ErrorBoundary ${e.name}`),
                (n.stack = t),
                (function (e, t) {
                  let n = new WeakMap();
                  !(function e(t, r) {
                    if (!n.has(t)) {
                      if (t.cause) return n.set(t, !0), e(t.cause, r);
                      t.cause = r;
                    }
                  })(e, t);
                })(e, n);
            }
            n && n(a, e, t);
            let o = (0, e9.Tb)(e, {
              captureContext: { contexts: { react: { componentStack: t } } },
              mechanism: { handled: !1 },
            });
            r && r(e, t, o),
              i &&
                ((this._lastEventId = o),
                this._openFallbackReportDialog && n_({ ...s, eventId: o })),
              this.setState({ error: e, componentStack: t, eventId: o });
          });
        }
        componentDidMount() {
          let { onMount: e } = this.props;
          e && e();
        }
        componentWillUnmount() {
          let { error: e, componentStack: t, eventId: n } = this.state,
            { onUnmount: r } = this.props;
          r && r(e, t, n);
        }
        __init() {
          this.resetErrorBoundary = () => {
            let { onReset: e } = this.props,
              { error: t, componentStack: n, eventId: r } = this.state;
            e && e(t, n, r), this.setState(ny);
          };
        }
        render() {
          let { fallback: e, children: t } = this.props,
            n = this.state;
          if (n.error) {
            let t;
            return ((t =
              "function" == typeof e
                ? e({
                    error: n.error,
                    componentStack: n.componentStack,
                    resetError: this.resetErrorBoundary,
                    eventId: n.eventId,
                  })
                : e),
            p.isValidElement(t))
              ? t
              : (e &&
                  nv &&
                  te.kg.warn("fallback did not produce a valid ReactElement"),
                null);
          }
          return "function" == typeof t ? t() : t;
        }
      }
      var nb = n(8868);
      function nS(e) {
        let {
            children: t,
            withDashboard: n,
            withWebGL: r,
            systemData: i,
            draftMode: s = !1,
          } = e,
          a = (0, P.useRouter)(),
          { isMobileLandscape: o } = (function () {
            let [e, t] = (0, p.useState)(!1),
              [n, r] = (0, p.useState)(!1),
              i = !n,
              s = () => {
                if (!window.screen) return;
                let e = window.screen.orientation
                  ? window.screen.orientation.type.includes("landscape")
                  : window.screen.width > window.screen.height;
                r(e);
              };
            (0, p.useEffect)(() => {
              var e;
              return (s(),
              null === (e = screen) || void 0 === e ? void 0 : e.orientation)
                ? (screen.orientation.addEventListener("change", s),
                  () => {
                    screen.orientation.removeEventListener("change", s);
                  })
                : (window.addEventListener("resize", s),
                  () => {
                    window.removeEventListener("resize", s);
                  });
            }, []);
            let a = (0, p.useCallback)(() => {
              if (!window.screen) return;
              let e = window.matchMedia(
                "(max-".concat(n ? "height" : "width", ": 450px)")
              ).matches;
              t(e);
            }, [n]);
            return (
              (0, p.useEffect)(
                () => (
                  a(),
                  window.addEventListener("resize", a),
                  () => {
                    window.removeEventListener("resize", a);
                  }
                ),
                [a]
              ),
              { isLandscape: n, isMobileLandscape: e && n, isPortrait: i }
            );
          })(),
          u = (0, J.qr)((e) => e.isApplicationLocked),
          c = (0, J.qr)((e) => e.setIsApplicationLocked),
          h = "/[locale]/districts/[district_id]/[node_id]" === a.pathname,
          f = !s && u && !h,
          m = (0, es.m_)(),
          { translate: g } = (0, Y.$G)();
        (0, d.LI)(() => {
          let e = document.documentElement,
            t = "/[locale]" === a.pathname;
          t
            ? e.classList.remove("scroll-lock")
            : e.classList.add("scroll-lock");
        }, [a.pathname]),
          (0, d.LI)(() => {
            (e1.TQ || s) && c(!1);
          }, []);
        let _ = (0, p.useMemo)(() => {
          let e = "/[locale]/districts" === a.pathname,
            t = "/[locale]/districts/[district_id]" === a.pathname,
            n = "/[locale]/districts/[district_id]/[node_id]" === a.pathname;
          return e
            ? [
                {
                  label: g("breadcrumb_district_selector"),
                  href: "/".concat(a.query.locale),
                },
              ]
            : t
            ? [
                {
                  label: g("breadcrumb_district_selector"),
                  href: "/".concat(a.query.locale, "/districts"),
                },
                {
                  label: ""
                    .concat(g("breadcrumb_district_prefix"), "#")
                    .concat(a.query.district_id),
                  href: "/"
                    .concat(a.query.locale, "/districts/")
                    .concat(a.query.district_id),
                },
              ]
            : n
            ? [
                {
                  label: g("breadcrumb_district_selector"),
                  href: "/".concat(a.query.locale, "/districts"),
                },
                {
                  label: ""
                    .concat(g("breadcrumb_district_prefix"), "#")
                    .concat(a.query.district_id),
                  href: "/"
                    .concat(a.query.locale, "/districts/")
                    .concat(a.query.district_id),
                },
                {
                  label: ""
                    .concat(g("breadcrumb_node_prefix"), "#")
                    .concat(a.query.node_id),
                  href: "/"
                    .concat(a.query.locale, "/districts/")
                    .concat(a.query.district_id, "/")
                    .concat(a.query.node_id),
                },
              ]
            : [];
        }, [a.pathname, a.query, a.asPath]);
        return (
          eZ({ enabled: !(null == i ? void 0 : i.isLocked) && !f }),
          (0, l.jsx)(nx, {
            fallback: (e) => {
              let { resetError: t } = e;
              return (0, l.jsx)(nb.j, {
                title: "Something went wrong",
                body: g("error_404_body", {
                  fallback: "PRESS ENTER OR TAP TO RETURN TO START",
                }),
                onClick: () => {
                  a.push("/".concat(a.query.locale), void 0, {
                    shallow: !1,
                  }).then(() => {
                    t();
                  });
                },
              });
            },
            children: (0, l.jsxs)(v, {
              children: [
                o && (0, l.jsx)(e7, {}),
                n
                  ? (0, l.jsx)(l.Fragment, {
                      children: (null == i ? void 0 : i.isLocked)
                        ? (0, l.jsx)(eJ, {})
                        : (0, l.jsx)(l.Fragment, {
                            children: (0, l.jsx)(eU, {
                              title: g("stream_catcher_version_number"),
                              dataPanelMainContent: i
                                ? (0, l.jsx)(K, {
                                    ...i,
                                    botVersion:
                                      null == i ? void 0 : i.botVersion,
                                  })
                                : null,
                              dataPanelPreviewContent: i
                                ? (0, l.jsx)(Q, {
                                    botVersion:
                                      null == i ? void 0 : i.botVersion,
                                    securityStatus:
                                      null == i ? void 0 : i.securityStatus,
                                  })
                                : null,
                              breadcrumbs: _,
                              withWebGL: r,
                              children: (0, l.jsxs)(l.Fragment, {
                                children: [
                                  f &&
                                    (0, l.jsx)(eX, {
                                      onUnlock: () => {
                                        m(
                                          g(
                                            "console_district_pattern_validating",
                                            {
                                              fallback:
                                                "Validating pattern input",
                                            }
                                          )
                                        ),
                                          m(
                                            g(
                                              "console_district_pattern_valid",
                                              {
                                                fallback: "Pattern input valid",
                                              }
                                            )
                                          ),
                                          c(!1);
                                      },
                                    }),
                                  t,
                                  r && (0, l.jsx)(ek.Z, {}, "webgl"),
                                  (0, l.jsx)(e2, {}, "mock-transition"),
                                ],
                              }),
                            }),
                          }),
                    })
                  : (0, l.jsxs)(l.Fragment, {
                      children: [t, r && (0, l.jsx)(ek.Z, {}, "webgl")],
                    }),
              ],
            }),
          })
        );
      }
      let nE = (e) => {
        let { children: t, ...n } = e,
          r = (0, p.useRef)();
        return (
          r.current || (r.current = (0, J.$Z)(n)),
          (0, p.useEffect)(() => {
            r.current && !(0, el.xb)(n) && r.current.setState(n);
          }, [n]),
          (0, l.jsx)(J.zt, { value: r.current, children: t })
        );
      };
      var nM = n(2462),
        nw = n.n(nM),
        nT = n(314),
        nA = n.n(nT),
        nC = n(3367),
        nR = n(7729),
        nP = n.n(nR),
        nO = (0, h.Jc)(function (e) {
          let { Component: t, pageProps: n } = e,
            { draftMode: r, theme: i = "dark" } = n,
            { setTheme: s } = _(),
            a = (0, P.useRouter)(),
            { i18n: o, t: u } = (0, h.$G)(),
            { publicRuntimeConfig: f } = nA()();
          (0, d.LI)(() => {
            s(i);
          }, [s, i]),
            (0, p.useEffect)(() => {
              nw().initialize({ gtmId: "GTM-5Z82DK3C" }),
                setTimeout(() => {
                  let e = window.mParticle;
                  e && e.setLogLevel("none");
                }, 3e3);
            }, []),
            (0, p.useEffect)(() => {
              let e = window.location.href,
                t = document.title;
              (0, eb.rY)(t, e, o.language);
            }, [o.language, a.asPath]);
          let m = {
            title: u("meta_title", { fallback: "QUORM" }),
            description: u("meta_description", {
              fallback: "QUORM",
            }),
            image: "".concat(f.site_url, "/og_image.jpg"),
            site_name: u("meta_site_name", { fallback: "QUORM" }),
          };
          return (0,
          l.jsxs)(l.Fragment, { children: [(0, l.jsxs)(nP(), { children: [(0, l.jsx)("title", { children: m.title }), (0, l.jsx)("meta", { name: "description", content: m.description }), (0, l.jsx)("meta", { name: "og:title", content: m.title }), (0, l.jsx)("meta", { name: "og:type", content: "site" }), (0, l.jsx)("meta", { name: "og:image", content: m.image }), (0, l.jsx)("meta", { name: "og:site_name", content: m.site_name }), (0, l.jsx)("meta", { name: "og:description", content: m.description }), (0, l.jsx)("meta", { name: "twitter:card", content: "summary" }), (0, l.jsx)("meta", { name: "viewport", content: "width=device-width, initial-scale=1" }), (0, l.jsx)("link", { rel: "apple-touch-icon", href: "/favicons/experience/apple-touch-icon.png" }), (0, l.jsx)("link", { rel: "icon", type: "image/png", sizes: "32x32", href: "/favicons/experience/favicon-32x32.png" }), (0, l.jsx)("link", { rel: "icon", type: "image/png", sizes: "16x16", href: "/favicons/experience/favicon-16x16.png" }), (0, l.jsx)("link", { rel: "icon", href: "/favicons/experience/favicon.ico" }), (0, l.jsx)("link", { rel: "manifest", href: "/favicons/experience/site.webmanifest" }), (0, l.jsx)("meta", { name: "google-site-verification", content: "757IgY_kW3yUwjsFmJL_FmSgHlUFUDSxgu3com25Pa8" }), (0, l.jsx)("meta", { name: "version", content: f.version })] }), (0, l.jsx)(nE, { ...n.initialAppStoreState, children: (0, l.jsxs)(nS, { ...n, children: [(0, l.jsx)(t, { ...n }), r && (0, l.jsx)(eC.R, { title: "Preview mode", theme: eC.$.PurpleOnPurple, style: { position: "fixed", bottom: "5%", left: "50%", transform: "translateX(-50%)", zIndex: 9999 }, children: (0, l.jsxs)("div", { style: { justifyContent: "center", alignItems: "center", display: "flex", flexDirection: "column", gap: "1rem", margin: "1rem" }, children: [(0, l.jsx)("h1", { children: "You are in preview mode" }), (0, l.jsx)(c(), { href: "/api/exit-preview", legacyBehavior: !0, children: (0, l.jsx)(nC.z, { children: "Exit preview" }) })] }) })] }) })] });
        });
    },
    6176: function (e, t, n) {
      "use strict";
      n.d(t, {
        zt: function () {
          return L;
        },
        $Z: function () {
          return N;
        },
        qr: function () {
          return I;
        },
      });
      var r,
        i,
        s,
        a,
        o,
        l,
        u = n(2784),
        c = n(782),
        h = n(3445),
        d = n(3973),
        p = n(3266),
        f = n(5522),
        m = n(2893);
      ((i = (r = o || (o = {})).Error || (r.Error = {})).UNABLE_TO_JOIN_ROOM =
        "UNABLE_TO_JOIN_ROOM"),
        (i.UNABLE_TO_CREATE_ROOM = "UNABLE_TO_CREATE_ROOM"),
        (i.UNABLE_TO_RETRIEVE_ROOMS = "UNABLE_TO_RETRIEVE_ROOMS"),
        (i.DISTRICT_ID_IS_NOT_ACTIVE = "DISTRICT_ID_IS_NOT_ACTIVE"),
        (i.STREAM_ID_IS_NOT_ACTIVE = "STREAM_ID_IS_NOT_ACTIVE"),
        (i.COMMUNITY_ID_IS_NOT_ACTIVE = "COMMUNITY_ID_IS_NOT_ACTIVE"),
        (i.INVALID_ID_FOR_ROOM = "INVALID_ID_FOR_ROOM"),
        (i.INCORRECT_PLAYER_OPTIONS = "INCORRECT_PLAYER_OPTIONS"),
        (i.ROOM_ACTION_NOT_AVAILABLE = "ROOM_ACTION_NOT_AVAILABLE"),
        (i.NOT_CONNECTED_TO_ROOM = "NOT_CONNECTED_TO_ROOM"),
        (i.POSITION_UPDATE_DATA_INVALID = "POSITION_UPDATE_DATA_INVALID"),
        (i.POSITION_UPDATE_FAILED = "POSITION_UPDATE_FAILED"),
        (i.INVALID_DECRYPTION_LEVEL = "INVALID_DECRYPTION_LEVEL"),
        (i.UPDATE_DECRYPTION_LEVEL_FAILED = "UPDATE_DECRYPTION_LEVEL_FAILED"),
        (i.INCORRECT_USER_OPTIONS = "INCORRECT_USER_OPTIONS"),
        (i.UNABLE_TO_SET_IDLE_STATE = "UNABLE_TO_SET_IDLE_STATE"),
        (i.UNABLE_TO_GET_CONNECTION = "UNABLE_TO_GET_CONNECTION"),
        (i.INCORRECT_LOAD_BALANCER = "INCORRECT_LOAD_BALANCER"),
        (i.NO_CONNECTION_RESPONSE = "NO_CONNECTION_RESPONSE"),
        (i.NO_ROOM_ID_PROVIDED = "NO_ROOM_ID_PROVIDED"),
        (i.UNABLE_TO_LEAVE_ROOM = "UNABLE_TO_LEAVE_ROOM"),
        (i.UNABLE_TO_PING_USER = "UNABLE_TO_PING_USER"),
        (i.NO_PORT_RETURNED = "NO_PORT_RETURNED"),
        (i.NOT_ALLOWED = "NOT_ALLOWED"),
        (i.ROOM_IS_FULL = "ROOM_IS_FULL"),
        (i.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
        (i.COMMUNITY_ID_IN_USE = "COMMUNITY_ID_IN_USE"),
        (i.ROOM_ID_NOT_FOUND = "ROOM_ID_NOT_FOUND"),
        ((a =
          (s = l || (l = {})).SocketMessageType || (s.SocketMessageType = {}))[
          (a.PING = 0)
        ] = "PING"),
        (a[(a.PONG = 1)] = "PONG"),
        (a[(a.UPDATE_POSITION = 2)] = "UPDATE_POSITION"),
        (a[(a.UPDATE_DECRYPTION_LEVEL = 3)] = "UPDATE_DECRYPTION_LEVEL"),
        (a[(a.SET_IDLE = 4)] = "SET_IDLE");
      var g = n(610);
      let _ = async (e) => new Promise((t) => setTimeout(t, e));
      class v {
        setCallback(e) {
          this.callback = e;
        }
        async joinRoomOrCreate(e, t) {
          let n = null;
          try {
            n = await this.link.getAvailableRooms(e);
          } catch (e) {
            throw Error(o.Error.UNABLE_TO_RETRIEVE_ROOMS);
          }
          let r =
              "districtId" in t.metadata
                ? t.metadata.districtId
                : t.metadata.streamId,
            i = "districtId" in t.metadata ? "districtId" : "streamId";
          for (let e of n)
            if ("metadata" in e && e.metadata[i] === r)
              for (let n = 1; n <= 6; n++)
                try {
                  return (
                    (this.room = await this.link.joinById(e.roomId, t)), !0
                  );
                } catch (e) {
                  if (n <= 6) {
                    await _(500 * Math.random() + 400 * n);
                    continue;
                  }
                  throw (console.error(e), Error(o.Error.UNABLE_TO_JOIN_ROOM));
                }
          if (null === this.room)
            for (let n = 1; n <= 6; n++)
              try {
                return (
                  (this.room = await this.link.create(e, t)),
                  (this.roomType = e),
                  !0
                );
              } catch (e) {
                if (n < 6) {
                  await _(500 * Math.random() + 400 * n);
                  continue;
                }
                throw (console.error(e), Error(o.Error.UNABLE_TO_CREATE_ROOM));
              }
          return !1;
        }
        setupRoomListeners() {
          null != !this.room &&
            (this.handleConnectivity(),
            this.setupPingMessage(),
            this.handlePongMessage());
        }
        handleConnectivity() {
          this.room &&
            (this.room.onStateChange((e) => {
              this.lastIncomingMessageTime = Date.now();
            }),
            this.room.onError((e) => {
              console.error("Error", e);
            }),
            this.room.onLeave((e) => {
              (this.room = null),
                this.callback({
                  type: m.t.MessageType.CONNECTION_LOST,
                  payload: { connection: !1 },
                });
            }));
        }
        me() {
          var e, t, n, r;
          return (null === (e = this.room) || void 0 === e
            ? void 0
            : e.sessionId) &&
            null !==
              (r =
                null === (n = this.users) || void 0 === n
                  ? void 0
                  : n.get(
                      null === (t = this.room) || void 0 === t
                        ? void 0
                        : t.sessionId
                    )) &&
            void 0 !== r
            ? r
            : null;
        }
        getUsers() {
          return Object.entries(this.users).map((e) => {
            let [t, n] = e;
            return { sessionId: t, ...n };
          });
        }
        async setUserIdle(e) {
          try {
            var t;
            return (
              null === (t = this.room) ||
                void 0 === t ||
                t.send(l.SocketMessageType.SET_IDLE, { idle: e }),
              !0
            );
          } catch (e) {
            throw e;
          }
        }
        async leave() {
          if (this.room)
            try {
              return (
                await this.room.removeAllListeners(),
                await this.room.leave(!0),
                (this.room = null),
                (this.users = new g.MapSchema()),
                !0
              );
            } catch (e) {
              throw Error(o.Error.UNABLE_TO_LEAVE_ROOM);
            }
          return !1;
        }
        setupPingMessage() {
          this.pingInterval && clearInterval(this.pingInterval),
            (this.pingInterval = setInterval(async () => {
              if (
                this.room &&
                (!this.lastIncomingMessageTime ||
                  this.lastIncomingMessageTime + 1e4 < Date.now())
              ) {
                this.pingSent = Date.now();
                try {
                  this.room.send(l.SocketMessageType.PING);
                } catch (e) {
                  this.callback({
                    type: m.t.MessageType.CONNECTION_LOST,
                    payload: { connection: !1 },
                  });
                }
              }
            }, 6e4));
        }
        handlePongMessage() {
          this.room &&
            this.room.onMessage(l.SocketMessageType.PONG, () => {
              this.callback({ type: m.t.MessageType.PONG, payload: "Pong" });
            });
        }
        constructor(e) {
          (this.room = null),
            (this.roomType = null),
            (this.lastIncomingMessageTime = null),
            (this.link = e);
        }
      }
      var y = l.SocketMessageType,
        x = m.t.MessageType;
      class b extends v {
        async joinRoomOrCreate(e, t) {
          try {
            return (
              await super.joinRoomOrCreate(e, t), this.setupRoomListeners(), !0
            );
          } catch (e) {
            throw e;
          }
        }
        async setUserPosition(e, t) {
          if (!t && !e && 0 !== e && 0 !== t)
            throw Error(o.Error.POSITION_UPDATE_DATA_INVALID);
          if (
            this.lastPositionUpdate &&
            this.lastPositionUpdate.x == e &&
            this.lastPositionUpdate.y == t
          )
            return !1;
          let n = { x: e, y: t };
          this.lastPositionUpdate = n;
          try {
            var r, i;
            return (
              (null === (r = this.room) || void 0 === r
                ? void 0
                : r.connection.isOpen) &&
                (null === (i = this.room) ||
                  void 0 === i ||
                  i.send(y.UPDATE_POSITION, n)),
              !0
            );
          } catch (e) {
            throw Error(o.Error.POSITION_UPDATE_FAILED);
          }
        }
        async pingUser(e) {
          let t = null;
          return (
            this.users.forEach((n) => {
              e === n.uuid && (t = n.uuid);
            }),
            t && (this.pingStack[Date.now()] = t),
            t &&
              void 0 === this.pingStackInterval &&
              (this.pingStackInterval = setInterval(this.checkPingStack, 1e3)),
            !!t
          );
        }
        checkPingStack() {
          if (Object.keys(this.pingStack).length > 0)
            for (let e in this.pingStack)
              if (Number(e) > Date.now() - 15e3) {
                let t = this.getDistrictUser("", this.pingStack[e]);
                if (!t) continue;
                this.callback({ type: x.PING_USER, payload: t });
              } else delete this.pingStack[e];
          else clearInterval(this.pingStackInterval);
        }
        async leave() {
          return clearInterval(this.pingStackInterval), super.leave();
        }
        setupRoomListeners() {
          null != !this.room &&
            (super.setupRoomListeners(), this.handleStateChange());
        }
        handleStateChange() {
          this.room &&
            this.room.onStateChange((e) => {
              this.users = e.users;
              let t = {
                users: this.getDistrictUsers(),
                connected: e.connected,
              };
              this.callback({ type: x.UPDATE_STATE, payload: t });
            });
        }
        getDistrictUser(e, t) {
          return (
            this.users.forEach((e, n) => {
              if (e.uuid === t || n == n) return e;
            }),
            null
          );
        }
        getDistrictUsers() {
          let e = [];
          return (
            this.users.forEach((t, n) => {
              e.push({ uuid: t.uuid, x: t.x, y: t.y, idle: t.idle });
            }),
            e
          );
        }
        constructor(e) {
          super(e), (this.pingStack = {}), (this.lastPositionUpdate = null);
        }
      }
      var S = l.SocketMessageType,
        E = m.t.MessageType;
      class M extends v {
        async joinRoomOrCreate(e, t) {
          try {
            return (
              await super.joinRoomOrCreate(e, t),
              (this.requiredForParty = t.partySize),
              (this.party = new g.MapSchema()),
              this.setupRoomListeners(),
              !0
            );
          } catch (e) {
            throw e;
          }
        }
        setupRoomListeners() {
          null != !this.room &&
            (super.setupRoomListeners(), this.handleStateChange());
        }
        async updateDecryptionLevel(e) {
          if (e < 0 || e > 1) throw Error(o.Error.INVALID_DECRYPTION_LEVEL);
          try {
            var t;
            return (
              null === (t = this.room) ||
                void 0 === t ||
                t.send(S.UPDATE_DECRYPTION_LEVEL, { decryptionLevel: e }),
              !0
            );
          } catch (e) {
            throw Error(o.Error.UPDATE_DECRYPTION_LEVEL_FAILED);
          }
        }
        handleStateChange() {
          this.room &&
            this.room.onStateChange((e) => {
              if (
                ((this.users = e.users),
                this.updatePartyUsers(e),
                this.hasParty())
              ) {
                this.startedParty ||
                  this.party.forEach((e, t) => {
                    e.lastUpdate = Date.now();
                  }),
                  (this.startedParty = !0);
                let e = this.getPartyUsers();
                this.callback({ type: E.UPDATE_PARTY, payload: e });
              } else {
                let e = this.getPartyUsers();
                this.callback({ type: E.CREATING_PARTY, payload: e });
              }
              let t = { connected: e.connected, users: this.getPartyUsers() };
              this.callback({ type: E.UPDATE_STATE, payload: t });
            });
        }
        hasParty() {
          return this.party.size === this.requiredForParty;
        }
        getPartyUsers() {
          let e = [];
          return (
            this.party.forEach((t, n) => {
              e.push({
                sessionId: n,
                uuid: t.uuid,
                decryptionLevel: t.decryptionLevel,
                idle: t.idle,
              });
            }),
            e
          );
        }
        updatePartyUsers(e) {
          var t, n, r;
          let i = [],
            s = e.users.get(
              null === (t = this.room) || void 0 === t ? void 0 : t.sessionId
            ),
            a = null === (n = this.room) || void 0 === n ? void 0 : n.sessionId;
          if (
            0 === this.party.size &&
            (null === (r = this.room) || void 0 === r ? void 0 : r.sessionId)
          ) {
            this.party.set(this.room.sessionId, s),
              (i = this.findPartyCandidates(s.decryptionLevel)),
              this.addCandidatesToParty(i);
            return;
          }
          this.party.forEach((t, n) => {
            if (n.startsWith(this.botPrefix)) {
              let e = s.decryptionLevel + Math.floor(10 * Math.random()) / 100;
              t.decryptionLevel = e > 1 ? 1 : e;
              return;
            }
            let r = e.users.get(n);
            if (!r && t.decryptionLevel < 1) {
              if (a === n) return;
              this.party.delete(n), this.users.delete(n);
              return;
            }
            r &&
              (a !== n &&
                t.decryptionLevel < 1 &&
                t.lastUpdate &&
                t.lastUpdate < Date.now() - this.idleCutOff &&
                (this.party.delete(n), this.users.delete(n)),
              r.decryptionLevel != t.decryptionLevel &&
                (t.lastUpdate = Date.now()),
              (t.decryptionLevel = r.decryptionLevel));
          }),
            !this.hasParty() &&
              (i = this.findPartyCandidates(this.partyAverageDecryptionLevel()))
                .length > 0 &&
              this.addCandidatesToParty(i),
            this.startedParty &&
              this.party.size < this.requiredForParty &&
              this.addBotUsersToParty();
        }
        partyAverageDecryptionLevel() {
          if (0 === this.party.size) return 0;
          let e = 0;
          return (
            this.party.forEach((t, n) => {
              e += t.decryptionLevel;
            }),
            e / this.party.size
          );
        }
        addBotUsersToParty() {
          for (; this.party.size < this.requiredForParty; )
            this.addBotUserToParty();
        }
        addBotUserToParty() {
          let e = this.me(),
            t = JSON.parse(JSON.stringify(e)),
            n = Math.random().toString(36).substring(2, 8);
          (t.uuid = n), this.party.set(this.botPrefix + n, t);
        }
        addCandidatesToParty(e) {
          for (; this.party.size < this.requiredForParty; ) {
            if (0 === e.length) return;
            e = this.addCandidateToParty(e);
          }
        }
        addCandidateToParty(e) {
          if (e.length > 0) {
            let t = Math.floor(Math.random() * e.length),
              n = JSON.parse(JSON.stringify(this.users.get(e[t])));
            void 0 !== n && this.party.set(e[t], n), e.splice(t, 1);
          }
          return e;
        }
        findPartyCandidates(e) {
          let t = [];
          return (
            this.users.forEach((n, r) => {
              !this.party.get(r) &&
                (!this.startedParty || 0 !== n.decryptionLevel) &&
                Math.abs(e - n.decryptionLevel) <= this.maxDecryptionAllowed &&
                t.push(r);
            }),
            t
          );
        }
        constructor(e) {
          super(e),
            (this.maxDecryptionAllowed = 0.2),
            (this.requiredForParty = 3),
            (this.startedParty = !1),
            (this.party = new g.MapSchema()),
            (this.botPrefix = "XERO"),
            (this.idleCutOff = 2e4);
        }
      }
      class w extends M {
        async createPrivateRoom(e, t) {
          try {
            return (
              (this.room = await this.link.create(e, t)),
              (this.requiredForParty = t.partySize),
              this.setupRoomListeners(),
              this.room.id
            );
          } catch (e) {
            throw e;
          }
        }
        async joinPrivateRoom(e, t) {
          for (let n = 1; n <= 6; n++)
            try {
              return (
                (this.room = await this.link.joinById(e, t)),
                this.setupRoomListeners(),
                (this.requiredForParty = t.partySize),
                !0
              );
            } catch (e) {
              if (e.message.includes("locked"))
                throw Error(o.Error.ROOM_IS_FULL);
              if ("code" in e && 4212 === e.code)
                throw Error(o.Error.ROOM_ID_NOT_FOUND);
              if (n < 6) {
                await _(500 * Math.random() + 400 * n);
                continue;
              }
              throw e;
            }
          return !1;
        }
        constructor(e) {
          super(e), (this.maxConnectionsForRoom = 0);
        }
      }
      class T extends M {
        async createCommunityRoom(e, t) {
          try {
            this.requiredForParty = t.partySize;
            let n = window.localStorage.getItem(t.metadata.streamId);
            return (
              n
                ? (this.room = await this.link.reconnect(n))
                : (this.room = await this.link.create(e, t)),
              this.room.reconnectionToken &&
                window.localStorage.setItem(
                  t.metadata.streamId,
                  this.room.reconnectionToken
                ),
              this.setupRoomListeners(),
              (this.requiredForParty = t.partySize),
              this.room.id
            );
          } catch (e) {
            if (
              (window.localStorage.removeItem(t.metadata.streamId),
              e.message.includes("COMMUNITY_ID_IN_USE"))
            )
              throw Error(o.Error.COMMUNITY_ID_IN_USE);
            throw e;
          }
        }
        async joinCommunityRoom(e, t) {
          for (let n = 1; n <= 6; n++)
            try {
              return (
                (this.requiredForParty = t.partySize),
                (this.room = await this.link.joinById(e, t)),
                (this.requiredForParty = t.partySize),
                this.setupRoomListeners(),
                !0
              );
            } catch (e) {
              if (e.message.includes("locked"))
                throw Error(o.Error.ROOM_IS_FULL);
              if ("code" in e && 4212 === e.code)
                throw Error(o.Error.ROOM_ID_NOT_FOUND);
              if (n < 6) {
                await _(500 * Math.random() + 400 * n);
                continue;
              }
              throw e;
            }
          return !1;
        }
        constructor(e) {
          super(e), (this.maxConnectionsForRoom = 0);
        }
      }
      var A = f.R.RoomName;
      class C {
        async joinDistrictRoom(e, t, n) {
          try {
            let e = await R(
              t.metadata.districtId,
              void 0,
              void 0,
              void 0,
              !1,
              this.local
            );
            return (
              (t.accessToken = e.token),
              (this.link = new p.KU(e.url)),
              (this.room = new b(this.link)),
              this.room.setCallback(n),
              this.room.joinRoomOrCreate(A.DISTRICTROOM, t)
            );
          } catch (e) {
            throw e;
          }
        }
        isInRoom() {
          return null !== this.room;
        }
        async joinStreamRoom(e, t, n) {
          try {
            let e = await R(
              t.metadata.streamId,
              void 0,
              void 0,
              void 0,
              !1,
              this.local
            );
            return (
              (t.accessToken = e.token),
              (this.link = new p.KU(e.url)),
              (this.room = new M(this.link)),
              this.room.setCallback(n),
              this.room.joinRoomOrCreate(A.STREAMROOM, t)
            );
          } catch (e) {
            throw e;
          }
        }
        async createPrivateRoom(e, t, n, r) {
          let i = await R(
            n.metadata.streamId,
            void 0,
            e,
            void 0,
            !1,
            this.local
          );
          if (
            ((n.accessToken = i.token),
            (n.metadata.participants = e),
            (this.link = new p.KU(i.url)),
            (this.room = new w(this.link)),
            this.room.setCallback(r),
            this.room instanceof w)
          ) {
            let e = await this.room.createPrivateRoom(t, n);
            return { roomId: e, port: i.port };
          }
          throw Error(o.Error.UNABLE_TO_CREATE_ROOM);
        }
        async joinPrivateRoom(e, t, n, r) {
          let i = await R(
            n.metadata.streamId,
            e,
            void 0,
            void 0,
            !0,
            this.local
          );
          return (
            (n.accessToken = i.token),
            (this.link = new p.KU(i.url)),
            (this.room = new w(this.link)),
            this.room.setCallback(r),
            this.room instanceof w && this.room.joinPrivateRoom(t, n)
          );
        }
        async createCommunityRoom(e, t, n, r) {
          let i = await R(n.metadata.streamId, void 0, e, !0, !1, this.local);
          if (
            ((n.accessToken = i.token),
            (this.link = new p.KU(i.url)),
            (this.room = new T(this.link)),
            this.room.setCallback(r),
            this.room instanceof T)
          ) {
            let e = await this.room.createCommunityRoom(t, n);
            return { roomId: e, port: i.port };
          }
          throw Error(o.Error.UNABLE_TO_CREATE_ROOM);
        }
        async joinCommunityRoom(e, t, n, r) {
          let i = await R(
            n.metadata.streamId,
            e,
            void 0,
            void 0,
            !0,
            this.local
          );
          return (
            (n.accessToken = i.token),
            (this.link = new p.KU(i.url)),
            (this.room = new T(this.link)),
            this.room.setCallback(r),
            this.room instanceof T && this.room.joinCommunityRoom(t, n)
          );
        }
        async setUserPosition(e, t) {
          if (!this.room) throw Error(o.Error.NOT_CONNECTED_TO_ROOM);
          if (
            this.lastPositionUpdate &&
            this.lastPositionUpdate + 250 > Date.now()
          )
            return !1;
          if (
            ((this.lastPositionUpdate = Date.now()), !(this.room instanceof b))
          )
            throw Error(o.Error.ROOM_ACTION_NOT_AVAILABLE);
          try {
            return await this.room.setUserPosition(e, t);
          } catch (e) {
            throw e;
          }
        }
        getCurrentUser() {
          return this.room ? this.room.me() : null;
        }
        async updateUserDecryptionLevel(e) {
          if (!this.room) throw Error(o.Error.NOT_CONNECTED_TO_ROOM);
          if (!(this.room instanceof M))
            throw Error(o.Error.ROOM_ACTION_NOT_AVAILABLE);
          try {
            return await this.room.updateDecryptionLevel(e);
          } catch (e) {
            throw e;
          }
        }
        async clientIsIdle(e) {
          try {
            var t;
            return (
              null === (t = this.room) || void 0 === t || t.setUserIdle(e), !0
            );
          } catch (e) {
            throw Error(o.Error.UNABLE_TO_SET_IDLE_STATE);
          }
        }
        async leaveRoom() {
          if (this.room) {
            try {
              await this.room.leave(), (this.link = null), (this.room = null);
            } catch (e) {
              throw Error(o.Error.UNABLE_TO_LEAVE_ROOM);
            }
            return !0;
          }
          return !1;
        }
        async pingUser(e) {
          if (this.room) {
            if (!(this.room instanceof b))
              throw Error(o.Error.ROOM_ACTION_NOT_AVAILABLE);
            try {
              return await this.room.pingUser(e);
            } catch (e) {
              throw Error(o.Error.UNABLE_TO_PING_USER);
            }
          }
          return !1;
        }
        constructor(e = !1) {
          (this.baseUrl = ""),
            (this.lastPositionUpdate = null),
            (this.room = null),
            (this.local = !1),
            (this.local = e);
        }
      }
      let R = async function (e, t, n, r) {
          let i,
            s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
          if (!e) throw Error(o.Error.NO_ROOM_ID_PROVIDED);
          if (a)
            return {
              url: "ws://localhost:2567",
              port: 2567,
              token: "SuperSecretPWord",
            };
          let l = {
            method: "POST",
            body: JSON.stringify(
              s
                ? { port: t, roomId: e }
                : { port: t, roomId: e, participants: n, community: r }
            ),
          };
          a || (l.credentials = "include");
          let u = await fetch(
            "https://api.decrypt.denofwolves.com/v1/get-connection",
            l
          );
          if (200 !== u.status) throw Error(o.Error.UNABLE_TO_GET_CONNECTION);
          try {
            i = await u.json();
          } catch (e) {
            throw Error(o.Error.NO_CONNECTION_RESPONSE);
          }
          if (void 0 === i.port) throw Error(o.Error.NO_PORT_RETURNED);
          let c = (i.port % 4) + 1;
          if (c < 1 || c > 4) throw Error(o.Error.INCORRECT_LOAD_BALANCER);
          return {
            url: "wss://lb"
              .concat(c, ".socketserver.decrypt.denofwolves.com:")
              .concat(i.port),
            port: i.port,
            token: i.token,
          };
        },
        P = () => ({
          isApplicationLocked: !0,
          isPageTransitionInProgress: !1,
          userId: null,
          systemData: null,
          districts: [],
          socketLink: new C(),
          hasMapZoomedIn: !1,
        }),
        O = (0, u.createContext)(null),
        L = O.Provider,
        I = (e) => {
          let t = null != e ? e : (e) => e,
            n = (0, u.useContext)(O);
          if (!n) throw Error("Store is missing the provider");
          return (0, h.oR)(n, t);
        },
        N = function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = Math.random().toString(36).substr(2, 8);
          return (0, d.M)()(
            (0, c.mW)((n, r) => ({
              ...P(),
              ...e,
              userId: t,
              setIsApplicationLocked: (e) => n({ isApplicationLocked: e }),
              setIsPageTransitionInProgress: (e) =>
                n({ isPageTransitionInProgress: e }),
              setDistricts: (e) => n({ districts: e }),
              setUserId: (e) => n({ userId: e }),
              setHasMapZoomedIn: (e) => n({ hasMapZoomedIn: e }),
            }))
          );
        };
    },
    6635: function (e, t, n) {
      "use strict";
      n.d(t, {
        EV: function () {
          return g;
        },
        dl: function () {
          return o;
        },
        h: function () {
          return m;
        },
        zn: function () {
          return l;
        },
      });
      var r,
        i,
        s,
        a,
        o,
        l,
        u = n(3973),
        c = n(3445),
        h = n(2794),
        d = n(782),
        p = n(9477),
        f = n(29);
      ((r = a || (a = {}))[(r.Error = 0)] = "Error"),
        ((i = o || (o = {})).NotSet = "not-set"),
        (i.Hero = "hero"),
        (i.Content = "content"),
        (i.Full = "full"),
        ((s = l || (l = {})).GlitchError = "glitch-error"),
        (s.DecryptedStart = "decrypted-start"),
        (s.DecryptedEnd = "decrypted-end"),
        (s.DecryptedEndComplete = "decrypted-end-complete"),
        (s.ZoomToNode = "zoom-to-node"),
        (s.GotoNode = "goto-node"),
        (s.GotoMapPosition = "goto-map-position"),
        (s.MapZoomCompleted = "map-zoom-completed"),
        (s.ClickedAmbientNode = "clicked-ambient-node"),
        (s.PrepareMapForPuzzleNavigation = "prepare-map-for-puzzle-navigation"),
        (s.LandingIntroGlitch = "landing-intro-glitch");
      let m = (0, u.M)(
        (0, d.XR)((e, t) => ({
          isLoading: !1,
          scene: h.xs.GlitchScene,
          effectPresetName: "default",
          assetUrl: "mask2-baked.glb",
          backgroundColor1: void 0,
          backgroundColor2: void 0,
          totalProgress: 0,
          channel1: 0,
          channel2: 0,
          channel3: 0,
          channel4: 0,
          playerPositions: [],
          myPosition: new p.Pa4(),
          streamNodes: [],
          decryptedStreamNodeIds: [],
          assetWarnings: [],
          isZoomedIn: !1,
          landingGlitchMode: o.Hero,
          landingColorMode: 0,
          activeNode: null,
          myPositionChanged: !1,
          mapInTransitionFrom: "",
          api: {
            set: (t) => e((e) => ({ ...e, ...t })),
            trigger: new f.Z(),
            isNodeDecrypted: (e) => {
              var n;
              return (
                null !== (n = t().decryptedStreamNodeIds.includes(e)) &&
                void 0 !== n &&
                n
              );
            },
            decryptNode: (t) => {
              e((e) =>
                t
                  ? {
                      decryptedStreamNodeIds: [
                        ...new Set([...e.decryptedStreamNodeIds, t]),
                      ],
                    }
                  : e
              );
            },
          },
        }))
      );
      function g(e, t) {
        return (0, c.oR)(m, e, t);
      }
    },
    9374: function (e, t, n) {
      "use strict";
      n.d(t, {
        n: function () {
          return i;
        },
      });
      var r = n(1784);
      function i(e, t) {
        return (0, r.Z)(e, t);
      }
      r.Z.setSettings({ throwOnError: !1, modifierDelimiter: "--" });
    },
    2588: function (e, t, n) {
      "use strict";
      function r(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t,
          r = null,
          i = null;
        function s() {
          for (var n = arguments.length, r = Array(n), s = 0; s < n; s++)
            r[s] = arguments[s];
          (null === i || Date.now() - i >= t) && (e(...r), (i = Date.now()));
        }
        return function () {
          for (var e = arguments.length, i = Array(e), a = 0; a < e; a++)
            i[a] = arguments[a];
          null === r
            ? (s(...i),
              (r = setTimeout(() => {
                r = null;
              }, n)))
            : (clearTimeout(r),
              (r = setTimeout(() => {
                s(...i), (r = null);
              }, t)));
        };
      }
      n.d(t, {
        D: function () {
          return r;
        },
      });
    },
    4217: function (e, t, n) {
      "use strict";
      function r(e, t, n) {
        return t >= e.left && t <= e.right && n >= e.top && n <= e.bottom;
      }
      function i(e, t) {
        return !(
          e.right < t.left ||
          e.left > t.right ||
          e.bottom < t.top ||
          e.top > t.bottom
        );
      }
      n.d(t, {
        WD: function () {
          return i;
        },
        fv: function () {
          return r;
        },
      });
    },
    2152: function (e, t, n) {
      "use strict";
      n.d(t, {
        G5: function () {
          return i;
        },
        bq: function () {
          return r;
        },
        rY: function () {
          return s;
        },
      });
      let r = (e) => {
          let t = window.dataLayer || [];
          t.push(e);
        },
        i = (e, t) => {
          let n = window.dataLayer || [];
          n.push({
            identityCallback: (e) => {
              e.getUser() && console.log(e);
            },
          }),
            n.push({ userIdentities: { email: e } }),
            n.push({
              event: "email_signup",
              email_signup: { event_location: t, form_name: "emailsignup v1" },
            });
        },
        s = (e, t, n) => {
          let r = window.dataLayer || [];
          r.push({ event: "pageview", page_url: t, page_title: e, locale: n });
        };
    },
    3615: function (e, t, n) {
      "use strict";
      n.d(t, {
        B: function () {
          return s;
        },
        UI: function () {
          return i;
        },
        XF: function () {
          return r;
        },
        uZ: function () {
          return a;
        },
      });
      let r = (e, t) => Math.floor(Math.random() * (t - e + 1)) + e,
        i = (e, t, n, r, i) => ((e - t) * (i - r)) / (n - t) + r,
        s = function (e, t, n) {
          let r =
            arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
          return r ? e >= t && e <= n : e > t && e < n;
        },
        a = (e, t, n) => (e <= t ? t : e >= n ? n : e);
    },
    8909: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      let r = () => {};
    },
    1737: function (e, t, n) {
      "use strict";
      n.d(t, {
        K: function () {
          return i;
        },
      });
      var r = n(6461);
      function i() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        return (0, r.le)(e)
          ? ""
          : e
              .map((e) =>
                "block" === e._type && e.children
                  ? e.children.map((e) => e.text).join("")
                  : ""
              )
              .join("\n");
      }
    },
    2893: function (e, t, n) {
      "use strict";
      var r, i, s;
      n.d(t, {
        t: function () {
          return r;
        },
      }),
        ((s = (i = r || (r = {})).MessageType || (i.MessageType = {}))[
          (s.PING = 0)
        ] = "PING"),
        (s[(s.PING_USER = 1)] = "PING_USER"),
        (s[(s.PONG = 2)] = "PONG"),
        (s[(s.UPDATE_POSITION = 3)] = "UPDATE_POSITION"),
        (s[(s.UPDATE_DECRYPTION_LEVEL = 4)] = "UPDATE_DECRYPTION_LEVEL"),
        (s[(s.UPDATE_IDLE = 5)] = "UPDATE_IDLE"),
        (s[(s.UPDATE_STATE = 6)] = "UPDATE_STATE"),
        (s[(s.CREATING_PARTY = 7)] = "CREATING_PARTY"),
        (s[(s.UPDATE_PARTY = 8)] = "UPDATE_PARTY"),
        (s[(s.CONNECTION_LOST = 9)] = "CONNECTION_LOST");
    },
    6461: function (e, t, n) {
      "use strict";
      n.d(t, {
        HD: function () {
          return l;
        },
        UE: function () {
          return p;
        },
        hj: function () {
          return o;
        },
        kJ: function () {
          return c;
        },
        le: function () {
          return s;
        },
        mf: function () {
          return a;
        },
        xb: function () {
          return d;
        },
      });
      let r = (e) => null === e,
        i = (e) => void 0 === e,
        s = (e) => r(e) || i(e),
        a = (e) => "function" == typeof e,
        o = (e) => "number" == typeof e,
        l = (e) => "string" == typeof e,
        u = (e) => "object" == typeof e && null !== e && !Array.isArray(e),
        c = (e) => Array.isArray(e),
        h = (e) => e instanceof Map,
        d = (e) =>
          !!s(e) ||
          (l(e) || c(e)
            ? 0 === e.length
            : h(e)
            ? 0 === e.size
            : !!u(e) && 0 === Object.keys(e).length),
        p = (e) => !d(e);
    },
    7172: function (e, t, n) {
      "use strict";
      var r = n(9477);
      let i = {
        landingpage: {
          animateCamera: !1,
          supported: "jpg,png,mp4",
          cameraZ: 4,
          post: {
            verticalPixelSmudgeStepUp: 53.14,
            verticalPixelSmudgeStepDown: 75,
            verticalPixelSmudgeAmount: 16.95,
            horisontalPixelSmudgeAmount: 0,
            asciiAmount: 0,
            asciiUvSize: 16,
            posterizeColors: 48,
            posterizeGamma: 0.86,
          },
          plane: {
            display: !0,
            planeThreshold: 0.01,
            defaultColor: "#000000",
            blockNoiseTimescale: 0,
            blockNoiseAmount: 0,
            shuffleGridSize: { x: 53, y: 3 },
            shuffleAmount: 0,
            quadExtraNoise: 0,
          },
        },
        default: {
          supported: "jpg,png,mp4,glb,dow",
          backgroundColor1: "#7940b2",
          backgroundColor2: "#9552d8",
          cameraZ: 3,
          post: {
            channel1:
              "verticalPixelSmudgeAmount:12>6>1,verticalPixelSmudgeStepUp:40>40,verticalPixelSmudgeStepDown:20>20",
            channel2: "asciiAmount:1.0>0.75>0.5,asciiUvSize:32>24>16",
            channel3: "posterizeColors:24>48>48",
            channel4: " invertAmount:0>0",
          },
          "background-quads": {
            display: !1,
            channel1: "displaceAmount:0.1>0.1,reduce:0>0>1",
          },
          ascii: {
            display: !1,
            asciiThreshold: 0.05,
            asciiThresholdInverse: !1,
            asciiUseColor: !0,
            asciiDisplaceAmount: 0,
            asciiBlending: r.N4l,
            asciiMeshOffsetZ: 0,
            asciiGlyphOffset: { x: 0, y: 0 },
            asciiExtraNoise: 0.2,
          },
          "point-cloud": {
            display: !0,
            useEdges: !1,
            channel1:
              "randomOffset:10>1.85>0.5,surfaceRelease:0>0.13>0>0.1,snapAmount:0.9>0.9>0.9,snapDensity:2>12>35",
            channel2: "reduceParticles:0>0>0.05>0.63",
            channel3:
              "progressCurveIn:0>0.11>0.01,progressCurveOut:0>0.09>0.02,inOutDistance:0>0.22>0.1",
            channel4:
              "extraSizeThreshold:0.005>0.005>0.005,baseSizeFactor:0.01>0.01>0.01",
          },
          "surface-quads": {
            display: !0,
            wireframeColor: "#999999",
            channel1:
              "snapAmount:1>1>1, wireframeOpacity:-0.1>0.86>1, originalMeshReveal:-0.1>0.18>0.47",
            channel2: "snapDistance:22.19>26.43>26.43",
            channel3:
              "reduceBack:-0.1>0.39>0.74,reduceFront:0>0>0,displaceAmount:-0.1>1>1",
            channel4: "revealFactor:1>1>1",
          },
          "surface-ascii": {
            display: !0,
            channel1: "snapAmount:1.0>1.0>1.0",
            channel2: "snapDistance:14.56>14.56>14.56",
            channel3: "displaceAmount:0.6>0>0",
            channel4: "revealFactor:1>1>1, reduce:0>1>1",
          },
        },
        "default-decrypted": {
          supported: "jpg,png,mp4,glb,dow",
          backgroundColor1: "#7940b2",
          backgroundColor2: "#9552d8",
          cameraZ: 3,
          post: {
            posterizeColors: 255,
            posterizeGamma: 1,
            verticalPixelSmudgeStepUp: 40,
            verticalPixelSmudgeStepDown: 20,
            verticalPixelSmudgeAmount: 0.1,
            horisontalPixelSmudgeAmount: 0,
            asciiAmount: 0.5,
            asciiUvSize: 16,
          },
          "background-quads": { display: !1, displaceAmount: 0 },
          "point-cloud": {
            display: !0,
            randomOffset: 0.1,
            sphereRevealInner: 0,
            sphereRevealOuter: 1,
            surfaceRelease: 0.05,
            snapAmount: 0.88,
            snapDensity: 35,
            reduceParticles: 0,
            progressCurveIn: 0,
            progressCurveOut: 0.03,
            inOutDistance: 0.03,
            extraSizeThreshold: 0.005,
            baseSizeFactor: 0,
          },
          "surface-quads": {
            display: !0,
            wireframeColor: "#999999",
            originalMeshReveal: 1,
            revealFactor: 1,
            reduceFront: 0.98,
            reduceBack: 0.85,
            wireframeOpacity: 1,
            snapAmount: 1,
            snapDistance: 18,
          },
          "surface-ascii": {
            display: !1,
            revealFactor: 1,
            displaceAmount: 1.41,
          },
        },
        "default-image": {
          animateCamera: !1,
          supported: "jpg,png,mp4,dow",
          backgroundColor1: "#0e0e0e",
          backgroundColor2: "#0e0e0e",
          cameraZ: 4,
          post: {
            posterizeColors: 16,
            posterizeGamma: 1,
            verticalPixelSmudgeStepUp: 40,
            verticalPixelSmudgeStepDown: 20,
            verticalPixelSmudgeAmount: 12,
            horisontalPixelSmudgeAmount: 0,
            asciiAmount: 0,
            asciiUvSize: 24,
            channel1:
              "posterizeColors:16>24>48,posterizeGamma:1>1>0.86,asciiAmount:1>0.75>0.66,verticalPixelSmudgeAmount:12>3>0.3",
            channel2: "asciiUvSize:24>16>16",
          },
          "background-quads": {
            display: !0,
            particleScale: { x: -2.8, y: -0.3, z: -6.8 },
            channel1: "displaceAmount:3.5>0.1>0.1, reduce:1>0.5>0",
          },
          plane: {
            display: !0,
            currentPlaneMeshName: "rectplane.gltf",
            lookAtCamera: !1,
            blockNoiseTimescale: 0.59,
            blockNoiseAmount: 0,
            quadExtraNoise: 0,
            shuffleGridSize: { x: 16, y: 4 },
            shuffleAmount: 0.65,
            quadRandomColor: 0,
            channel1:
              "shuffleAmount:0.65>0.25>0,blockNoiseTimescale:0.59>0.85>0.85,blockNoiseAmount:1>0.4>0.29",
            channel2:
              "quadOffset.x:0.1>0.02>0.01,quadOffset.y:0>0>0,quadOffset.z:0.1>0.02>0.01",
            channel3: "planeThreshold:0.005>0.005>0.005,quadExtraNoise:0>0>0",
            channel4: "shuffleGridSize.x:16>12>64,shuffleGridSize.y:4>3>3",
          },
          "point-cloud": {
            display: !0,
            useEdges: !0,
            channel1:
              "snapAmount:1>1>1,snapDensity:6.38>20>27,textureDisplace:0.2>0.2>0",
            channel2:
              "randomOffset:4.35>2.72>3.26,progressCurveIn:0.22>0.1>0.07,progressCurveOut:0.10>0.10>0.08,surfaceRelease:0.2>0.2>0.1",
            channel3:
              "toFloorAmount:0>0>0,extraSizeThreshold:0.005>0.005>0.005,baseSizeFactor:0.01>0.01>0.01",
            channel4:
              "inOutDistance:0.27>0.2>0,reduceParticles:0>0.7>0, sphereRevealOuter:1>1>1",
          },
          "surface-quads": {
            display: !0,
            wireframeColor: "#ffffff",
            wireframeOpacity: 0,
            useVertexColors: 0,
            channel1:
              "snapAmount:1>1>1,snapDistance:18>18>18,displaceAmount:0>0>0",
            channel2: "originalMeshReveal:0>0>0,revealFactor:1>1>1",
            channel3: "reduceFront:0.23>0.41>0.79,reduceBack:0.15>0.29>0.6",
            channel4: "",
          },
          "surface-ascii": {
            display: !0,
            channel1: "snapAmount:1.0>1.0>1.0",
            channel2: "snapDistance:18>18>18",
            channel3: "displaceAmount:0.1>0>0",
            channel4: "reduce:0>1>1",
          },
        },
        "default-image-decrypted": {
          animateCamera: !1,
          supported: "jpg,png,mp4",
          backgroundColor1: "#0e0e0e",
          backgroundColor2: "#0e0e0e",
          cameraZ: 4,
          "background-quads": {
            display: !0,
            snapAmount: 1,
            snapDistance: 18,
            displaceAmount: 0.1,
            reduce: 0,
          },
          plane: {
            display: !0,
            currentPlaneMeshName: "rectplane.gltf",
            lookAtCamera: !1,
            blockNoiseTimescale: 0.1,
            blockNoiseAmount: 0.25,
            shuffleGridSize: { x: 64, y: 3 },
            shuffleAmount: 0,
            quadExtraNoise: 0,
            planeThreshold: 0.001,
            quadOffset: { x: 0, y: 0, z: 0 },
            quadRandomColor: 0,
          },
          "point-cloud": {
            display: !0,
            randomOffset: 2.28,
            reduceParticles: 0.73,
            progressCurveOut: 0.02,
            progressCurveIn: 0.02,
            surfaceRelease: 0.05,
            snapAmount: 1,
            snapDensity: 17.14,
            inOutDistance: 0,
            textureDisplace: 0,
            extraSizeThreshold: 0.01,
            baseSize: 0,
          },
          "surface-quads": {
            display: !0,
            wireframeColor: "#ffffff",
            wireframeOpacity: 0,
            useVertexColors: 0,
            snapAmount: 1,
            snapDistance: 18,
            displaceAmount: 0,
            originalMeshReveal: 0,
            revealFactor: 1,
            reduceFront: 0.95,
            reduceBack: 0.79,
          },
        },
      };
      t.Z = i;
    },
    29: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      class r {
        addEarly(e) {
          return (
            void 0 === this.earlyDelegates.find((t) => t === e) &&
              this.earlyDelegates.push(e),
            this
          );
        }
        add(e) {
          return (
            void 0 === this.delegates.find((t) => t === e) &&
              this.delegates.push(e),
            this
          );
        }
        addOnce(e) {
          return (
            void 0 === this.once.find((t) => t === e) && this.once.push(e), this
          );
        }
        remove(e) {
          let t = this.earlyDelegates.findIndex((t) => t === e);
          -1 !== t && this.earlyDelegates.splice(t, 1),
            -1 !== (t = this.delegates.findIndex((t) => t === e)) &&
              this.delegates.splice(t, 1),
            -1 !== (t = this.once.findIndex((t) => t === e)) &&
              this.once.splice(t, 1);
        }
        removeAll() {
          (this.earlyDelegates.length = 0),
            (this.delegates.length = 0),
            (this.once.length = 0);
        }
        invoke(e) {
          this.earlyDelegates.forEach((t) => {
            t(e);
          }),
            this.delegates.forEach((t) => {
              t(e);
            }),
            this.once.length > 0 &&
              (this.once.forEach((t) => {
                t(e);
              }),
              (this.once.length = 0));
        }
        constructor() {
          (this.earlyDelegates = []), (this.delegates = []), (this.once = []);
        }
      }
    },
    1322: function (e, t, n) {
      "use strict";
      var r = n(29),
        i = n(9477);
      let s = new (class {
        init() {
          var e;
          void 0 === this.el &&
            ((this.el = document.createElement("canvas")),
            (this.el.style.position = "absolute"),
            (this.el.style.top = "0px"),
            (this.el.style.left = "0px"),
            (this.el.style.width = "100%"),
            (this.el.style.height = "100%"),
            (this.el.style.zIndex = "0"),
            (this.renderer = new i.CP7({
              canvas: this.el,
              antialias: !1,
              alpha: !0,
              stencil: !0,
              preserveDrawingBuffer: !1,
              powerPreference: "high-performance",
            })),
            (this.renderer.autoClear = !1),
            (this.renderer.autoClearStencil = !1),
            (this.renderer.outputColorSpace = i.GUF),
            (this.renderer.info.autoReset = !1),
            this.renderer.setClearColor(0),
            this.renderer.setClearAlpha(1),
            (this.renderer.toneMapping = i.uL9),
            (this.renderer.shadowMap.enabled = !1),
            (this.renderer.shadowMap.type = i.ntZ),
            this.renderer.setPixelRatio(window.devicePixelRatio),
            null === (e = this.el) ||
              void 0 === e ||
              e.addEventListener(
                "webglcontextlost",
                (e) => {
                  e.preventDefault(), this.onContextLost.invoke();
                },
                !1
              ));
        }
        get usePostEffects() {
          return this._usePostEffects;
        }
        set usePostEffects(e) {
          (this._usePostEffects = e),
            (this.renderer.outputColorSpace = this._usePostEffects
              ? i.GUF
              : i.KI_),
            this.onPostEffectsChange.invoke();
        }
        getRenderer() {
          return this.renderer;
        }
        constructor() {
          (this._usePostEffects = !0),
            (this.allowBloomOnTokens = !1),
            (this.onContextLost = new r.Z()),
            (this.onPostEffectsChange = new r.Z());
        }
      })();
      t.Z = s;
    },
    7701: function (e, t, n) {
      "use strict";
      n.d(t, {
        M: function () {
          return r;
        },
      });
      let r = "den-of-wolves";
    },
    2285: function (e, t, n) {
      "use strict";
      var r, i, s, a, o, l;
      n.d(t, {
        Ie: function () {
          return r;
        },
        Ou: function () {
          return i;
        },
        jl: function () {
          return s;
        },
      }),
        ((a = r || (r = {})).OFFLINE = "OFFLINE"),
        (a.ONLINE = "ONLINE"),
        (a.LOCKED = "LOCKED"),
        ((o = i || (i = {})).AUTO_ACCESS = "none"),
        (o.PATTERN_UNLOCK = "pattern-unlock"),
        (o.MATCH_BEAT = "match-beat"),
        (o.WHACK_A_MOLE = "whack-a-mole"),
        (o.COMMUNITY_UNLOCK = "community"),
        ((l = s || (s = {})).DEFAULT = "default"),
        (l.EMAIL_SIGNUP = "email-signup"),
        (l.POPUP = "popup");
    },
    5522: function (e, t, n) {
      "use strict";
      var r, i, s;
      n.d(t, {
        R: function () {
          return r;
        },
      }),
        ((s = (i = r || (r = {})).RoomName || (i.RoomName = {})).DISTRICTROOM =
          "district_room"),
        (s.STREAMROOM = "stream_room"),
        (s.COMMUNITYROOM = "community_room"),
        (s.PRIVATEROOM = "private_room");
    },
    620: function () {},
    2851: function () {},
    2149: function () {},
    1166: function (e) {
      e.exports = {
        asciiLine: "ASCII_asciiLine___pEW_",
        asciiImage: "ASCII_asciiImage__IAM8G",
      };
    },
    7937: function (e) {
      e.exports = {
        aspectRatio: "AspectRatio_aspectRatio__hylqe",
        aspectRatio__content: "AspectRatio_aspectRatio__content__rd_i9",
      };
    },
    7195: function (e) {
      e.exports = { breadcrumbs__item: "Breadcrumbs_breadcrumbs__item__1wUpH" };
    },
    2995: function (e) {
      e.exports = {
        button: "Button_button__ZIi1r",
        button__label: "Button_button__label__tqM_T",
        button__leftIcon: "Button_button__leftIcon__ugD00",
        button__rightIcon: "Button_button__rightIcon__gg6qF",
      };
    },
    8761: function (e) {
      e.exports = {
        Console: "Console_Console___vXv4",
        Console__input: "Console_Console__input__a1fQk",
        invisibleInput: "Console_invisibleInput__nlAv3",
      };
    },
    4698: function (e) {
      e.exports = {
        container: "DashboardPageTransition_container__1fYvQ",
        content: "DashboardPageTransition_content__AhcK5",
        header: "DashboardPageTransition_header__qD6bw",
        progressBar: "DashboardPageTransition_progressBar__P13HQ",
      };
    },
    1426: function (e) {
      e.exports = {
        dashboardPanel__content:
          "DashboardPanel_dashboardPanel__content__ZpclH",
        dashboardPanel: "DashboardPanel_dashboardPanel__VSHyT",
        dashboardPanel__titleBar:
          "DashboardPanel_dashboardPanel__titleBar__As5rb",
        dashboardPanel__titlebox:
          "DashboardPanel_dashboardPanel__titlebox__phRNh",
        dashboardPanel__toggleSizeBtn:
          "DashboardPanel_dashboardPanel__toggleSizeBtn__NxIi8",
        dashboardPanelContent: "DashboardPanel_dashboardPanelContent__gz81X",
        previewPanelProgressBar:
          "DashboardPanel_previewPanelProgressBar__lxb79",
        dashboardPanelContentLine:
          "DashboardPanel_dashboardPanelContentLine__v3jqC",
        dashboardPanelContentLabel:
          "DashboardPanel_dashboardPanelContentLabel__tnrV9",
        dashboardPanelPreview: "DashboardPanel_dashboardPanelPreview__prr_u",
        statusContainer: "DashboardPanel_statusContainer__0ul2g",
        statusContainer__title: "DashboardPanel_statusContainer__title__bVUiw",
        statusContainer__progressBar:
          "DashboardPanel_statusContainer__progressBar__EN5H4",
      };
    },
    5274: function (e) {
      e.exports = {
        dashboard: "Dashboard_dashboard__a4prP",
        dashboard__titleBar: "Dashboard_dashboard__titleBar__IBf0N",
        dashboard__breadcrumbs: "Dashboard_dashboard__breadcrumbs__hnrs5",
        dashboard__titleBarIconContainer:
          "Dashboard_dashboard__titleBarIconContainer__RAcmQ",
        dashboard__titleBarIconContainerRight:
          "Dashboard_dashboard__titleBarIconContainerRight__XHW3n",
        dashboard__titleBarIconInner:
          "Dashboard_dashboard__titleBarIconInner__n22Gy",
        dashboard__titleBarIconClickArea:
          "Dashboard_dashboard__titleBarIconClickArea__ohQVX",
        dashboard__titleBarIcon: "Dashboard_dashboard__titleBarIcon__NeFrZ",
        dashboard__titleContainer: "Dashboard_dashboard__titleContainer__pr093",
        dashboard__title: "Dashboard_dashboard__title__dDIzY",
        dashboard__dashboardCloseIconClickArea:
          "Dashboard_dashboard__dashboardCloseIconClickArea__nJAMC",
        dashboard__dashboardCloseIcon:
          "Dashboard_dashboard__dashboardCloseIcon__8B_sl",
        dashboard__breadcrumb: "Dashboard_dashboard__breadcrumb__Vfm1t",
        dashboard__breadcrumbLabel:
          "Dashboard_dashboard__breadcrumbLabel__kVuYb",
        dashboard__breadcrumbCloseIcon:
          "Dashboard_dashboard__breadcrumbCloseIcon__sbFYb",
        dashboard__main: "Dashboard_dashboard__main__hydcs",
        dashboard__dataPanelPreviewContent:
          "Dashboard_dashboard__dataPanelPreviewContent__Dpkm_",
        dashboard__desktopSidebar: "Dashboard_dashboard__desktopSidebar__EzSFk",
        dashboard__desktopConsole: "Dashboard_dashboard__desktopConsole__26BbO",
        dashboard__mobileConsolePanel:
          "Dashboard_dashboard__mobileConsolePanel__plGKn",
        dashboard__body: "Dashboard_dashboard__body__NNcFc",
        dashboard__content: "Dashboard_dashboard__content__IpJ5O",
        slideDown: "Dashboard_slideDown__WHiJ9",
        slideUp: "Dashboard_slideUp__oCoQj",
      };
    },
    4775: function (e) {
      e.exports = { error: "Error_error__Zq5GV", ascii: "Error_ascii__eQI3v" };
    },
    1218: function (e) {
      e.exports = {
        threeContainer: "Experience_threeContainer__B234N",
        hiddenVideo: "Experience_hiddenVideo__eXcWl",
        ui: "Experience_ui__LOC9h",
        ui__link: "Experience_ui__link__L1UuR",
        ui__assets: "Experience_ui__assets__WPYIe",
        ui__ctaContainer: "Experience_ui__ctaContainer__bgn3H",
        ui__ctaContainerTop: "Experience_ui__ctaContainerTop__PgloG",
        ui__cta: "Experience_ui__cta__3hr9Z",
        ui__row: "Experience_ui__row__vBWT5",
        ui__warnings: "Experience_ui__warnings__smJaB",
        ui__sliderRow: "Experience_ui__sliderRow__03fq_",
        ui__sliderContainer: "Experience_ui__sliderContainer__uN3kg",
        ui__globalSliderContainer:
          "Experience_ui__globalSliderContainer__Qss6p",
      };
    },
    3622: function (e) {
      e.exports = {
        window: "LegalWindow_window___BMoQ",
        content: "LegalWindow_content__KSY1B",
        body: "LegalWindow_body__nuMnM",
        cta: "LegalWindow_cta__9rSv5",
      };
    },
    4950: function (e) {
      e.exports = {
        progressBar: "ProgressBar_progressBar__0CWRe",
        progressBar__bracket: "ProgressBar_progressBar__bracket__gnao9",
        progressBar__barContainer:
          "ProgressBar_progressBar__barContainer__0z2Pa",
        progressBar__barBg: "ProgressBar_progressBar__barBg__o51AE",
        progressBar__barSection: "ProgressBar_progressBar__barSection__nzTzp",
        progressBar__one: "ProgressBar_progressBar__one__vlLB7",
        progressBar__two: "ProgressBar_progressBar__two__5jtFd",
        progressBar__three: "ProgressBar_progressBar__three__PPn00",
      };
    },
    3132: function (e) {
      e.exports = {
        puzzleContainer: "PuzzleContainer_puzzleContainer__MOlkQ",
        puzzleContainer__background:
          "PuzzleContainer_puzzleContainer__background__ODwzI",
        puzzleContainer__titleBar:
          "PuzzleContainer_puzzleContainer__titleBar__SQ9v1",
        puzzleContainer__sketch:
          "PuzzleContainer_puzzleContainer__sketch__R2Nea",
      };
    },
    4377: function (e) {
      e.exports = {
        container: "pattern-unlock_container__7gOjy",
        grid: "pattern-unlock_grid__GYQIy",
        grid__tile: "pattern-unlock_grid__tile__fTlTZ",
        grid__line: "pattern-unlock_grid__line__t90HL",
        "animate-line": "pattern-unlock_animate-line__KeT0i",
      };
    },
    4952: function (e) {
      e.exports = {
        rotatePhoneScreen: "RotatePhoneScreen_rotatePhoneScreen__pgESt",
        textContainer: "RotatePhoneScreen_textContainer___bFOw",
        iconContainer: "RotatePhoneScreen_iconContainer__XZp3g",
        icon: "RotatePhoneScreen_icon__hxBZf",
      };
    },
    2443: function (e) {
      e.exports = {
        wrapper: "Select_wrapper__mZyNG",
        select: "Select_select__ujcR9",
        arrow: "Select_arrow__oCf9k",
      };
    },
    8045: function (e) {
      e.exports = {
        settingsWindow: "SettingsWindow_settingsWindow__RKsfC",
        settingsWindow__imageContainer:
          "SettingsWindow_settingsWindow__imageContainer__SzCHs",
        settingsWindow__settingsImage:
          "SettingsWindow_settingsWindow__settingsImage__7wzu_",
        settingsWindow__versionCopy:
          "SettingsWindow_settingsWindow__versionCopy__a3yIE",
        settingsWindow__lamguageCopy:
          "SettingsWindow_settingsWindow__lamguageCopy__Lr_fC",
        settingsWindow__info: "SettingsWindow_settingsWindow__info__e_3WZ",
        settingsWindow__infoCollapsed:
          "SettingsWindow_settingsWindow__infoCollapsed__xodAN",
        settingsWindow__other: "SettingsWindow_settingsWindow__other__V2HrF",
        show: "SettingsWindow_show__A1nkT",
        hide: "SettingsWindow_hide__Ig8Ti",
      };
    },
    1744: function (e) {
      e.exports = { spacer: "Spacer_spacer___yEuF" };
    },
    9954: function (e) {
      e.exports = {
        unlockScreen: "UnlockScreen_unlockScreen__PetzS",
        unlockScreen__content: "UnlockScreen_unlockScreen__content__z25XM",
        unlockScreen__puzzleContainer:
          "UnlockScreen_unlockScreen__puzzleContainer__CwBES",
        unlockScreen__successWindow:
          "UnlockScreen_unlockScreen__successWindow__pjAtu",
        unlockScreen__successCopy:
          "UnlockScreen_unlockScreen__successCopy__qIFh2",
        dots: "UnlockScreen_dots__TgHDz",
        unlockScreen__line: "UnlockScreen_unlockScreen__line__NU3wo",
        unlockScreen__progressBar:
          "UnlockScreen_unlockScreen__progressBar__gKu_h",
        unlockScreen__ascii: "UnlockScreen_unlockScreen__ascii__xeo7H",
        unlockScreen__mapInitLine:
          "UnlockScreen_unlockScreen__mapInitLine__Hradm",
        unlockScreen__locked: "UnlockScreen_unlockScreen__locked__55mv5",
      };
    },
    617: function (e) {
      e.exports = {
        window: "Window_window__z7w9d",
        window__tileBackground: "Window_window__tileBackground__kpPW9",
        window__topLayer: "Window_window__topLayer__9EHGC",
        window__topbar: "Window_window__topbar__gAXP_",
        window__titlebox: "Window_window__titlebox__uta5Y",
        window__closeIconClickArea: "Window_window__closeIconClickArea__HrNV5",
        window__closeIcon: "Window_window__closeIcon__xiuO8",
        window__inner: "Window_window__inner__OlepD",
      };
    },
    7729: function (e, t, n) {
      e.exports = n(7412);
    },
    6577: function (e, t, n) {
      e.exports = n(1963);
    },
    9097: function (e, t, n) {
      e.exports = n(3814);
    },
    5632: function (e, t, n) {
      e.exports = n(222);
    },
    4406: function (e) {
      var t,
        n,
        r,
        i = (e.exports = {});
      function s() {
        throw Error("setTimeout has not been defined");
      }
      function a() {
        throw Error("clearTimeout has not been defined");
      }
      function o(e) {
        if (t === setTimeout) return setTimeout(e, 0);
        if ((t === s || !t) && setTimeout)
          return (t = setTimeout), setTimeout(e, 0);
        try {
          return t(e, 0);
        } catch (n) {
          try {
            return t.call(null, e, 0);
          } catch (n) {
            return t.call(this, e, 0);
          }
        }
      }
      !(function () {
        try {
          t = "function" == typeof setTimeout ? setTimeout : s;
        } catch (e) {
          t = s;
        }
        try {
          n = "function" == typeof clearTimeout ? clearTimeout : a;
        } catch (e) {
          n = a;
        }
      })();
      var l = [],
        u = !1,
        c = -1;
      function h() {
        u &&
          r &&
          ((u = !1), r.length ? (l = r.concat(l)) : (c = -1), l.length && d());
      }
      function d() {
        if (!u) {
          var e = o(h);
          u = !0;
          for (var t = l.length; t; ) {
            for (r = l, l = []; ++c < t; ) r && r[c].run();
            (c = -1), (t = l.length);
          }
          (r = null),
            (u = !1),
            (function (e) {
              if (n === clearTimeout) return clearTimeout(e);
              if ((n === a || !n) && clearTimeout)
                return (n = clearTimeout), clearTimeout(e);
              try {
                n(e);
              } catch (t) {
                try {
                  return n.call(null, e);
                } catch (t) {
                  return n.call(this, e);
                }
              }
            })(e);
        }
      }
      function p(e, t) {
        (this.fun = e), (this.array = t);
      }
      function f() {}
      (i.nextTick = function (e) {
        var t = Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
        l.push(new p(e, t)), 1 !== l.length || u || o(d);
      }),
        (p.prototype.run = function () {
          this.fun.apply(null, this.array);
        }),
        (i.title = "browser"),
        (i.browser = !0),
        (i.env = {}),
        (i.argv = []),
        (i.version = ""),
        (i.versions = {}),
        (i.on = f),
        (i.addListener = f),
        (i.once = f),
        (i.off = f),
        (i.removeListener = f),
        (i.removeAllListeners = f),
        (i.emit = f),
        (i.prependListener = f),
        (i.prependOnceListener = f),
        (i.listeners = function (e) {
          return [];
        }),
        (i.binding = function (e) {
          throw Error("process.binding is not supported");
        }),
        (i.cwd = function () {
          return "/";
        }),
        (i.chdir = function (e) {
          throw Error("process.chdir is not supported");
        }),
        (i.umask = function () {
          return 0;
        });
    },
    8038: function (e, t, n) {
      "use strict";
      var r,
        i = (r = n(6361)) && r.__esModule ? r : { default: r };
      e.exports = {
        tags: function (e) {
          var t = e.id,
            n = e.events,
            r = e.dataLayer,
            s = e.dataLayerName,
            a = e.preview,
            o = "&gtm_auth=" + e.auth,
            l = "&gtm_preview=" + a;
          t || (0, i.default)("GTM Id is required");
          var u =
            "\n      (function(w,d,s,l,i){w[l]=w[l]||[];\n        w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js', " +
            JSON.stringify(n).slice(1, -1) +
            "});\n        var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';\n        j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl+'" +
            o +
            l +
            "&gtm_cookies_win=x';\n        f.parentNode.insertBefore(j,f);\n      })(window,document,'script','" +
            s +
            "','" +
            t +
            "');";
          return {
            iframe:
              '\n      <iframe src="https://www.googletagmanager.com/ns.html?id=' +
              t +
              o +
              l +
              '&gtm_cookies_win=x"\n        height="0" width="0" style="display:none;visibility:hidden" id="tag-manager"></iframe>',
            script: u,
            dataLayerVar: this.dataLayer(r, s),
          };
        },
        dataLayer: function (e, t) {
          return (
            "\n      window." +
            t +
            " = window." +
            t +
            " || [];\n      window." +
            t +
            ".push(" +
            JSON.stringify(e) +
            ")"
          );
        },
      };
    },
    6583: function (e, t, n) {
      "use strict";
      var r,
        i = (r = n(8038)) && r.__esModule ? r : { default: r };
      e.exports = {
        dataScript: function (e) {
          var t = document.createElement("script");
          return (t.innerHTML = e), t;
        },
        gtm: function (e) {
          var t = i.default.tags(e);
          return {
            noScript: function () {
              var e = document.createElement("noscript");
              return (e.innerHTML = t.iframe), e;
            },
            script: function () {
              var e = document.createElement("script");
              return (e.innerHTML = t.script), e;
            },
            dataScript: this.dataScript(t.dataLayerVar),
          };
        },
        initialize: function (e) {
          var t = e.gtmId,
            n = e.events,
            r = e.dataLayer,
            i = e.dataLayerName,
            s = e.auth,
            a = e.preview,
            o = this.gtm({
              id: t,
              events: void 0 === n ? {} : n,
              dataLayer: r || void 0,
              dataLayerName: void 0 === i ? "dataLayer" : i,
              auth: void 0 === s ? "" : s,
              preview: void 0 === a ? "" : a,
            });
          r && document.head.appendChild(o.dataScript),
            document.head.insertBefore(o.script(), document.head.childNodes[0]),
            document.body.insertBefore(
              o.noScript(),
              document.body.childNodes[0]
            );
        },
        dataLayer: function (e) {
          var t = e.dataLayer,
            n = e.dataLayerName,
            r = void 0 === n ? "dataLayer" : n;
          if (window[r]) return window[r].push(t);
          var s = i.default.dataLayer(t, r),
            a = this.dataScript(s);
          document.head.insertBefore(a, document.head.childNodes[0]);
        },
      };
    },
    2462: function (e, t, n) {
      "use strict";
      var r,
        i = (r = n(6583)) && r.__esModule ? r : { default: r };
      e.exports = i.default;
    },
    6361: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = function (e) {
          console.warn("[react-gtm]", e);
        });
    },
    4109: function (e, t, n) {
      "use strict";
      n.d(t, {
        oHP: function () {
          return u;
        },
      });
      var r = n(2784),
        i = {
          color: void 0,
          size: void 0,
          className: void 0,
          style: void 0,
          attr: void 0,
        },
        s = r.createContext && r.createContext(i),
        a = function () {
          return (a =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var i in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
              return e;
            }).apply(this, arguments);
        },
        o = function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              0 > t.indexOf(r) &&
              (n[r] = e[r]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, r = Object.getOwnPropertySymbols(e);
              i < r.length;
              i++
            )
              0 > t.indexOf(r[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          return n;
        };
      function l(e) {
        var t = function (t) {
          var n,
            i = e.attr,
            s = e.size,
            l = e.title,
            u = o(e, ["attr", "size", "title"]),
            c = s || t.size || "1em";
          return (
            t.className && (n = t.className),
            e.className && (n = (n ? n + " " : "") + e.className),
            r.createElement(
              "svg",
              a(
                {
                  stroke: "currentColor",
                  fill: "currentColor",
                  strokeWidth: "0",
                },
                t.attr,
                i,
                u,
                {
                  className: n,
                  style: a(a({ color: e.color || t.color }, t.style), e.style),
                  height: c,
                  width: c,
                  xmlns: "http://www.w3.org/2000/svg",
                }
              ),
              l && r.createElement("title", null, l),
              e.children
            )
          );
        };
        return void 0 !== s
          ? r.createElement(s.Consumer, null, function (e) {
              return t(e);
            })
          : t(i);
      }
      function u(e) {
        var t;
        return ((t = {
          tag: "svg",
          attr: {
            viewBox: "0 0 1024 1024",
            fill: "currentColor",
            fillRule: "evenodd",
          },
          child: [
            {
              tag: "path",
              attr: {
                d: "M799.855 166.312c.023.007.043.018.084.059l57.69 57.69c.041.041.052.06.059.084a.118.118 0 0 1 0 .069c-.007.023-.018.042-.059.083L569.926 512l287.703 287.703c.041.04.052.06.059.083a.118.118 0 0 1 0 .07c-.007.022-.018.042-.059.083l-57.69 57.69c-.041.041-.06.052-.084.059a.118.118 0 0 1-.069 0c-.023-.007-.042-.018-.083-.059L512 569.926 224.297 857.629c-.04.041-.06.052-.083.059a.118.118 0 0 1-.07 0c-.022-.007-.042-.018-.083-.059l-57.69-57.69c-.041-.041-.052-.06-.059-.084a.118.118 0 0 1 0-.069c.007-.023.018-.042.059-.083L454.073 512 166.371 224.297c-.041-.04-.052-.06-.059-.083a.118.118 0 0 1 0-.07c.007-.022.018-.042.059-.083l57.69-57.69c.041-.041.06-.052.084-.059a.118.118 0 0 1 .069 0c.023.007.042.018.083.059L512 454.073l287.703-287.702c.04-.041.06-.052.083-.059a.118.118 0 0 1 .07 0Z",
              },
            },
          ],
        }),
        function (e) {
          return r.createElement(
            l,
            a({ attr: a({}, t.attr) }, e),
            (function e(t) {
              return (
                t &&
                t.map(function (t, n) {
                  return r.createElement(
                    t.tag,
                    a({ key: n }, t.attr),
                    e(t.child)
                  );
                })
              );
            })(t.child)
          );
        })(e);
      }
    },
    3880: function (e, t, n) {
      "use strict";
      /**
       * @license React
       * use-sync-external-store-shim.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var r = n(2784),
        i =
          "function" == typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e == 1 / t)) || (e != e && t != t)
                );
              },
        s = r.useState,
        a = r.useEffect,
        o = r.useLayoutEffect,
        l = r.useDebugValue;
      function u(e) {
        var t = e.getSnapshot;
        e = e.value;
        try {
          var n = t();
          return !i(e, n);
        } catch (e) {
          return !0;
        }
      }
      var c =
        "undefined" == typeof window ||
        void 0 === window.document ||
        void 0 === window.document.createElement
          ? function (e, t) {
              return t();
            }
          : function (e, t) {
              var n = t(),
                r = s({ inst: { value: n, getSnapshot: t } }),
                i = r[0].inst,
                c = r[1];
              return (
                o(
                  function () {
                    (i.value = n), (i.getSnapshot = t), u(i) && c({ inst: i });
                  },
                  [e, n, t]
                ),
                a(
                  function () {
                    return (
                      u(i) && c({ inst: i }),
                      e(function () {
                        u(i) && c({ inst: i });
                      })
                    );
                  },
                  [e]
                ),
                l(n),
                n
              );
            };
      t.useSyncExternalStore =
        void 0 !== r.useSyncExternalStore ? r.useSyncExternalStore : c;
    },
    402: function (e, t, n) {
      "use strict";
      /**
       * @license React
       * use-sync-external-store-shim/with-selector.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var r = n(2784),
        i = n(3100),
        s =
          "function" == typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e == 1 / t)) || (e != e && t != t)
                );
              },
        a = i.useSyncExternalStore,
        o = r.useRef,
        l = r.useEffect,
        u = r.useMemo,
        c = r.useDebugValue;
      t.useSyncExternalStoreWithSelector = function (e, t, n, r, i) {
        var h = o(null);
        if (null === h.current) {
          var d = { hasValue: !1, value: null };
          h.current = d;
        } else d = h.current;
        var p = a(
          e,
          (h = u(
            function () {
              function e(e) {
                if (!l) {
                  if (
                    ((l = !0), (a = e), (e = r(e)), void 0 !== i && d.hasValue)
                  ) {
                    var t = d.value;
                    if (i(t, e)) return (o = t);
                  }
                  return (o = e);
                }
                if (((t = o), s(a, e))) return t;
                var n = r(e);
                return void 0 !== i && i(t, n) ? t : ((a = e), (o = n));
              }
              var a,
                o,
                l = !1,
                u = void 0 === n ? null : n;
              return [
                function () {
                  return e(t());
                },
                null === u
                  ? void 0
                  : function () {
                      return e(u());
                    },
              ];
            },
            [t, n, r, i]
          ))[0],
          h[1]
        );
        return (
          l(
            function () {
              (d.hasValue = !0), (d.value = p);
            },
            [p]
          ),
          c(p),
          p
        );
      };
    },
    3100: function (e, t, n) {
      "use strict";
      e.exports = n(3880);
    },
    1110: function (e, t, n) {
      "use strict";
      e.exports = n(402);
    },
    7643: function (e, t, n) {
      "use strict";
      n.d(t, {
        LI: function () {
          return s;
        },
      });
      var r = n(2784);
      let i = "undefined" != typeof window ? r.useLayoutEffect : r.useEffect;
      var s = i;
    },
    4896: function (e) {
      e.exports = {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0,
      };
    },
    7031: function (e) {
      "use strict";
      e.exports = function () {
        throw Error(
          "ws does not work in the browser. Browser clients must use the native WebSocket object"
        );
      };
    },
    633: function () {},
    7896: function (e, t, n) {
      "use strict";
      function r() {
        return (r = Object.assign
          ? Object.assign.bind()
          : function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
      }
      n.d(t, {
        Z: function () {
          return r;
        },
      });
    },
    2802: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var r = n(6522);
      function i(e) {
        var t = (function (e, t) {
          if ("object" !== (0, r.Z)(e) || null === e) return e;
          var n = e[Symbol.toPrimitive];
          if (void 0 !== n) {
            var i = n.call(e, t || "default");
            if ("object" !== (0, r.Z)(i)) return i;
            throw TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === t ? String : Number)(e);
        })(e, "string");
        return "symbol" === (0, r.Z)(t) ? t : String(t);
      }
    },
    6522: function (e, t, n) {
      "use strict";
      function r(e) {
        return (r =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(e);
      }
      n.d(t, {
        Z: function () {
          return r;
        },
      });
    },
    489: function (e, t, n) {
      "use strict";
      t.Z = function () {
        for (var e, t, n = 0, r = ""; n < arguments.length; )
          (e = arguments[n++]) &&
            (t = (function e(t) {
              var n,
                r,
                i = "";
              if ("string" == typeof t || "number" == typeof t) i += t;
              else if ("object" == typeof t) {
                if (Array.isArray(t))
                  for (n = 0; n < t.length; n++)
                    t[n] && (r = e(t[n])) && (i && (i += " "), (i += r));
                else for (n in t) t[n] && (i && (i += " "), (i += n));
              }
              return i;
            })(e)) &&
            (r && (r += " "), (r += t));
        return r;
      };
    },
    686: function (e, t, n) {
      "use strict";
      n.d(t, {
        v: function () {
          return r;
        },
      });
      var r = n(161);
      t.Z = r;
    },
    7047: function (e, t, n) {
      "use strict";
      n.d(t, {
        S: function () {
          return h;
        },
      });
      var r = n(1429),
        i = n(8145),
        s = n(7035),
        a = n(1366);
      function o(e, t) {
        return e * Math.sqrt(1 - t * t);
      }
      let l = ["duration", "bounce"],
        u = ["stiffness", "damping", "mass"];
      function c(e, t) {
        return t.some((t) => void 0 !== e[t]);
      }
      function h({ keyframes: e, restDelta: t, restSpeed: n, ...h }) {
        let d;
        let p = e[0],
          f = e[e.length - 1],
          m = { done: !1, value: p },
          {
            stiffness: g,
            damping: _,
            mass: v,
            velocity: y,
            duration: x,
            isResolvedFromDuration: b,
          } = (function (e) {
            let t = {
              velocity: 0,
              stiffness: 100,
              damping: 10,
              mass: 1,
              isResolvedFromDuration: !1,
              ...e,
            };
            if (!c(e, u) && c(e, l)) {
              let n = (function ({
                duration: e = 800,
                bounce: t = 0.25,
                velocity: n = 0,
                mass: i = 1,
              }) {
                let l, u;
                (0, s.K)(
                  e <= (0, r.w)(10),
                  "Spring duration must be 10 seconds or less"
                );
                let c = 1 - t;
                (c = (0, a.u)(0.05, 1, c)),
                  (e = (0, a.u)(0.01, 10, (0, r.X)(e))),
                  c < 1
                    ? ((l = (t) => {
                        let r = t * c,
                          i = r * e,
                          s = o(t, c),
                          a = Math.exp(-i);
                        return 0.001 - ((r - n) / s) * a;
                      }),
                      (u = (t) => {
                        let r = t * c,
                          i = r * e,
                          s = Math.pow(c, 2) * Math.pow(t, 2) * e,
                          a = Math.exp(-i),
                          u = o(Math.pow(t, 2), c),
                          h = -l(t) + 0.001 > 0 ? -1 : 1;
                        return (h * ((i * n + n - s) * a)) / u;
                      }))
                    : ((l = (t) => {
                        let r = Math.exp(-t * e),
                          i = (t - n) * e + 1;
                        return -0.001 + r * i;
                      }),
                      (u = (t) => {
                        let r = Math.exp(-t * e),
                          i = (n - t) * (e * e);
                        return r * i;
                      }));
                let h = 5 / e,
                  d = (function (e, t, n) {
                    let r = n;
                    for (let n = 1; n < 12; n++) r -= e(r) / t(r);
                    return r;
                  })(l, u, h);
                if (((e = (0, r.w)(e)), isNaN(d)))
                  return { stiffness: 100, damping: 10, duration: e };
                {
                  let t = Math.pow(d, 2) * i;
                  return {
                    stiffness: t,
                    damping: 2 * c * Math.sqrt(i * t),
                    duration: e,
                  };
                }
              })(e);
              (t = {
                ...t,
                ...n,
                velocity: 0,
                mass: 1,
              }).isResolvedFromDuration = !0;
            }
            return t;
          })(h),
          S = y ? -(0, r.X)(y) : 0,
          E = _ / (2 * Math.sqrt(g * v)),
          M = f - p,
          w = (0, r.X)(Math.sqrt(g / v)),
          T = 5 > Math.abs(M);
        if ((n || (n = T ? 0.01 : 2), t || (t = T ? 0.005 : 0.5), E < 1)) {
          let e = o(w, E);
          d = (t) => {
            let n = Math.exp(-E * w * t);
            return (
              f -
              n *
                (((S + E * w * M) / e) * Math.sin(e * t) + M * Math.cos(e * t))
            );
          };
        } else if (1 === E)
          d = (e) => f - Math.exp(-w * e) * (M + (S + w * M) * e);
        else {
          let e = w * Math.sqrt(E * E - 1);
          d = (t) => {
            let n = Math.exp(-E * w * t),
              r = Math.min(e * t, 300);
            return (
              f -
              (n * ((S + E * w * M) * Math.sinh(r) + e * M * Math.cosh(r))) / e
            );
          };
        }
        return {
          calculatedDuration: (b && x) || null,
          next: (e) => {
            let r = d(e);
            if (b) m.done = e >= x;
            else {
              let s = S;
              0 !== e && (s = E < 1 ? (0, i.P)(d, e, r) : 0);
              let a = Math.abs(s) <= n,
                o = Math.abs(f - r) <= t;
              m.done = a && o;
            }
            return (m.value = m.done ? f : r), m;
          },
        };
      }
    },
    779: function (e, t, n) {
      "use strict";
      n.d(t, {
        E: function () {
          return r;
        },
        i: function () {
          return i;
        },
      });
      let r = 2e4;
      function i(e) {
        let t = 0,
          n = e.next(t);
        for (; !n.done && t < r; ) (t += 50), (n = e.next(t));
        return t >= r ? 1 / 0 : t;
      }
    },
    8145: function (e, t, n) {
      "use strict";
      n.d(t, {
        P: function () {
          return i;
        },
      });
      var r = n(5394);
      function i(e, t, n) {
        let i = Math.max(t - 5, 0);
        return (0, r.R)(n - e(i), t - i);
      }
    },
    4737: function (e, t, n) {
      "use strict";
      n.d(t, {
        v: function () {
          return J;
        },
      });
      var r = n(7035),
        i = n(1429);
      let s = { current: !1 },
        a = (e) => Array.isArray(e) && "number" == typeof e[0],
        o = ([e, t, n, r]) => `cubic-bezier(${e}, ${t}, ${n}, ${r})`,
        l = {
          linear: "linear",
          ease: "ease",
          easeIn: "ease-in",
          easeOut: "ease-out",
          easeInOut: "ease-in-out",
          circIn: o([0, 0.65, 0.55, 1]),
          circOut: o([0.55, 0, 1, 0.45]),
          backIn: o([0.31, 0.01, 0.66, -0.59]),
          backOut: o([0.33, 1.53, 0.69, 0.99]),
        };
      var u = n(4732);
      let c = (0, u._)(0.42, 0, 1, 1),
        h = (0, u._)(0, 0, 0.58, 1),
        d = (0, u._)(0.42, 0, 0.58, 1);
      var p = n(9554),
        f = n(65),
        m = n(1469),
        g = n(7070),
        _ = n(6574);
      let v = (0, u._)(0.33, 1.53, 0.69, 0.99),
        y = (0, _.M)(v),
        x = (0, g.o)(y),
        b = {
          linear: f.Z,
          easeIn: c,
          easeInOut: d,
          easeOut: h,
          circIn: m.Z7,
          circInOut: m.X7,
          circOut: m.Bn,
          backIn: y,
          backInOut: x,
          backOut: v,
          anticipate: (e) =>
            (e *= 2) < 1 ? 0.5 * y(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))),
        },
        S = (e) => {
          if (Array.isArray(e)) {
            (0, r.k)(
              4 === e.length,
              "Cubic bezier arrays must contain four numerical values."
            );
            let [t, n, i, s] = e;
            return (0, u._)(t, n, i, s);
          }
          return "string" == typeof e
            ? ((0, r.k)(void 0 !== b[e], `Invalid easing type '${e}'`), b[e])
            : e;
        };
      var E = n(3972),
        M = n(5254);
      function w({
        duration: e = 300,
        keyframes: t,
        times: n,
        ease: r = "easeInOut",
      }) {
        let i = (0, p.N)(r) ? r.map(S) : S(r),
          s = { done: !1, value: t[0] },
          a = (n && n.length === t.length ? n : (0, M.Y)(t)).map((t) => t * e),
          o = (0, E.s)(a, t, {
            ease: Array.isArray(i)
              ? i
              : t.map(() => i || d).splice(0, t.length - 1),
          });
        return {
          calculatedDuration: e,
          next: (t) => ((s.value = o(t)), (s.done = t >= e), s),
        };
      }
      var T = n(7047),
        A = n(8145);
      function C({
        keyframes: e,
        velocity: t = 0,
        power: n = 0.8,
        timeConstant: r = 325,
        bounceDamping: i = 10,
        bounceStiffness: s = 500,
        modifyTarget: a,
        min: o,
        max: l,
        restDelta: u = 0.5,
        restSpeed: c,
      }) {
        let h, d;
        let p = e[0],
          f = { done: !1, value: p },
          m = (e) => (void 0 !== o && e < o) || (void 0 !== l && e > l),
          g = (e) =>
            void 0 === o
              ? l
              : void 0 === l
              ? o
              : Math.abs(o - e) < Math.abs(l - e)
              ? o
              : l,
          _ = n * t,
          v = p + _,
          y = void 0 === a ? v : a(v);
        y !== v && (_ = y - p);
        let x = (e) => -_ * Math.exp(-e / r),
          b = (e) => y + x(e),
          S = (e) => {
            let t = x(e),
              n = b(e);
            (f.done = Math.abs(t) <= u), (f.value = f.done ? y : n);
          },
          E = (e) => {
            m(f.value) &&
              ((h = e),
              (d = (0, T.S)({
                keyframes: [f.value, g(f.value)],
                velocity: (0, A.P)(b, e, f.value),
                damping: i,
                stiffness: s,
                restDelta: u,
                restSpeed: c,
              })));
          };
        return (
          E(0),
          {
            calculatedDuration: null,
            next: (e) => {
              let t = !1;
              return (d || void 0 !== h || ((t = !0), S(e), E(e)),
              void 0 !== h && e > h)
                ? d.next(e - h)
                : (t || S(e), f);
            },
          }
        );
      }
      var R = n(2972);
      let P = (e) => {
        let t = ({ timestamp: t }) => e(t);
        return {
          start: () => R.Wi.update(t, !0),
          stop: () => (0, R.Pn)(t),
          now: () =>
            R.frameData.isProcessing
              ? R.frameData.timestamp
              : performance.now(),
        };
      };
      var O = n(1366),
        L = n(779);
      let I = { decay: C, inertia: C, tween: w, keyframes: w, spring: T.S };
      function N({
        autoplay: e = !0,
        delay: t = 0,
        driver: n = P,
        keyframes: r,
        type: s = "keyframes",
        repeat: a = 0,
        repeatDelay: o = 0,
        repeatType: l = "loop",
        onPlay: u,
        onStop: c,
        onComplete: h,
        onUpdate: d,
        ...p
      }) {
        let f,
          m,
          g,
          _,
          v,
          y = 1,
          x = !1,
          b = () => {
            m = new Promise((e) => {
              f = e;
            });
          };
        b();
        let S = I[s] || w;
        S !== w &&
          "number" != typeof r[0] &&
          ((_ = (0, E.s)([0, 100], r, { clamp: !1 })), (r = [0, 100]));
        let M = S({ ...p, keyframes: r });
        "mirror" === l &&
          (v = S({
            ...p,
            keyframes: [...r].reverse(),
            velocity: -(p.velocity || 0),
          }));
        let T = "idle",
          A = null,
          C = null,
          R = null;
        null === M.calculatedDuration &&
          a &&
          (M.calculatedDuration = (0, L.i)(M));
        let { calculatedDuration: N } = M,
          D = 1 / 0,
          U = 1 / 0;
        null !== N && (U = (D = N + o) * (a + 1) - o);
        let k = 0,
          F = (e) => {
            if (null === C) return;
            y > 0 && (C = Math.min(C, e)),
              y < 0 && (C = Math.min(e - U / y, C)),
              (k = null !== A ? A : Math.round(e - C) * y);
            let n = k - t * (y >= 0 ? 1 : -1),
              i = y >= 0 ? n < 0 : n > U;
            (k = Math.max(n, 0)), "finished" === T && null === A && (k = U);
            let s = k,
              u = M;
            if (a) {
              let e = k / D,
                t = Math.floor(e),
                n = e % 1;
              !n && e >= 1 && (n = 1), 1 === n && t--, (t = Math.min(t, a + 1));
              let r = !!(t % 2);
              r &&
                ("reverse" === l
                  ? ((n = 1 - n), o && (n -= o / D))
                  : "mirror" === l && (u = v));
              let i = (0, O.u)(0, 1, n);
              k > U && (i = "reverse" === l && r ? 1 : 0), (s = i * D);
            }
            let c = i ? { done: !1, value: r[0] } : u.next(s);
            _ && (c.value = _(c.value));
            let { done: h } = c;
            i || null === N || (h = y >= 0 ? k >= U : k <= 0);
            let p = null === A && ("finished" === T || ("running" === T && h));
            return d && d(c.value), p && V(), c;
          },
          z = () => {
            g && g.stop(), (g = void 0);
          },
          B = () => {
            (T = "idle"), z(), f(), b(), (C = R = null);
          },
          V = () => {
            (T = "finished"), h && h(), z(), f();
          },
          j = () => {
            if (x) return;
            g || (g = n(F));
            let e = g.now();
            u && u(),
              null !== A ? (C = e - A) : (C && "finished" !== T) || (C = e),
              "finished" === T && b(),
              (R = C),
              (A = null),
              (T = "running"),
              g.start();
          };
        e && j();
        let H = {
          then: (e, t) => m.then(e, t),
          get time() {
            return (0, i.X)(k);
          },
          set time(newTime) {
            (k = newTime = (0, i.w)(newTime)),
              null === A && g && 0 !== y
                ? (C = g.now() - newTime / y)
                : (A = newTime);
          },
          get duration() {
            let e =
              null === M.calculatedDuration
                ? (0, L.i)(M)
                : M.calculatedDuration;
            return (0, i.X)(e);
          },
          get speed() {
            return y;
          },
          set speed(newSpeed) {
            if (newSpeed === y || !g) return;
            (y = newSpeed), (H.time = (0, i.X)(k));
          },
          get state() {
            return T;
          },
          play: j,
          pause: () => {
            (T = "paused"), (A = k);
          },
          stop: () => {
            (x = !0), "idle" !== T && ((T = "idle"), c && c(), B());
          },
          cancel: () => {
            null !== R && F(R), B();
          },
          complete: () => {
            T = "finished";
          },
          sample: (e) => ((C = 0), F(e)),
        };
        return H;
      }
      var D = n(9907);
      let U = (0, D.X)(() =>
          Object.hasOwnProperty.call(Element.prototype, "animate")
        ),
        k = new Set([
          "opacity",
          "clipPath",
          "filter",
          "transform",
          "backgroundColor",
        ]),
        F = (e, t) =>
          "spring" === t.type ||
          "backgroundColor" === e ||
          !(function e(t) {
            return !!(
              !t ||
              ("string" == typeof t && l[t]) ||
              a(t) ||
              (Array.isArray(t) && t.every(e))
            );
          })(t.ease);
      var z = n(3442);
      let B = { type: "spring", stiffness: 500, damping: 25, restSpeed: 10 },
        V = (e) => ({
          type: "spring",
          stiffness: 550,
          damping: 0 === e ? 2 * Math.sqrt(550) : 30,
          restSpeed: 10,
        }),
        j = { type: "keyframes", duration: 0.8 },
        H = { type: "keyframes", ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
        G = (e, { keyframes: t }) =>
          t.length > 2
            ? j
            : z.G.has(e)
            ? e.startsWith("scale")
              ? V(t[1])
              : B
            : H;
      var W = n(6865);
      let $ = (e, t) =>
        "zIndex" !== e &&
        !!(
          "number" == typeof t ||
          Array.isArray(t) ||
          ("string" == typeof t &&
            (W.P.test(t) || "0" === t) &&
            !t.startsWith("url("))
        );
      var X = n(1564),
        q = n(4561),
        Y = n(3172);
      let J =
        (e, t, n, u = {}) =>
        (c) => {
          let h = (0, Y.e)(u, e) || {},
            d = h.delay || u.delay || 0,
            { elapsed: p = 0 } = u;
          p -= (0, i.w)(d);
          let m = (function (e, t, n, r) {
              let i, s;
              let a = $(t, n);
              i = Array.isArray(n) ? [...n] : [null, n];
              let o = void 0 !== r.from ? r.from : e.get(),
                l = [];
              for (let e = 0; e < i.length; e++) {
                var u;
                null === i[e] && (i[e] = 0 === e ? o : i[e - 1]),
                  ("number" == typeof (u = i[e])
                    ? 0 === u
                    : null !== u
                    ? "none" === u || "0" === u || (0, q.W)(u)
                    : void 0) && l.push(e),
                  "string" == typeof i[e] &&
                    "none" !== i[e] &&
                    "0" !== i[e] &&
                    (s = i[e]);
              }
              if (a && l.length && s)
                for (let e = 0; e < l.length; e++) {
                  let n = l[e];
                  i[n] = (0, X.T)(t, s);
                }
              return i;
            })(t, e, n, h),
            g = m[0],
            _ = m[m.length - 1],
            v = $(e, g),
            y = $(e, _);
          (0, r.K)(
            v === y,
            `You are trying to animate ${e} from "${g}" to "${_}". ${g} is not an animatable value - to enable this animation set ${g} to a value animatable to ${_} via the \`style\` property.`
          );
          let x = {
            keyframes: m,
            velocity: t.getVelocity(),
            ease: "easeOut",
            ...h,
            delay: -p,
            onUpdate: (e) => {
              t.set(e), h.onUpdate && h.onUpdate(e);
            },
            onComplete: () => {
              c(), h.onComplete && h.onComplete();
            },
          };
          if (
            ((0, Y.r)(h) || (x = { ...x, ...G(e, x) }),
            x.duration && (x.duration = (0, i.w)(x.duration)),
            x.repeatDelay && (x.repeatDelay = (0, i.w)(x.repeatDelay)),
            !v || !y || s.current || !1 === h.type)
          )
            return (function ({
              keyframes: e,
              delay: t,
              onUpdate: n,
              onComplete: r,
            }) {
              let i = () => (
                n && n(e[e.length - 1]),
                r && r(),
                {
                  time: 0,
                  speed: 1,
                  duration: 0,
                  play: f.Z,
                  pause: f.Z,
                  stop: f.Z,
                  then: (e) => (e(), Promise.resolve()),
                  cancel: f.Z,
                  complete: f.Z,
                }
              );
              return t
                ? N({ keyframes: [0, 1], duration: 0, delay: t, onComplete: i })
                : i();
            })(s.current ? { ...x, delay: 0 } : x);
          if (
            t.owner &&
            t.owner.current instanceof HTMLElement &&
            !t.owner.getProps().onUpdate
          ) {
            let n = (function (e, t, { onUpdate: n, onComplete: r, ...s }) {
              let u, c;
              let h =
                U() &&
                k.has(t) &&
                !s.repeatDelay &&
                "mirror" !== s.repeatType &&
                0 !== s.damping &&
                "inertia" !== s.type;
              if (!h) return !1;
              let d = !1,
                p = () => {
                  c = new Promise((e) => {
                    u = e;
                  });
                };
              p();
              let { keyframes: m, duration: g = 300, ease: _, times: v } = s;
              if (F(t, s)) {
                let e = N({ ...s, repeat: 0, delay: 0 }),
                  t = { done: !1, value: m[0] },
                  n = [],
                  r = 0;
                for (; !t.done && r < 2e4; )
                  (t = e.sample(r)), n.push(t.value), (r += 10);
                (v = void 0), (m = n), (g = r - 10), (_ = "linear");
              }
              let y = (function (
                e,
                t,
                n,
                {
                  delay: r = 0,
                  duration: i,
                  repeat: s = 0,
                  repeatType: u = "loop",
                  ease: c,
                  times: h,
                } = {}
              ) {
                let d = { [t]: n };
                h && (d.offset = h);
                let p = (function e(t) {
                  if (t)
                    return a(t) ? o(t) : Array.isArray(t) ? t.map(e) : l[t];
                })(c);
                return (
                  Array.isArray(p) && (d.easing = p),
                  e.animate(d, {
                    delay: r,
                    duration: i,
                    easing: Array.isArray(p) ? "linear" : p,
                    fill: "both",
                    iterations: s + 1,
                    direction: "reverse" === u ? "alternate" : "normal",
                  })
                );
              })(e.owner.current, t, m, {
                ...s,
                duration: g,
                ease: _,
                times: v,
              });
              s.syncStart &&
                (y.startTime = R.frameData.isProcessing
                  ? R.frameData.timestamp
                  : document.timeline
                  ? document.timeline.currentTime
                  : performance.now());
              let x = () => y.cancel(),
                b = () => {
                  R.Wi.update(x), u(), p();
                };
              return (
                (y.onfinish = () => {
                  e.set(
                    (function (e, { repeat: t, repeatType: n = "loop" }) {
                      let r =
                        t && "loop" !== n && t % 2 == 1 ? 0 : e.length - 1;
                      return e[r];
                    })(m, s)
                  ),
                    r && r(),
                    b();
                }),
                {
                  then: (e, t) => c.then(e, t),
                  attachTimeline: (e) => (
                    (y.timeline = e), (y.onfinish = null), f.Z
                  ),
                  get time() {
                    return (0, i.X)(y.currentTime || 0);
                  },
                  set time(newTime) {
                    y.currentTime = (0, i.w)(newTime);
                  },
                  get speed() {
                    return y.playbackRate;
                  },
                  set speed(newSpeed) {
                    y.playbackRate = newSpeed;
                  },
                  get duration() {
                    return (0, i.X)(g);
                  },
                  play: () => {
                    d || (y.play(), (0, R.Pn)(x));
                  },
                  pause: () => y.pause(),
                  stop: () => {
                    if (((d = !0), "idle" === y.playState)) return;
                    let { currentTime: t } = y;
                    if (t) {
                      let n = N({ ...s, autoplay: !1 });
                      e.setWithVelocity(
                        n.sample(t - 10).value,
                        n.sample(t).value,
                        10
                      );
                    }
                    b();
                  },
                  complete: () => y.finish(),
                  cancel: b,
                }
              );
            })(t, e, x);
            if (n) return n;
          }
          return N(x);
        };
    },
    4197: function (e, t, n) {
      "use strict";
      n.d(t, {
        D: function () {
          return a;
        },
      });
      var r = n(4737),
        i = n(226),
        s = n(5815);
      function a(e, t, n) {
        let a = (0, s.i)(e) ? e : (0, i.BX)(e);
        return a.start((0, r.v)("", a, t, n)), a.animation;
      }
    },
    3715: function (e, t, n) {
      "use strict";
      n.d(t, {
        w: function () {
          return c;
        },
      });
      var r = n(3442),
        i = n(8754);
      let s = "data-" + (0, i.D)("framerAppearId");
      var a = n(4737),
        o = n(7397),
        l = n(1336),
        u = n(2972);
      function c(e, t, { delay: n = 0, transitionOverride: i, type: c } = {}) {
        let {
            transition: h = e.getDefaultTransition(),
            transitionEnd: d,
            ...p
          } = e.makeTargetAnimatable(t),
          f = e.getValue("willChange");
        i && (h = i);
        let m = [],
          g = c && e.animationState && e.animationState.getState()[c];
        for (let t in p) {
          let i = e.getValue(t),
            l = p[t];
          if (
            !i ||
            void 0 === l ||
            (g &&
              (function ({ protectedKeys: e, needsAnimating: t }, n) {
                let r = e.hasOwnProperty(n) && !0 !== t[n];
                return (t[n] = !1), r;
              })(g, t))
          )
            continue;
          let c = { delay: n, elapsed: 0, ...h };
          if (window.HandoffAppearAnimations && !i.hasAnimated) {
            let n = e.getProps()[s];
            n &&
              ((c.elapsed = window.HandoffAppearAnimations(n, t, i, u.Wi)),
              (c.syncStart = !0));
          }
          i.start(
            (0, a.v)(
              t,
              i,
              l,
              e.shouldReduceMotion && r.G.has(t) ? { type: !1 } : c
            )
          );
          let d = i.animation;
          (0, o.L)(f) && (f.add(t), d.then(() => f.remove(t))), m.push(d);
        }
        return (
          d &&
            Promise.all(m).then(() => {
              d && (0, l.CD)(e, d);
            }),
          m
        );
      }
    },
    2816: function (e, t, n) {
      "use strict";
      function r(e) {
        return "object" == typeof e && "function" == typeof e.start;
      }
      n.d(t, {
        H: function () {
          return r;
        },
      });
    },
    5721: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return r;
        },
      });
      let r = (e) => Array.isArray(e);
    },
    3172: function (e, t, n) {
      "use strict";
      function r({
        when: e,
        delay: t,
        delayChildren: n,
        staggerChildren: r,
        staggerDirection: i,
        repeat: s,
        repeatType: a,
        repeatDelay: o,
        from: l,
        elapsed: u,
        ...c
      }) {
        return !!Object.keys(c).length;
      }
      function i(e, t) {
        return e[t] || e.default || e;
      }
      n.d(t, {
        e: function () {
          return i;
        },
        r: function () {
          return r;
        },
      });
    },
    5239: function (e, t, n) {
      "use strict";
      n.d(t, {
        M: function () {
          return g;
        },
      });
      var r = n(2784),
        i = n(3617);
      function s() {
        let e = (0, r.useRef)(!1);
        return (
          (0, i.L)(
            () => (
              (e.current = !0),
              () => {
                e.current = !1;
              }
            ),
            []
          ),
          e
        );
      }
      var a = n(2972),
        o = n(7967),
        l = n(3105);
      class u extends r.Component {
        getSnapshotBeforeUpdate(e) {
          let t = this.props.childRef.current;
          if (t && e.isPresent && !this.props.isPresent) {
            let e = this.props.sizeRef.current;
            (e.height = t.offsetHeight || 0),
              (e.width = t.offsetWidth || 0),
              (e.top = t.offsetTop),
              (e.left = t.offsetLeft);
          }
          return null;
        }
        componentDidUpdate() {}
        render() {
          return this.props.children;
        }
      }
      function c({ children: e, isPresent: t }) {
        let n = (0, r.useId)(),
          i = (0, r.useRef)(null),
          s = (0, r.useRef)({ width: 0, height: 0, top: 0, left: 0 });
        return (
          (0, r.useInsertionEffect)(() => {
            let { width: e, height: r, top: a, left: o } = s.current;
            if (t || !i.current || !e || !r) return;
            i.current.dataset.motionPopId = n;
            let l = document.createElement("style");
            return (
              document.head.appendChild(l),
              l.sheet &&
                l.sheet.insertRule(`
          [data-motion-pop-id="${n}"] {
            position: absolute !important;
            width: ${e}px !important;
            height: ${r}px !important;
            top: ${a}px !important;
            left: ${o}px !important;
          }
        `),
              () => {
                document.head.removeChild(l);
              }
            );
          }, [t]),
          r.createElement(
            u,
            { isPresent: t, childRef: i, sizeRef: s },
            r.cloneElement(e, { ref: i })
          )
        );
      }
      let h = ({
        children: e,
        initial: t,
        isPresent: n,
        onExitComplete: i,
        custom: s,
        presenceAffectsLayout: a,
        mode: u,
      }) => {
        let h = (0, l.h)(d),
          p = (0, r.useId)(),
          f = (0, r.useMemo)(
            () => ({
              id: p,
              initial: t,
              isPresent: n,
              custom: s,
              onExitComplete: (e) => {
                for (let t of (h.set(e, !0), h.values())) if (!t) return;
                i && i();
              },
              register: (e) => (h.set(e, !1), () => h.delete(e)),
            }),
            a ? void 0 : [n]
          );
        return (
          (0, r.useMemo)(() => {
            h.forEach((e, t) => h.set(t, !1));
          }, [n]),
          r.useEffect(() => {
            n || h.size || !i || i();
          }, [n]),
          "popLayout" === u && (e = r.createElement(c, { isPresent: n }, e)),
          r.createElement(o.O.Provider, { value: f }, e)
        );
      };
      function d() {
        return new Map();
      }
      var p = n(3422),
        f = n(7035);
      let m = (e) => e.key || "",
        g = ({
          children: e,
          custom: t,
          initial: n = !0,
          onExitComplete: o,
          exitBeforeEnter: l,
          presenceAffectsLayout: u = !0,
          mode: c = "sync",
        }) => {
          var d;
          (0, f.k)(!l, "Replace exitBeforeEnter with mode='wait'");
          let g =
              (0, r.useContext)(p.p).forceRender ||
              (function () {
                let e = s(),
                  [t, n] = (0, r.useState)(0),
                  i = (0, r.useCallback)(() => {
                    e.current && n(t + 1);
                  }, [t]),
                  o = (0, r.useCallback)(() => a.Wi.postRender(i), [i]);
                return [o, t];
              })()[0],
            _ = s(),
            v = (function (e) {
              let t = [];
              return (
                r.Children.forEach(e, (e) => {
                  (0, r.isValidElement)(e) && t.push(e);
                }),
                t
              );
            })(e),
            y = v,
            x = (0, r.useRef)(new Map()).current,
            b = (0, r.useRef)(y),
            S = (0, r.useRef)(new Map()).current,
            E = (0, r.useRef)(!0);
          if (
            ((0, i.L)(() => {
              (E.current = !1),
                (function (e, t) {
                  e.forEach((e) => {
                    let n = m(e);
                    t.set(n, e);
                  });
                })(v, S),
                (b.current = y);
            }),
            (d = () => {
              (E.current = !0), S.clear(), x.clear();
            }),
            (0, r.useEffect)(() => () => d(), []),
            E.current)
          )
            return r.createElement(
              r.Fragment,
              null,
              y.map((e) =>
                r.createElement(
                  h,
                  {
                    key: m(e),
                    isPresent: !0,
                    initial: !!n && void 0,
                    presenceAffectsLayout: u,
                    mode: c,
                  },
                  e
                )
              )
            );
          y = [...y];
          let M = b.current.map(m),
            w = v.map(m),
            T = M.length;
          for (let e = 0; e < T; e++) {
            let t = M[e];
            -1 !== w.indexOf(t) || x.has(t) || x.set(t, void 0);
          }
          return (
            "wait" === c && x.size && (y = []),
            x.forEach((e, n) => {
              if (-1 !== w.indexOf(n)) return;
              let i = S.get(n);
              if (!i) return;
              let s = M.indexOf(n),
                a = e;
              a ||
                ((a = r.createElement(
                  h,
                  {
                    key: m(i),
                    isPresent: !1,
                    onExitComplete: () => {
                      S.delete(n), x.delete(n);
                      let e = b.current.findIndex((e) => e.key === n);
                      if ((b.current.splice(e, 1), !x.size)) {
                        if (((b.current = v), !1 === _.current)) return;
                        g(), o && o();
                      }
                    },
                    custom: t,
                    presenceAffectsLayout: u,
                    mode: c,
                  },
                  i
                )),
                x.set(n, a)),
                y.splice(s, 0, a);
            }),
            (y = y.map((e) => {
              let t = e.key;
              return x.has(t)
                ? e
                : r.createElement(
                    h,
                    {
                      key: m(e),
                      isPresent: !0,
                      presenceAffectsLayout: u,
                      mode: c,
                    },
                    e
                  );
            })),
            r.createElement(
              r.Fragment,
              null,
              x.size ? y : y.map((e) => (0, r.cloneElement)(e))
            )
          );
        };
    },
    3422: function (e, t, n) {
      "use strict";
      n.d(t, {
        p: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = (0, r.createContext)({});
    },
    976: function (e, t, n) {
      "use strict";
      n.d(t, {
        _: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = (0, r.createContext)({
        transformPagePoint: (e) => e,
        isStatic: !1,
        reducedMotion: "never",
      });
    },
    7967: function (e, t, n) {
      "use strict";
      n.d(t, {
        O: function () {
          return i;
        },
      });
      var r = n(2784);
      let i = (0, r.createContext)(null);
    },
    1469: function (e, t, n) {
      "use strict";
      n.d(t, {
        Bn: function () {
          return a;
        },
        X7: function () {
          return o;
        },
        Z7: function () {
          return s;
        },
      });
      var r = n(7070),
        i = n(6574);
      let s = (e) => 1 - Math.sin(Math.acos(e)),
        a = (0, i.M)(s),
        o = (0, r.o)(a);
    },
    4732: function (e, t, n) {
      "use strict";
      n.d(t, {
        _: function () {
          return s;
        },
      });
      var r = n(65);
      let i = (e, t, n) =>
        (((1 - 3 * n + 3 * t) * e + (3 * n - 6 * t)) * e + 3 * t) * e;
      function s(e, t, n, s) {
        if (e === t && n === s) return r.Z;
        let a = (t) =>
          (function (e, t, n, r, s) {
            let a, o;
            let l = 0;
            do (a = i((o = t + (n - t) / 2), r, s) - e) > 0 ? (n = o) : (t = o);
            while (Math.abs(a) > 1e-7 && ++l < 12);
            return o;
          })(t, 0, 1, e, n);
        return (e) => (0 === e || 1 === e ? e : i(a(e), t, s));
      }
    },
    7070: function (e, t, n) {
      "use strict";
      n.d(t, {
        o: function () {
          return r;
        },
      });
      let r = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2;
    },
    6574: function (e, t, n) {
      "use strict";
      n.d(t, {
        M: function () {
          return r;
        },
      });
      let r = (e) => (t) => 1 - e(1 - t);
    },
    9554: function (e, t, n) {
      "use strict";
      n.d(t, {
        N: function () {
          return r;
        },
      });
      let r = (e) => Array.isArray(e) && "number" != typeof e[0];
    },
    2972: function (e, t, n) {
      "use strict";
      n.d(t, {
        Pn: function () {
          return o;
        },
        Wi: function () {
          return a;
        },
        frameData: function () {
          return l;
        },
        S6: function () {
          return u;
        },
      });
      var r = n(65);
      class i {
        constructor() {
          (this.order = []), (this.scheduled = new Set());
        }
        add(e) {
          if (!this.scheduled.has(e))
            return this.scheduled.add(e), this.order.push(e), !0;
        }
        remove(e) {
          let t = this.order.indexOf(e);
          -1 !== t && (this.order.splice(t, 1), this.scheduled.delete(e));
        }
        clear() {
          (this.order.length = 0), this.scheduled.clear();
        }
      }
      let s = [
          "prepare",
          "read",
          "update",
          "preRender",
          "render",
          "postRender",
        ],
        {
          schedule: a,
          cancel: o,
          state: l,
          steps: u,
        } = (function (e, t) {
          let n = !1,
            r = !0,
            a = { delta: 0, timestamp: 0, isProcessing: !1 },
            o = s.reduce(
              (e, t) => (
                (e[t] = (function (e) {
                  let t = new i(),
                    n = new i(),
                    r = 0,
                    s = !1,
                    a = !1,
                    o = new WeakSet(),
                    l = {
                      schedule: (e, i = !1, a = !1) => {
                        let l = a && s,
                          u = l ? t : n;
                        return (
                          i && o.add(e),
                          u.add(e) && l && s && (r = t.order.length),
                          e
                        );
                      },
                      cancel: (e) => {
                        n.remove(e), o.delete(e);
                      },
                      process: (i) => {
                        if (s) {
                          a = !0;
                          return;
                        }
                        if (
                          ((s = !0),
                          ([t, n] = [n, t]),
                          n.clear(),
                          (r = t.order.length))
                        )
                          for (let n = 0; n < r; n++) {
                            let r = t.order[n];
                            r(i), o.has(r) && (l.schedule(r), e());
                          }
                        (s = !1), a && ((a = !1), l.process(i));
                      },
                    };
                  return l;
                })(() => (n = !0))),
                e
              ),
              {}
            ),
            l = (e) => o[e].process(a),
            u = () => {
              let i = performance.now();
              (n = !1),
                (a.delta = r
                  ? 1e3 / 60
                  : Math.max(Math.min(i - a.timestamp, 40), 1)),
                (a.timestamp = i),
                (a.isProcessing = !0),
                s.forEach(l),
                (a.isProcessing = !1),
                n && t && ((r = !1), e(u));
            },
            c = () => {
              (n = !0), (r = !0), a.isProcessing || e(u);
            },
            h = s.reduce((e, t) => {
              let r = o[t];
              return (
                (e[t] = (e, t = !1, i = !1) => (n || c(), r.schedule(e, t, i))),
                e
              );
            }, {});
          return {
            schedule: h,
            cancel: (e) => s.forEach((t) => o[t].cancel(e)),
            state: a,
            steps: o,
          };
        })(
          "undefined" != typeof requestAnimationFrame
            ? requestAnimationFrame
            : r.Z,
          !0
        );
    },
    7576: function (e, t, n) {
      "use strict";
      n.d(t, {
        A: function () {
          return i;
        },
      });
      let r = {
          animation: [
            "animate",
            "variants",
            "whileHover",
            "whileTap",
            "exit",
            "whileInView",
            "whileFocus",
            "whileDrag",
          ],
          exit: ["exit"],
          drag: ["drag", "dragControls"],
          focus: ["whileFocus"],
          hover: ["whileHover", "onHoverStart", "onHoverEnd"],
          tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
          pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
          inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
          layout: ["layout", "layoutId"],
        },
        i = {};
      for (let e in r) i[e] = { isEnabled: (t) => r[e].some((e) => !!t[e]) };
    },
    1980: function (e, t, n) {
      "use strict";
      n.d(t, {
        j: function () {
          return s;
        },
      });
      var r = n(4599),
        i = n(3442);
      function s(e, { layout: t, layoutId: n }) {
        return (
          i.G.has(e) ||
          e.startsWith("origin") ||
          ((t || void 0 !== n) && (!!r.P[e] || "opacity" === e))
        );
      }
    },
    7222: function (e, t, n) {
      "use strict";
      function r({ top: e, left: t, right: n, bottom: r }) {
        return { x: { min: t, max: n }, y: { min: e, max: r } };
      }
      function i({ x: e, y: t }) {
        return { top: t.min, right: e.max, bottom: t.max, left: e.min };
      }
      function s(e, t) {
        if (!t) return e;
        let n = t({ x: e.left, y: e.top }),
          r = t({ x: e.right, y: e.bottom });
        return { top: n.y, left: n.x, bottom: r.y, right: r.x };
      }
      n.d(t, {
        d7: function () {
          return s;
        },
        i8: function () {
          return r;
        },
        z2: function () {
          return i;
        },
      });
    },
    2217: function (e, t, n) {
      "use strict";
      n.d(t, {
        D2: function () {
          return m;
        },
        YY: function () {
          return u;
        },
        am: function () {
          return h;
        },
        o2: function () {
          return l;
        },
        q2: function () {
          return s;
        },
      });
      var r = n(5339),
        i = n(8749);
      function s(e, t, n) {
        return n + t * (e - n);
      }
      function a(e, t, n, r, i) {
        return void 0 !== i && (e = r + i * (e - r)), r + n * (e - r) + t;
      }
      function o(e, t = 0, n = 1, r, i) {
        (e.min = a(e.min, t, n, r, i)), (e.max = a(e.max, t, n, r, i));
      }
      function l(e, { x: t, y: n }) {
        o(e.x, t.translate, t.scale, t.originPoint),
          o(e.y, n.translate, n.scale, n.originPoint);
      }
      function u(e, t, n, r = !1) {
        let s, a;
        let o = n.length;
        if (o) {
          t.x = t.y = 1;
          for (let u = 0; u < o; u++) {
            a = (s = n[u]).projectionDelta;
            let o = s.instance;
            (!o || !o.style || "contents" !== o.style.display) &&
              (r &&
                s.options.layoutScroll &&
                s.scroll &&
                s !== s.root &&
                m(e, { x: -s.scroll.offset.x, y: -s.scroll.offset.y }),
              a && ((t.x *= a.x.scale), (t.y *= a.y.scale), l(e, a)),
              r && (0, i.ud)(s.latestValues) && m(e, s.latestValues));
          }
          (t.x = c(t.x)), (t.y = c(t.y));
        }
      }
      function c(e) {
        return Number.isInteger(e)
          ? e
          : e > 1.0000000000001 || e < 0.999999999999
          ? e
          : 1;
      }
      function h(e, t) {
        (e.min = e.min + t), (e.max = e.max + t);
      }
      function d(e, t, [n, i, s]) {
        let a = void 0 !== t[s] ? t[s] : 0.5,
          l = (0, r.C)(e.min, e.max, a);
        o(e, t[n], t[i], l, t.scale);
      }
      let p = ["x", "scaleX", "originX"],
        f = ["y", "scaleY", "originY"];
      function m(e, t) {
        d(e.x, t, p), d(e.y, t, f);
      }
    },
    3933: function (e, t, n) {
      "use strict";
      n.d(t, {
        dO: function () {
          return a;
        },
        wc: function () {
          return i;
        },
      });
      let r = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
        i = () => ({ x: r(), y: r() }),
        s = () => ({ min: 0, max: 0 }),
        a = () => ({ x: s(), y: s() });
    },
    4599: function (e, t, n) {
      "use strict";
      n.d(t, {
        B: function () {
          return i;
        },
        P: function () {
          return r;
        },
      });
      let r = {};
      function i(e) {
        Object.assign(r, e);
      }
    },
    8749: function (e, t, n) {
      "use strict";
      function r(e) {
        return void 0 === e || 1 === e;
      }
      function i({ scale: e, scaleX: t, scaleY: n }) {
        return !r(e) || !r(t) || !r(n);
      }
      function s(e) {
        return i(e) || a(e) || e.z || e.rotate || e.rotateX || e.rotateY;
      }
      function a(e) {
        var t, n;
        return ((t = e.x) && "0%" !== t) || ((n = e.y) && "0%" !== n);
      }
      n.d(t, {
        D_: function () {
          return a;
        },
        Lj: function () {
          return i;
        },
        ud: function () {
          return s;
        },
      });
    },
    5579: function (e, t, n) {
      "use strict";
      n.d(t, {
        J: function () {
          return s;
        },
        z: function () {
          return a;
        },
      });
      var r = n(7222),
        i = n(2217);
      function s(e, t) {
        return (0, r.i8)((0, r.d7)(e.getBoundingClientRect(), t));
      }
      function a(e, t, n) {
        let r = s(e, n),
          { scroll: a } = t;
        return a && ((0, i.am)(r.x, a.offset.x), (0, i.am)(r.y, a.offset.y)), r;
      }
    },
    6775: function (e, t, n) {
      "use strict";
      n.d(t, {
        J: function () {
          return X;
        },
      });
      var r = n(1336),
        i = n(7035),
        s = n(1377),
        a = n(1331);
      let o = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
      function l(e, t, n = 1) {
        (0, i.k)(
          n <= 4,
          `Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`
        );
        let [r, u] = (function (e) {
          let t = o.exec(e);
          if (!t) return [,];
          let [, n, r] = t;
          return [n, r];
        })(e);
        if (!r) return;
        let c = window.getComputedStyle(t).getPropertyValue(r);
        if (c) {
          let e = c.trim();
          return (0, s.P)(e) ? parseFloat(e) : e;
        }
        return (0, a.tm)(u) ? l(u, t, n + 1) : u;
      }
      var u = n(5721),
        c = n(3442),
        h = n(2289),
        d = n(3791),
        p = n(397),
        f = n(8772);
      let m = new Set([
          "width",
          "height",
          "top",
          "left",
          "right",
          "bottom",
          "x",
          "y",
          "translateX",
          "translateY",
        ]),
        g = (e) => m.has(e),
        _ = (e) => Object.keys(e).some(g),
        v = (e) => e === p.Rx || e === f.px,
        y = (e, t) => parseFloat(e.split(", ")[t]),
        x =
          (e, t) =>
          (n, { transform: r }) => {
            if ("none" === r || !r) return 0;
            let i = r.match(/^matrix3d\((.+)\)$/);
            if (i) return y(i[1], t);
            {
              let t = r.match(/^matrix\((.+)\)$/);
              return t ? y(t[1], e) : 0;
            }
          },
        b = new Set(["x", "y", "z"]),
        S = c._.filter((e) => !b.has(e)),
        E = {
          width: ({ x: e }, { paddingLeft: t = "0", paddingRight: n = "0" }) =>
            e.max - e.min - parseFloat(t) - parseFloat(n),
          height: ({ y: e }, { paddingTop: t = "0", paddingBottom: n = "0" }) =>
            e.max - e.min - parseFloat(t) - parseFloat(n),
          top: (e, { top: t }) => parseFloat(t),
          left: (e, { left: t }) => parseFloat(t),
          bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
          right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
          x: x(4, 13),
          y: x(5, 14),
        };
      (E.translateX = E.x), (E.translateY = E.y);
      let M = (e, t, n) => {
          let r = t.measureViewportBox(),
            i = t.current,
            s = getComputedStyle(i),
            { display: a } = s,
            o = {};
          "none" === a && t.setStaticValue("display", e.display || "block"),
            n.forEach((e) => {
              o[e] = E[e](r, s);
            }),
            t.render();
          let l = t.measureViewportBox();
          return (
            n.forEach((n) => {
              let r = t.getValue(n);
              r && r.jump(o[n]), (e[n] = E[n](l, s));
            }),
            e
          );
        },
        w = (e, t, n = {}, r = {}) => {
          (t = { ...t }), (r = { ...r });
          let s = Object.keys(t).filter(g),
            a = [],
            o = !1,
            l = [];
          if (
            (s.forEach((s) => {
              let c;
              let d = e.getValue(s);
              if (!e.hasValue(s)) return;
              let p = n[s],
                m = (0, h.C)(p),
                g = t[s];
              if ((0, u.C)(g)) {
                let e = g.length,
                  t = null === g[0] ? 1 : 0;
                (p = g[t]), (m = (0, h.C)(p));
                for (let n = t; n < e && null !== g[n]; n++)
                  c
                    ? (0, i.k)(
                        (0, h.C)(g[n]) === c,
                        "All keyframes must be of the same type"
                      )
                    : ((c = (0, h.C)(g[n])),
                      (0, i.k)(
                        c === m || (v(m) && v(c)),
                        "Keyframes must be of the same dimension as the current value"
                      ));
              } else c = (0, h.C)(g);
              if (m !== c) {
                if (v(m) && v(c)) {
                  let e = d.get();
                  "string" == typeof e && d.set(parseFloat(e)),
                    "string" == typeof g
                      ? (t[s] = parseFloat(g))
                      : Array.isArray(g) &&
                        c === f.px &&
                        (t[s] = g.map(parseFloat));
                } else
                  (null == m ? void 0 : m.transform) &&
                  (null == c ? void 0 : c.transform) &&
                  (0 === p || 0 === g)
                    ? 0 === p
                      ? d.set(c.transform(p))
                      : (t[s] = m.transform(g))
                    : (o ||
                        ((a = (function (e) {
                          let t = [];
                          return (
                            S.forEach((n) => {
                              let r = e.getValue(n);
                              void 0 !== r &&
                                (t.push([n, r.get()]),
                                r.set(n.startsWith("scale") ? 1 : 0));
                            }),
                            t.length && e.render(),
                            t
                          );
                        })(e)),
                        (o = !0)),
                      l.push(s),
                      (r[s] = void 0 !== r[s] ? r[s] : t[s]),
                      d.jump(g));
              }
            }),
            !l.length)
          )
            return { target: t, transitionEnd: r };
          {
            let n = l.indexOf("height") >= 0 ? window.pageYOffset : null,
              i = M(t, e, l);
            return (
              a.length &&
                a.forEach(([t, n]) => {
                  e.getValue(t).set(n);
                }),
              e.render(),
              d.j && null !== n && window.scrollTo({ top: n }),
              { target: i, transitionEnd: r }
            );
          }
        },
        T = (e, t, n, r) => {
          var i, s;
          let o = (function (e, { ...t }, n) {
            let r = e.current;
            if (!(r instanceof Element)) return { target: t, transitionEnd: n };
            for (let i in (n && (n = { ...n }),
            e.values.forEach((e) => {
              let t = e.get();
              if (!(0, a.tm)(t)) return;
              let n = l(t, r);
              n && e.set(n);
            }),
            t)) {
              let e = t[i];
              if (!(0, a.tm)(e)) continue;
              let s = l(e, r);
              s && ((t[i] = s), n || (n = {}), void 0 === n[i] && (n[i] = e));
            }
            return { target: t, transitionEnd: n };
          })(e, t, r);
          return (
            (t = o.target),
            (r = o.transitionEnd),
            (i = t),
            (s = r),
            _(i) ? w(e, i, n, s) : { target: i, transitionEnd: s }
          );
        };
      var A = n(3933),
        C = n(8350);
      let R = { current: null },
        P = { current: !1 };
      var O = n(8069),
        L = n(226),
        I = n(7397),
        N = n(5815),
        D = n(3293),
        U = n(330),
        k = n(9764),
        F = n(7576),
        z = n(6427),
        B = n(6578),
        V = n(2972);
      let j = Object.keys(F.A),
        H = j.length,
        G = [
          "AnimationStart",
          "AnimationComplete",
          "Update",
          "BeforeLayoutMeasure",
          "LayoutMeasure",
          "LayoutAnimationStart",
          "LayoutAnimationComplete",
        ],
        W = z.V.length;
      class $ {
        constructor(
          {
            parent: e,
            props: t,
            presenceContext: n,
            reducedMotionConfig: r,
            visualState: i,
          },
          s = {}
        ) {
          (this.current = null),
            (this.children = new Set()),
            (this.isVariantNode = !1),
            (this.isControllingVariants = !1),
            (this.shouldReduceMotion = null),
            (this.values = new Map()),
            (this.features = {}),
            (this.valueSubscriptions = new Map()),
            (this.prevMotionValues = {}),
            (this.events = {}),
            (this.propEventSubscriptions = {}),
            (this.notifyUpdate = () =>
              this.notify("Update", this.latestValues)),
            (this.render = () => {
              this.current &&
                (this.triggerBuild(),
                this.renderInstance(
                  this.current,
                  this.renderState,
                  this.props.style,
                  this.projection
                ));
            }),
            (this.scheduleRender = () => V.Wi.render(this.render, !1, !0));
          let { latestValues: a, renderState: o } = i;
          (this.latestValues = a),
            (this.baseTarget = { ...a }),
            (this.initialValues = t.initial ? { ...a } : {}),
            (this.renderState = o),
            (this.parent = e),
            (this.props = t),
            (this.presenceContext = n),
            (this.depth = e ? e.depth + 1 : 0),
            (this.reducedMotionConfig = r),
            (this.options = s),
            (this.isControllingVariants = (0, D.G)(t)),
            (this.isVariantNode = (0, D.M)(t)),
            this.isVariantNode && (this.variantChildren = new Set()),
            (this.manuallyAnimateOnMount = !!(e && e.current));
          let { willChange: l, ...u } = this.scrapeMotionValuesFromProps(t, {});
          for (let e in u) {
            let t = u[e];
            void 0 !== a[e] &&
              (0, N.i)(t) &&
              (t.set(a[e], !1), (0, I.L)(l) && l.add(e));
          }
        }
        scrapeMotionValuesFromProps(e, t) {
          return {};
        }
        mount(e) {
          (this.current = e),
            B.R.set(e, this),
            this.projection &&
              !this.projection.instance &&
              this.projection.mount(e),
            this.parent &&
              this.isVariantNode &&
              !this.isControllingVariants &&
              (this.removeFromVariantTree = this.parent.addVariantChild(this)),
            this.values.forEach((e, t) => this.bindToMotionValue(t, e)),
            P.current ||
              (function () {
                if (((P.current = !0), d.j)) {
                  if (window.matchMedia) {
                    let e = window.matchMedia("(prefers-reduced-motion)"),
                      t = () => (R.current = e.matches);
                    e.addListener(t), t();
                  } else R.current = !1;
                }
              })(),
            (this.shouldReduceMotion =
              "never" !== this.reducedMotionConfig &&
              ("always" === this.reducedMotionConfig || R.current)),
            this.parent && this.parent.children.add(this),
            this.update(this.props, this.presenceContext);
        }
        unmount() {
          for (let e in (B.R.delete(this.current),
          this.projection && this.projection.unmount(),
          (0, V.Pn)(this.notifyUpdate),
          (0, V.Pn)(this.render),
          this.valueSubscriptions.forEach((e) => e()),
          this.removeFromVariantTree && this.removeFromVariantTree(),
          this.parent && this.parent.children.delete(this),
          this.events))
            this.events[e].clear();
          for (let e in this.features) this.features[e].unmount();
          this.current = null;
        }
        bindToMotionValue(e, t) {
          let n = c.G.has(e),
            r = t.on("change", (t) => {
              (this.latestValues[e] = t),
                this.props.onUpdate && V.Wi.update(this.notifyUpdate, !1, !0),
                n && this.projection && (this.projection.isTransformDirty = !0);
            }),
            i = t.on("renderRequest", this.scheduleRender);
          this.valueSubscriptions.set(e, () => {
            r(), i();
          });
        }
        sortNodePosition(e) {
          return this.current &&
            this.sortInstanceNodePosition &&
            this.type === e.type
            ? this.sortInstanceNodePosition(this.current, e.current)
            : 0;
        }
        loadFeatures({ children: e, ...t }, n, r, i) {
          let s, a;
          for (let e = 0; e < H; e++) {
            let n = j[e],
              {
                isEnabled: r,
                Feature: i,
                ProjectionNode: o,
                MeasureLayout: l,
              } = F.A[n];
            o && (s = o),
              r(t) &&
                (!this.features[n] && i && (this.features[n] = new i(this)),
                l && (a = l));
          }
          if (!this.projection && s) {
            this.projection = new s(
              this.latestValues,
              this.parent && this.parent.projection
            );
            let {
              layoutId: e,
              layout: n,
              drag: r,
              dragConstraints: a,
              layoutScroll: o,
              layoutRoot: l,
            } = t;
            this.projection.setOptions({
              layoutId: e,
              layout: n,
              alwaysMeasureLayout: !!r || (a && (0, C.I)(a)),
              visualElement: this,
              scheduleRender: () => this.scheduleRender(),
              animationType: "string" == typeof n ? n : "both",
              initialPromotionConfig: i,
              layoutScroll: o,
              layoutRoot: l,
            });
          }
          return a;
        }
        updateFeatures() {
          for (let e in this.features) {
            let t = this.features[e];
            t.isMounted ? t.update() : (t.mount(), (t.isMounted = !0));
          }
        }
        triggerBuild() {
          this.build(
            this.renderState,
            this.latestValues,
            this.options,
            this.props
          );
        }
        measureViewportBox() {
          return this.current
            ? this.measureInstanceViewportBox(this.current, this.props)
            : (0, A.dO)();
        }
        getStaticValue(e) {
          return this.latestValues[e];
        }
        setStaticValue(e, t) {
          this.latestValues[e] = t;
        }
        makeTargetAnimatable(e, t = !0) {
          return this.makeTargetAnimatableFromInstance(e, this.props, t);
        }
        update(e, t) {
          (e.transformTemplate || this.props.transformTemplate) &&
            this.scheduleRender(),
            (this.prevProps = this.props),
            (this.props = e),
            (this.prevPresenceContext = this.presenceContext),
            (this.presenceContext = t);
          for (let t = 0; t < G.length; t++) {
            let n = G[t];
            this.propEventSubscriptions[n] &&
              (this.propEventSubscriptions[n](),
              delete this.propEventSubscriptions[n]);
            let r = e["on" + n];
            r && (this.propEventSubscriptions[n] = this.on(n, r));
          }
          (this.prevMotionValues = (function (e, t, n) {
            let { willChange: r } = t;
            for (let i in t) {
              let s = t[i],
                a = n[i];
              if ((0, N.i)(s)) e.addValue(i, s), (0, I.L)(r) && r.add(i);
              else if ((0, N.i)(a))
                e.addValue(i, (0, L.BX)(s, { owner: e })),
                  (0, I.L)(r) && r.remove(i);
              else if (a !== s) {
                if (e.hasValue(i)) {
                  let t = e.getValue(i);
                  t.hasAnimated || t.set(s);
                } else {
                  let t = e.getStaticValue(i);
                  e.addValue(i, (0, L.BX)(void 0 !== t ? t : s, { owner: e }));
                }
              }
            }
            for (let r in n) void 0 === t[r] && e.removeValue(r);
            return t;
          })(
            this,
            this.scrapeMotionValuesFromProps(e, this.prevProps),
            this.prevMotionValues
          )),
            this.handleChildMotionValue && this.handleChildMotionValue();
        }
        getProps() {
          return this.props;
        }
        getVariant(e) {
          return this.props.variants ? this.props.variants[e] : void 0;
        }
        getDefaultTransition() {
          return this.props.transition;
        }
        getTransformPagePoint() {
          return this.props.transformPagePoint;
        }
        getClosestVariantNode() {
          return this.isVariantNode
            ? this
            : this.parent
            ? this.parent.getClosestVariantNode()
            : void 0;
        }
        getVariantContext(e = !1) {
          if (e) return this.parent ? this.parent.getVariantContext() : void 0;
          if (!this.isControllingVariants) {
            let e = (this.parent && this.parent.getVariantContext()) || {};
            return (
              void 0 !== this.props.initial && (e.initial = this.props.initial),
              e
            );
          }
          let t = {};
          for (let e = 0; e < W; e++) {
            let n = z.V[e],
              r = this.props[n];
            ((0, U.$)(r) || !1 === r) && (t[n] = r);
          }
          return t;
        }
        addVariantChild(e) {
          let t = this.getClosestVariantNode();
          if (t)
            return (
              t.variantChildren && t.variantChildren.add(e),
              () => t.variantChildren.delete(e)
            );
        }
        addValue(e, t) {
          t !== this.values.get(e) &&
            (this.removeValue(e), this.bindToMotionValue(e, t)),
            this.values.set(e, t),
            (this.latestValues[e] = t.get());
        }
        removeValue(e) {
          this.values.delete(e);
          let t = this.valueSubscriptions.get(e);
          t && (t(), this.valueSubscriptions.delete(e)),
            delete this.latestValues[e],
            this.removeValueFromRenderState(e, this.renderState);
        }
        hasValue(e) {
          return this.values.has(e);
        }
        getValue(e, t) {
          if (this.props.values && this.props.values[e])
            return this.props.values[e];
          let n = this.values.get(e);
          return (
            void 0 === n &&
              void 0 !== t &&
              ((n = (0, L.BX)(t, { owner: this })), this.addValue(e, n)),
            n
          );
        }
        readValue(e) {
          var t;
          return void 0 === this.latestValues[e] && this.current
            ? null !== (t = this.getBaseTargetFromProps(this.props, e)) &&
              void 0 !== t
              ? t
              : this.readValueFromInstance(this.current, e, this.options)
            : this.latestValues[e];
        }
        setBaseTarget(e, t) {
          this.baseTarget[e] = t;
        }
        getBaseTarget(e) {
          var t;
          let { initial: n } = this.props,
            r =
              "string" == typeof n || "object" == typeof n
                ? null === (t = (0, k.o)(this.props, n)) || void 0 === t
                  ? void 0
                  : t[e]
                : void 0;
          if (n && void 0 !== r) return r;
          let i = this.getBaseTargetFromProps(this.props, e);
          return void 0 === i || (0, N.i)(i)
            ? void 0 !== this.initialValues[e] && void 0 === r
              ? void 0
              : this.baseTarget[e]
            : i;
        }
        on(e, t) {
          return (
            this.events[e] || (this.events[e] = new O.L()),
            this.events[e].add(t)
          );
        }
        notify(e, ...t) {
          this.events[e] && this.events[e].notify(...t);
        }
      }
      class X extends $ {
        sortInstanceNodePosition(e, t) {
          return 2 & e.compareDocumentPosition(t) ? 1 : -1;
        }
        getBaseTargetFromProps(e, t) {
          return e.style ? e.style[t] : void 0;
        }
        removeValueFromRenderState(e, { vars: t, style: n }) {
          delete t[e], delete n[e];
        }
        makeTargetAnimatableFromInstance(
          { transition: e, transitionEnd: t, ...n },
          { transformValues: i },
          s
        ) {
          let a = (0, r.P$)(n, e || {}, this);
          if ((i && (t && (t = i(t)), n && (n = i(n)), a && (a = i(a))), s)) {
            (0, r.GJ)(this, n, a);
            let e = T(this, n, a, t);
            (t = e.transitionEnd), (n = e.target);
          }
          return { transition: e, transitionEnd: t, ...n };
        }
      }
    },
    3670: function (e, t, n) {
      "use strict";
      n.d(t, {
        E: function () {
          return t9;
        },
      });
      var r,
        i = n(2784),
        s = n(976);
      let a = (0, i.createContext)({});
      var o = n(7967),
        l = n(3617);
      let u = (0, i.createContext)({ strict: !1 });
      var c = n(8350),
        h = n(330),
        d = n(3293);
      function p(e) {
        return Array.isArray(e) ? e.join(" ") : e;
      }
      var f = n(7576),
        m = n(3791),
        g = n(3422);
      let _ = (0, i.createContext)({}),
        v = Symbol.for("motionComponentSymbol"),
        y = [
          "animate",
          "circle",
          "defs",
          "desc",
          "ellipse",
          "g",
          "image",
          "line",
          "filter",
          "marker",
          "mask",
          "metadata",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "rect",
          "stop",
          "switch",
          "symbol",
          "svg",
          "text",
          "tspan",
          "use",
          "view",
        ];
      function x(e) {
        if ("string" != typeof e || e.includes("-"));
        else if (y.indexOf(e) > -1 || /[A-Z]/.test(e)) return !0;
        return !1;
      }
      var b = n(1980),
        S = n(5815),
        E = n(2411);
      let M = () => ({
        style: {},
        transform: {},
        transformOrigin: {},
        vars: {},
      });
      function w(e, t, n) {
        for (let r in t) (0, S.i)(t[r]) || (0, b.j)(r, n) || (e[r] = t[r]);
      }
      function T(e, t, n) {
        let r = {},
          s = (function (e, t, n) {
            let r = e.style || {},
              s = {};
            return (
              w(s, r, e),
              Object.assign(
                s,
                (function ({ transformTemplate: e }, t, n) {
                  return (0, i.useMemo)(() => {
                    let r = M();
                    return (
                      (0, E.r)(r, t, { enableHardwareAcceleration: !n }, e),
                      Object.assign({}, r.vars, r.style)
                    );
                  }, [t]);
                })(e, t, n)
              ),
              e.transformValues ? e.transformValues(s) : s
            );
          })(e, t, n);
        return (
          e.drag &&
            !1 !== e.dragListener &&
            ((r.draggable = !1),
            (s.userSelect = s.WebkitUserSelect = s.WebkitTouchCallout = "none"),
            (s.touchAction =
              !0 === e.drag ? "none" : `pan-${"x" === e.drag ? "y" : "x"}`)),
          void 0 === e.tabIndex &&
            (e.onTap || e.onTapStart || e.whileTap) &&
            (r.tabIndex = 0),
          (r.style = s),
          r
        );
      }
      let A = new Set([
        "animate",
        "exit",
        "variants",
        "initial",
        "style",
        "values",
        "variants",
        "transition",
        "transformTemplate",
        "transformValues",
        "custom",
        "inherit",
        "onLayoutAnimationStart",
        "onLayoutAnimationComplete",
        "onLayoutMeasure",
        "onBeforeLayoutMeasure",
        "onAnimationStart",
        "onAnimationComplete",
        "onUpdate",
        "onDragStart",
        "onDrag",
        "onDragEnd",
        "onMeasureDragConstraints",
        "onDirectionLock",
        "onDragTransitionEnd",
        "_dragX",
        "_dragY",
        "onHoverStart",
        "onHoverEnd",
        "onViewportEnter",
        "onViewportLeave",
        "ignoreStrict",
        "viewport",
      ]);
      function C(e) {
        return (
          e.startsWith("while") ||
          (e.startsWith("drag") && "draggable" !== e) ||
          e.startsWith("layout") ||
          e.startsWith("onTap") ||
          e.startsWith("onPan") ||
          A.has(e)
        );
      }
      let R = (e) => !C(e);
      try {
        (r = require("@emotion/is-prop-valid").default) &&
          (R = (e) => (e.startsWith("on") ? !C(e) : r(e)));
      } catch (e) {}
      var P = n(658);
      let O = () => ({ ...M(), attrs: {} });
      var L = n(3336);
      function I(e, t, n, r) {
        let s = (0, i.useMemo)(() => {
          let n = O();
          return (
            (0, P.i)(
              n,
              t,
              { enableHardwareAcceleration: !1 },
              (0, L.a)(r),
              e.transformTemplate
            ),
            { ...n.attrs, style: { ...n.style } }
          );
        }, [t]);
        if (e.style) {
          let t = {};
          w(t, e.style, e), (s.style = { ...t, ...s.style });
        }
        return s;
      }
      var N = n(3517),
        D = n(7587),
        U = n(2816),
        k = n(9764),
        F = n(3105),
        z = n(3809);
      function B(e) {
        let t = (0, S.i)(e) ? e.get() : e;
        return (0, z.p)(t) ? t.toValue() : t;
      }
      let V = (e) => (t, n) => {
        let r = (0, i.useContext)(a),
          s = (0, i.useContext)(o.O),
          l = () =>
            (function (
              {
                scrapeMotionValuesFromProps: e,
                createRenderState: t,
                onMount: n,
              },
              r,
              i,
              s
            ) {
              let a = {
                latestValues: (function (e, t, n, r) {
                  let i = {},
                    s = r(e, {});
                  for (let e in s) i[e] = B(s[e]);
                  let { initial: a, animate: o } = e,
                    l = (0, d.G)(e),
                    u = (0, d.M)(e);
                  t &&
                    u &&
                    !l &&
                    !1 !== e.inherit &&
                    (void 0 === a && (a = t.initial),
                    void 0 === o && (o = t.animate));
                  let c = !!n && !1 === n.initial;
                  c = c || !1 === a;
                  let h = c ? o : a;
                  if (h && "boolean" != typeof h && !(0, U.H)(h)) {
                    let t = Array.isArray(h) ? h : [h];
                    t.forEach((t) => {
                      let n = (0, k.o)(e, t);
                      if (!n) return;
                      let { transitionEnd: r, transition: s, ...a } = n;
                      for (let e in a) {
                        let t = a[e];
                        if (Array.isArray(t)) {
                          let e = c ? t.length - 1 : 0;
                          t = t[e];
                        }
                        null !== t && (i[e] = t);
                      }
                      for (let e in r) i[e] = r[e];
                    });
                  }
                  return i;
                })(r, i, s, e),
                renderState: t(),
              };
              return n && (a.mount = (e) => n(r, e, a)), a;
            })(e, t, r, s);
        return n ? l() : (0, F.h)(l);
      };
      var j = n(2972);
      let H = {
        useVisualState: V({
          scrapeMotionValuesFromProps: D.U,
          createRenderState: O,
          onMount: (e, t, { renderState: n, latestValues: r }) => {
            j.Wi.read(() => {
              try {
                n.dimensions =
                  "function" == typeof t.getBBox
                    ? t.getBBox()
                    : t.getBoundingClientRect();
              } catch (e) {
                n.dimensions = { x: 0, y: 0, width: 0, height: 0 };
              }
            }),
              j.Wi.render(() => {
                (0, P.i)(
                  n,
                  r,
                  { enableHardwareAcceleration: !1 },
                  (0, L.a)(t.tagName),
                  e.transformTemplate
                ),
                  (0, N.K)(t, n);
              });
          },
        }),
      };
      var G = n(3921);
      let W = {
        useVisualState: V({
          scrapeMotionValuesFromProps: G.U,
          createRenderState: M,
        }),
      };
      function $(e, t, n, r = { passive: !0 }) {
        return e.addEventListener(t, n, r), () => e.removeEventListener(t, n);
      }
      let X = (e) =>
        "mouse" === e.pointerType
          ? "number" != typeof e.button || e.button <= 0
          : !1 !== e.isPrimary;
      function q(e, t = "page") {
        return { point: { x: e[t + "X"], y: e[t + "Y"] } };
      }
      let Y = (e) => (t) => X(t) && e(t, q(t));
      function J(e, t, n, r) {
        return $(e, t, Y(n), r);
      }
      var Z = n(6953);
      function K(e) {
        let t = null;
        return () =>
          null === t &&
          ((t = e),
          () => {
            t = null;
          });
      }
      let Q = K("dragHorizontal"),
        ee = K("dragVertical");
      function et(e) {
        let t = !1;
        if ("y" === e) t = ee();
        else if ("x" === e) t = Q();
        else {
          let e = Q(),
            n = ee();
          e && n
            ? (t = () => {
                e(), n();
              })
            : (e && e(), n && n());
        }
        return t;
      }
      function en() {
        let e = et(!0);
        return !e || (e(), !1);
      }
      class er {
        constructor(e) {
          (this.isMounted = !1), (this.node = e);
        }
        update() {}
      }
      function ei(e, t) {
        let n = "pointer" + (t ? "enter" : "leave"),
          r = "onHover" + (t ? "Start" : "End");
        return J(
          e.current,
          n,
          (n, i) => {
            if ("touch" === n.type || en()) return;
            let s = e.getProps();
            e.animationState &&
              s.whileHover &&
              e.animationState.setActive("whileHover", t),
              s[r] && j.Wi.update(() => s[r](n, i));
          },
          { passive: !e.getProps()[r] }
        );
      }
      let es = (e, t) => !!t && (e === t || es(e, t.parentElement));
      var ea = n(65);
      function eo(e, t) {
        if (!t) return;
        let n = new PointerEvent("pointer" + e);
        t(n, q(n));
      }
      let el = new WeakMap(),
        eu = new WeakMap(),
        ec = (e) => {
          let t = el.get(e.target);
          t && t(e);
        },
        eh = (e) => {
          e.forEach(ec);
        },
        ed = { some: 0, all: 1 };
      var ep = n(5721);
      function ef(e, t) {
        if (!Array.isArray(t)) return !1;
        let n = t.length;
        if (n !== e.length) return !1;
        for (let r = 0; r < n; r++) if (t[r] !== e[r]) return !1;
        return !0;
      }
      var em = n(2841),
        eg = n(6427),
        e_ = n(3715);
      function ev(e, t, n = {}) {
        let r = (0, em.x)(e, t, n.custom),
          { transition: i = e.getDefaultTransition() || {} } = r || {};
        n.transitionOverride && (i = n.transitionOverride);
        let s = r
            ? () => Promise.all((0, e_.w)(e, r, n))
            : () => Promise.resolve(),
          a =
            e.variantChildren && e.variantChildren.size
              ? (r = 0) => {
                  let {
                    delayChildren: s = 0,
                    staggerChildren: a,
                    staggerDirection: o,
                  } = i;
                  return (function (e, t, n = 0, r = 0, i = 1, s) {
                    let a = [],
                      o = (e.variantChildren.size - 1) * r,
                      l = 1 === i ? (e = 0) => e * r : (e = 0) => o - e * r;
                    return (
                      Array.from(e.variantChildren)
                        .sort(ey)
                        .forEach((e, r) => {
                          e.notify("AnimationStart", t),
                            a.push(
                              ev(e, t, { ...s, delay: n + l(r) }).then(() =>
                                e.notify("AnimationComplete", t)
                              )
                            );
                        }),
                      Promise.all(a)
                    );
                  })(e, t, s + r, a, o, n);
                }
              : () => Promise.resolve(),
          { when: o } = i;
        if (!o) return Promise.all([s(), a(n.delay)]);
        {
          let [e, t] = "beforeChildren" === o ? [s, a] : [a, s];
          return e().then(() => t());
        }
      }
      function ey(e, t) {
        return e.sortNodePosition(t);
      }
      let ex = [...eg.e].reverse(),
        eb = eg.e.length;
      function eS(e = !1) {
        return {
          isActive: e,
          protectedKeys: {},
          needsAnimating: {},
          prevResolvedValues: {},
        };
      }
      let eE = 0;
      var eM = n(7035),
        ew = n(1429);
      let eT = (e, t) => Math.abs(e - t);
      class eA {
        constructor(e, t, { transformPagePoint: n } = {}) {
          if (
            ((this.startEvent = null),
            (this.lastMoveEvent = null),
            (this.lastMoveEventInfo = null),
            (this.handlers = {}),
            (this.updatePoint = () => {
              if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
              let e = eP(this.lastMoveEventInfo, this.history),
                t = null !== this.startEvent,
                n =
                  (function (e, t) {
                    let n = eT(e.x, t.x),
                      r = eT(e.y, t.y);
                    return Math.sqrt(n ** 2 + r ** 2);
                  })(e.offset, { x: 0, y: 0 }) >= 3;
              if (!t && !n) return;
              let { point: r } = e,
                { timestamp: i } = j.frameData;
              this.history.push({ ...r, timestamp: i });
              let { onStart: s, onMove: a } = this.handlers;
              t ||
                (s && s(this.lastMoveEvent, e),
                (this.startEvent = this.lastMoveEvent)),
                a && a(this.lastMoveEvent, e);
            }),
            (this.handlePointerMove = (e, t) => {
              (this.lastMoveEvent = e),
                (this.lastMoveEventInfo = eC(t, this.transformPagePoint)),
                j.Wi.update(this.updatePoint, !0);
            }),
            (this.handlePointerUp = (e, t) => {
              if ((this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo)))
                return;
              let { onEnd: n, onSessionEnd: r } = this.handlers,
                i = eP(
                  "pointercancel" === e.type
                    ? this.lastMoveEventInfo
                    : eC(t, this.transformPagePoint),
                  this.history
                );
              this.startEvent && n && n(e, i), r && r(e, i);
            }),
            !X(e))
          )
            return;
          (this.handlers = t), (this.transformPagePoint = n);
          let r = q(e),
            i = eC(r, this.transformPagePoint),
            { point: s } = i,
            { timestamp: a } = j.frameData;
          this.history = [{ ...s, timestamp: a }];
          let { onSessionStart: o } = t;
          o && o(e, eP(i, this.history)),
            (this.removeListeners = (0, Z.z)(
              J(window, "pointermove", this.handlePointerMove),
              J(window, "pointerup", this.handlePointerUp),
              J(window, "pointercancel", this.handlePointerUp)
            ));
        }
        updateHandlers(e) {
          this.handlers = e;
        }
        end() {
          this.removeListeners && this.removeListeners(),
            (0, j.Pn)(this.updatePoint);
        }
      }
      function eC(e, t) {
        return t ? { point: t(e.point) } : e;
      }
      function eR(e, t) {
        return { x: e.x - t.x, y: e.y - t.y };
      }
      function eP({ point: e }, t) {
        return {
          point: e,
          delta: eR(e, eO(t)),
          offset: eR(e, t[0]),
          velocity: (function (e, t) {
            if (e.length < 2) return { x: 0, y: 0 };
            let n = e.length - 1,
              r = null,
              i = eO(e);
            for (
              ;
              n >= 0 &&
              ((r = e[n]), !(i.timestamp - r.timestamp > (0, ew.w)(0.1)));

            )
              n--;
            if (!r) return { x: 0, y: 0 };
            let s = (0, ew.X)(i.timestamp - r.timestamp);
            if (0 === s) return { x: 0, y: 0 };
            let a = { x: (i.x - r.x) / s, y: (i.y - r.y) / s };
            return a.x === 1 / 0 && (a.x = 0), a.y === 1 / 0 && (a.y = 0), a;
          })(t, 0),
        };
      }
      function eO(e) {
        return e[e.length - 1];
      }
      var eL = n(7475),
        eI = n(5339);
      function eN(e) {
        return e.max - e.min;
      }
      function eD(e, t = 0, n = 0.01) {
        return Math.abs(e - t) <= n;
      }
      function eU(e, t, n, r = 0.5) {
        (e.origin = r),
          (e.originPoint = (0, eI.C)(t.min, t.max, e.origin)),
          (e.scale = eN(n) / eN(t)),
          (eD(e.scale, 1, 1e-4) || isNaN(e.scale)) && (e.scale = 1),
          (e.translate = (0, eI.C)(n.min, n.max, e.origin) - e.originPoint),
          (eD(e.translate) || isNaN(e.translate)) && (e.translate = 0);
      }
      function ek(e, t, n, r) {
        eU(e.x, t.x, n.x, r ? r.originX : void 0),
          eU(e.y, t.y, n.y, r ? r.originY : void 0);
      }
      function eF(e, t, n) {
        (e.min = n.min + t.min), (e.max = e.min + eN(t));
      }
      function ez(e, t, n) {
        (e.min = t.min - n.min), (e.max = e.min + eN(t));
      }
      function eB(e, t, n) {
        ez(e.x, t.x, n.x), ez(e.y, t.y, n.y);
      }
      var eV = n(1366);
      function ej(e, t, n) {
        return {
          min: void 0 !== t ? e.min + t : void 0,
          max: void 0 !== n ? e.max + n - (e.max - e.min) : void 0,
        };
      }
      function eH(e, t) {
        let n = t.min - e.min,
          r = t.max - e.max;
        return (
          t.max - t.min < e.max - e.min && ([n, r] = [r, n]), { min: n, max: r }
        );
      }
      function eG(e, t, n) {
        return { min: eW(e, t), max: eW(e, n) };
      }
      function eW(e, t) {
        return "number" == typeof e ? e : e[t] || 0;
      }
      var e$ = n(3933);
      function eX(e) {
        return [e("x"), e("y")];
      }
      var eq = n(5579),
        eY = n(7222),
        eJ = n(8772),
        eZ = n(4737);
      let eK = new WeakMap();
      class eQ {
        constructor(e) {
          (this.openGlobalLock = null),
            (this.isDragging = !1),
            (this.currentDirection = null),
            (this.originPoint = { x: 0, y: 0 }),
            (this.constraints = !1),
            (this.hasMutatedConstraints = !1),
            (this.elastic = (0, e$.dO)()),
            (this.visualElement = e);
        }
        start(e, { snapToCursor: t = !1 } = {}) {
          let { presenceContext: n } = this.visualElement;
          (n && !1 === n.isPresent) ||
            (this.panSession = new eA(
              e,
              {
                onSessionStart: (e) => {
                  this.stopAnimation(),
                    t && this.snapToCursor(q(e, "page").point);
                },
                onStart: (e, t) => {
                  let {
                    drag: n,
                    dragPropagation: r,
                    onDragStart: i,
                  } = this.getProps();
                  if (
                    n &&
                    !r &&
                    (this.openGlobalLock && this.openGlobalLock(),
                    (this.openGlobalLock = et(n)),
                    !this.openGlobalLock)
                  )
                    return;
                  (this.isDragging = !0),
                    (this.currentDirection = null),
                    this.resolveConstraints(),
                    this.visualElement.projection &&
                      ((this.visualElement.projection.isAnimationBlocked = !0),
                      (this.visualElement.projection.target = void 0)),
                    eX((e) => {
                      let t = this.getAxisMotionValue(e).get() || 0;
                      if (eJ.aQ.test(t)) {
                        let { projection: n } = this.visualElement;
                        if (n && n.layout) {
                          let r = n.layout.layoutBox[e];
                          if (r) {
                            let e = eN(r);
                            t = e * (parseFloat(t) / 100);
                          }
                        }
                      }
                      this.originPoint[e] = t;
                    }),
                    i && j.Wi.update(() => i(e, t), !1, !0);
                  let { animationState: s } = this.visualElement;
                  s && s.setActive("whileDrag", !0);
                },
                onMove: (e, t) => {
                  let {
                    dragPropagation: n,
                    dragDirectionLock: r,
                    onDirectionLock: i,
                    onDrag: s,
                  } = this.getProps();
                  if (!n && !this.openGlobalLock) return;
                  let { offset: a } = t;
                  if (r && null === this.currentDirection) {
                    (this.currentDirection = (function (e, t = 10) {
                      let n = null;
                      return (
                        Math.abs(e.y) > t
                          ? (n = "y")
                          : Math.abs(e.x) > t && (n = "x"),
                        n
                      );
                    })(a)),
                      null !== this.currentDirection &&
                        i &&
                        i(this.currentDirection);
                    return;
                  }
                  this.updateAxis("x", t.point, a),
                    this.updateAxis("y", t.point, a),
                    this.visualElement.render(),
                    s && s(e, t);
                },
                onSessionEnd: (e, t) => this.stop(e, t),
              },
              { transformPagePoint: this.visualElement.getTransformPagePoint() }
            ));
        }
        stop(e, t) {
          let n = this.isDragging;
          if ((this.cancel(), !n)) return;
          let { velocity: r } = t;
          this.startAnimation(r);
          let { onDragEnd: i } = this.getProps();
          i && j.Wi.update(() => i(e, t));
        }
        cancel() {
          this.isDragging = !1;
          let { projection: e, animationState: t } = this.visualElement;
          e && (e.isAnimationBlocked = !1),
            this.panSession && this.panSession.end(),
            (this.panSession = void 0);
          let { dragPropagation: n } = this.getProps();
          !n &&
            this.openGlobalLock &&
            (this.openGlobalLock(), (this.openGlobalLock = null)),
            t && t.setActive("whileDrag", !1);
        }
        updateAxis(e, t, n) {
          let { drag: r } = this.getProps();
          if (!n || !e0(e, r, this.currentDirection)) return;
          let i = this.getAxisMotionValue(e),
            s = this.originPoint[e] + n[e];
          this.constraints &&
            this.constraints[e] &&
            (s = (function (e, { min: t, max: n }, r) {
              return (
                void 0 !== t && e < t
                  ? (e = r ? (0, eI.C)(t, e, r.min) : Math.max(e, t))
                  : void 0 !== n &&
                    e > n &&
                    (e = r ? (0, eI.C)(n, e, r.max) : Math.min(e, n)),
                e
              );
            })(s, this.constraints[e], this.elastic[e])),
            i.set(s);
        }
        resolveConstraints() {
          let { dragConstraints: e, dragElastic: t } = this.getProps(),
            { layout: n } = this.visualElement.projection || {},
            r = this.constraints;
          e && (0, c.I)(e)
            ? this.constraints ||
              (this.constraints = this.resolveRefConstraints())
            : e && n
            ? (this.constraints = (function (
                e,
                { top: t, left: n, bottom: r, right: i }
              ) {
                return { x: ej(e.x, n, i), y: ej(e.y, t, r) };
              })(n.layoutBox, e))
            : (this.constraints = !1),
            (this.elastic = (function (e = 0.35) {
              return (
                !1 === e ? (e = 0) : !0 === e && (e = 0.35),
                { x: eG(e, "left", "right"), y: eG(e, "top", "bottom") }
              );
            })(t)),
            r !== this.constraints &&
              n &&
              this.constraints &&
              !this.hasMutatedConstraints &&
              eX((e) => {
                this.getAxisMotionValue(e) &&
                  (this.constraints[e] = (function (e, t) {
                    let n = {};
                    return (
                      void 0 !== t.min && (n.min = t.min - e.min),
                      void 0 !== t.max && (n.max = t.max - e.min),
                      n
                    );
                  })(n.layoutBox[e], this.constraints[e]));
              });
        }
        resolveRefConstraints() {
          var e;
          let { dragConstraints: t, onMeasureDragConstraints: n } =
            this.getProps();
          if (!t || !(0, c.I)(t)) return !1;
          let r = t.current;
          (0, eM.k)(
            null !== r,
            "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop."
          );
          let { projection: i } = this.visualElement;
          if (!i || !i.layout) return !1;
          let s = (0, eq.z)(
              r,
              i.root,
              this.visualElement.getTransformPagePoint()
            ),
            a = { x: eH((e = i.layout.layoutBox).x, s.x), y: eH(e.y, s.y) };
          if (n) {
            let e = n((0, eY.z2)(a));
            (this.hasMutatedConstraints = !!e), e && (a = (0, eY.i8)(e));
          }
          return a;
        }
        startAnimation(e) {
          let {
              drag: t,
              dragMomentum: n,
              dragElastic: r,
              dragTransition: i,
              dragSnapToOrigin: s,
              onDragTransitionEnd: a,
            } = this.getProps(),
            o = this.constraints || {},
            l = eX((a) => {
              if (!e0(a, t, this.currentDirection)) return;
              let l = (o && o[a]) || {};
              s && (l = { min: 0, max: 0 });
              let u = {
                type: "inertia",
                velocity: n ? e[a] : 0,
                bounceStiffness: r ? 200 : 1e6,
                bounceDamping: r ? 40 : 1e7,
                timeConstant: 750,
                restDelta: 1,
                restSpeed: 10,
                ...i,
                ...l,
              };
              return this.startAxisValueAnimation(a, u);
            });
          return Promise.all(l).then(a);
        }
        startAxisValueAnimation(e, t) {
          let n = this.getAxisMotionValue(e);
          return n.start((0, eZ.v)(e, n, 0, t));
        }
        stopAnimation() {
          eX((e) => this.getAxisMotionValue(e).stop());
        }
        getAxisMotionValue(e) {
          let t = "_drag" + e.toUpperCase(),
            n = this.visualElement.getProps(),
            r = n[t];
          return (
            r ||
            this.visualElement.getValue(
              e,
              (n.initial ? n.initial[e] : void 0) || 0
            )
          );
        }
        snapToCursor(e) {
          eX((t) => {
            let { drag: n } = this.getProps();
            if (!e0(t, n, this.currentDirection)) return;
            let { projection: r } = this.visualElement,
              i = this.getAxisMotionValue(t);
            if (r && r.layout) {
              let { min: n, max: s } = r.layout.layoutBox[t];
              i.set(e[t] - (0, eI.C)(n, s, 0.5));
            }
          });
        }
        scalePositionWithinConstraints() {
          if (!this.visualElement.current) return;
          let { drag: e, dragConstraints: t } = this.getProps(),
            { projection: n } = this.visualElement;
          if (!(0, c.I)(t) || !n || !this.constraints) return;
          this.stopAnimation();
          let r = { x: 0, y: 0 };
          eX((e) => {
            let t = this.getAxisMotionValue(e);
            if (t) {
              let n = t.get();
              r[e] = (function (e, t) {
                let n = 0.5,
                  r = eN(e),
                  i = eN(t);
                return (
                  i > r
                    ? (n = (0, eL.Y)(t.min, t.max - r, e.min))
                    : r > i && (n = (0, eL.Y)(e.min, e.max - i, t.min)),
                  (0, eV.u)(0, 1, n)
                );
              })({ min: n, max: n }, this.constraints[e]);
            }
          });
          let { transformTemplate: i } = this.visualElement.getProps();
          (this.visualElement.current.style.transform = i ? i({}, "") : "none"),
            n.root && n.root.updateScroll(),
            n.updateLayout(),
            this.resolveConstraints(),
            eX((t) => {
              if (!e0(t, e, null)) return;
              let n = this.getAxisMotionValue(t),
                { min: i, max: s } = this.constraints[t];
              n.set((0, eI.C)(i, s, r[t]));
            });
        }
        addListeners() {
          if (!this.visualElement.current) return;
          eK.set(this.visualElement, this);
          let e = this.visualElement.current,
            t = J(e, "pointerdown", (e) => {
              let { drag: t, dragListener: n = !0 } = this.getProps();
              t && n && this.start(e);
            }),
            n = () => {
              let { dragConstraints: e } = this.getProps();
              (0, c.I)(e) && (this.constraints = this.resolveRefConstraints());
            },
            { projection: r } = this.visualElement,
            i = r.addEventListener("measure", n);
          r && !r.layout && (r.root && r.root.updateScroll(), r.updateLayout()),
            n();
          let s = $(window, "resize", () =>
              this.scalePositionWithinConstraints()
            ),
            a = r.addEventListener(
              "didUpdate",
              ({ delta: e, hasLayoutChanged: t }) => {
                this.isDragging &&
                  t &&
                  (eX((t) => {
                    let n = this.getAxisMotionValue(t);
                    n &&
                      ((this.originPoint[t] += e[t].translate),
                      n.set(n.get() + e[t].translate));
                  }),
                  this.visualElement.render());
              }
            );
          return () => {
            s(), t(), i(), a && a();
          };
        }
        getProps() {
          let e = this.visualElement.getProps(),
            {
              drag: t = !1,
              dragDirectionLock: n = !1,
              dragPropagation: r = !1,
              dragConstraints: i = !1,
              dragElastic: s = 0.35,
              dragMomentum: a = !0,
            } = e;
          return {
            ...e,
            drag: t,
            dragDirectionLock: n,
            dragPropagation: r,
            dragConstraints: i,
            dragElastic: s,
            dragMomentum: a,
          };
        }
      }
      function e0(e, t, n) {
        return (!0 === t || t === e) && (null === n || n === e);
      }
      let e1 = (e) => (t, n) => {
          e && j.Wi.update(() => e(t, n));
        },
        e2 = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
      function e3(e, t) {
        return t.max === t.min ? 0 : (e / (t.max - t.min)) * 100;
      }
      let e4 = {
        correct: (e, t) => {
          if (!t.target) return e;
          if ("string" == typeof e) {
            if (!eJ.px.test(e)) return e;
            e = parseFloat(e);
          }
          let n = e3(e, t.target.x),
            r = e3(e, t.target.y);
          return `${n}% ${r}%`;
        },
      };
      var e5 = n(6865),
        e6 = n(4599);
      class e8 extends i.Component {
        componentDidMount() {
          let {
              visualElement: e,
              layoutGroup: t,
              switchLayoutGroup: n,
              layoutId: r,
            } = this.props,
            { projection: i } = e;
          (0, e6.B)(e9),
            i &&
              (t.group && t.group.add(i),
              n && n.register && r && n.register(i),
              i.root.didUpdate(),
              i.addEventListener("animationComplete", () => {
                this.safeToRemove();
              }),
              i.setOptions({
                ...i.options,
                onExitComplete: () => this.safeToRemove(),
              })),
            (e2.hasEverUpdated = !0);
        }
        getSnapshotBeforeUpdate(e) {
          let {
              layoutDependency: t,
              visualElement: n,
              drag: r,
              isPresent: i,
            } = this.props,
            s = n.projection;
          return (
            s &&
              ((s.isPresent = i),
              r || e.layoutDependency !== t || void 0 === t
                ? s.willUpdate()
                : this.safeToRemove(),
              e.isPresent === i ||
                (i
                  ? s.promote()
                  : s.relegate() ||
                    j.Wi.postRender(() => {
                      let e = s.getStack();
                      (e && e.members.length) || this.safeToRemove();
                    }))),
            null
          );
        }
        componentDidUpdate() {
          let { projection: e } = this.props.visualElement;
          e &&
            (e.root.didUpdate(),
            queueMicrotask(() => {
              !e.currentAnimation && e.isLead() && this.safeToRemove();
            }));
        }
        componentWillUnmount() {
          let {
              visualElement: e,
              layoutGroup: t,
              switchLayoutGroup: n,
            } = this.props,
            { projection: r } = e;
          r &&
            (r.scheduleCheckAfterUnmount(),
            t && t.group && t.group.remove(r),
            n && n.deregister && n.deregister(r));
        }
        safeToRemove() {
          let { safeToRemove: e } = this.props;
          e && e();
        }
        render() {
          return null;
        }
      }
      function e7(e) {
        let [t, n] = (function () {
            let e = (0, i.useContext)(o.O);
            if (null === e) return [!0, null];
            let { isPresent: t, onExitComplete: n, register: r } = e,
              s = (0, i.useId)();
            return (
              (0, i.useEffect)(() => r(s), []),
              !t && n ? [!1, () => n && n(s)] : [!0]
            );
          })(),
          r = (0, i.useContext)(g.p);
        return i.createElement(e8, {
          ...e,
          layoutGroup: r,
          switchLayoutGroup: (0, i.useContext)(_),
          isPresent: t,
          safeToRemove: n,
        });
      }
      let e9 = {
        borderRadius: {
          ...e4,
          applyTo: [
            "borderTopLeftRadius",
            "borderTopRightRadius",
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
          ],
        },
        borderTopLeftRadius: e4,
        borderTopRightRadius: e4,
        borderBottomLeftRadius: e4,
        borderBottomRightRadius: e4,
        boxShadow: {
          correct: (e, { treeScale: t, projectionDelta: n }) => {
            let r = e5.P.parse(e);
            if (r.length > 5) return e;
            let i = e5.P.createTransformer(e),
              s = "number" != typeof r[0] ? 1 : 0,
              a = n.x.scale * t.x,
              o = n.y.scale * t.y;
            (r[0 + s] /= a), (r[1 + s] /= o);
            let l = (0, eI.C)(a, o, 0.5);
            return (
              "number" == typeof r[2 + s] && (r[2 + s] /= l),
              "number" == typeof r[3 + s] && (r[3 + s] /= l),
              i(r)
            );
          },
        },
      };
      var te = n(8069),
        tt = n(1469);
      let tn = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
        tr = tn.length,
        ti = (e) => ("string" == typeof e ? parseFloat(e) : e),
        ts = (e) => "number" == typeof e || eJ.px.test(e);
      function ta(e, t) {
        return void 0 !== e[t] ? e[t] : e.borderRadius;
      }
      let to = tu(0, 0.5, tt.Bn),
        tl = tu(0.5, 0.95, ea.Z);
      function tu(e, t, n) {
        return (r) => (r < e ? 0 : r > t ? 1 : n((0, eL.Y)(e, t, r)));
      }
      function tc(e, t) {
        (e.min = t.min), (e.max = t.max);
      }
      function th(e, t) {
        tc(e.x, t.x), tc(e.y, t.y);
      }
      var td = n(2217);
      function tp(e, t, n, r, i) {
        return (
          (e -= t),
          (e = (0, td.q2)(e, 1 / n, r)),
          void 0 !== i && (e = (0, td.q2)(e, 1 / i, r)),
          e
        );
      }
      function tf(e, t, [n, r, i], s, a) {
        !(function (e, t = 0, n = 1, r = 0.5, i, s = e, a = e) {
          if (eJ.aQ.test(t)) {
            t = parseFloat(t);
            let e = (0, eI.C)(a.min, a.max, t / 100);
            t = e - a.min;
          }
          if ("number" != typeof t) return;
          let o = (0, eI.C)(s.min, s.max, r);
          e === s && (o -= t),
            (e.min = tp(e.min, t, n, o, i)),
            (e.max = tp(e.max, t, n, o, i));
        })(e, t[n], t[r], t[i], t.scale, s, a);
      }
      let tm = ["x", "scaleX", "originX"],
        tg = ["y", "scaleY", "originY"];
      function t_(e, t, n, r) {
        tf(e.x, t, tm, n ? n.x : void 0, r ? r.x : void 0),
          tf(e.y, t, tg, n ? n.y : void 0, r ? r.y : void 0);
      }
      var tv = n(3172);
      function ty(e) {
        return 0 === e.translate && 1 === e.scale;
      }
      function tx(e) {
        return ty(e.x) && ty(e.y);
      }
      function tb(e, t) {
        return (
          Math.round(e.x.min) === Math.round(t.x.min) &&
          Math.round(e.x.max) === Math.round(t.x.max) &&
          Math.round(e.y.min) === Math.round(t.y.min) &&
          Math.round(e.y.max) === Math.round(t.y.max)
        );
      }
      function tS(e) {
        return eN(e.x) / eN(e.y);
      }
      var tE = n(4866);
      class tM {
        constructor() {
          this.members = [];
        }
        add(e) {
          (0, tE.y4)(this.members, e), e.scheduleRender();
        }
        remove(e) {
          if (
            ((0, tE.cl)(this.members, e),
            e === this.prevLead && (this.prevLead = void 0),
            e === this.lead)
          ) {
            let e = this.members[this.members.length - 1];
            e && this.promote(e);
          }
        }
        relegate(e) {
          let t;
          let n = this.members.findIndex((t) => e === t);
          if (0 === n) return !1;
          for (let e = n; e >= 0; e--) {
            let n = this.members[e];
            if (!1 !== n.isPresent) {
              t = n;
              break;
            }
          }
          return !!t && (this.promote(t), !0);
        }
        promote(e, t) {
          let n = this.lead;
          if (e !== n && ((this.prevLead = n), (this.lead = e), e.show(), n)) {
            n.instance && n.scheduleRender(),
              e.scheduleRender(),
              (e.resumeFrom = n),
              t && (e.resumeFrom.preserveOpacity = !0),
              n.snapshot &&
                ((e.snapshot = n.snapshot),
                (e.snapshot.latestValues =
                  n.animationValues || n.latestValues)),
              e.root && e.root.isUpdating && (e.isLayoutDirty = !0);
            let { crossfade: r } = e.options;
            !1 === r && n.hide();
          }
        }
        exitAnimationComplete() {
          this.members.forEach((e) => {
            let { options: t, resumingFrom: n } = e;
            t.onExitComplete && t.onExitComplete(),
              n && n.options.onExitComplete && n.options.onExitComplete();
          });
        }
        scheduleRender() {
          this.members.forEach((e) => {
            e.instance && e.scheduleRender(!1);
          });
        }
        removeLeadSnapshot() {
          this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
        }
      }
      function tw(e, t, n) {
        let r = "",
          i = e.x.translate / t.x,
          s = e.y.translate / t.y;
        if (
          ((i || s) && (r = `translate3d(${i}px, ${s}px, 0) `),
          (1 !== t.x || 1 !== t.y) && (r += `scale(${1 / t.x}, ${1 / t.y}) `),
          n)
        ) {
          let { rotate: e, rotateX: t, rotateY: i } = n;
          e && (r += `rotate(${e}deg) `),
            t && (r += `rotateX(${t}deg) `),
            i && (r += `rotateY(${i}deg) `);
        }
        let a = e.x.scale * t.x,
          o = e.y.scale * t.y;
        return (1 !== a || 1 !== o) && (r += `scale(${a}, ${o})`), r || "none";
      }
      var tT = n(8749);
      let tA = (e, t) => e.depth - t.depth;
      class tC {
        constructor() {
          (this.children = []), (this.isDirty = !1);
        }
        add(e) {
          (0, tE.y4)(this.children, e), (this.isDirty = !0);
        }
        remove(e) {
          (0, tE.cl)(this.children, e), (this.isDirty = !0);
        }
        forEach(e) {
          this.isDirty && this.children.sort(tA),
            (this.isDirty = !1),
            this.children.forEach(e);
        }
      }
      var tR = n(8650),
        tP = n(4197);
      let tO = ["", "X", "Y", "Z"],
        tL = 0,
        tI = {
          type: "projectionFrame",
          totalNodes: 0,
          resolvedTargetDeltas: 0,
          recalculatedProjection: 0,
        };
      function tN({
        attachResizeListener: e,
        defaultParent: t,
        measureScroll: n,
        checkIsScrollRoot: r,
        resetTransform: i,
      }) {
        return class {
          constructor(e = {}, n = null == t ? void 0 : t()) {
            (this.id = tL++),
              (this.animationId = 0),
              (this.children = new Set()),
              (this.options = {}),
              (this.isTreeAnimating = !1),
              (this.isAnimationBlocked = !1),
              (this.isLayoutDirty = !1),
              (this.isProjectionDirty = !1),
              (this.isSharedProjectionDirty = !1),
              (this.isTransformDirty = !1),
              (this.updateManuallyBlocked = !1),
              (this.updateBlockedByResize = !1),
              (this.isUpdating = !1),
              (this.isSVG = !1),
              (this.needsReset = !1),
              (this.shouldResetTransform = !1),
              (this.treeScale = { x: 1, y: 1 }),
              (this.eventHandlers = new Map()),
              (this.hasTreeAnimated = !1),
              (this.updateScheduled = !1),
              (this.checkUpdateFailed = () => {
                this.isUpdating &&
                  ((this.isUpdating = !1), this.clearAllSnapshots());
              }),
              (this.updateProjection = () => {
                (tI.totalNodes =
                  tI.resolvedTargetDeltas =
                  tI.recalculatedProjection =
                    0),
                  this.nodes.forEach(tk),
                  this.nodes.forEach(tG),
                  this.nodes.forEach(tW),
                  this.nodes.forEach(tF),
                  window.MotionDebug && window.MotionDebug.record(tI);
              }),
              (this.hasProjected = !1),
              (this.isVisible = !0),
              (this.animationProgress = 0),
              (this.sharedNodes = new Map()),
              (this.latestValues = e),
              (this.root = n ? n.root || n : this),
              (this.path = n ? [...n.path, n] : []),
              (this.parent = n),
              (this.depth = n ? n.depth + 1 : 0);
            for (let e = 0; e < this.path.length; e++)
              this.path[e].shouldResetTransform = !0;
            this.root === this && (this.nodes = new tC());
          }
          addEventListener(e, t) {
            return (
              this.eventHandlers.has(e) ||
                this.eventHandlers.set(e, new te.L()),
              this.eventHandlers.get(e).add(t)
            );
          }
          notifyListeners(e, ...t) {
            let n = this.eventHandlers.get(e);
            n && n.notify(...t);
          }
          hasListeners(e) {
            return this.eventHandlers.has(e);
          }
          mount(t, n = this.root.hasTreeAnimated) {
            if (this.instance) return;
            (this.isSVG = (0, tR.v)(t)), (this.instance = t);
            let { layoutId: r, layout: i, visualElement: s } = this.options;
            if (
              (s && !s.current && s.mount(t),
              this.root.nodes.add(this),
              this.parent && this.parent.children.add(this),
              n && (i || r) && (this.isLayoutDirty = !0),
              e)
            ) {
              let n;
              let r = () => (this.root.updateBlockedByResize = !1);
              e(t, () => {
                (this.root.updateBlockedByResize = !0),
                  n && n(),
                  (n = (function (e, t) {
                    let n = performance.now(),
                      r = ({ timestamp: i }) => {
                        let s = i - n;
                        s >= t && ((0, j.Pn)(r), e(s - t));
                      };
                    return j.Wi.read(r, !0), () => (0, j.Pn)(r);
                  })(r, 250)),
                  e2.hasAnimatedSinceResize &&
                    ((e2.hasAnimatedSinceResize = !1), this.nodes.forEach(tH));
              });
            }
            r && this.root.registerSharedNode(r, this),
              !1 !== this.options.animate &&
                s &&
                (r || i) &&
                this.addEventListener(
                  "didUpdate",
                  ({
                    delta: e,
                    hasLayoutChanged: t,
                    hasRelativeTargetChanged: n,
                    layout: r,
                  }) => {
                    if (this.isTreeAnimationBlocked()) {
                      (this.target = void 0), (this.relativeTarget = void 0);
                      return;
                    }
                    let i =
                        this.options.transition ||
                        s.getDefaultTransition() ||
                        tZ,
                      {
                        onLayoutAnimationStart: a,
                        onLayoutAnimationComplete: o,
                      } = s.getProps(),
                      l = !this.targetLayout || !tb(this.targetLayout, r) || n,
                      u = !t && n;
                    if (
                      this.options.layoutRoot ||
                      (this.resumeFrom && this.resumeFrom.instance) ||
                      u ||
                      (t && (l || !this.currentAnimation))
                    ) {
                      this.resumeFrom &&
                        ((this.resumingFrom = this.resumeFrom),
                        (this.resumingFrom.resumingFrom = void 0)),
                        this.setAnimationOrigin(e, u);
                      let t = {
                        ...(0, tv.e)(i, "layout"),
                        onPlay: a,
                        onComplete: o,
                      };
                      (s.shouldReduceMotion || this.options.layoutRoot) &&
                        ((t.delay = 0), (t.type = !1)),
                        this.startAnimation(t);
                    } else
                      t || tH(this),
                        this.isLead() &&
                          this.options.onExitComplete &&
                          this.options.onExitComplete();
                    this.targetLayout = r;
                  }
                );
          }
          unmount() {
            this.options.layoutId && this.willUpdate(),
              this.root.nodes.remove(this);
            let e = this.getStack();
            e && e.remove(this),
              this.parent && this.parent.children.delete(this),
              (this.instance = void 0),
              (0, j.Pn)(this.updateProjection);
          }
          blockUpdate() {
            this.updateManuallyBlocked = !0;
          }
          unblockUpdate() {
            this.updateManuallyBlocked = !1;
          }
          isUpdateBlocked() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
          }
          isTreeAnimationBlocked() {
            return (
              this.isAnimationBlocked ||
              (this.parent && this.parent.isTreeAnimationBlocked()) ||
              !1
            );
          }
          startUpdate() {
            !this.isUpdateBlocked() &&
              ((this.isUpdating = !0),
              this.nodes && this.nodes.forEach(t$),
              this.animationId++);
          }
          getTransformTemplate() {
            let { visualElement: e } = this.options;
            return e && e.getProps().transformTemplate;
          }
          willUpdate(e = !0) {
            if (
              ((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())
            ) {
              this.options.onExitComplete && this.options.onExitComplete();
              return;
            }
            if (
              (this.root.isUpdating || this.root.startUpdate(),
              this.isLayoutDirty)
            )
              return;
            this.isLayoutDirty = !0;
            for (let e = 0; e < this.path.length; e++) {
              let t = this.path[e];
              (t.shouldResetTransform = !0),
                t.updateScroll("snapshot"),
                t.options.layoutRoot && t.willUpdate(!1);
            }
            let { layoutId: t, layout: n } = this.options;
            if (void 0 === t && !n) return;
            let r = this.getTransformTemplate();
            (this.prevTransformTemplateValue = r
              ? r(this.latestValues, "")
              : void 0),
              this.updateSnapshot(),
              e && this.notifyListeners("willUpdate");
          }
          update() {
            this.updateScheduled = !1;
            let e = this.isUpdateBlocked();
            if (e) {
              this.unblockUpdate(),
                this.clearAllSnapshots(),
                this.nodes.forEach(tB);
              return;
            }
            this.isUpdating || this.nodes.forEach(tV),
              (this.isUpdating = !1),
              this.nodes.forEach(tj),
              this.nodes.forEach(tD),
              this.nodes.forEach(tU),
              this.clearAllSnapshots();
            let t = performance.now();
            (j.frameData.delta = (0, eV.u)(
              0,
              1e3 / 60,
              t - j.frameData.timestamp
            )),
              (j.frameData.timestamp = t),
              (j.frameData.isProcessing = !0),
              j.S6.update.process(j.frameData),
              j.S6.preRender.process(j.frameData),
              j.S6.render.process(j.frameData),
              (j.frameData.isProcessing = !1);
          }
          didUpdate() {
            this.updateScheduled ||
              ((this.updateScheduled = !0),
              queueMicrotask(() => this.update()));
          }
          clearAllSnapshots() {
            this.nodes.forEach(tz), this.sharedNodes.forEach(tX);
          }
          scheduleUpdateProjection() {
            j.Wi.preRender(this.updateProjection, !1, !0);
          }
          scheduleCheckAfterUnmount() {
            j.Wi.postRender(() => {
              this.isLayoutDirty
                ? this.root.didUpdate()
                : this.root.checkUpdateFailed();
            });
          }
          updateSnapshot() {
            !this.snapshot && this.instance && (this.snapshot = this.measure());
          }
          updateLayout() {
            if (
              !this.instance ||
              (this.updateScroll(),
              !(this.options.alwaysMeasureLayout && this.isLead()) &&
                !this.isLayoutDirty)
            )
              return;
            if (this.resumeFrom && !this.resumeFrom.instance)
              for (let e = 0; e < this.path.length; e++) {
                let t = this.path[e];
                t.updateScroll();
              }
            let e = this.layout;
            (this.layout = this.measure(!1)),
              (this.layoutCorrected = (0, e$.dO)()),
              (this.isLayoutDirty = !1),
              (this.projectionDelta = void 0),
              this.notifyListeners("measure", this.layout.layoutBox);
            let { visualElement: t } = this.options;
            t &&
              t.notify(
                "LayoutMeasure",
                this.layout.layoutBox,
                e ? e.layoutBox : void 0
              );
          }
          updateScroll(e = "measure") {
            let t = !!(this.options.layoutScroll && this.instance);
            this.scroll &&
              this.scroll.animationId === this.root.animationId &&
              this.scroll.phase === e &&
              (t = !1),
              t &&
                (this.scroll = {
                  animationId: this.root.animationId,
                  phase: e,
                  isRoot: r(this.instance),
                  offset: n(this.instance),
                });
          }
          resetTransform() {
            if (!i) return;
            let e = this.isLayoutDirty || this.shouldResetTransform,
              t = this.projectionDelta && !tx(this.projectionDelta),
              n = this.getTransformTemplate(),
              r = n ? n(this.latestValues, "") : void 0,
              s = r !== this.prevTransformTemplateValue;
            e &&
              (t || (0, tT.ud)(this.latestValues) || s) &&
              (i(this.instance, r),
              (this.shouldResetTransform = !1),
              this.scheduleRender());
          }
          measure(e = !0) {
            var t;
            let n = this.measurePageBox(),
              r = this.removeElementScroll(n);
            return (
              e && (r = this.removeTransform(r)),
              t0((t = r).x),
              t0(t.y),
              {
                animationId: this.root.animationId,
                measuredBox: n,
                layoutBox: r,
                latestValues: {},
                source: this.id,
              }
            );
          }
          measurePageBox() {
            let { visualElement: e } = this.options;
            if (!e) return (0, e$.dO)();
            let t = e.measureViewportBox(),
              { scroll: n } = this.root;
            return (
              n && ((0, td.am)(t.x, n.offset.x), (0, td.am)(t.y, n.offset.y)), t
            );
          }
          removeElementScroll(e) {
            let t = (0, e$.dO)();
            th(t, e);
            for (let n = 0; n < this.path.length; n++) {
              let r = this.path[n],
                { scroll: i, options: s } = r;
              if (r !== this.root && i && s.layoutScroll) {
                if (i.isRoot) {
                  th(t, e);
                  let { scroll: n } = this.root;
                  n &&
                    ((0, td.am)(t.x, -n.offset.x),
                    (0, td.am)(t.y, -n.offset.y));
                }
                (0, td.am)(t.x, i.offset.x), (0, td.am)(t.y, i.offset.y);
              }
            }
            return t;
          }
          applyTransform(e, t = !1) {
            let n = (0, e$.dO)();
            th(n, e);
            for (let e = 0; e < this.path.length; e++) {
              let r = this.path[e];
              !t &&
                r.options.layoutScroll &&
                r.scroll &&
                r !== r.root &&
                (0, td.D2)(n, { x: -r.scroll.offset.x, y: -r.scroll.offset.y }),
                (0, tT.ud)(r.latestValues) && (0, td.D2)(n, r.latestValues);
            }
            return (
              (0, tT.ud)(this.latestValues) && (0, td.D2)(n, this.latestValues),
              n
            );
          }
          removeTransform(e) {
            let t = (0, e$.dO)();
            th(t, e);
            for (let e = 0; e < this.path.length; e++) {
              let n = this.path[e];
              if (!n.instance || !(0, tT.ud)(n.latestValues)) continue;
              (0, tT.Lj)(n.latestValues) && n.updateSnapshot();
              let r = (0, e$.dO)(),
                i = n.measurePageBox();
              th(r, i),
                t_(
                  t,
                  n.latestValues,
                  n.snapshot ? n.snapshot.layoutBox : void 0,
                  r
                );
            }
            return (0, tT.ud)(this.latestValues) && t_(t, this.latestValues), t;
          }
          setTargetDelta(e) {
            (this.targetDelta = e),
              this.root.scheduleUpdateProjection(),
              (this.isProjectionDirty = !0);
          }
          setOptions(e) {
            this.options = {
              ...this.options,
              ...e,
              crossfade: void 0 === e.crossfade || e.crossfade,
            };
          }
          clearMeasurements() {
            (this.scroll = void 0),
              (this.layout = void 0),
              (this.snapshot = void 0),
              (this.prevTransformTemplateValue = void 0),
              (this.targetDelta = void 0),
              (this.target = void 0),
              (this.isLayoutDirty = !1);
          }
          forceRelativeParentToResolveTarget() {
            this.relativeParent &&
              this.relativeParent.resolvedRelativeTargetAt !==
                j.frameData.timestamp &&
              this.relativeParent.resolveTargetDelta(!0);
          }
          resolveTargetDelta(e = !1) {
            var t, n, r, i;
            let s = this.getLead();
            this.isProjectionDirty ||
              (this.isProjectionDirty = s.isProjectionDirty),
              this.isTransformDirty ||
                (this.isTransformDirty = s.isTransformDirty),
              this.isSharedProjectionDirty ||
                (this.isSharedProjectionDirty = s.isSharedProjectionDirty);
            let a = !!this.resumingFrom || this !== s,
              o = !(
                e ||
                (a && this.isSharedProjectionDirty) ||
                this.isProjectionDirty ||
                (null === (t = this.parent) || void 0 === t
                  ? void 0
                  : t.isProjectionDirty) ||
                this.attemptToResolveRelativeTarget
              );
            if (o) return;
            let { layout: l, layoutId: u } = this.options;
            if (this.layout && (l || u)) {
              if (
                ((this.resolvedRelativeTargetAt = j.frameData.timestamp),
                !this.targetDelta && !this.relativeTarget)
              ) {
                let e = this.getClosestProjectingParent();
                e && e.layout && 1 !== this.animationProgress
                  ? ((this.relativeParent = e),
                    this.forceRelativeParentToResolveTarget(),
                    (this.relativeTarget = (0, e$.dO)()),
                    (this.relativeTargetOrigin = (0, e$.dO)()),
                    eB(
                      this.relativeTargetOrigin,
                      this.layout.layoutBox,
                      e.layout.layoutBox
                    ),
                    th(this.relativeTarget, this.relativeTargetOrigin))
                  : (this.relativeParent = this.relativeTarget = void 0);
              }
              if (this.relativeTarget || this.targetDelta) {
                if (
                  ((this.target ||
                    ((this.target = (0, e$.dO)()),
                    (this.targetWithTransforms = (0, e$.dO)())),
                  this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.relativeParent &&
                    this.relativeParent.target)
                    ? (this.forceRelativeParentToResolveTarget(),
                      (n = this.target),
                      (r = this.relativeTarget),
                      (i = this.relativeParent.target),
                      eF(n.x, r.x, i.x),
                      eF(n.y, r.y, i.y))
                    : this.targetDelta
                    ? (this.resumingFrom
                        ? (this.target = this.applyTransform(
                            this.layout.layoutBox
                          ))
                        : th(this.target, this.layout.layoutBox),
                      (0, td.o2)(this.target, this.targetDelta))
                    : th(this.target, this.layout.layoutBox),
                  this.attemptToResolveRelativeTarget)
                ) {
                  this.attemptToResolveRelativeTarget = !1;
                  let e = this.getClosestProjectingParent();
                  e &&
                  !!e.resumingFrom == !!this.resumingFrom &&
                  !e.options.layoutScroll &&
                  e.target &&
                  1 !== this.animationProgress
                    ? ((this.relativeParent = e),
                      this.forceRelativeParentToResolveTarget(),
                      (this.relativeTarget = (0, e$.dO)()),
                      (this.relativeTargetOrigin = (0, e$.dO)()),
                      eB(this.relativeTargetOrigin, this.target, e.target),
                      th(this.relativeTarget, this.relativeTargetOrigin))
                    : (this.relativeParent = this.relativeTarget = void 0);
                }
                tI.resolvedTargetDeltas++;
              }
            }
          }
          getClosestProjectingParent() {
            return !this.parent ||
              (0, tT.Lj)(this.parent.latestValues) ||
              (0, tT.D_)(this.parent.latestValues)
              ? void 0
              : this.parent.isProjecting()
              ? this.parent
              : this.parent.getClosestProjectingParent();
          }
          isProjecting() {
            return !!(
              (this.relativeTarget ||
                this.targetDelta ||
                this.options.layoutRoot) &&
              this.layout
            );
          }
          calcProjection() {
            var e;
            let t = this.getLead(),
              n = !!this.resumingFrom || this !== t,
              r = !0;
            if (
              ((this.isProjectionDirty ||
                (null === (e = this.parent) || void 0 === e
                  ? void 0
                  : e.isProjectionDirty)) &&
                (r = !1),
              n &&
                (this.isSharedProjectionDirty || this.isTransformDirty) &&
                (r = !1),
              this.resolvedRelativeTargetAt === j.frameData.timestamp &&
                (r = !1),
              r)
            )
              return;
            let { layout: i, layoutId: s } = this.options;
            if (
              ((this.isTreeAnimating = !!(
                (this.parent && this.parent.isTreeAnimating) ||
                this.currentAnimation ||
                this.pendingAnimation
              )),
              this.isTreeAnimating ||
                (this.targetDelta = this.relativeTarget = void 0),
              !this.layout || !(i || s))
            )
              return;
            th(this.layoutCorrected, this.layout.layoutBox);
            let a = this.treeScale.x,
              o = this.treeScale.y;
            (0, td.YY)(this.layoutCorrected, this.treeScale, this.path, n),
              t.layout &&
                !t.target &&
                (1 !== this.treeScale.x || 1 !== this.treeScale.y) &&
                (t.target = t.layout.layoutBox);
            let { target: l } = t;
            if (!l) {
              this.projectionTransform &&
                ((this.projectionDelta = (0, e$.wc)()),
                (this.projectionTransform = "none"),
                this.scheduleRender());
              return;
            }
            this.projectionDelta ||
              ((this.projectionDelta = (0, e$.wc)()),
              (this.projectionDeltaWithTransform = (0, e$.wc)()));
            let u = this.projectionTransform;
            ek(
              this.projectionDelta,
              this.layoutCorrected,
              l,
              this.latestValues
            ),
              (this.projectionTransform = tw(
                this.projectionDelta,
                this.treeScale
              )),
              (this.projectionTransform !== u ||
                this.treeScale.x !== a ||
                this.treeScale.y !== o) &&
                ((this.hasProjected = !0),
                this.scheduleRender(),
                this.notifyListeners("projectionUpdate", l)),
              tI.recalculatedProjection++;
          }
          hide() {
            this.isVisible = !1;
          }
          show() {
            this.isVisible = !0;
          }
          scheduleRender(e = !0) {
            if (
              (this.options.scheduleRender && this.options.scheduleRender(), e)
            ) {
              let e = this.getStack();
              e && e.scheduleRender();
            }
            this.resumingFrom &&
              !this.resumingFrom.instance &&
              (this.resumingFrom = void 0);
          }
          setAnimationOrigin(e, t = !1) {
            let n;
            let r = this.snapshot,
              i = r ? r.latestValues : {},
              s = { ...this.latestValues },
              a = (0, e$.wc)();
            (this.relativeParent && this.relativeParent.options.layoutRoot) ||
              (this.relativeTarget = this.relativeTargetOrigin = void 0),
              (this.attemptToResolveRelativeTarget = !t);
            let o = (0, e$.dO)(),
              l = r ? r.source : void 0,
              u = this.layout ? this.layout.source : void 0,
              c = l !== u,
              h = this.getStack(),
              d = !h || h.members.length <= 1,
              p = !!(
                c &&
                !d &&
                !0 === this.options.crossfade &&
                !this.path.some(tJ)
              );
            (this.animationProgress = 0),
              (this.mixTargetDelta = (t) => {
                let r = t / 1e3;
                if (
                  (tq(a.x, e.x, r),
                  tq(a.y, e.y, r),
                  this.setTargetDelta(a),
                  this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.layout &&
                    this.relativeParent &&
                    this.relativeParent.layout)
                ) {
                  var l, u, h, f;
                  eB(
                    o,
                    this.layout.layoutBox,
                    this.relativeParent.layout.layoutBox
                  ),
                    (h = this.relativeTarget),
                    (f = this.relativeTargetOrigin),
                    tY(h.x, f.x, o.x, r),
                    tY(h.y, f.y, o.y, r),
                    n &&
                      ((l = this.relativeTarget),
                      (u = n),
                      l.x.min === u.x.min &&
                        l.x.max === u.x.max &&
                        l.y.min === u.y.min &&
                        l.y.max === u.y.max) &&
                      (this.isProjectionDirty = !1),
                    n || (n = (0, e$.dO)()),
                    th(n, this.relativeTarget);
                }
                c &&
                  ((this.animationValues = s),
                  (function (e, t, n, r, i, s) {
                    i
                      ? ((e.opacity = (0, eI.C)(
                          0,
                          void 0 !== n.opacity ? n.opacity : 1,
                          to(r)
                        )),
                        (e.opacityExit = (0, eI.C)(
                          void 0 !== t.opacity ? t.opacity : 1,
                          0,
                          tl(r)
                        )))
                      : s &&
                        (e.opacity = (0, eI.C)(
                          void 0 !== t.opacity ? t.opacity : 1,
                          void 0 !== n.opacity ? n.opacity : 1,
                          r
                        ));
                    for (let i = 0; i < tr; i++) {
                      let s = `border${tn[i]}Radius`,
                        a = ta(t, s),
                        o = ta(n, s);
                      if (void 0 === a && void 0 === o) continue;
                      a || (a = 0), o || (o = 0);
                      let l = 0 === a || 0 === o || ts(a) === ts(o);
                      l
                        ? ((e[s] = Math.max((0, eI.C)(ti(a), ti(o), r), 0)),
                          (eJ.aQ.test(o) || eJ.aQ.test(a)) && (e[s] += "%"))
                        : (e[s] = o);
                    }
                    (t.rotate || n.rotate) &&
                      (e.rotate = (0, eI.C)(t.rotate || 0, n.rotate || 0, r));
                  })(s, i, this.latestValues, r, p, d)),
                  this.root.scheduleUpdateProjection(),
                  this.scheduleRender(),
                  (this.animationProgress = r);
              }),
              this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
          }
          startAnimation(e) {
            this.notifyListeners("animationStart"),
              this.currentAnimation && this.currentAnimation.stop(),
              this.resumingFrom &&
                this.resumingFrom.currentAnimation &&
                this.resumingFrom.currentAnimation.stop(),
              this.pendingAnimation &&
                ((0, j.Pn)(this.pendingAnimation),
                (this.pendingAnimation = void 0)),
              (this.pendingAnimation = j.Wi.update(() => {
                (e2.hasAnimatedSinceResize = !0),
                  (this.currentAnimation = (0, tP.D)(0, 1e3, {
                    ...e,
                    onUpdate: (t) => {
                      this.mixTargetDelta(t), e.onUpdate && e.onUpdate(t);
                    },
                    onComplete: () => {
                      e.onComplete && e.onComplete(), this.completeAnimation();
                    },
                  })),
                  this.resumingFrom &&
                    (this.resumingFrom.currentAnimation =
                      this.currentAnimation),
                  (this.pendingAnimation = void 0);
              }));
          }
          completeAnimation() {
            this.resumingFrom &&
              ((this.resumingFrom.currentAnimation = void 0),
              (this.resumingFrom.preserveOpacity = void 0));
            let e = this.getStack();
            e && e.exitAnimationComplete(),
              (this.resumingFrom =
                this.currentAnimation =
                this.animationValues =
                  void 0),
              this.notifyListeners("animationComplete");
          }
          finishAnimation() {
            this.currentAnimation &&
              (this.mixTargetDelta && this.mixTargetDelta(1e3),
              this.currentAnimation.stop()),
              this.completeAnimation();
          }
          applyTransformsToTarget() {
            let e = this.getLead(),
              {
                targetWithTransforms: t,
                target: n,
                layout: r,
                latestValues: i,
              } = e;
            if (t && n && r) {
              if (
                this !== e &&
                this.layout &&
                r &&
                t1(
                  this.options.animationType,
                  this.layout.layoutBox,
                  r.layoutBox
                )
              ) {
                n = this.target || (0, e$.dO)();
                let t = eN(this.layout.layoutBox.x);
                (n.x.min = e.target.x.min), (n.x.max = n.x.min + t);
                let r = eN(this.layout.layoutBox.y);
                (n.y.min = e.target.y.min), (n.y.max = n.y.min + r);
              }
              th(t, n),
                (0, td.D2)(t, i),
                ek(
                  this.projectionDeltaWithTransform,
                  this.layoutCorrected,
                  t,
                  i
                );
            }
          }
          registerSharedNode(e, t) {
            this.sharedNodes.has(e) || this.sharedNodes.set(e, new tM());
            let n = this.sharedNodes.get(e);
            n.add(t);
            let r = t.options.initialPromotionConfig;
            t.promote({
              transition: r ? r.transition : void 0,
              preserveFollowOpacity:
                r && r.shouldPreserveFollowOpacity
                  ? r.shouldPreserveFollowOpacity(t)
                  : void 0,
            });
          }
          isLead() {
            let e = this.getStack();
            return !e || e.lead === this;
          }
          getLead() {
            var e;
            let { layoutId: t } = this.options;
            return (
              (t &&
                (null === (e = this.getStack()) || void 0 === e
                  ? void 0
                  : e.lead)) ||
              this
            );
          }
          getPrevLead() {
            var e;
            let { layoutId: t } = this.options;
            return t
              ? null === (e = this.getStack()) || void 0 === e
                ? void 0
                : e.prevLead
              : void 0;
          }
          getStack() {
            let { layoutId: e } = this.options;
            if (e) return this.root.sharedNodes.get(e);
          }
          promote({
            needsReset: e,
            transition: t,
            preserveFollowOpacity: n,
          } = {}) {
            let r = this.getStack();
            r && r.promote(this, n),
              e && ((this.projectionDelta = void 0), (this.needsReset = !0)),
              t && this.setOptions({ transition: t });
          }
          relegate() {
            let e = this.getStack();
            return !!e && e.relegate(this);
          }
          resetRotation() {
            let { visualElement: e } = this.options;
            if (!e) return;
            let t = !1,
              { latestValues: n } = e;
            if (
              ((n.rotate || n.rotateX || n.rotateY || n.rotateZ) && (t = !0),
              !t)
            )
              return;
            let r = {};
            for (let t = 0; t < tO.length; t++) {
              let i = "rotate" + tO[t];
              n[i] && ((r[i] = n[i]), e.setStaticValue(i, 0));
            }
            for (let t in (e.render(), r)) e.setStaticValue(t, r[t]);
            e.scheduleRender();
          }
          getProjectionStyles(e = {}) {
            var t, n;
            let r = {};
            if (!this.instance || this.isSVG) return r;
            if (!this.isVisible) return { visibility: "hidden" };
            r.visibility = "";
            let i = this.getTransformTemplate();
            if (this.needsReset)
              return (
                (this.needsReset = !1),
                (r.opacity = ""),
                (r.pointerEvents = B(e.pointerEvents) || ""),
                (r.transform = i ? i(this.latestValues, "") : "none"),
                r
              );
            let s = this.getLead();
            if (!this.projectionDelta || !this.layout || !s.target) {
              let t = {};
              return (
                this.options.layoutId &&
                  ((t.opacity =
                    void 0 !== this.latestValues.opacity
                      ? this.latestValues.opacity
                      : 1),
                  (t.pointerEvents = B(e.pointerEvents) || "")),
                this.hasProjected &&
                  !(0, tT.ud)(this.latestValues) &&
                  ((t.transform = i ? i({}, "") : "none"),
                  (this.hasProjected = !1)),
                t
              );
            }
            let a = s.animationValues || s.latestValues;
            this.applyTransformsToTarget(),
              (r.transform = tw(
                this.projectionDeltaWithTransform,
                this.treeScale,
                a
              )),
              i && (r.transform = i(a, r.transform));
            let { x: o, y: l } = this.projectionDelta;
            for (let e in ((r.transformOrigin = `${100 * o.origin}% ${
              100 * l.origin
            }% 0`),
            s.animationValues
              ? (r.opacity =
                  s === this
                    ? null !==
                        (n =
                          null !== (t = a.opacity) && void 0 !== t
                            ? t
                            : this.latestValues.opacity) && void 0 !== n
                      ? n
                      : 1
                    : this.preserveOpacity
                    ? this.latestValues.opacity
                    : a.opacityExit)
              : (r.opacity =
                  s === this
                    ? void 0 !== a.opacity
                      ? a.opacity
                      : ""
                    : void 0 !== a.opacityExit
                    ? a.opacityExit
                    : 0),
            e6.P)) {
              if (void 0 === a[e]) continue;
              let { correct: t, applyTo: n } = e6.P[e],
                i = "none" === r.transform ? a[e] : t(a[e], s);
              if (n) {
                let e = n.length;
                for (let t = 0; t < e; t++) r[n[t]] = i;
              } else r[e] = i;
            }
            return (
              this.options.layoutId &&
                (r.pointerEvents =
                  s === this ? B(e.pointerEvents) || "" : "none"),
              r
            );
          }
          clearSnapshot() {
            this.resumeFrom = this.snapshot = void 0;
          }
          resetTree() {
            this.root.nodes.forEach((e) => {
              var t;
              return null === (t = e.currentAnimation) || void 0 === t
                ? void 0
                : t.stop();
            }),
              this.root.nodes.forEach(tB),
              this.root.sharedNodes.clear();
          }
        };
      }
      function tD(e) {
        e.updateLayout();
      }
      function tU(e) {
        var t;
        let n =
          (null === (t = e.resumeFrom) || void 0 === t ? void 0 : t.snapshot) ||
          e.snapshot;
        if (e.isLead() && e.layout && n && e.hasListeners("didUpdate")) {
          let { layoutBox: t, measuredBox: r } = e.layout,
            { animationType: i } = e.options,
            s = n.source !== e.layout.source;
          "size" === i
            ? eX((e) => {
                let r = s ? n.measuredBox[e] : n.layoutBox[e],
                  i = eN(r);
                (r.min = t[e].min), (r.max = r.min + i);
              })
            : t1(i, n.layoutBox, t) &&
              eX((r) => {
                let i = s ? n.measuredBox[r] : n.layoutBox[r],
                  a = eN(t[r]);
                (i.max = i.min + a),
                  e.relativeTarget &&
                    !e.currentAnimation &&
                    ((e.isProjectionDirty = !0),
                    (e.relativeTarget[r].max = e.relativeTarget[r].min + a));
              });
          let a = (0, e$.wc)();
          ek(a, t, n.layoutBox);
          let o = (0, e$.wc)();
          s
            ? ek(o, e.applyTransform(r, !0), n.measuredBox)
            : ek(o, t, n.layoutBox);
          let l = !tx(a),
            u = !1;
          if (!e.resumeFrom) {
            let r = e.getClosestProjectingParent();
            if (r && !r.resumeFrom) {
              let { snapshot: i, layout: s } = r;
              if (i && s) {
                let a = (0, e$.dO)();
                eB(a, n.layoutBox, i.layoutBox);
                let o = (0, e$.dO)();
                eB(o, t, s.layoutBox),
                  tb(a, o) || (u = !0),
                  r.options.layoutRoot &&
                    ((e.relativeTarget = o),
                    (e.relativeTargetOrigin = a),
                    (e.relativeParent = r));
              }
            }
          }
          e.notifyListeners("didUpdate", {
            layout: t,
            snapshot: n,
            delta: o,
            layoutDelta: a,
            hasLayoutChanged: l,
            hasRelativeTargetChanged: u,
          });
        } else if (e.isLead()) {
          let { onExitComplete: t } = e.options;
          t && t();
        }
        e.options.transition = void 0;
      }
      function tk(e) {
        tI.totalNodes++,
          e.parent &&
            (e.isProjecting() ||
              (e.isProjectionDirty = e.parent.isProjectionDirty),
            e.isSharedProjectionDirty ||
              (e.isSharedProjectionDirty = !!(
                e.isProjectionDirty ||
                e.parent.isProjectionDirty ||
                e.parent.isSharedProjectionDirty
              )),
            e.isTransformDirty ||
              (e.isTransformDirty = e.parent.isTransformDirty));
      }
      function tF(e) {
        e.isProjectionDirty =
          e.isSharedProjectionDirty =
          e.isTransformDirty =
            !1;
      }
      function tz(e) {
        e.clearSnapshot();
      }
      function tB(e) {
        e.clearMeasurements();
      }
      function tV(e) {
        e.isLayoutDirty = !1;
      }
      function tj(e) {
        let { visualElement: t } = e.options;
        t &&
          t.getProps().onBeforeLayoutMeasure &&
          t.notify("BeforeLayoutMeasure"),
          e.resetTransform();
      }
      function tH(e) {
        e.finishAnimation(),
          (e.targetDelta = e.relativeTarget = e.target = void 0),
          (e.isProjectionDirty = !0);
      }
      function tG(e) {
        e.resolveTargetDelta();
      }
      function tW(e) {
        e.calcProjection();
      }
      function t$(e) {
        e.resetRotation();
      }
      function tX(e) {
        e.removeLeadSnapshot();
      }
      function tq(e, t, n) {
        (e.translate = (0, eI.C)(t.translate, 0, n)),
          (e.scale = (0, eI.C)(t.scale, 1, n)),
          (e.origin = t.origin),
          (e.originPoint = t.originPoint);
      }
      function tY(e, t, n, r) {
        (e.min = (0, eI.C)(t.min, n.min, r)),
          (e.max = (0, eI.C)(t.max, n.max, r));
      }
      function tJ(e) {
        return e.animationValues && void 0 !== e.animationValues.opacityExit;
      }
      let tZ = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
        tK = (e) =>
          "undefined" != typeof navigator &&
          navigator.userAgent.toLowerCase().includes(e),
        tQ = tK("applewebkit/") && !tK("chrome/") ? Math.round : ea.Z;
      function t0(e) {
        (e.min = tQ(e.min)), (e.max = tQ(e.max));
      }
      function t1(e, t, n) {
        return (
          "position" === e ||
          ("preserve-aspect" === e && !eD(tS(t), tS(n), 0.2))
        );
      }
      let t2 = tN({
          attachResizeListener: (e, t) => $(e, "resize", t),
          measureScroll: () => ({
            x: document.documentElement.scrollLeft || document.body.scrollLeft,
            y: document.documentElement.scrollTop || document.body.scrollTop,
          }),
          checkIsScrollRoot: () => !0,
        }),
        t3 = { current: void 0 },
        t4 = tN({
          measureScroll: (e) => ({ x: e.scrollLeft, y: e.scrollTop }),
          defaultParent: () => {
            if (!t3.current) {
              let e = new t2({});
              e.mount(window),
                e.setOptions({ layoutScroll: !0 }),
                (t3.current = e);
            }
            return t3.current;
          },
          resetTransform: (e, t) => {
            e.style.transform = void 0 !== t ? t : "none";
          },
          checkIsScrollRoot: (e) =>
            "fixed" === window.getComputedStyle(e).position,
        });
      var t5 = n(4422),
        t6 = n(3384);
      let t8 = (e, t) =>
          x(e)
            ? new t6.e(t, { enableHardwareAcceleration: !1 })
            : new t5.W(t, { enableHardwareAcceleration: !0 }),
        t7 = {
          animation: {
            Feature: class extends er {
              constructor(e) {
                super(e),
                  e.animationState ||
                    (e.animationState = (function (e) {
                      let t = (t) =>
                          Promise.all(
                            t.map(({ animation: t, options: n }) =>
                              (function (e, t, n = {}) {
                                let r;
                                if (
                                  (e.notify("AnimationStart", t),
                                  Array.isArray(t))
                                ) {
                                  let i = t.map((t) => ev(e, t, n));
                                  r = Promise.all(i);
                                } else if ("string" == typeof t)
                                  r = ev(e, t, n);
                                else {
                                  let i =
                                    "function" == typeof t
                                      ? (0, em.x)(e, t, n.custom)
                                      : t;
                                  r = Promise.all((0, e_.w)(e, i, n));
                                }
                                return r.then(() =>
                                  e.notify("AnimationComplete", t)
                                );
                              })(e, t, n)
                            )
                          ),
                        n = {
                          animate: eS(!0),
                          whileInView: eS(),
                          whileHover: eS(),
                          whileTap: eS(),
                          whileDrag: eS(),
                          whileFocus: eS(),
                          exit: eS(),
                        },
                        r = !0,
                        i = (t, n) => {
                          let r = (0, em.x)(e, n);
                          if (r) {
                            let { transition: e, transitionEnd: n, ...i } = r;
                            t = { ...t, ...i, ...n };
                          }
                          return t;
                        };
                      function s(s, a) {
                        let o = e.getProps(),
                          l = e.getVariantContext(!0) || {},
                          u = [],
                          c = new Set(),
                          d = {},
                          p = 1 / 0;
                        for (let t = 0; t < eb; t++) {
                          var f;
                          let m = ex[t],
                            g = n[m],
                            _ = void 0 !== o[m] ? o[m] : l[m],
                            v = (0, h.$)(_),
                            y = m === a ? g.isActive : null;
                          !1 === y && (p = t);
                          let x = _ === l[m] && _ !== o[m] && v;
                          if (
                            (x && r && e.manuallyAnimateOnMount && (x = !1),
                            (g.protectedKeys = { ...d }),
                            (!g.isActive && null === y) ||
                              (!_ && !g.prevProp) ||
                              (0, U.H)(_) ||
                              "boolean" == typeof _)
                          )
                            continue;
                          let b =
                              ((f = g.prevProp),
                              "string" == typeof _
                                ? _ !== f
                                : !!Array.isArray(_) && !ef(_, f)),
                            S =
                              b ||
                              (m === a && g.isActive && !x && v) ||
                              (t > p && v),
                            E = Array.isArray(_) ? _ : [_],
                            M = E.reduce(i, {});
                          !1 === y && (M = {});
                          let { prevResolvedValues: w = {} } = g,
                            T = { ...w, ...M },
                            A = (e) => {
                              (S = !0), c.delete(e), (g.needsAnimating[e] = !0);
                            };
                          for (let e in T) {
                            let t = M[e],
                              n = w[e];
                            d.hasOwnProperty(e) ||
                              (t !== n
                                ? (0, ep.C)(t) && (0, ep.C)(n)
                                  ? !ef(t, n) || b
                                    ? A(e)
                                    : (g.protectedKeys[e] = !0)
                                  : void 0 !== t
                                  ? A(e)
                                  : c.add(e)
                                : void 0 !== t && c.has(e)
                                ? A(e)
                                : (g.protectedKeys[e] = !0));
                          }
                          (g.prevProp = _),
                            (g.prevResolvedValues = M),
                            g.isActive && (d = { ...d, ...M }),
                            r && e.blockInitialAnimation && (S = !1),
                            S &&
                              !x &&
                              u.push(
                                ...E.map((e) => ({
                                  animation: e,
                                  options: { type: m, ...s },
                                }))
                              );
                        }
                        if (c.size) {
                          let t = {};
                          c.forEach((n) => {
                            let r = e.getBaseTarget(n);
                            void 0 !== r && (t[n] = r);
                          }),
                            u.push({ animation: t });
                        }
                        let m = !!u.length;
                        return (
                          r &&
                            !1 === o.initial &&
                            !e.manuallyAnimateOnMount &&
                            (m = !1),
                          (r = !1),
                          m ? t(u) : Promise.resolve()
                        );
                      }
                      return {
                        animateChanges: s,
                        setActive: function (t, r, i) {
                          var a;
                          if (n[t].isActive === r) return Promise.resolve();
                          null === (a = e.variantChildren) ||
                            void 0 === a ||
                            a.forEach((e) => {
                              var n;
                              return null === (n = e.animationState) ||
                                void 0 === n
                                ? void 0
                                : n.setActive(t, r);
                            }),
                            (n[t].isActive = r);
                          let o = s(i, t);
                          for (let e in n) n[e].protectedKeys = {};
                          return o;
                        },
                        setAnimateFunction: function (n) {
                          t = n(e);
                        },
                        getState: () => n,
                      };
                    })(e));
              }
              updateAnimationControlsSubscription() {
                let { animate: e } = this.node.getProps();
                this.unmount(),
                  (0, U.H)(e) && (this.unmount = e.subscribe(this.node));
              }
              mount() {
                this.updateAnimationControlsSubscription();
              }
              update() {
                let { animate: e } = this.node.getProps(),
                  { animate: t } = this.node.prevProps || {};
                e !== t && this.updateAnimationControlsSubscription();
              }
              unmount() {}
            },
          },
          exit: {
            Feature: class extends er {
              constructor() {
                super(...arguments), (this.id = eE++);
              }
              update() {
                if (!this.node.presenceContext) return;
                let {
                    isPresent: e,
                    onExitComplete: t,
                    custom: n,
                  } = this.node.presenceContext,
                  { isPresent: r } = this.node.prevPresenceContext || {};
                if (!this.node.animationState || e === r) return;
                let i = this.node.animationState.setActive("exit", !e, {
                  custom: null != n ? n : this.node.getProps().custom,
                });
                t && !e && i.then(() => t(this.id));
              }
              mount() {
                let { register: e } = this.node.presenceContext || {};
                e && (this.unmount = e(this.id));
              }
              unmount() {}
            },
          },
          inView: {
            Feature: class extends er {
              constructor() {
                super(...arguments),
                  (this.hasEnteredView = !1),
                  (this.isInView = !1);
              }
              startObserver() {
                this.unmount();
                let { viewport: e = {} } = this.node.getProps(),
                  { root: t, margin: n, amount: r = "some", once: i } = e,
                  s = {
                    root: t ? t.current : void 0,
                    rootMargin: n,
                    threshold: "number" == typeof r ? r : ed[r],
                  };
                return (function (e, t, n) {
                  let r = (function ({ root: e, ...t }) {
                    let n = e || document;
                    eu.has(n) || eu.set(n, {});
                    let r = eu.get(n),
                      i = JSON.stringify(t);
                    return (
                      r[i] ||
                        (r[i] = new IntersectionObserver(eh, {
                          root: e,
                          ...t,
                        })),
                      r[i]
                    );
                  })(t);
                  return (
                    el.set(e, n),
                    r.observe(e),
                    () => {
                      el.delete(e), r.unobserve(e);
                    }
                  );
                })(this.node.current, s, (e) => {
                  let { isIntersecting: t } = e;
                  if (
                    this.isInView === t ||
                    ((this.isInView = t), i && !t && this.hasEnteredView)
                  )
                    return;
                  t && (this.hasEnteredView = !0),
                    this.node.animationState &&
                      this.node.animationState.setActive("whileInView", t);
                  let { onViewportEnter: n, onViewportLeave: r } =
                      this.node.getProps(),
                    s = t ? n : r;
                  s && s(e);
                });
              }
              mount() {
                this.startObserver();
              }
              update() {
                if ("undefined" == typeof IntersectionObserver) return;
                let { props: e, prevProps: t } = this.node,
                  n = ["amount", "margin", "root"].some(
                    (function (
                      { viewport: e = {} },
                      { viewport: t = {} } = {}
                    ) {
                      return (n) => e[n] !== t[n];
                    })(e, t)
                  );
                n && this.startObserver();
              }
              unmount() {}
            },
          },
          tap: {
            Feature: class extends er {
              constructor() {
                super(...arguments),
                  (this.removeStartListeners = ea.Z),
                  (this.removeEndListeners = ea.Z),
                  (this.removeAccessibleListeners = ea.Z),
                  (this.startPointerPress = (e, t) => {
                    if ((this.removeEndListeners(), this.isPressing)) return;
                    let n = this.node.getProps(),
                      r = J(
                        window,
                        "pointerup",
                        (e, t) => {
                          if (!this.checkPressEnd()) return;
                          let { onTap: n, onTapCancel: r } =
                            this.node.getProps();
                          j.Wi.update(() => {
                            es(this.node.current, e.target)
                              ? n && n(e, t)
                              : r && r(e, t);
                          });
                        },
                        { passive: !(n.onTap || n.onPointerUp) }
                      ),
                      i = J(
                        window,
                        "pointercancel",
                        (e, t) => this.cancelPress(e, t),
                        { passive: !(n.onTapCancel || n.onPointerCancel) }
                      );
                    (this.removeEndListeners = (0, Z.z)(r, i)),
                      this.startPress(e, t);
                  }),
                  (this.startAccessiblePress = () => {
                    let e = $(this.node.current, "keydown", (e) => {
                        "Enter" !== e.key ||
                          this.isPressing ||
                          (this.removeEndListeners(),
                          (this.removeEndListeners = $(
                            this.node.current,
                            "keyup",
                            (e) => {
                              "Enter" === e.key &&
                                this.checkPressEnd() &&
                                eo("up", (e, t) => {
                                  let { onTap: n } = this.node.getProps();
                                  n && j.Wi.update(() => n(e, t));
                                });
                            }
                          )),
                          eo("down", (e, t) => {
                            this.startPress(e, t);
                          }));
                      }),
                      t = $(this.node.current, "blur", () => {
                        this.isPressing &&
                          eo("cancel", (e, t) => this.cancelPress(e, t));
                      });
                    this.removeAccessibleListeners = (0, Z.z)(e, t);
                  });
              }
              startPress(e, t) {
                this.isPressing = !0;
                let { onTapStart: n, whileTap: r } = this.node.getProps();
                r &&
                  this.node.animationState &&
                  this.node.animationState.setActive("whileTap", !0),
                  n && j.Wi.update(() => n(e, t));
              }
              checkPressEnd() {
                this.removeEndListeners(), (this.isPressing = !1);
                let e = this.node.getProps();
                return (
                  e.whileTap &&
                    this.node.animationState &&
                    this.node.animationState.setActive("whileTap", !1),
                  !en()
                );
              }
              cancelPress(e, t) {
                if (!this.checkPressEnd()) return;
                let { onTapCancel: n } = this.node.getProps();
                n && j.Wi.update(() => n(e, t));
              }
              mount() {
                let e = this.node.getProps(),
                  t = J(
                    this.node.current,
                    "pointerdown",
                    this.startPointerPress,
                    { passive: !(e.onTapStart || e.onPointerStart) }
                  ),
                  n = $(this.node.current, "focus", this.startAccessiblePress);
                this.removeStartListeners = (0, Z.z)(t, n);
              }
              unmount() {
                this.removeStartListeners(),
                  this.removeEndListeners(),
                  this.removeAccessibleListeners();
              }
            },
          },
          focus: {
            Feature: class extends er {
              constructor() {
                super(...arguments), (this.isActive = !1);
              }
              onFocus() {
                let e = !1;
                try {
                  e = this.node.current.matches(":focus-visible");
                } catch (t) {
                  e = !0;
                }
                e &&
                  this.node.animationState &&
                  (this.node.animationState.setActive("whileFocus", !0),
                  (this.isActive = !0));
              }
              onBlur() {
                this.isActive &&
                  this.node.animationState &&
                  (this.node.animationState.setActive("whileFocus", !1),
                  (this.isActive = !1));
              }
              mount() {
                this.unmount = (0, Z.z)(
                  $(this.node.current, "focus", () => this.onFocus()),
                  $(this.node.current, "blur", () => this.onBlur())
                );
              }
              unmount() {}
            },
          },
          hover: {
            Feature: class extends er {
              mount() {
                this.unmount = (0, Z.z)(ei(this.node, !0), ei(this.node, !1));
              }
              unmount() {}
            },
          },
          pan: {
            Feature: class extends er {
              constructor() {
                super(...arguments), (this.removePointerDownListener = ea.Z);
              }
              onPointerDown(e) {
                this.session = new eA(e, this.createPanHandlers(), {
                  transformPagePoint: this.node.getTransformPagePoint(),
                });
              }
              createPanHandlers() {
                let {
                  onPanSessionStart: e,
                  onPanStart: t,
                  onPan: n,
                  onPanEnd: r,
                } = this.node.getProps();
                return {
                  onSessionStart: e1(e),
                  onStart: e1(t),
                  onMove: n,
                  onEnd: (e, t) => {
                    delete this.session, r && j.Wi.update(() => r(e, t));
                  },
                };
              }
              mount() {
                this.removePointerDownListener = J(
                  this.node.current,
                  "pointerdown",
                  (e) => this.onPointerDown(e)
                );
              }
              update() {
                this.session &&
                  this.session.updateHandlers(this.createPanHandlers());
              }
              unmount() {
                this.removePointerDownListener(),
                  this.session && this.session.end();
              }
            },
          },
          drag: {
            Feature: class extends er {
              constructor(e) {
                super(e),
                  (this.removeGroupControls = ea.Z),
                  (this.removeListeners = ea.Z),
                  (this.controls = new eQ(e));
              }
              mount() {
                let { dragControls: e } = this.node.getProps();
                e && (this.removeGroupControls = e.subscribe(this.controls)),
                  (this.removeListeners = this.controls.addListeners() || ea.Z);
              }
              unmount() {
                this.removeGroupControls(), this.removeListeners();
              }
            },
            ProjectionNode: t4,
            MeasureLayout: e7,
          },
          layout: { ProjectionNode: t4, MeasureLayout: e7 },
        },
        t9 = (function (e) {
          function t(t, n = {}) {
            return (function ({
              preloadedFeatures: e,
              createVisualElement: t,
              useRender: n,
              useVisualState: r,
              Component: y,
            }) {
              e &&
                (function (e) {
                  for (let t in e) f.A[t] = { ...f.A[t], ...e[t] };
                })(e);
              let x = (0, i.forwardRef)(function (f, v) {
                var x;
                let b;
                let S = {
                    ...(0, i.useContext)(s._),
                    ...f,
                    layoutId: (function ({ layoutId: e }) {
                      let t = (0, i.useContext)(g.p).id;
                      return t && void 0 !== e ? t + "-" + e : e;
                    })(f),
                  },
                  { isStatic: E } = S,
                  M = (function (e) {
                    let { initial: t, animate: n } = (function (e, t) {
                      if ((0, d.G)(e)) {
                        let { initial: t, animate: n } = e;
                        return {
                          initial: !1 === t || (0, h.$)(t) ? t : void 0,
                          animate: (0, h.$)(n) ? n : void 0,
                        };
                      }
                      return !1 !== e.inherit ? t : {};
                    })(e, (0, i.useContext)(a));
                    return (0, i.useMemo)(
                      () => ({ initial: t, animate: n }),
                      [p(t), p(n)]
                    );
                  })(f),
                  w = r(f, E);
                if (!E && m.j) {
                  M.visualElement = (function (e, t, n, r) {
                    let { visualElement: c } = (0, i.useContext)(a),
                      h = (0, i.useContext)(u),
                      d = (0, i.useContext)(o.O),
                      p = (0, i.useContext)(s._).reducedMotion,
                      f = (0, i.useRef)();
                    (r = r || h.renderer),
                      !f.current &&
                        r &&
                        (f.current = r(e, {
                          visualState: t,
                          parent: c,
                          props: n,
                          presenceContext: d,
                          blockInitialAnimation: !!d && !1 === d.initial,
                          reducedMotionConfig: p,
                        }));
                    let m = f.current;
                    (0, i.useInsertionEffect)(() => {
                      m && m.update(n, d);
                    });
                    let g = (0, i.useRef)(!!window.HandoffAppearAnimations);
                    return (
                      (0, l.L)(() => {
                        m &&
                          (m.render(),
                          g.current &&
                            m.animationState &&
                            m.animationState.animateChanges());
                      }),
                      (0, i.useEffect)(() => {
                        m &&
                          (m.updateFeatures(),
                          !g.current &&
                            m.animationState &&
                            m.animationState.animateChanges(),
                          (window.HandoffAppearAnimations = void 0),
                          (g.current = !1));
                      }),
                      m
                    );
                  })(y, w, S, t);
                  let n = (0, i.useContext)(_),
                    r = (0, i.useContext)(u).strict;
                  M.visualElement &&
                    (b = M.visualElement.loadFeatures(S, r, e, n));
                }
                return i.createElement(
                  a.Provider,
                  { value: M },
                  b && M.visualElement
                    ? i.createElement(b, {
                        visualElement: M.visualElement,
                        ...S,
                      })
                    : null,
                  n(
                    y,
                    f,
                    ((x = M.visualElement),
                    (0, i.useCallback)(
                      (e) => {
                        e && w.mount && w.mount(e),
                          x && (e ? x.mount(e) : x.unmount()),
                          v &&
                            ("function" == typeof v
                              ? v(e)
                              : (0, c.I)(v) && (v.current = e));
                      },
                      [x]
                    )),
                    w,
                    E,
                    M.visualElement
                  )
                );
              });
              return (x[v] = y), x;
            })(e(t, n));
          }
          if ("undefined" == typeof Proxy) return t;
          let n = new Map();
          return new Proxy(t, {
            get: (e, r) => (n.has(r) || n.set(r, t(r)), n.get(r)),
          });
        })((e, t) =>
          (function (e, { forwardMotionProps: t = !1 }, n, r) {
            let s = x(e) ? H : W;
            return {
              ...s,
              preloadedFeatures: n,
              useRender: (function (e = !1) {
                return (t, n, r, { latestValues: s }, a) => {
                  let o = x(t) ? I : T,
                    l = o(n, s, a, t),
                    u = (function (e, t, n) {
                      let r = {};
                      for (let i in e)
                        ("values" !== i || "object" != typeof e.values) &&
                          (R(i) ||
                            (!0 === n && C(i)) ||
                            (!t && !C(i)) ||
                            (e.draggable && i.startsWith("onDrag"))) &&
                          (r[i] = e[i]);
                      return r;
                    })(n, "string" == typeof t, e),
                    c = { ...u, ...l, ref: r },
                    { children: h } = n,
                    d = (0, i.useMemo)(() => ((0, S.i)(h) ? h.get() : h), [h]);
                  return (0, i.createElement)(t, { ...c, children: d });
                };
              })(t),
              createVisualElement: r,
              Component: e,
            };
          })(e, t, t7, t8)
        );
    },
    8754: function (e, t, n) {
      "use strict";
      n.d(t, {
        D: function () {
          return r;
        },
      });
      let r = (e) => e.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    },
    1331: function (e, t, n) {
      "use strict";
      n.d(t, {
        Xp: function () {
          return a;
        },
        f9: function () {
          return i;
        },
        tm: function () {
          return s;
        },
      });
      let r = (e) => (t) => "string" == typeof t && t.startsWith(e),
        i = r("--"),
        s = r("var(--"),
        a =
          /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g;
    },
    8650: function (e, t, n) {
      "use strict";
      function r(e) {
        return e instanceof SVGElement && "svg" !== e.tagName;
      }
      n.d(t, {
        v: function () {
          return r;
        },
      });
    },
    1564: function (e, t, n) {
      "use strict";
      n.d(t, {
        T: function () {
          return a;
        },
      });
      var r = n(6865),
        i = n(3764),
        s = n(8434);
      function a(e, t) {
        let n = (0, s.A)(e);
        return (
          n !== i.h && (n = r.P),
          n.getAnimatableNone ? n.getAnimatableNone(t) : void 0
        );
      }
    },
    8434: function (e, t, n) {
      "use strict";
      n.d(t, {
        A: function () {
          return o;
        },
      });
      var r = n(5982),
        i = n(3764),
        s = n(8073);
      let a = {
          ...s.j,
          color: r.$,
          backgroundColor: r.$,
          outlineColor: r.$,
          fill: r.$,
          stroke: r.$,
          borderColor: r.$,
          borderTopColor: r.$,
          borderRightColor: r.$,
          borderBottomColor: r.$,
          borderLeftColor: r.$,
          filter: i.h,
          WebkitFilter: i.h,
        },
        o = (e) => a[e];
    },
    2289: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return a;
        },
        C: function () {
          return o;
        },
      });
      var r = n(397),
        i = n(8772),
        s = n(3624);
      let a = [
          r.Rx,
          i.px,
          i.aQ,
          i.RW,
          i.vw,
          i.vh,
          { test: (e) => "auto" === e, parse: (e) => e },
        ],
        o = (e) => a.find((0, s.l)(e));
    },
    8073: function (e, t, n) {
      "use strict";
      n.d(t, {
        j: function () {
          return a;
        },
      });
      var r = n(397),
        i = n(8772);
      let s = { ...r.Rx, transform: Math.round },
        a = {
          borderWidth: i.px,
          borderTopWidth: i.px,
          borderRightWidth: i.px,
          borderBottomWidth: i.px,
          borderLeftWidth: i.px,
          borderRadius: i.px,
          radius: i.px,
          borderTopLeftRadius: i.px,
          borderTopRightRadius: i.px,
          borderBottomRightRadius: i.px,
          borderBottomLeftRadius: i.px,
          width: i.px,
          maxWidth: i.px,
          height: i.px,
          maxHeight: i.px,
          size: i.px,
          top: i.px,
          right: i.px,
          bottom: i.px,
          left: i.px,
          padding: i.px,
          paddingTop: i.px,
          paddingRight: i.px,
          paddingBottom: i.px,
          paddingLeft: i.px,
          margin: i.px,
          marginTop: i.px,
          marginRight: i.px,
          marginBottom: i.px,
          marginLeft: i.px,
          rotate: i.RW,
          rotateX: i.RW,
          rotateY: i.RW,
          rotateZ: i.RW,
          scale: r.bA,
          scaleX: r.bA,
          scaleY: r.bA,
          scaleZ: r.bA,
          skew: i.RW,
          skewX: i.RW,
          skewY: i.RW,
          distance: i.px,
          translateX: i.px,
          translateY: i.px,
          translateZ: i.px,
          x: i.px,
          y: i.px,
          z: i.px,
          perspective: i.px,
          transformPerspective: i.px,
          opacity: r.Fq,
          originX: i.$C,
          originY: i.$C,
          originZ: i.px,
          zIndex: s,
          fillOpacity: r.Fq,
          strokeOpacity: r.Fq,
          numOctaves: s,
        };
    },
    3624: function (e, t, n) {
      "use strict";
      n.d(t, {
        l: function () {
          return r;
        },
      });
      let r = (e) => (t) => t.test(e);
    },
    4422: function (e, t, n) {
      "use strict";
      n.d(t, {
        W: function () {
          return d;
        },
      });
      var r = n(2411),
        i = n(1331),
        s = n(3442),
        a = n(3921),
        o = n(2473),
        l = n(8434),
        u = n(5579),
        c = n(6775),
        h = n(5815);
      class d extends c.J {
        readValueFromInstance(e, t) {
          if (s.G.has(t)) {
            let e = (0, l.A)(t);
            return (e && e.default) || 0;
          }
          {
            let n = window.getComputedStyle(e),
              r = ((0, i.f9)(t) ? n.getPropertyValue(t) : n[t]) || 0;
            return "string" == typeof r ? r.trim() : r;
          }
        }
        measureInstanceViewportBox(e, { transformPagePoint: t }) {
          return (0, u.J)(e, t);
        }
        build(e, t, n, i) {
          (0, r.r)(e, t, n, i.transformTemplate);
        }
        scrapeMotionValuesFromProps(e, t) {
          return (0, a.U)(e, t);
        }
        handleChildMotionValue() {
          this.childSubscription &&
            (this.childSubscription(), delete this.childSubscription);
          let { children: e } = this.props;
          (0, h.i)(e) &&
            (this.childSubscription = e.on("change", (e) => {
              this.current && (this.current.textContent = `${e}`);
            }));
        }
        renderInstance(e, t, n, r) {
          (0, o.N)(e, t, n, r);
        }
      }
    },
    2411: function (e, t, n) {
      "use strict";
      n.d(t, {
        r: function () {
          return u;
        },
      });
      var r = n(3442);
      let i = {
          x: "translateX",
          y: "translateY",
          z: "translateZ",
          transformPerspective: "perspective",
        },
        s = r._.length;
      var a = n(1331);
      let o = (e, t) => (t && "number" == typeof e ? t.transform(e) : e);
      var l = n(8073);
      function u(e, t, n, u) {
        let { style: c, vars: h, transform: d, transformOrigin: p } = e,
          f = !1,
          m = !1,
          g = !0;
        for (let e in t) {
          let n = t[e];
          if ((0, a.f9)(e)) {
            h[e] = n;
            continue;
          }
          let i = l.j[e],
            s = o(n, i);
          if (r.G.has(e)) {
            if (((f = !0), (d[e] = s), !g)) continue;
            n !== (i.default || 0) && (g = !1);
          } else e.startsWith("origin") ? ((m = !0), (p[e] = s)) : (c[e] = s);
        }
        if (
          (!t.transform &&
            (f || u
              ? (c.transform = (function (
                  e,
                  {
                    enableHardwareAcceleration: t = !0,
                    allowTransformNone: n = !0,
                  },
                  a,
                  o
                ) {
                  let l = "";
                  for (let t = 0; t < s; t++) {
                    let n = r._[t];
                    if (void 0 !== e[n]) {
                      let t = i[n] || n;
                      l += `${t}(${e[n]}) `;
                    }
                  }
                  return (
                    t && !e.z && (l += "translateZ(0)"),
                    (l = l.trim()),
                    o ? (l = o(e, a ? "" : l)) : n && a && (l = "none"),
                    l
                  );
                })(e.transform, n, g, u))
              : c.transform && (c.transform = "none")),
          m)
        ) {
          let { originX: e = "50%", originY: t = "50%", originZ: n = 0 } = p;
          c.transformOrigin = `${e} ${t} ${n}`;
        }
      }
    },
    2473: function (e, t, n) {
      "use strict";
      function r(e, { style: t, vars: n }, r, i) {
        for (let s in (Object.assign(e.style, t, i && i.getProjectionStyles(r)),
        n))
          e.style.setProperty(s, n[s]);
      }
      n.d(t, {
        N: function () {
          return r;
        },
      });
    },
    3921: function (e, t, n) {
      "use strict";
      n.d(t, {
        U: function () {
          return s;
        },
      });
      var r = n(1980),
        i = n(5815);
      function s(e, t) {
        let { style: n } = e,
          s = {};
        for (let a in n)
          ((0, i.i)(n[a]) ||
            (t.style && (0, i.i)(t.style[a])) ||
            (0, r.j)(a, e)) &&
            (s[a] = n[a]);
        return s;
      }
    },
    3442: function (e, t, n) {
      "use strict";
      n.d(t, {
        G: function () {
          return i;
        },
        _: function () {
          return r;
        },
      });
      let r = [
          "transformPerspective",
          "x",
          "y",
          "z",
          "translateX",
          "translateY",
          "translateZ",
          "scale",
          "scaleX",
          "scaleY",
          "rotate",
          "rotateX",
          "rotateY",
          "rotateZ",
          "skew",
          "skewX",
          "skewY",
        ],
        i = new Set(r);
    },
    6578: function (e, t, n) {
      "use strict";
      n.d(t, {
        R: function () {
          return r;
        },
      });
      let r = new WeakMap();
    },
    3384: function (e, t, n) {
      "use strict";
      n.d(t, {
        e: function () {
          return p;
        },
      });
      var r = n(7587),
        i = n(6775),
        s = n(658),
        a = n(8754),
        o = n(5282),
        l = n(3442),
        u = n(3517),
        c = n(8434),
        h = n(3933),
        d = n(3336);
      class p extends i.J {
        constructor() {
          super(...arguments), (this.isSVGTag = !1);
        }
        getBaseTargetFromProps(e, t) {
          return e[t];
        }
        readValueFromInstance(e, t) {
          if (l.G.has(t)) {
            let e = (0, c.A)(t);
            return (e && e.default) || 0;
          }
          return (t = o.s.has(t) ? t : (0, a.D)(t)), e.getAttribute(t);
        }
        measureInstanceViewportBox() {
          return (0, h.dO)();
        }
        scrapeMotionValuesFromProps(e, t) {
          return (0, r.U)(e, t);
        }
        build(e, t, n, r) {
          (0, s.i)(e, t, n, this.isSVGTag, r.transformTemplate);
        }
        renderInstance(e, t, n, r) {
          (0, u.K)(e, t, n, r);
        }
        mount(e) {
          (this.isSVGTag = (0, d.a)(e.tagName)), super.mount(e);
        }
      }
    },
    658: function (e, t, n) {
      "use strict";
      n.d(t, {
        i: function () {
          return l;
        },
      });
      var r = n(2411),
        i = n(8772);
      function s(e, t, n) {
        return "string" == typeof e ? e : i.px.transform(t + n * e);
      }
      let a = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
        o = { offset: "strokeDashoffset", array: "strokeDasharray" };
      function l(
        e,
        {
          attrX: t,
          attrY: n,
          attrScale: l,
          originX: u,
          originY: c,
          pathLength: h,
          pathSpacing: d = 1,
          pathOffset: p = 0,
          ...f
        },
        m,
        g,
        _
      ) {
        if (((0, r.r)(e, f, m, _), g)) {
          e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
          return;
        }
        (e.attrs = e.style), (e.style = {});
        let { attrs: v, style: y, dimensions: x } = e;
        v.transform && (x && (y.transform = v.transform), delete v.transform),
          x &&
            (void 0 !== u || void 0 !== c || y.transform) &&
            (y.transformOrigin = (function (e, t, n) {
              let r = s(t, e.x, e.width),
                i = s(n, e.y, e.height);
              return `${r} ${i}`;
            })(x, void 0 !== u ? u : 0.5, void 0 !== c ? c : 0.5)),
          void 0 !== t && (v.x = t),
          void 0 !== n && (v.y = n),
          void 0 !== l && (v.scale = l),
          void 0 !== h &&
            (function (e, t, n = 1, r = 0, s = !0) {
              e.pathLength = 1;
              let l = s ? a : o;
              e[l.offset] = i.px.transform(-r);
              let u = i.px.transform(t),
                c = i.px.transform(n);
              e[l.array] = `${u} ${c}`;
            })(v, h, d, p, !1);
      }
    },
    5282: function (e, t, n) {
      "use strict";
      n.d(t, {
        s: function () {
          return r;
        },
      });
      let r = new Set([
        "baseFrequency",
        "diffuseConstant",
        "kernelMatrix",
        "kernelUnitLength",
        "keySplines",
        "keyTimes",
        "limitingConeAngle",
        "markerHeight",
        "markerWidth",
        "numOctaves",
        "targetX",
        "targetY",
        "surfaceScale",
        "specularConstant",
        "specularExponent",
        "stdDeviation",
        "tableValues",
        "viewBox",
        "gradientTransform",
        "pathLength",
        "startOffset",
        "textLength",
        "lengthAdjust",
      ]);
    },
    3336: function (e, t, n) {
      "use strict";
      n.d(t, {
        a: function () {
          return r;
        },
      });
      let r = (e) => "string" == typeof e && "svg" === e.toLowerCase();
    },
    3517: function (e, t, n) {
      "use strict";
      n.d(t, {
        K: function () {
          return a;
        },
      });
      var r = n(8754),
        i = n(2473),
        s = n(5282);
      function a(e, t, n, a) {
        for (let n in ((0, i.N)(e, t, void 0, a), t.attrs))
          e.setAttribute(s.s.has(n) ? n : (0, r.D)(n), t.attrs[n]);
      }
    },
    7587: function (e, t, n) {
      "use strict";
      n.d(t, {
        U: function () {
          return a;
        },
      });
      var r = n(5815),
        i = n(3921),
        s = n(3442);
      function a(e, t) {
        let n = (0, i.U)(e, t);
        for (let i in e)
          if ((0, r.i)(e[i]) || (0, r.i)(t[i])) {
            let t =
              -1 !== s._.indexOf(i)
                ? "attr" + i.charAt(0).toUpperCase() + i.substring(1)
                : i;
            n[t] = e[i];
          }
        return n;
      }
    },
    3293: function (e, t, n) {
      "use strict";
      n.d(t, {
        G: function () {
          return a;
        },
        M: function () {
          return o;
        },
      });
      var r = n(2816),
        i = n(330),
        s = n(6427);
      function a(e) {
        return (0, r.H)(e.animate) || s.V.some((t) => (0, i.$)(e[t]));
      }
      function o(e) {
        return !!(a(e) || e.variants);
      }
    },
    330: function (e, t, n) {
      "use strict";
      function r(e) {
        return "string" == typeof e || Array.isArray(e);
      }
      n.d(t, {
        $: function () {
          return r;
        },
      });
    },
    2841: function (e, t, n) {
      "use strict";
      n.d(t, {
        x: function () {
          return i;
        },
      });
      var r = n(9764);
      function i(e, t, n) {
        let i = e.getProps();
        return (0, r.o)(
          i,
          t,
          void 0 !== n ? n : i.custom,
          (function (e) {
            let t = {};
            return e.values.forEach((e, n) => (t[n] = e.get())), t;
          })(e),
          (function (e) {
            let t = {};
            return e.values.forEach((e, n) => (t[n] = e.getVelocity())), t;
          })(e)
        );
      }
    },
    9764: function (e, t, n) {
      "use strict";
      function r(e, t, n, r = {}, i = {}) {
        return (
          "function" == typeof t && (t = t(void 0 !== n ? n : e.custom, r, i)),
          "string" == typeof t && (t = e.variants && e.variants[t]),
          "function" == typeof t && (t = t(void 0 !== n ? n : e.custom, r, i)),
          t
        );
      }
      n.d(t, {
        o: function () {
          return r;
        },
      });
    },
    1336: function (e, t, n) {
      "use strict";
      n.d(t, {
        GJ: function () {
          return g;
        },
        P$: function () {
          return _;
        },
        CD: function () {
          return m;
        },
      });
      var r = n(1377),
        i = n(4561),
        s = n(3809),
        a = n(226),
        o = n(6865),
        l = n(1564),
        u = n(5982),
        c = n(2289),
        h = n(3624);
      let d = [...c.$, u.$, o.P],
        p = (e) => d.find((0, h.l)(e));
      var f = n(2841);
      function m(e, t) {
        let n = (0, f.x)(e, t),
          {
            transitionEnd: r = {},
            transition: i = {},
            ...o
          } = n ? e.makeTargetAnimatable(n, !1) : {};
        for (let t in (o = { ...o, ...r })) {
          let n = (0, s.Y)(o[t]);
          e.hasValue(t) ? e.getValue(t).set(n) : e.addValue(t, (0, a.BX)(n));
        }
      }
      function g(e, t, n) {
        var s, u;
        let c = Object.keys(t).filter((t) => !e.hasValue(t)),
          h = c.length;
        if (h)
          for (let d = 0; d < h; d++) {
            let h = c[d],
              f = t[h],
              m = null;
            Array.isArray(f) && (m = f[0]),
              null === m &&
                (m =
                  null !==
                    (u =
                      null !== (s = n[h]) && void 0 !== s
                        ? s
                        : e.readValue(h)) && void 0 !== u
                    ? u
                    : t[h]),
              null != m &&
                ("string" == typeof m && ((0, r.P)(m) || (0, i.W)(m))
                  ? (m = parseFloat(m))
                  : !p(m) && o.P.test(f) && (m = (0, l.T)(h, f)),
                e.addValue(h, (0, a.BX)(m, { owner: e })),
                void 0 === n[h] && (n[h] = m),
                null !== m && e.setBaseTarget(h, m));
          }
      }
      function _(e, t, n) {
        let r = {};
        for (let i in e) {
          let e = (function (e, t) {
            if (!t) return;
            let n = t[e] || t.default || t;
            return n.from;
          })(i, t);
          if (void 0 !== e) r[i] = e;
          else {
            let e = n.getValue(i);
            e && (r[i] = e.get());
          }
        }
        return r;
      }
    },
    6427: function (e, t, n) {
      "use strict";
      n.d(t, {
        V: function () {
          return i;
        },
        e: function () {
          return r;
        },
      });
      let r = [
          "animate",
          "whileInView",
          "whileFocus",
          "whileHover",
          "whileTap",
          "whileDrag",
          "exit",
        ],
        i = ["initial", ...r];
    },
    4866: function (e, t, n) {
      "use strict";
      function r(e, t) {
        -1 === e.indexOf(t) && e.push(t);
      }
      function i(e, t) {
        let n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      n.d(t, {
        cl: function () {
          return i;
        },
        y4: function () {
          return r;
        },
      });
    },
    1366: function (e, t, n) {
      "use strict";
      n.d(t, {
        u: function () {
          return r;
        },
      });
      let r = (e, t, n) => Math.min(Math.max(n, e), t);
    },
    7035: function (e, t, n) {
      "use strict";
      n.d(t, {
        K: function () {
          return i;
        },
        k: function () {
          return s;
        },
      });
      var r = n(65);
      let i = r.Z,
        s = r.Z;
    },
    3972: function (e, t, n) {
      "use strict";
      n.d(t, {
        s: function () {
          return T;
        },
      });
      var r = n(7035),
        i = n(5982),
        s = n(1366),
        a = n(5339);
      function o(e, t, n) {
        return (n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6)
          ? e + (t - e) * 6 * n
          : n < 0.5
          ? t
          : n < 2 / 3
          ? e + (t - e) * (2 / 3 - n) * 6
          : e;
      }
      var l = n(2395),
        u = n(6572),
        c = n(6845);
      let h = (e, t, n) => {
          let r = e * e;
          return Math.sqrt(Math.max(0, n * (t * t - r) + r));
        },
        d = [l.$, u.m, c.J],
        p = (e) => d.find((t) => t.test(e));
      function f(e) {
        let t = p(e);
        (0, r.k)(
          !!t,
          `'${e}' is not an animatable color. Use the equivalent color code instead.`
        );
        let n = t.parse(e);
        return (
          t === c.J &&
            (n = (function ({ hue: e, saturation: t, lightness: n, alpha: r }) {
              (e /= 360), (n /= 100);
              let i = 0,
                s = 0,
                a = 0;
              if ((t /= 100)) {
                let r = n < 0.5 ? n * (1 + t) : n + t - n * t,
                  l = 2 * n - r;
                (i = o(l, r, e + 1 / 3)),
                  (s = o(l, r, e)),
                  (a = o(l, r, e - 1 / 3));
              } else i = s = a = n;
              return {
                red: Math.round(255 * i),
                green: Math.round(255 * s),
                blue: Math.round(255 * a),
                alpha: r,
              };
            })(n)),
          n
        );
      }
      let m = (e, t) => {
        let n = f(e),
          r = f(t),
          i = { ...n };
        return (e) => (
          (i.red = h(n.red, r.red, e)),
          (i.green = h(n.green, r.green, e)),
          (i.blue = h(n.blue, r.blue, e)),
          (i.alpha = (0, a.C)(n.alpha, r.alpha, e)),
          u.m.transform(i)
        );
      };
      var g = n(6953),
        _ = n(6865);
      let v = (e, t) => (n) => `${n > 0 ? t : e}`;
      function y(e, t) {
        return "number" == typeof e
          ? (n) => (0, a.C)(e, t, n)
          : i.$.test(e)
          ? m(e, t)
          : e.startsWith("var(")
          ? v(e, t)
          : S(e, t);
      }
      let x = (e, t) => {
          let n = [...e],
            r = n.length,
            i = e.map((e, n) => y(e, t[n]));
          return (e) => {
            for (let t = 0; t < r; t++) n[t] = i[t](e);
            return n;
          };
        },
        b = (e, t) => {
          let n = { ...e, ...t },
            r = {};
          for (let i in n)
            void 0 !== e[i] && void 0 !== t[i] && (r[i] = y(e[i], t[i]));
          return (e) => {
            for (let t in r) n[t] = r[t](e);
            return n;
          };
        },
        S = (e, t) => {
          let n = _.P.createTransformer(t),
            i = (0, _.V)(e),
            s = (0, _.V)(t),
            a =
              i.numVars === s.numVars &&
              i.numColors === s.numColors &&
              i.numNumbers >= s.numNumbers;
          return a
            ? (0, g.z)(x(i.values, s.values), n)
            : ((0, r.K)(
                !0,
                `Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`
              ),
              v(e, t));
        };
      var E = n(7475),
        M = n(65);
      let w = (e, t) => (n) => (0, a.C)(e, t, n);
      function T(e, t, { clamp: n = !0, ease: a, mixer: o } = {}) {
        let l = e.length;
        if (
          ((0, r.k)(
            l === t.length,
            "Both input and output ranges must be the same length"
          ),
          1 === l)
        )
          return () => t[0];
        e[0] > e[l - 1] && ((e = [...e].reverse()), (t = [...t].reverse()));
        let u = (function (e, t, n) {
            let r = [],
              s =
                n ||
                (function (e) {
                  if ("number" == typeof e);
                  else if ("string" == typeof e) return i.$.test(e) ? m : S;
                  else if (Array.isArray(e)) return x;
                  else if ("object" == typeof e) return b;
                  return w;
                })(e[0]),
              a = e.length - 1;
            for (let n = 0; n < a; n++) {
              let i = s(e[n], e[n + 1]);
              if (t) {
                let e = Array.isArray(t) ? t[n] || M.Z : t;
                i = (0, g.z)(e, i);
              }
              r.push(i);
            }
            return r;
          })(t, a, o),
          c = u.length,
          h = (t) => {
            let n = 0;
            if (c > 1) for (; n < e.length - 2 && !(t < e[n + 1]); n++);
            let r = (0, E.Y)(e[n], e[n + 1], t);
            return u[n](r);
          };
        return n ? (t) => h((0, s.u)(e[0], e[l - 1], t)) : h;
      }
    },
    3791: function (e, t, n) {
      "use strict";
      n.d(t, {
        j: function () {
          return r;
        },
      });
      let r = "undefined" != typeof document;
    },
    1377: function (e, t, n) {
      "use strict";
      n.d(t, {
        P: function () {
          return r;
        },
      });
      let r = (e) => /^\-?\d*\.?\d+$/.test(e);
    },
    8350: function (e, t, n) {
      "use strict";
      function r(e) {
        return (
          "object" == typeof e &&
          Object.prototype.hasOwnProperty.call(e, "current")
        );
      }
      n.d(t, {
        I: function () {
          return r;
        },
      });
    },
    4561: function (e, t, n) {
      "use strict";
      n.d(t, {
        W: function () {
          return r;
        },
      });
      let r = (e) => /^0[^.\s]+$/.test(e);
    },
    9907: function (e, t, n) {
      "use strict";
      function r(e) {
        let t;
        return () => (void 0 === t && (t = e()), t);
      }
      n.d(t, {
        X: function () {
          return r;
        },
      });
    },
    5339: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return r;
        },
      });
      let r = (e, t, n) => -n * e + n * t + e;
    },
    65: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      let r = (e) => e;
    },
    5254: function (e, t, n) {
      "use strict";
      n.d(t, {
        Y: function () {
          return i;
        },
      });
      var r = n(4125);
      function i(e) {
        let t = [0];
        return (0, r.c)(t, e.length - 1), t;
      }
    },
    4125: function (e, t, n) {
      "use strict";
      n.d(t, {
        c: function () {
          return s;
        },
      });
      var r = n(5339),
        i = n(7475);
      function s(e, t) {
        let n = e[e.length - 1];
        for (let s = 1; s <= t; s++) {
          let a = (0, i.Y)(0, t, s);
          e.push((0, r.C)(n, 1, a));
        }
      }
    },
    6953: function (e, t, n) {
      "use strict";
      n.d(t, {
        z: function () {
          return i;
        },
      });
      let r = (e, t) => (n) => t(e(n)),
        i = (...e) => e.reduce(r);
    },
    7475: function (e, t, n) {
      "use strict";
      n.d(t, {
        Y: function () {
          return r;
        },
      });
      let r = (e, t, n) => {
        let r = t - e;
        return 0 === r ? 1 : (n - e) / r;
      };
    },
    3809: function (e, t, n) {
      "use strict";
      n.d(t, {
        Y: function () {
          return s;
        },
        p: function () {
          return i;
        },
      });
      var r = n(5721);
      let i = (e) => !!(e && "object" == typeof e && e.mix && e.toValue),
        s = (e) => ((0, r.C)(e) ? e[e.length - 1] || 0 : e);
    },
    8069: function (e, t, n) {
      "use strict";
      n.d(t, {
        L: function () {
          return i;
        },
      });
      var r = n(4866);
      class i {
        constructor() {
          this.subscriptions = [];
        }
        add(e) {
          return (
            (0, r.y4)(this.subscriptions, e),
            () => (0, r.cl)(this.subscriptions, e)
          );
        }
        notify(e, t, n) {
          let r = this.subscriptions.length;
          if (r) {
            if (1 === r) this.subscriptions[0](e, t, n);
            else
              for (let i = 0; i < r; i++) {
                let r = this.subscriptions[i];
                r && r(e, t, n);
              }
          }
        }
        getSize() {
          return this.subscriptions.length;
        }
        clear() {
          this.subscriptions.length = 0;
        }
      }
    },
    1429: function (e, t, n) {
      "use strict";
      n.d(t, {
        X: function () {
          return i;
        },
        w: function () {
          return r;
        },
      });
      let r = (e) => 1e3 * e,
        i = (e) => e / 1e3;
    },
    3105: function (e, t, n) {
      "use strict";
      n.d(t, {
        h: function () {
          return i;
        },
      });
      var r = n(2784);
      function i(e) {
        let t = (0, r.useRef)(null);
        return null === t.current && (t.current = e()), t.current;
      }
    },
    3617: function (e, t, n) {
      "use strict";
      n.d(t, {
        L: function () {
          return s;
        },
      });
      var r = n(2784),
        i = n(3791);
      let s = i.j ? r.useLayoutEffect : r.useEffect;
    },
    5394: function (e, t, n) {
      "use strict";
      function r(e, t) {
        return t ? e * (1e3 / t) : 0;
      }
      n.d(t, {
        R: function () {
          return r;
        },
      });
    },
    226: function (e, t, n) {
      "use strict";
      n.d(t, {
        BX: function () {
          return u;
        },
        S1: function () {
          return o;
        },
      });
      var r = n(8069),
        i = n(5394),
        s = n(2972);
      let a = (e) => !isNaN(parseFloat(e)),
        o = { current: void 0 };
      class l {
        constructor(e, t = {}) {
          (this.version = "10.16.4"),
            (this.timeDelta = 0),
            (this.lastUpdated = 0),
            (this.canTrackVelocity = !1),
            (this.events = {}),
            (this.updateAndNotify = (e, t = !0) => {
              (this.prev = this.current), (this.current = e);
              let { delta: n, timestamp: r } = s.frameData;
              this.lastUpdated !== r &&
                ((this.timeDelta = n),
                (this.lastUpdated = r),
                s.Wi.postRender(this.scheduleVelocityCheck)),
                this.prev !== this.current &&
                  this.events.change &&
                  this.events.change.notify(this.current),
                this.events.velocityChange &&
                  this.events.velocityChange.notify(this.getVelocity()),
                t &&
                  this.events.renderRequest &&
                  this.events.renderRequest.notify(this.current);
            }),
            (this.scheduleVelocityCheck = () =>
              s.Wi.postRender(this.velocityCheck)),
            (this.velocityCheck = ({ timestamp: e }) => {
              e !== this.lastUpdated &&
                ((this.prev = this.current),
                this.events.velocityChange &&
                  this.events.velocityChange.notify(this.getVelocity()));
            }),
            (this.hasAnimated = !1),
            (this.prev = this.current = e),
            (this.canTrackVelocity = a(this.current)),
            (this.owner = t.owner);
        }
        onChange(e) {
          return this.on("change", e);
        }
        on(e, t) {
          this.events[e] || (this.events[e] = new r.L());
          let n = this.events[e].add(t);
          return "change" === e
            ? () => {
                n(),
                  s.Wi.read(() => {
                    this.events.change.getSize() || this.stop();
                  });
              }
            : n;
        }
        clearListeners() {
          for (let e in this.events) this.events[e].clear();
        }
        attach(e, t) {
          (this.passiveEffect = e), (this.stopPassiveEffect = t);
        }
        set(e, t = !0) {
          t && this.passiveEffect
            ? this.passiveEffect(e, this.updateAndNotify)
            : this.updateAndNotify(e, t);
        }
        setWithVelocity(e, t, n) {
          this.set(t), (this.prev = e), (this.timeDelta = n);
        }
        jump(e) {
          this.updateAndNotify(e),
            (this.prev = e),
            this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
        }
        get() {
          return o.current && o.current.push(this), this.current;
        }
        getPrevious() {
          return this.prev;
        }
        getVelocity() {
          return this.canTrackVelocity
            ? (0, i.R)(
                parseFloat(this.current) - parseFloat(this.prev),
                this.timeDelta
              )
            : 0;
        }
        start(e) {
          return (
            this.stop(),
            new Promise((t) => {
              (this.hasAnimated = !0),
                (this.animation = e(t)),
                this.events.animationStart &&
                  this.events.animationStart.notify();
            }).then(() => {
              this.events.animationComplete &&
                this.events.animationComplete.notify(),
                this.clearAnimation();
            })
          );
        }
        stop() {
          this.animation &&
            (this.animation.stop(),
            this.events.animationCancel &&
              this.events.animationCancel.notify()),
            this.clearAnimation();
        }
        isAnimating() {
          return !!this.animation;
        }
        clearAnimation() {
          delete this.animation;
        }
        destroy() {
          this.clearListeners(),
            this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
        }
      }
      function u(e, t) {
        return new l(e, t);
      }
    },
    2395: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return s;
        },
      });
      var r = n(6572),
        i = n(4536);
      let s = {
        test: (0, i.i)("#"),
        parse: function (e) {
          let t = "",
            n = "",
            r = "",
            i = "";
          return (
            e.length > 5
              ? ((t = e.substring(1, 3)),
                (n = e.substring(3, 5)),
                (r = e.substring(5, 7)),
                (i = e.substring(7, 9)))
              : ((t = e.substring(1, 2)),
                (n = e.substring(2, 3)),
                (r = e.substring(3, 4)),
                (i = e.substring(4, 5)),
                (t += t),
                (n += n),
                (r += r),
                (i += i)),
            {
              red: parseInt(t, 16),
              green: parseInt(n, 16),
              blue: parseInt(r, 16),
              alpha: i ? parseInt(i, 16) / 255 : 1,
            }
          );
        },
        transform: r.m.transform,
      };
    },
    6845: function (e, t, n) {
      "use strict";
      n.d(t, {
        J: function () {
          return o;
        },
      });
      var r = n(397),
        i = n(8772),
        s = n(9747),
        a = n(4536);
      let o = {
        test: (0, a.i)("hsl", "hue"),
        parse: (0, a.d)("hue", "saturation", "lightness"),
        transform: ({ hue: e, saturation: t, lightness: n, alpha: a = 1 }) =>
          "hsla(" +
          Math.round(e) +
          ", " +
          i.aQ.transform((0, s.Nw)(t)) +
          ", " +
          i.aQ.transform((0, s.Nw)(n)) +
          ", " +
          (0, s.Nw)(r.Fq.transform(a)) +
          ")",
      };
    },
    5982: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return o;
        },
      });
      var r = n(9747),
        i = n(2395),
        s = n(6845),
        a = n(6572);
      let o = {
        test: (e) => a.m.test(e) || i.$.test(e) || s.J.test(e),
        parse: (e) =>
          a.m.test(e)
            ? a.m.parse(e)
            : s.J.test(e)
            ? s.J.parse(e)
            : i.$.parse(e),
        transform: (e) =>
          (0, r.HD)(e)
            ? e
            : e.hasOwnProperty("red")
            ? a.m.transform(e)
            : s.J.transform(e),
      };
    },
    6572: function (e, t, n) {
      "use strict";
      n.d(t, {
        m: function () {
          return u;
        },
      });
      var r = n(1366),
        i = n(397),
        s = n(9747),
        a = n(4536);
      let o = (e) => (0, r.u)(0, 255, e),
        l = { ...i.Rx, transform: (e) => Math.round(o(e)) },
        u = {
          test: (0, a.i)("rgb", "red"),
          parse: (0, a.d)("red", "green", "blue"),
          transform: ({ red: e, green: t, blue: n, alpha: r = 1 }) =>
            "rgba(" +
            l.transform(e) +
            ", " +
            l.transform(t) +
            ", " +
            l.transform(n) +
            ", " +
            (0, s.Nw)(i.Fq.transform(r)) +
            ")",
        };
    },
    4536: function (e, t, n) {
      "use strict";
      n.d(t, {
        d: function () {
          return s;
        },
        i: function () {
          return i;
        },
      });
      var r = n(9747);
      let i = (e, t) => (n) =>
          !!(
            ((0, r.HD)(n) && r.mj.test(n) && n.startsWith(e)) ||
            (t && Object.prototype.hasOwnProperty.call(n, t))
          ),
        s = (e, t, n) => (i) => {
          if (!(0, r.HD)(i)) return i;
          let [s, a, o, l] = i.match(r.KP);
          return {
            [e]: parseFloat(s),
            [t]: parseFloat(a),
            [n]: parseFloat(o),
            alpha: void 0 !== l ? parseFloat(l) : 1,
          };
        };
    },
    3764: function (e, t, n) {
      "use strict";
      n.d(t, {
        h: function () {
          return l;
        },
      });
      var r = n(6865),
        i = n(9747);
      let s = new Set(["brightness", "contrast", "saturate", "opacity"]);
      function a(e) {
        let [t, n] = e.slice(0, -1).split("(");
        if ("drop-shadow" === t) return e;
        let [r] = n.match(i.KP) || [];
        if (!r) return e;
        let a = n.replace(r, ""),
          o = s.has(t) ? 1 : 0;
        return r !== n && (o *= 100), t + "(" + o + a + ")";
      }
      let o = /([a-z-]*)\(.*?\)/g,
        l = {
          ...r.P,
          getAnimatableNone: (e) => {
            let t = e.match(o);
            return t ? t.map(a).join(" ") : e;
          },
        };
    },
    6865: function (e, t, n) {
      "use strict";
      n.d(t, {
        P: function () {
          return g;
        },
        V: function () {
          return d;
        },
      });
      var r = n(1331),
        i = n(65),
        s = n(5982),
        a = n(397),
        o = n(9747);
      let l = { regex: r.Xp, countKey: "Vars", token: "${v}", parse: i.Z },
        u = {
          regex: o.dA,
          countKey: "Colors",
          token: "${c}",
          parse: s.$.parse,
        },
        c = {
          regex: o.KP,
          countKey: "Numbers",
          token: "${n}",
          parse: a.Rx.parse,
        };
      function h(e, { regex: t, countKey: n, token: r, parse: i }) {
        let s = e.tokenised.match(t);
        s &&
          ((e["num" + n] = s.length),
          (e.tokenised = e.tokenised.replace(t, r)),
          e.values.push(...s.map(i)));
      }
      function d(e) {
        let t = e.toString(),
          n = {
            value: t,
            tokenised: t,
            values: [],
            numVars: 0,
            numColors: 0,
            numNumbers: 0,
          };
        return n.value.includes("var(--") && h(n, l), h(n, u), h(n, c), n;
      }
      function p(e) {
        return d(e).values;
      }
      function f(e) {
        let { values: t, numColors: n, numVars: r, tokenised: i } = d(e),
          a = t.length;
        return (e) => {
          let t = i;
          for (let i = 0; i < a; i++)
            t =
              i < r
                ? t.replace(l.token, e[i])
                : i < r + n
                ? t.replace(u.token, s.$.transform(e[i]))
                : t.replace(c.token, (0, o.Nw)(e[i]));
          return t;
        };
      }
      let m = (e) => ("number" == typeof e ? 0 : e),
        g = {
          test: function (e) {
            var t, n;
            return (
              isNaN(e) &&
              (0, o.HD)(e) &&
              ((null === (t = e.match(o.KP)) || void 0 === t
                ? void 0
                : t.length) || 0) +
                ((null === (n = e.match(o.dA)) || void 0 === n
                  ? void 0
                  : n.length) || 0) >
                0
            );
          },
          parse: p,
          createTransformer: f,
          getAnimatableNone: function (e) {
            let t = p(e),
              n = f(e);
            return n(t.map(m));
          },
        };
    },
    397: function (e, t, n) {
      "use strict";
      n.d(t, {
        Fq: function () {
          return s;
        },
        Rx: function () {
          return i;
        },
        bA: function () {
          return a;
        },
      });
      var r = n(1366);
      let i = {
          test: (e) => "number" == typeof e,
          parse: parseFloat,
          transform: (e) => e,
        },
        s = { ...i, transform: (e) => (0, r.u)(0, 1, e) },
        a = { ...i, default: 1 };
    },
    8772: function (e, t, n) {
      "use strict";
      n.d(t, {
        $C: function () {
          return c;
        },
        RW: function () {
          return s;
        },
        aQ: function () {
          return a;
        },
        px: function () {
          return o;
        },
        vh: function () {
          return l;
        },
        vw: function () {
          return u;
        },
      });
      var r = n(9747);
      let i = (e) => ({
          test: (t) =>
            (0, r.HD)(t) && t.endsWith(e) && 1 === t.split(" ").length,
          parse: parseFloat,
          transform: (t) => `${t}${e}`,
        }),
        s = i("deg"),
        a = i("%"),
        o = i("px"),
        l = i("vh"),
        u = i("vw"),
        c = {
          ...a,
          parse: (e) => a.parse(e) / 100,
          transform: (e) => a.transform(100 * e),
        };
    },
    9747: function (e, t, n) {
      "use strict";
      n.d(t, {
        HD: function () {
          return o;
        },
        KP: function () {
          return i;
        },
        Nw: function () {
          return r;
        },
        dA: function () {
          return s;
        },
        mj: function () {
          return a;
        },
      });
      let r = (e) => Math.round(1e5 * e) / 1e5,
        i = /(-)?([\d]*\.?[\d])+/g,
        s =
          /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,
        a =
          /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
      function o(e) {
        return "string" == typeof e;
      }
    },
    1687: function (e, t, n) {
      "use strict";
      n.d(t, {
        c: function () {
          return o;
        },
      });
      var r = n(2784),
        i = n(226),
        s = n(976),
        a = n(3105);
      function o(e) {
        let t = (0, a.h)(() => (0, i.BX)(e)),
          { isStatic: n } = (0, r.useContext)(s._);
        if (n) {
          let [, n] = (0, r.useState)(e);
          (0, r.useEffect)(() => t.on("change", n), []);
        }
        return t;
      }
    },
    7397: function (e, t, n) {
      "use strict";
      n.d(t, {
        L: function () {
          return i;
        },
      });
      var r = n(5815);
      function i(e) {
        return !!((0, r.i)(e) && e.add);
      }
    },
    5815: function (e, t, n) {
      "use strict";
      n.d(t, {
        i: function () {
          return r;
        },
      });
      let r = (e) => !!(e && e.getVelocity);
    },
    4548: function (e, t, n) {
      "use strict";
      function r(e, t) {
        (t.headers = e.headers || {}),
          (t.statusMessage = e.statusText),
          (t.statusCode = e.status),
          (t.data = e.response);
      }
      function i(e, t, n) {
        return new Promise(function (i, s) {
          n = n || {};
          var a,
            o,
            l,
            u = new XMLHttpRequest(),
            c = n.body,
            h = n.headers || {};
          for (a in (n.timeout && (u.timeout = n.timeout),
          (u.ontimeout = u.onerror =
            function (e) {
              (e.timeout = "timeout" == e.type), s(e);
            }),
          u.open(e, t.href || t),
          (u.onload = function () {
            for (
              l = u
                .getAllResponseHeaders()
                .trim()
                .split(/[\r\n]+/),
                r(u, u);
              (o = l.shift());

            )
              (o = o.split(": ")),
                (u.headers[o.shift().toLowerCase()] = o.join(": "));
            if (
              (o = u.headers["content-type"]) &&
              ~o.indexOf("application/json")
            )
              try {
                u.data = JSON.parse(u.data, n.reviver);
              } catch (e) {
                return r(u, e), s(e);
              }
            (u.status >= 400 ? s : i)(u);
          }),
          ("u" > typeof FormData && c instanceof FormData) ||
            (c &&
              "object" == typeof c &&
              ((h["content-type"] = "application/json"),
              (c = JSON.stringify(c)))),
          (u.withCredentials = !!n.withCredentials),
          h))
            u.setRequestHeader(a, h[a]);
          u.send(c);
        });
      }
      n.r(t),
        n.d(t, {
          del: function () {
            return l;
          },
          get: function () {
            return s;
          },
          patch: function () {
            return o;
          },
          post: function () {
            return a;
          },
          put: function () {
            return u;
          },
          send: function () {
            return i;
          },
        });
      var s = i.bind(i, "GET"),
        a = i.bind(i, "POST"),
        o = i.bind(i, "PATCH"),
        l = i.bind(i, "DELETE"),
        u = i.bind(i, "PUT");
    },
    9477: function (e, t, n) {
      "use strict";
      let r;
      n.d(t, {
        $TI: function () {
          return om;
        },
        $V: function () {
          return oy;
        },
        CJI: function () {
          return tA;
        },
        CP7: function () {
          return iD;
        },
        D1R: function () {
          return M;
        },
        EJi: function () {
          return ab;
        },
        F5T: function () {
          return tR;
        },
        FIo: function () {
          return ay;
        },
        FM8: function () {
          return Q;
        },
        GUF: function () {
          return I;
        },
        Ilk: function () {
          return tN;
        },
        KI_: function () {
          return L;
        },
        Kj0: function () {
          return ni;
        },
        L5s: function () {
          return oe;
        },
        Ltg: function () {
          return ey;
        },
        M5h: function () {
          return f;
        },
        M8C: function () {
          return K;
        },
        N$j: function () {
          return iJ;
        },
        N4l: function () {
          return p;
        },
        NMF: function () {
          return C;
        },
        OdW: function () {
          return i0;
        },
        OoA: function () {
          return v;
        },
        Ox3: function () {
          return a7;
        },
        PMe: function () {
          return a1;
        },
        Pa4: function () {
          return eM;
        },
        QRU: function () {
          return ot;
        },
        QmN: function () {
          return s;
        },
        ROQ: function () {
          return sy;
        },
        RsA: function () {
          return i;
        },
        SPe: function () {
          return i9;
        },
        SUY: function () {
          return on;
        },
        Syv: function () {
          return A;
        },
        TOt: function () {
          return sY;
        },
        TUv: function () {
          return iY;
        },
        TlE: function () {
          return tz;
        },
        Tme: function () {
          return tm;
        },
        TyD: function () {
          return y;
        },
        UY4: function () {
          return sh;
        },
        Uk6: function () {
          return a_;
        },
        UlW: function () {
          return P;
        },
        Vj0: function () {
          return nR;
        },
        W2J: function () {
          return D;
        },
        WMw: function () {
          return d;
        },
        Wid: function () {
          return ax;
        },
        Wl3: function () {
          return o;
        },
        WwZ: function () {
          return R;
        },
        YLQ: function () {
          return x;
        },
        ZAu: function () {
          return iC;
        },
        Zp0: function () {
          return a9;
        },
        ZzF: function () {
          return eA;
        },
        Zzh: function () {
          return oS;
        },
        _12: function () {
          return nT;
        },
        _C8: function () {
          return aA;
        },
        _Li: function () {
          return l;
        },
        _fP: function () {
          return eE;
        },
        a$l: function () {
          return tj;
        },
        aH4: function () {
          return b;
        },
        aLr: function () {
          return eW;
        },
        aNw: function () {
          return aj;
        },
        bdR: function () {
          return h;
        },
        blk: function () {
          return sc;
        },
        cLu: function () {
          return w;
        },
        cPb: function () {
          return np;
        },
        cek: function () {
          return a6;
        },
        dUE: function () {
          return aN;
        },
        dd2: function () {
          return eb;
        },
        dj0: function () {
          return U;
        },
        dpR: function () {
          return aX;
        },
        ehD: function () {
          return u;
        },
        ejS: function () {
          return su;
        },
        epp: function () {
          return ed;
        },
        fO1: function () {
          return sv;
        },
        hH6: function () {
          return aW;
        },
        iKG: function () {
          return nk;
        },
        iLg: function () {
          return aU;
        },
        iMs: function () {
          return og;
        },
        iUV: function () {
          return of;
        },
        iWj: function () {
          return nE;
        },
        jFi: function () {
          return c;
        },
        jyz: function () {
          return nh;
        },
        kB5: function () {
          return iz;
        },
        lb7: function () {
          return i1;
        },
        m7l: function () {
          return az;
        },
        nls: function () {
          return se;
        },
        ntZ: function () {
          return a;
        },
        o8S: function () {
          return ac;
        },
        pBf: function () {
          return F;
        },
        qyh: function () {
          return E;
        },
        rBU: function () {
          return nC;
        },
        rDY: function () {
          return nc;
        },
        rpg: function () {
          return g;
        },
        u9r: function () {
          return tJ;
        },
        uL9: function () {
          return m;
        },
        uWy: function () {
          return _;
        },
        vBJ: function () {
          return tU;
        },
        vmT: function () {
          return aY;
        },
        vpT: function () {
          return ik;
        },
        wem: function () {
          return S;
        },
        wk1: function () {
          return T;
        },
        woe: function () {
          return sg;
        },
        x12: function () {
          return sa;
        },
        xEZ: function () {
          return ev;
        },
        xsS: function () {
          return iU;
        },
        yC1: function () {
          return aF;
        },
        yGw: function () {
          return e0;
        },
        z$h: function () {
          return O;
        },
      });
      let i = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
        s = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
        a = 2,
        o = 0,
        l = 1,
        u = 2,
        c = 0,
        h = 1,
        d = 2,
        p = 3,
        f = 4,
        m = 0,
        g = 1e3,
        _ = 1001,
        v = 1002,
        y = 1003,
        x = 1004,
        b = 1005,
        S = 1006,
        E = 1007,
        M = 1008,
        w = 1016,
        T = 1023,
        A = 2300,
        C = 2301,
        R = 0,
        P = 1,
        O = 2,
        L = "srgb",
        I = "srgb-linear",
        N = "display-p3",
        D = 35044,
        U = 35048,
        k = "300 es";
      class F {
        addEventListener(e, t) {
          void 0 === this._listeners && (this._listeners = {});
          let n = this._listeners;
          void 0 === n[e] && (n[e] = []),
            -1 === n[e].indexOf(t) && n[e].push(t);
        }
        hasEventListener(e, t) {
          if (void 0 === this._listeners) return !1;
          let n = this._listeners;
          return void 0 !== n[e] && -1 !== n[e].indexOf(t);
        }
        removeEventListener(e, t) {
          if (void 0 === this._listeners) return;
          let n = this._listeners,
            r = n[e];
          if (void 0 !== r) {
            let e = r.indexOf(t);
            -1 !== e && r.splice(e, 1);
          }
        }
        dispatchEvent(e) {
          if (void 0 === this._listeners) return;
          let t = this._listeners,
            n = t[e.type];
          if (void 0 !== n) {
            e.target = this;
            let t = n.slice(0);
            for (let n = 0, r = t.length; n < r; n++) t[n].call(this, e);
            e.target = null;
          }
        }
      }
      let z = [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "0a",
          "0b",
          "0c",
          "0d",
          "0e",
          "0f",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "1a",
          "1b",
          "1c",
          "1d",
          "1e",
          "1f",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "2a",
          "2b",
          "2c",
          "2d",
          "2e",
          "2f",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "3a",
          "3b",
          "3c",
          "3d",
          "3e",
          "3f",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "4a",
          "4b",
          "4c",
          "4d",
          "4e",
          "4f",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "5a",
          "5b",
          "5c",
          "5d",
          "5e",
          "5f",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "6a",
          "6b",
          "6c",
          "6d",
          "6e",
          "6f",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "7a",
          "7b",
          "7c",
          "7d",
          "7e",
          "7f",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "8a",
          "8b",
          "8c",
          "8d",
          "8e",
          "8f",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "9a",
          "9b",
          "9c",
          "9d",
          "9e",
          "9f",
          "a0",
          "a1",
          "a2",
          "a3",
          "a4",
          "a5",
          "a6",
          "a7",
          "a8",
          "a9",
          "aa",
          "ab",
          "ac",
          "ad",
          "ae",
          "af",
          "b0",
          "b1",
          "b2",
          "b3",
          "b4",
          "b5",
          "b6",
          "b7",
          "b8",
          "b9",
          "ba",
          "bb",
          "bc",
          "bd",
          "be",
          "bf",
          "c0",
          "c1",
          "c2",
          "c3",
          "c4",
          "c5",
          "c6",
          "c7",
          "c8",
          "c9",
          "ca",
          "cb",
          "cc",
          "cd",
          "ce",
          "cf",
          "d0",
          "d1",
          "d2",
          "d3",
          "d4",
          "d5",
          "d6",
          "d7",
          "d8",
          "d9",
          "da",
          "db",
          "dc",
          "dd",
          "de",
          "df",
          "e0",
          "e1",
          "e2",
          "e3",
          "e4",
          "e5",
          "e6",
          "e7",
          "e8",
          "e9",
          "ea",
          "eb",
          "ec",
          "ed",
          "ee",
          "ef",
          "f0",
          "f1",
          "f2",
          "f3",
          "f4",
          "f5",
          "f6",
          "f7",
          "f8",
          "f9",
          "fa",
          "fb",
          "fc",
          "fd",
          "fe",
          "ff",
        ],
        B = 1234567,
        V = Math.PI / 180,
        j = 180 / Math.PI;
      function H() {
        let e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0,
          i =
            z[255 & e] +
            z[(e >> 8) & 255] +
            z[(e >> 16) & 255] +
            z[(e >> 24) & 255] +
            "-" +
            z[255 & t] +
            z[(t >> 8) & 255] +
            "-" +
            z[((t >> 16) & 15) | 64] +
            z[(t >> 24) & 255] +
            "-" +
            z[(63 & n) | 128] +
            z[(n >> 8) & 255] +
            "-" +
            z[(n >> 16) & 255] +
            z[(n >> 24) & 255] +
            z[255 & r] +
            z[(r >> 8) & 255] +
            z[(r >> 16) & 255] +
            z[(r >> 24) & 255];
        return i.toLowerCase();
      }
      function G(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function W(e, t) {
        return ((e % t) + t) % t;
      }
      function $(e, t, n) {
        return (1 - n) * e + n * t;
      }
      function X(e) {
        return (e & (e - 1)) == 0 && 0 !== e;
      }
      function q(e) {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
      }
      function Y(e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      }
      function J(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint32Array:
            return e / 4294967295;
          case Uint16Array:
            return e / 65535;
          case Uint8Array:
            return e / 255;
          case Int32Array:
            return Math.max(e / 2147483647, -1);
          case Int16Array:
            return Math.max(e / 32767, -1);
          case Int8Array:
            return Math.max(e / 127, -1);
          default:
            throw Error("Invalid component type.");
        }
      }
      function Z(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint32Array:
            return Math.round(4294967295 * e);
          case Uint16Array:
            return Math.round(65535 * e);
          case Uint8Array:
            return Math.round(255 * e);
          case Int32Array:
            return Math.round(2147483647 * e);
          case Int16Array:
            return Math.round(32767 * e);
          case Int8Array:
            return Math.round(127 * e);
          default:
            throw Error("Invalid component type.");
        }
      }
      let K = {
        DEG2RAD: V,
        RAD2DEG: j,
        generateUUID: H,
        clamp: G,
        euclideanModulo: W,
        mapLinear: function (e, t, n, r, i) {
          return r + ((e - t) * (i - r)) / (n - t);
        },
        inverseLerp: function (e, t, n) {
          return e !== t ? (n - e) / (t - e) : 0;
        },
        lerp: $,
        damp: function (e, t, n, r) {
          return $(e, t, 1 - Math.exp(-n * r));
        },
        pingpong: function (e, t = 1) {
          return t - Math.abs(W(e, 2 * t) - t);
        },
        smoothstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
        },
        smootherstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
        },
        randInt: function (e, t) {
          return e + Math.floor(Math.random() * (t - e + 1));
        },
        randFloat: function (e, t) {
          return e + Math.random() * (t - e);
        },
        randFloatSpread: function (e) {
          return e * (0.5 - Math.random());
        },
        seededRandom: function (e) {
          void 0 !== e && (B = e);
          let t = (B += 1831565813);
          return (
            (t = Math.imul(t ^ (t >>> 15), 1 | t)),
            (((t ^= t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ (t >>> 14)) >>> 0) /
              4294967296
          );
        },
        degToRad: function (e) {
          return e * V;
        },
        radToDeg: function (e) {
          return e * j;
        },
        isPowerOfTwo: X,
        ceilPowerOfTwo: q,
        floorPowerOfTwo: Y,
        setQuaternionFromProperEuler: function (e, t, n, r, i) {
          let s = Math.cos,
            a = Math.sin,
            o = s(n / 2),
            l = a(n / 2),
            u = s((t + r) / 2),
            c = a((t + r) / 2),
            h = s((t - r) / 2),
            d = a((t - r) / 2),
            p = s((r - t) / 2),
            f = a((r - t) / 2);
          switch (i) {
            case "XYX":
              e.set(o * c, l * h, l * d, o * u);
              break;
            case "YZY":
              e.set(l * d, o * c, l * h, o * u);
              break;
            case "ZXZ":
              e.set(l * h, l * d, o * c, o * u);
              break;
            case "XZX":
              e.set(o * c, l * f, l * p, o * u);
              break;
            case "YXY":
              e.set(l * p, o * c, l * f, o * u);
              break;
            case "ZYZ":
              e.set(l * f, l * p, o * c, o * u);
              break;
            default:
              console.warn(
                "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
                  i
              );
          }
        },
        normalize: Z,
        denormalize: J,
      };
      class Q {
        constructor(e = 0, t = 0) {
          (Q.prototype.isVector2 = !0), (this.x = e), (this.y = t);
        }
        get width() {
          return this.x;
        }
        set width(e) {
          this.x = e;
        }
        get height() {
          return this.y;
        }
        set height(e) {
          this.y = e;
        }
        set(e, t) {
          return (this.x = e), (this.y = t), this;
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            default:
              throw Error("index is out of range: " + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            default:
              throw Error("index is out of range: " + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y);
        }
        copy(e) {
          return (this.x = e.x), (this.y = e.y), this;
        }
        add(e) {
          return (this.x += e.x), (this.y += e.y), this;
        }
        addScalar(e) {
          return (this.x += e), (this.y += e), this;
        }
        addVectors(e, t) {
          return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
        }
        addScaledVector(e, t) {
          return (this.x += e.x * t), (this.y += e.y * t), this;
        }
        sub(e) {
          return (this.x -= e.x), (this.y -= e.y), this;
        }
        subScalar(e) {
          return (this.x -= e), (this.y -= e), this;
        }
        subVectors(e, t) {
          return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
        }
        multiply(e) {
          return (this.x *= e.x), (this.y *= e.y), this;
        }
        multiplyScalar(e) {
          return (this.x *= e), (this.y *= e), this;
        }
        divide(e) {
          return (this.x /= e.x), (this.y /= e.y), this;
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        applyMatrix3(e) {
          let t = this.x,
            n = this.y,
            r = e.elements;
          return (
            (this.x = r[0] * t + r[3] * n + r[6]),
            (this.y = r[1] * t + r[4] * n + r[7]),
            this
          );
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
          );
        }
        roundToZero() {
          return (
            (this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this
          );
        }
        negate() {
          return (this.x = -this.x), (this.y = -this.y), this;
        }
        dot(e) {
          return this.x * e.x + this.y * e.y;
        }
        cross(e) {
          return this.x * e.y - this.y * e.x;
        }
        lengthSq() {
          return this.x * this.x + this.y * this.y;
        }
        length() {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        }
        manhattanLength() {
          return Math.abs(this.x) + Math.abs(this.y);
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        angle() {
          let e = Math.atan2(-this.y, -this.x) + Math.PI;
          return e;
        }
        angleTo(e) {
          let t = Math.sqrt(this.lengthSq() * e.lengthSq());
          if (0 === t) return Math.PI / 2;
          let n = this.dot(e) / t;
          return Math.acos(G(n, -1, 1));
        }
        distanceTo(e) {
          return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
          let t = this.x - e.x,
            n = this.y - e.y;
          return t * t + n * n;
        }
        manhattanDistanceTo(e) {
          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            this
          );
        }
        equals(e) {
          return e.x === this.x && e.y === this.y;
        }
        fromArray(e, t = 0) {
          return (this.x = e[t]), (this.y = e[t + 1]), this;
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.x), (e[t + 1] = this.y), e;
        }
        fromBufferAttribute(e, t) {
          return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
        }
        rotateAround(e, t) {
          let n = Math.cos(t),
            r = Math.sin(t),
            i = this.x - e.x,
            s = this.y - e.y;
          return (
            (this.x = i * n - s * r + e.x), (this.y = i * r + s * n + e.y), this
          );
        }
        random() {
          return (this.x = Math.random()), (this.y = Math.random()), this;
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y;
        }
      }
      class ee {
        constructor(e, t, n, r, i, s, a, o, l) {
          (ee.prototype.isMatrix3 = !0),
            (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
            void 0 !== e && this.set(e, t, n, r, i, s, a, o, l);
        }
        set(e, t, n, r, i, s, a, o, l) {
          let u = this.elements;
          return (
            (u[0] = e),
            (u[1] = r),
            (u[2] = a),
            (u[3] = t),
            (u[4] = i),
            (u[5] = o),
            (u[6] = n),
            (u[7] = s),
            (u[8] = l),
            this
          );
        }
        identity() {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        }
        copy(e) {
          let t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
          );
        }
        extractBasis(e, t, n) {
          return (
            e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
          );
        }
        setFromMatrix4(e) {
          let t = e.elements;
          return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
          );
        }
        multiply(e) {
          return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
          return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, t) {
          let n = e.elements,
            r = t.elements,
            i = this.elements,
            s = n[0],
            a = n[3],
            o = n[6],
            l = n[1],
            u = n[4],
            c = n[7],
            h = n[2],
            d = n[5],
            p = n[8],
            f = r[0],
            m = r[3],
            g = r[6],
            _ = r[1],
            v = r[4],
            y = r[7],
            x = r[2],
            b = r[5],
            S = r[8];
          return (
            (i[0] = s * f + a * _ + o * x),
            (i[3] = s * m + a * v + o * b),
            (i[6] = s * g + a * y + o * S),
            (i[1] = l * f + u * _ + c * x),
            (i[4] = l * m + u * v + c * b),
            (i[7] = l * g + u * y + c * S),
            (i[2] = h * f + d * _ + p * x),
            (i[5] = h * m + d * v + p * b),
            (i[8] = h * g + d * y + p * S),
            this
          );
        }
        multiplyScalar(e) {
          let t = this.elements;
          return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
          );
        }
        determinant() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            s = e[4],
            a = e[5],
            o = e[6],
            l = e[7],
            u = e[8];
          return (
            t * s * u -
            t * a * l -
            n * i * u +
            n * a * o +
            r * i * l -
            r * s * o
          );
        }
        invert() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            s = e[4],
            a = e[5],
            o = e[6],
            l = e[7],
            u = e[8],
            c = u * s - a * l,
            h = a * o - u * i,
            d = l * i - s * o,
            p = t * c + n * h + r * d;
          if (0 === p) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
          let f = 1 / p;
          return (
            (e[0] = c * f),
            (e[1] = (r * l - u * n) * f),
            (e[2] = (a * n - r * s) * f),
            (e[3] = h * f),
            (e[4] = (u * t - r * o) * f),
            (e[5] = (r * i - a * t) * f),
            (e[6] = d * f),
            (e[7] = (n * o - l * t) * f),
            (e[8] = (s * t - n * i) * f),
            this
          );
        }
        transpose() {
          let e;
          let t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
          );
        }
        getNormalMatrix(e) {
          return this.setFromMatrix4(e).invert().transpose();
        }
        transposeIntoArray(e) {
          let t = this.elements;
          return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
          );
        }
        setUvTransform(e, t, n, r, i, s, a) {
          let o = Math.cos(i),
            l = Math.sin(i);
          return (
            this.set(
              n * o,
              n * l,
              -n * (o * s + l * a) + s + e,
              -r * l,
              r * o,
              -r * (-l * s + o * a) + a + t,
              0,
              0,
              1
            ),
            this
          );
        }
        scale(e, t) {
          return this.premultiply(et.makeScale(e, t)), this;
        }
        rotate(e) {
          return this.premultiply(et.makeRotation(-e)), this;
        }
        translate(e, t) {
          return this.premultiply(et.makeTranslation(e, t)), this;
        }
        makeTranslation(e, t) {
          return (
            e.isVector2
              ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
              : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
            this
          );
        }
        makeRotation(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return this.set(t, -n, 0, n, t, 0, 0, 0, 1), this;
        }
        makeScale(e, t) {
          return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
        }
        equals(e) {
          let t = this.elements,
            n = e.elements;
          for (let e = 0; e < 9; e++) if (t[e] !== n[e]) return !1;
          return !0;
        }
        fromArray(e, t = 0) {
          for (let n = 0; n < 9; n++) this.elements[n] = e[n + t];
          return this;
        }
        toArray(e = [], t = 0) {
          let n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
          );
        }
        clone() {
          return new this.constructor().fromArray(this.elements);
        }
      }
      let et = new ee();
      function en(e) {
        for (let t = e.length - 1; t >= 0; --t) if (e[t] >= 65535) return !0;
        return !1;
      }
      function er(e) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", e);
      }
      Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array;
      let ei = {};
      function es(e) {
        e in ei || ((ei[e] = !0), console.warn(e));
      }
      function ea(e) {
        return e < 0.04045
          ? 0.0773993808 * e
          : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
      }
      function eo(e) {
        return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
      }
      let el = new ee().fromArray([
          0.8224621, 0.0331941, 0.0170827, 0.177538, 0.9668058, 0.0723974,
          -0.0000001, 1e-7, 0.9105199,
        ]),
        eu = new ee().fromArray([
          1.2249401, -0.0420569, -0.0196376, -0.2249404, 1.0420571, -0.0786361,
          1e-7, 0, 1.0982735,
        ]),
        ec = {
          [I]: (e) => e,
          [L]: (e) => e.convertSRGBToLinear(),
          [N]: function (e) {
            return e.convertSRGBToLinear().applyMatrix3(eu);
          },
        },
        eh = {
          [I]: (e) => e,
          [L]: (e) => e.convertLinearToSRGB(),
          [N]: function (e) {
            return e.applyMatrix3(el).convertLinearToSRGB();
          },
        },
        ed = {
          enabled: !0,
          get legacyMode() {
            return (
              console.warn(
                "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
              ),
              !this.enabled
            );
          },
          set legacyMode(legacyMode) {
            console.warn(
              "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
            ),
              (this.enabled = !legacyMode);
          },
          get workingColorSpace() {
            return I;
          },
          set workingColorSpace(colorSpace) {
            console.warn(
              "THREE.ColorManagement: .workingColorSpace is readonly."
            );
          },
          convert: function (e, t, n) {
            if (!1 === this.enabled || t === n || !t || !n) return e;
            let r = ec[t],
              i = eh[n];
            if (void 0 === r || void 0 === i)
              throw Error(
                `Unsupported color space conversion, "${t}" to "${n}".`
              );
            return i(r(e));
          },
          fromWorkingColorSpace: function (e, t) {
            return this.convert(e, this.workingColorSpace, t);
          },
          toWorkingColorSpace: function (e, t) {
            return this.convert(e, t, this.workingColorSpace);
          },
        };
      class ep {
        static getDataURL(e) {
          let t;
          if (/^data:/i.test(e.src) || "undefined" == typeof HTMLCanvasElement)
            return e.src;
          if (e instanceof HTMLCanvasElement) t = e;
          else {
            void 0 === r && (r = er("canvas")),
              (r.width = e.width),
              (r.height = e.height);
            let n = r.getContext("2d");
            e instanceof ImageData
              ? n.putImageData(e, 0, 0)
              : n.drawImage(e, 0, 0, e.width, e.height),
              (t = r);
          }
          return t.width > 2048 || t.height > 2048
            ? (console.warn(
                "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
                e
              ),
              t.toDataURL("image/jpeg", 0.6))
            : t.toDataURL("image/png");
        }
        static sRGBToLinear(e) {
          if (
            ("undefined" != typeof HTMLImageElement &&
              e instanceof HTMLImageElement) ||
            ("undefined" != typeof HTMLCanvasElement &&
              e instanceof HTMLCanvasElement) ||
            ("undefined" != typeof ImageBitmap && e instanceof ImageBitmap)
          ) {
            let t = er("canvas");
            (t.width = e.width), (t.height = e.height);
            let n = t.getContext("2d");
            n.drawImage(e, 0, 0, e.width, e.height);
            let r = n.getImageData(0, 0, e.width, e.height),
              i = r.data;
            for (let e = 0; e < i.length; e++) i[e] = 255 * ea(i[e] / 255);
            return n.putImageData(r, 0, 0), t;
          }
          if (!e.data)
            return (
              console.warn(
                "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
              ),
              e
            );
          {
            let t = e.data.slice(0);
            for (let e = 0; e < t.length; e++)
              t instanceof Uint8Array || t instanceof Uint8ClampedArray
                ? (t[e] = Math.floor(255 * ea(t[e] / 255)))
                : (t[e] = ea(t[e]));
            return { data: t, width: e.width, height: e.height };
          }
        }
      }
      let ef = 0;
      class em {
        constructor(e = null) {
          (this.isSource = !0),
            Object.defineProperty(this, "id", { value: ef++ }),
            (this.uuid = H()),
            (this.data = e),
            (this.version = 0);
        }
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        toJSON(e) {
          let t = void 0 === e || "string" == typeof e;
          if (!t && void 0 !== e.images[this.uuid]) return e.images[this.uuid];
          let n = { uuid: this.uuid, url: "" },
            r = this.data;
          if (null !== r) {
            let e;
            if (Array.isArray(r)) {
              e = [];
              for (let t = 0, n = r.length; t < n; t++)
                r[t].isDataTexture ? e.push(eg(r[t].image)) : e.push(eg(r[t]));
            } else e = eg(r);
            n.url = e;
          }
          return t || (e.images[this.uuid] = n), n;
        }
      }
      function eg(e) {
        return ("undefined" != typeof HTMLImageElement &&
          e instanceof HTMLImageElement) ||
          ("undefined" != typeof HTMLCanvasElement &&
            e instanceof HTMLCanvasElement) ||
          ("undefined" != typeof ImageBitmap && e instanceof ImageBitmap)
          ? ep.getDataURL(e)
          : e.data
          ? {
              data: Array.from(e.data),
              width: e.width,
              height: e.height,
              type: e.data.constructor.name,
            }
          : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
      }
      let e_ = 0;
      class ev extends F {
        constructor(
          e = ev.DEFAULT_IMAGE,
          t = ev.DEFAULT_MAPPING,
          n = _,
          r = _,
          i = S,
          s = M,
          a = T,
          o = 1009,
          l = ev.DEFAULT_ANISOTROPY,
          u = ""
        ) {
          super(),
            (this.isTexture = !0),
            Object.defineProperty(this, "id", { value: e_++ }),
            (this.uuid = H()),
            (this.name = ""),
            (this.source = new em(e)),
            (this.mipmaps = []),
            (this.mapping = t),
            (this.channel = 0),
            (this.wrapS = n),
            (this.wrapT = r),
            (this.magFilter = i),
            (this.minFilter = s),
            (this.anisotropy = l),
            (this.format = a),
            (this.internalFormat = null),
            (this.type = o),
            (this.offset = new Q(0, 0)),
            (this.repeat = new Q(1, 1)),
            (this.center = new Q(0, 0)),
            (this.rotation = 0),
            (this.matrixAutoUpdate = !0),
            (this.matrix = new ee()),
            (this.generateMipmaps = !0),
            (this.premultiplyAlpha = !1),
            (this.flipY = !0),
            (this.unpackAlignment = 4),
            "string" == typeof u
              ? (this.colorSpace = u)
              : (es(
                  "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                ),
                (this.colorSpace = 3001 === u ? L : "")),
            (this.userData = {}),
            (this.version = 0),
            (this.onUpdate = null),
            (this.isRenderTargetTexture = !1),
            (this.needsPMREMUpdate = !1);
        }
        get image() {
          return this.source.data;
        }
        set image(e = null) {
          this.source.data = e;
        }
        updateMatrix() {
          this.matrix.setUvTransform(
            this.offset.x,
            this.offset.y,
            this.repeat.x,
            this.repeat.y,
            this.rotation,
            this.center.x,
            this.center.y
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return (
            (this.name = e.name),
            (this.source = e.source),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.channel = e.channel),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.internalFormat = e.internalFormat),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            (this.rotation = e.rotation),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this.matrix.copy(e.matrix),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.colorSpace = e.colorSpace),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            (this.needsUpdate = !0),
            this
          );
        }
        toJSON(e) {
          let t = void 0 === e || "string" == typeof e;
          if (!t && void 0 !== e.textures[this.uuid])
            return e.textures[this.uuid];
          let n = {
            metadata: {
              version: 4.6,
              type: "Texture",
              generator: "Texture.toJSON",
            },
            uuid: this.uuid,
            name: this.name,
            image: this.source.toJSON(e).uuid,
            mapping: this.mapping,
            channel: this.channel,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            internalFormat: this.internalFormat,
            type: this.type,
            colorSpace: this.colorSpace,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            generateMipmaps: this.generateMipmaps,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment,
          };
          return (
            Object.keys(this.userData).length > 0 &&
              (n.userData = this.userData),
            t || (e.textures[this.uuid] = n),
            n
          );
        }
        dispose() {
          this.dispatchEvent({ type: "dispose" });
        }
        transformUv(e) {
          if (300 !== this.mapping) return e;
          if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
            switch (this.wrapS) {
              case g:
                e.x = e.x - Math.floor(e.x);
                break;
              case _:
                e.x = e.x < 0 ? 0 : 1;
                break;
              case v:
                1 === Math.abs(Math.floor(e.x) % 2)
                  ? (e.x = Math.ceil(e.x) - e.x)
                  : (e.x = e.x - Math.floor(e.x));
            }
          if (e.y < 0 || e.y > 1)
            switch (this.wrapT) {
              case g:
                e.y = e.y - Math.floor(e.y);
                break;
              case _:
                e.y = e.y < 0 ? 0 : 1;
                break;
              case v:
                1 === Math.abs(Math.floor(e.y) % 2)
                  ? (e.y = Math.ceil(e.y) - e.y)
                  : (e.y = e.y - Math.floor(e.y));
            }
          return this.flipY && (e.y = 1 - e.y), e;
        }
        set needsUpdate(e) {
          !0 === e && (this.version++, (this.source.needsUpdate = !0));
        }
        get encoding() {
          return (
            es(
              "THREE.Texture: Property .encoding has been replaced by .colorSpace."
            ),
            this.colorSpace === L ? 3001 : 3e3
          );
        }
        set encoding(e) {
          es(
            "THREE.Texture: Property .encoding has been replaced by .colorSpace."
          ),
            (this.colorSpace = 3001 === e ? L : "");
        }
      }
      (ev.DEFAULT_IMAGE = null),
        (ev.DEFAULT_MAPPING = 300),
        (ev.DEFAULT_ANISOTROPY = 1);
      class ey {
        constructor(e = 0, t = 0, n = 0, r = 1) {
          (ey.prototype.isVector4 = !0),
            (this.x = e),
            (this.y = t),
            (this.z = n),
            (this.w = r);
        }
        get width() {
          return this.z;
        }
        set width(e) {
          this.z = e;
        }
        get height() {
          return this.w;
        }
        set height(e) {
          this.w = e;
        }
        set(e, t, n, r) {
          return (this.x = e), (this.y = t), (this.z = n), (this.w = r), this;
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setZ(e) {
          return (this.z = e), this;
        }
        setW(e) {
          return (this.w = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            case 3:
              this.w = t;
              break;
            default:
              throw Error("index is out of range: " + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw Error("index is out of range: " + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y, this.z, this.w);
        }
        copy(e) {
          return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = void 0 !== e.w ? e.w : 1),
            this
          );
        }
        add(e) {
          return (
            (this.x += e.x),
            (this.y += e.y),
            (this.z += e.z),
            (this.w += e.w),
            this
          );
        }
        addScalar(e) {
          return (
            (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
          );
        }
        addVectors(e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
          );
        }
        addScaledVector(e, t) {
          return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
          );
        }
        sub(e) {
          return (
            (this.x -= e.x),
            (this.y -= e.y),
            (this.z -= e.z),
            (this.w -= e.w),
            this
          );
        }
        subScalar(e) {
          return (
            (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
          );
        }
        subVectors(e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
          );
        }
        multiply(e) {
          return (
            (this.x *= e.x),
            (this.y *= e.y),
            (this.z *= e.z),
            (this.w *= e.w),
            this
          );
        }
        multiplyScalar(e) {
          return (
            (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
          );
        }
        applyMatrix4(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = this.w,
            s = e.elements;
          return (
            (this.x = s[0] * t + s[4] * n + s[8] * r + s[12] * i),
            (this.y = s[1] * t + s[5] * n + s[9] * r + s[13] * i),
            (this.z = s[2] * t + s[6] * n + s[10] * r + s[14] * i),
            (this.w = s[3] * t + s[7] * n + s[11] * r + s[15] * i),
            this
          );
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        setAxisAngleFromQuaternion(e) {
          this.w = 2 * Math.acos(e.w);
          let t = Math.sqrt(1 - e.w * e.w);
          return (
            t < 1e-4
              ? ((this.x = 1), (this.y = 0), (this.z = 0))
              : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
          );
        }
        setAxisAngleFromRotationMatrix(e) {
          let t, n, r, i;
          let s = e.elements,
            a = s[0],
            o = s[4],
            l = s[8],
            u = s[1],
            c = s[5],
            h = s[9],
            d = s[2],
            p = s[6],
            f = s[10];
          if (
            0.01 > Math.abs(o - u) &&
            0.01 > Math.abs(l - d) &&
            0.01 > Math.abs(h - p)
          ) {
            if (
              0.1 > Math.abs(o + u) &&
              0.1 > Math.abs(l + d) &&
              0.1 > Math.abs(h + p) &&
              0.1 > Math.abs(a + c + f - 3)
            )
              return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let e = (a + 1) / 2,
              s = (c + 1) / 2,
              m = (f + 1) / 2,
              g = (o + u) / 4,
              _ = (l + d) / 4,
              v = (h + p) / 4;
            return (
              e > s && e > m
                ? e < 0.01
                  ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                  : ((r = g / (n = Math.sqrt(e))), (i = _ / n))
                : s > m
                ? s < 0.01
                  ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                  : ((n = g / (r = Math.sqrt(s))), (i = v / r))
                : m < 0.01
                ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                : ((n = _ / (i = Math.sqrt(m))), (r = v / i)),
              this.set(n, r, i, t),
              this
            );
          }
          let m = Math.sqrt(
            (p - h) * (p - h) + (l - d) * (l - d) + (u - o) * (u - o)
          );
          return (
            0.001 > Math.abs(m) && (m = 1),
            (this.x = (p - h) / m),
            (this.y = (l - d) / m),
            (this.z = (u - o) / m),
            (this.w = Math.acos((a + c + f - 1) / 2)),
            this
          );
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            (this.w = Math.max(e, Math.min(t, this.w))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
          );
        }
        roundToZero() {
          return (
            (this.x = Math.trunc(this.x)),
            (this.y = Math.trunc(this.y)),
            (this.z = Math.trunc(this.z)),
            (this.w = Math.trunc(this.w)),
            this
          );
        }
        negate() {
          return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
          );
        }
        dot(e) {
          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        }
        lengthSq() {
          return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
          );
        }
        length() {
          return Math.sqrt(
            this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
          );
        }
        manhattanLength() {
          return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
          );
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            (this.w = e.w + (t.w - e.w) * n),
            this
          );
        }
        equals(e) {
          return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
          );
        }
        fromArray(e, t = 0) {
          return (
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
          );
        }
        fromBufferAttribute(e, t) {
          return (
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
          );
        }
        random() {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            (this.w = Math.random()),
            this
          );
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y, yield this.z, yield this.w;
        }
      }
      class ex extends F {
        constructor(e = 1, t = 1, n = {}) {
          super(),
            (this.isRenderTarget = !0),
            (this.width = e),
            (this.height = t),
            (this.depth = 1),
            (this.scissor = new ey(0, 0, e, t)),
            (this.scissorTest = !1),
            (this.viewport = new ey(0, 0, e, t)),
            void 0 !== n.encoding &&
              (es(
                "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
              ),
              (n.colorSpace = 3001 === n.encoding ? L : "")),
            (this.texture = new ev(
              { width: e, height: t, depth: 1 },
              n.mapping,
              n.wrapS,
              n.wrapT,
              n.magFilter,
              n.minFilter,
              n.format,
              n.type,
              n.anisotropy,
              n.colorSpace
            )),
            (this.texture.isRenderTargetTexture = !0),
            (this.texture.flipY = !1),
            (this.texture.generateMipmaps =
              void 0 !== n.generateMipmaps && n.generateMipmaps),
            (this.texture.internalFormat =
              void 0 !== n.internalFormat ? n.internalFormat : null),
            (this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : S),
            (this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
            (this.stencilBuffer =
              void 0 !== n.stencilBuffer && n.stencilBuffer),
            (this.depthTexture =
              void 0 !== n.depthTexture ? n.depthTexture : null),
            (this.samples = void 0 !== n.samples ? n.samples : 0);
        }
        setSize(e, t, n = 1) {
          (this.width !== e || this.height !== t || this.depth !== n) &&
            ((this.width = e),
            (this.height = t),
            (this.depth = n),
            (this.texture.image.width = e),
            (this.texture.image.height = t),
            (this.texture.image.depth = n),
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t);
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          (this.width = e.width),
            (this.height = e.height),
            (this.depth = e.depth),
            this.scissor.copy(e.scissor),
            (this.scissorTest = e.scissorTest),
            this.viewport.copy(e.viewport),
            (this.texture = e.texture.clone()),
            (this.texture.isRenderTargetTexture = !0);
          let t = Object.assign({}, e.texture.image);
          return (
            (this.texture.source = new em(t)),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            null !== e.depthTexture &&
              (this.depthTexture = e.depthTexture.clone()),
            (this.samples = e.samples),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: "dispose" });
        }
      }
      class eb extends ex {
        constructor(e = 1, t = 1, n = {}) {
          super(e, t, n), (this.isWebGLRenderTarget = !0);
        }
      }
      class eS extends ev {
        constructor(e = null, t = 1, n = 1, r = 1) {
          super(null),
            (this.isDataArrayTexture = !0),
            (this.image = { data: e, width: t, height: n, depth: r }),
            (this.magFilter = y),
            (this.minFilter = y),
            (this.wrapR = _),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
        }
      }
      class eE {
        constructor(e = 0, t = 0, n = 0, r = 1) {
          (this.isQuaternion = !0),
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = r);
        }
        static slerpFlat(e, t, n, r, i, s, a) {
          let o = n[r + 0],
            l = n[r + 1],
            u = n[r + 2],
            c = n[r + 3],
            h = i[s + 0],
            d = i[s + 1],
            p = i[s + 2],
            f = i[s + 3];
          if (0 === a) {
            (e[t + 0] = o), (e[t + 1] = l), (e[t + 2] = u), (e[t + 3] = c);
            return;
          }
          if (1 === a) {
            (e[t + 0] = h), (e[t + 1] = d), (e[t + 2] = p), (e[t + 3] = f);
            return;
          }
          if (c !== f || o !== h || l !== d || u !== p) {
            let e = 1 - a,
              t = o * h + l * d + u * p + c * f,
              n = t >= 0 ? 1 : -1,
              r = 1 - t * t;
            if (r > Number.EPSILON) {
              let i = Math.sqrt(r),
                s = Math.atan2(i, t * n);
              (e = Math.sin(e * s) / i), (a = Math.sin(a * s) / i);
            }
            let i = a * n;
            if (
              ((o = o * e + h * i),
              (l = l * e + d * i),
              (u = u * e + p * i),
              (c = c * e + f * i),
              e === 1 - a)
            ) {
              let e = 1 / Math.sqrt(o * o + l * l + u * u + c * c);
              (o *= e), (l *= e), (u *= e), (c *= e);
            }
          }
          (e[t] = o), (e[t + 1] = l), (e[t + 2] = u), (e[t + 3] = c);
        }
        static multiplyQuaternionsFlat(e, t, n, r, i, s) {
          let a = n[r],
            o = n[r + 1],
            l = n[r + 2],
            u = n[r + 3],
            c = i[s],
            h = i[s + 1],
            d = i[s + 2],
            p = i[s + 3];
          return (
            (e[t] = a * p + u * c + o * d - l * h),
            (e[t + 1] = o * p + u * h + l * c - a * d),
            (e[t + 2] = l * p + u * d + a * h - o * c),
            (e[t + 3] = u * p - a * c - o * h - l * d),
            e
          );
        }
        get x() {
          return this._x;
        }
        set x(e) {
          (this._x = e), this._onChangeCallback();
        }
        get y() {
          return this._y;
        }
        set y(e) {
          (this._y = e), this._onChangeCallback();
        }
        get z() {
          return this._z;
        }
        set z(e) {
          (this._z = e), this._onChangeCallback();
        }
        get w() {
          return this._w;
        }
        set w(e) {
          (this._w = e), this._onChangeCallback();
        }
        set(e, t, n, r) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = r),
            this._onChangeCallback(),
            this
          );
        }
        clone() {
          return new this.constructor(this._x, this._y, this._z, this._w);
        }
        copy(e) {
          return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this._onChangeCallback(),
            this
          );
        }
        setFromEuler(e, t) {
          let n = e._x,
            r = e._y,
            i = e._z,
            s = e._order,
            a = Math.cos,
            o = Math.sin,
            l = a(n / 2),
            u = a(r / 2),
            c = a(i / 2),
            h = o(n / 2),
            d = o(r / 2),
            p = o(i / 2);
          switch (s) {
            case "XYZ":
              (this._x = h * u * c + l * d * p),
                (this._y = l * d * c - h * u * p),
                (this._z = l * u * p + h * d * c),
                (this._w = l * u * c - h * d * p);
              break;
            case "YXZ":
              (this._x = h * u * c + l * d * p),
                (this._y = l * d * c - h * u * p),
                (this._z = l * u * p - h * d * c),
                (this._w = l * u * c + h * d * p);
              break;
            case "ZXY":
              (this._x = h * u * c - l * d * p),
                (this._y = l * d * c + h * u * p),
                (this._z = l * u * p + h * d * c),
                (this._w = l * u * c - h * d * p);
              break;
            case "ZYX":
              (this._x = h * u * c - l * d * p),
                (this._y = l * d * c + h * u * p),
                (this._z = l * u * p - h * d * c),
                (this._w = l * u * c + h * d * p);
              break;
            case "YZX":
              (this._x = h * u * c + l * d * p),
                (this._y = l * d * c + h * u * p),
                (this._z = l * u * p - h * d * c),
                (this._w = l * u * c - h * d * p);
              break;
            case "XZY":
              (this._x = h * u * c - l * d * p),
                (this._y = l * d * c - h * u * p),
                (this._z = l * u * p + h * d * c),
                (this._w = l * u * c + h * d * p);
              break;
            default:
              console.warn(
                "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
                  s
              );
          }
          return !1 !== t && this._onChangeCallback(), this;
        }
        setFromAxisAngle(e, t) {
          let n = t / 2,
            r = Math.sin(n);
          return (
            (this._x = e.x * r),
            (this._y = e.y * r),
            (this._z = e.z * r),
            (this._w = Math.cos(n)),
            this._onChangeCallback(),
            this
          );
        }
        setFromRotationMatrix(e) {
          let t = e.elements,
            n = t[0],
            r = t[4],
            i = t[8],
            s = t[1],
            a = t[5],
            o = t[9],
            l = t[2],
            u = t[6],
            c = t[10],
            h = n + a + c;
          if (h > 0) {
            let e = 0.5 / Math.sqrt(h + 1);
            (this._w = 0.25 / e),
              (this._x = (u - o) * e),
              (this._y = (i - l) * e),
              (this._z = (s - r) * e);
          } else if (n > a && n > c) {
            let e = 2 * Math.sqrt(1 + n - a - c);
            (this._w = (u - o) / e),
              (this._x = 0.25 * e),
              (this._y = (r + s) / e),
              (this._z = (i + l) / e);
          } else if (a > c) {
            let e = 2 * Math.sqrt(1 + a - n - c);
            (this._w = (i - l) / e),
              (this._x = (r + s) / e),
              (this._y = 0.25 * e),
              (this._z = (o + u) / e);
          } else {
            let e = 2 * Math.sqrt(1 + c - n - a);
            (this._w = (s - r) / e),
              (this._x = (i + l) / e),
              (this._y = (o + u) / e),
              (this._z = 0.25 * e);
          }
          return this._onChangeCallback(), this;
        }
        setFromUnitVectors(e, t) {
          let n = e.dot(t) + 1;
          return (
            n < Number.EPSILON
              ? ((n = 0),
                Math.abs(e.x) > Math.abs(e.z)
                  ? ((this._x = -e.y), (this._y = e.x), (this._z = 0))
                  : ((this._x = 0), (this._y = -e.z), (this._z = e.y)))
              : ((this._x = e.y * t.z - e.z * t.y),
                (this._y = e.z * t.x - e.x * t.z),
                (this._z = e.x * t.y - e.y * t.x)),
            (this._w = n),
            this.normalize()
          );
        }
        angleTo(e) {
          return 2 * Math.acos(Math.abs(G(this.dot(e), -1, 1)));
        }
        rotateTowards(e, t) {
          let n = this.angleTo(e);
          if (0 === n) return this;
          let r = Math.min(1, t / n);
          return this.slerp(e, r), this;
        }
        identity() {
          return this.set(0, 0, 0, 1);
        }
        invert() {
          return this.conjugate();
        }
        conjugate() {
          return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this._onChangeCallback(),
            this
          );
        }
        dot(e) {
          return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
          );
        }
        lengthSq() {
          return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
          );
        }
        length() {
          return Math.sqrt(
            this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
          );
        }
        normalize() {
          let e = this.length();
          return (
            0 === e
              ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
              : ((e = 1 / e),
                (this._x = this._x * e),
                (this._y = this._y * e),
                (this._z = this._z * e),
                (this._w = this._w * e)),
            this._onChangeCallback(),
            this
          );
        }
        multiply(e) {
          return this.multiplyQuaternions(this, e);
        }
        premultiply(e) {
          return this.multiplyQuaternions(e, this);
        }
        multiplyQuaternions(e, t) {
          let n = e._x,
            r = e._y,
            i = e._z,
            s = e._w,
            a = t._x,
            o = t._y,
            l = t._z,
            u = t._w;
          return (
            (this._x = n * u + s * a + r * l - i * o),
            (this._y = r * u + s * o + i * a - n * l),
            (this._z = i * u + s * l + n * o - r * a),
            (this._w = s * u - n * a - r * o - i * l),
            this._onChangeCallback(),
            this
          );
        }
        slerp(e, t) {
          if (0 === t) return this;
          if (1 === t) return this.copy(e);
          let n = this._x,
            r = this._y,
            i = this._z,
            s = this._w,
            a = s * e._w + n * e._x + r * e._y + i * e._z;
          if (
            (a < 0
              ? ((this._w = -e._w),
                (this._x = -e._x),
                (this._y = -e._y),
                (this._z = -e._z),
                (a = -a))
              : this.copy(e),
            a >= 1)
          )
            return (
              (this._w = s), (this._x = n), (this._y = r), (this._z = i), this
            );
          let o = 1 - a * a;
          if (o <= Number.EPSILON) {
            let e = 1 - t;
            return (
              (this._w = e * s + t * this._w),
              (this._x = e * n + t * this._x),
              (this._y = e * r + t * this._y),
              (this._z = e * i + t * this._z),
              this.normalize(),
              this._onChangeCallback(),
              this
            );
          }
          let l = Math.sqrt(o),
            u = Math.atan2(l, a),
            c = Math.sin((1 - t) * u) / l,
            h = Math.sin(t * u) / l;
          return (
            (this._w = s * c + this._w * h),
            (this._x = n * c + this._x * h),
            (this._y = r * c + this._y * h),
            (this._z = i * c + this._z * h),
            this._onChangeCallback(),
            this
          );
        }
        slerpQuaternions(e, t, n) {
          return this.copy(e).slerp(t, n);
        }
        random() {
          let e = Math.random(),
            t = Math.sqrt(1 - e),
            n = Math.sqrt(e),
            r = 2 * Math.PI * Math.random(),
            i = 2 * Math.PI * Math.random();
          return this.set(
            t * Math.cos(r),
            n * Math.sin(i),
            n * Math.cos(i),
            t * Math.sin(r)
          );
        }
        equals(e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
          );
        }
        fromArray(e, t = 0) {
          return (
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this._onChangeCallback(),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
          );
        }
        fromBufferAttribute(e, t) {
          return (
            (this._x = e.getX(t)),
            (this._y = e.getY(t)),
            (this._z = e.getZ(t)),
            (this._w = e.getW(t)),
            this
          );
        }
        toJSON() {
          return this.toArray();
        }
        _onChange(e) {
          return (this._onChangeCallback = e), this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
          yield this._x, yield this._y, yield this._z, yield this._w;
        }
      }
      class eM {
        constructor(e = 0, t = 0, n = 0) {
          (eM.prototype.isVector3 = !0),
            (this.x = e),
            (this.y = t),
            (this.z = n);
        }
        set(e, t, n) {
          return (
            void 0 === n && (n = this.z),
            (this.x = e),
            (this.y = t),
            (this.z = n),
            this
          );
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), (this.z = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setZ(e) {
          return (this.z = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            default:
              throw Error("index is out of range: " + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            default:
              throw Error("index is out of range: " + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y, this.z);
        }
        copy(e) {
          return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
        }
        add(e) {
          return (this.x += e.x), (this.y += e.y), (this.z += e.z), this;
        }
        addScalar(e) {
          return (this.x += e), (this.y += e), (this.z += e), this;
        }
        addVectors(e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            this
          );
        }
        addScaledVector(e, t) {
          return (
            (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
          );
        }
        sub(e) {
          return (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this;
        }
        subScalar(e) {
          return (this.x -= e), (this.y -= e), (this.z -= e), this;
        }
        subVectors(e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            this
          );
        }
        multiply(e) {
          return (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this;
        }
        multiplyScalar(e) {
          return (this.x *= e), (this.y *= e), (this.z *= e), this;
        }
        multiplyVectors(e, t) {
          return (
            (this.x = e.x * t.x),
            (this.y = e.y * t.y),
            (this.z = e.z * t.z),
            this
          );
        }
        applyEuler(e) {
          return this.applyQuaternion(eT.setFromEuler(e));
        }
        applyAxisAngle(e, t) {
          return this.applyQuaternion(eT.setFromAxisAngle(e, t));
        }
        applyMatrix3(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[3] * n + i[6] * r),
            (this.y = i[1] * t + i[4] * n + i[7] * r),
            (this.z = i[2] * t + i[5] * n + i[8] * r),
            this
          );
        }
        applyNormalMatrix(e) {
          return this.applyMatrix3(e).normalize();
        }
        applyMatrix4(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements,
            s = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
          return (
            (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * s),
            (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * s),
            (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * s),
            this
          );
        }
        applyQuaternion(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.x,
            s = e.y,
            a = e.z,
            o = e.w,
            l = o * t + s * r - a * n,
            u = o * n + a * t - i * r,
            c = o * r + i * n - s * t,
            h = -i * t - s * n - a * r;
          return (
            (this.x = l * o + -(h * i) + -(u * a) - -(c * s)),
            (this.y = u * o + -(h * s) + -(c * i) - -(l * a)),
            (this.z = c * o + -(h * a) + -(l * s) - -(u * i)),
            this
          );
        }
        project(e) {
          return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
            e.projectionMatrix
          );
        }
        unproject(e) {
          return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
            e.matrixWorld
          );
        }
        transformDirection(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[4] * n + i[8] * r),
            (this.y = i[1] * t + i[5] * n + i[9] * r),
            (this.z = i[2] * t + i[6] * n + i[10] * r),
            this.normalize()
          );
        }
        divide(e) {
          return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            this
          );
        }
        roundToZero() {
          return (
            (this.x = Math.trunc(this.x)),
            (this.y = Math.trunc(this.y)),
            (this.z = Math.trunc(this.z)),
            this
          );
        }
        negate() {
          return (
            (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
          );
        }
        dot(e) {
          return this.x * e.x + this.y * e.y + this.z * e.z;
        }
        lengthSq() {
          return this.x * this.x + this.y * this.y + this.z * this.z;
        }
        length() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        }
        manhattanLength() {
          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            this
          );
        }
        cross(e) {
          return this.crossVectors(this, e);
        }
        crossVectors(e, t) {
          let n = e.x,
            r = e.y,
            i = e.z,
            s = t.x,
            a = t.y,
            o = t.z;
          return (
            (this.x = r * o - i * a),
            (this.y = i * s - n * o),
            (this.z = n * a - r * s),
            this
          );
        }
        projectOnVector(e) {
          let t = e.lengthSq();
          if (0 === t) return this.set(0, 0, 0);
          let n = e.dot(this) / t;
          return this.copy(e).multiplyScalar(n);
        }
        projectOnPlane(e) {
          return ew.copy(this).projectOnVector(e), this.sub(ew);
        }
        reflect(e) {
          return this.sub(ew.copy(e).multiplyScalar(2 * this.dot(e)));
        }
        angleTo(e) {
          let t = Math.sqrt(this.lengthSq() * e.lengthSq());
          if (0 === t) return Math.PI / 2;
          let n = this.dot(e) / t;
          return Math.acos(G(n, -1, 1));
        }
        distanceTo(e) {
          return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
          let t = this.x - e.x,
            n = this.y - e.y,
            r = this.z - e.z;
          return t * t + n * n + r * r;
        }
        manhattanDistanceTo(e) {
          return (
            Math.abs(this.x - e.x) +
            Math.abs(this.y - e.y) +
            Math.abs(this.z - e.z)
          );
        }
        setFromSpherical(e) {
          return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
        }
        setFromSphericalCoords(e, t, n) {
          let r = Math.sin(t) * e;
          return (
            (this.x = r * Math.sin(n)),
            (this.y = Math.cos(t) * e),
            (this.z = r * Math.cos(n)),
            this
          );
        }
        setFromCylindrical(e) {
          return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
        }
        setFromCylindricalCoords(e, t, n) {
          return (
            (this.x = e * Math.sin(t)),
            (this.y = n),
            (this.z = e * Math.cos(t)),
            this
          );
        }
        setFromMatrixPosition(e) {
          let t = e.elements;
          return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
        }
        setFromMatrixScale(e) {
          let t = this.setFromMatrixColumn(e, 0).length(),
            n = this.setFromMatrixColumn(e, 1).length(),
            r = this.setFromMatrixColumn(e, 2).length();
          return (this.x = t), (this.y = n), (this.z = r), this;
        }
        setFromMatrixColumn(e, t) {
          return this.fromArray(e.elements, 4 * t);
        }
        setFromMatrix3Column(e, t) {
          return this.fromArray(e.elements, 3 * t);
        }
        setFromEuler(e) {
          return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
        }
        setFromColor(e) {
          return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
        }
        equals(e) {
          return e.x === this.x && e.y === this.y && e.z === this.z;
        }
        fromArray(e, t = 0) {
          return (
            (this.x = e[t]), (this.y = e[t + 1]), (this.z = e[t + 2]), this
          );
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e;
        }
        fromBufferAttribute(e, t) {
          return (
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            this
          );
        }
        random() {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            this
          );
        }
        randomDirection() {
          let e = (Math.random() - 0.5) * 2,
            t = Math.random() * Math.PI * 2,
            n = Math.sqrt(1 - e ** 2);
          return (
            (this.x = n * Math.cos(t)),
            (this.y = n * Math.sin(t)),
            (this.z = e),
            this
          );
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y, yield this.z;
        }
      }
      let ew = new eM(),
        eT = new eE();
      class eA {
        constructor(
          e = new eM(Infinity, Infinity, Infinity),
          t = new eM(-1 / 0, -1 / 0, -1 / 0)
        ) {
          (this.isBox3 = !0), (this.min = e), (this.max = t);
        }
        set(e, t) {
          return this.min.copy(e), this.max.copy(t), this;
        }
        setFromArray(e) {
          this.makeEmpty();
          for (let t = 0, n = e.length; t < n; t += 3)
            this.expandByPoint(eR.fromArray(e, t));
          return this;
        }
        setFromBufferAttribute(e) {
          this.makeEmpty();
          for (let t = 0, n = e.count; t < n; t++)
            this.expandByPoint(eR.fromBufferAttribute(e, t));
          return this;
        }
        setFromPoints(e) {
          this.makeEmpty();
          for (let t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
          return this;
        }
        setFromCenterAndSize(e, t) {
          let n = eR.copy(t).multiplyScalar(0.5);
          return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
        }
        setFromObject(e, t = !1) {
          return this.makeEmpty(), this.expandByObject(e, t);
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
          return (
            (this.min.x = this.min.y = this.min.z = Infinity),
            (this.max.x = this.max.y = this.max.z = -1 / 0),
            this
          );
        }
        isEmpty() {
          return (
            this.max.x < this.min.x ||
            this.max.y < this.min.y ||
            this.max.z < this.min.z
          );
        }
        getCenter(e) {
          return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5);
        }
        getSize(e) {
          return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
          return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
          return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
          return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        expandByObject(e, t = !1) {
          if ((e.updateWorldMatrix(!1, !1), void 0 !== e.boundingBox))
            null === e.boundingBox && e.computeBoundingBox(),
              eP.copy(e.boundingBox),
              eP.applyMatrix4(e.matrixWorld),
              this.union(eP);
          else {
            let n = e.geometry;
            if (void 0 !== n) {
              if (
                t &&
                void 0 !== n.attributes &&
                void 0 !== n.attributes.position
              ) {
                let t = n.attributes.position;
                for (let n = 0, r = t.count; n < r; n++)
                  eR.fromBufferAttribute(t, n).applyMatrix4(e.matrixWorld),
                    this.expandByPoint(eR);
              } else
                null === n.boundingBox && n.computeBoundingBox(),
                  eP.copy(n.boundingBox),
                  eP.applyMatrix4(e.matrixWorld),
                  this.union(eP);
            }
          }
          let n = e.children;
          for (let e = 0, r = n.length; e < r; e++)
            this.expandByObject(n[e], t);
          return this;
        }
        containsPoint(e) {
          return (
            !(e.x < this.min.x) &&
            !(e.x > this.max.x) &&
            !(e.y < this.min.y) &&
            !(e.y > this.max.y) &&
            !(e.z < this.min.z) &&
            !(e.z > this.max.z)
          );
        }
        containsBox(e) {
          return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y &&
            this.min.z <= e.min.z &&
            e.max.z <= this.max.z
          );
        }
        getParameter(e, t) {
          return t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
          );
        }
        intersectsBox(e) {
          return (
            !(e.max.x < this.min.x) &&
            !(e.min.x > this.max.x) &&
            !(e.max.y < this.min.y) &&
            !(e.min.y > this.max.y) &&
            !(e.max.z < this.min.z) &&
            !(e.min.z > this.max.z)
          );
        }
        intersectsSphere(e) {
          return (
            this.clampPoint(e.center, eR),
            eR.distanceToSquared(e.center) <= e.radius * e.radius
          );
        }
        intersectsPlane(e) {
          let t, n;
          return (
            e.normal.x > 0
              ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
              : ((t = e.normal.x * this.max.x), (n = e.normal.x * this.min.x)),
            e.normal.y > 0
              ? ((t += e.normal.y * this.min.y), (n += e.normal.y * this.max.y))
              : ((t += e.normal.y * this.max.y),
                (n += e.normal.y * this.min.y)),
            e.normal.z > 0
              ? ((t += e.normal.z * this.min.z), (n += e.normal.z * this.max.z))
              : ((t += e.normal.z * this.max.z),
                (n += e.normal.z * this.min.z)),
            t <= -e.constant && n >= -e.constant
          );
        }
        intersectsTriangle(e) {
          if (this.isEmpty()) return !1;
          this.getCenter(ek),
            eF.subVectors(this.max, ek),
            eO.subVectors(e.a, ek),
            eL.subVectors(e.b, ek),
            eI.subVectors(e.c, ek),
            eN.subVectors(eL, eO),
            eD.subVectors(eI, eL),
            eU.subVectors(eO, eI);
          let t = [
            0,
            -eN.z,
            eN.y,
            0,
            -eD.z,
            eD.y,
            0,
            -eU.z,
            eU.y,
            eN.z,
            0,
            -eN.x,
            eD.z,
            0,
            -eD.x,
            eU.z,
            0,
            -eU.x,
            -eN.y,
            eN.x,
            0,
            -eD.y,
            eD.x,
            0,
            -eU.y,
            eU.x,
            0,
          ];
          return (
            !!(
              eV(t, eO, eL, eI, eF) &&
              eV((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), eO, eL, eI, eF)
            ) &&
            (ez.crossVectors(eN, eD),
            eV((t = [ez.x, ez.y, ez.z]), eO, eL, eI, eF))
          );
        }
        clampPoint(e, t) {
          return t.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
          return this.clampPoint(e, eR).distanceTo(e);
        }
        getBoundingSphere(e) {
          return (
            this.isEmpty()
              ? e.makeEmpty()
              : (this.getCenter(e.center),
                (e.radius = 0.5 * this.getSize(eR).length())),
            e
          );
        }
        intersect(e) {
          return (
            this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
          );
        }
        union(e) {
          return this.min.min(e.min), this.max.max(e.max), this;
        }
        applyMatrix4(e) {
          return (
            this.isEmpty() ||
              (eC[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
              eC[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
              eC[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
              eC[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
              eC[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
              eC[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
              eC[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
              eC[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
              this.setFromPoints(eC)),
            this
          );
        }
        translate(e) {
          return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
          return e.min.equals(this.min) && e.max.equals(this.max);
        }
      }
      let eC = [
          new eM(),
          new eM(),
          new eM(),
          new eM(),
          new eM(),
          new eM(),
          new eM(),
          new eM(),
        ],
        eR = new eM(),
        eP = new eA(),
        eO = new eM(),
        eL = new eM(),
        eI = new eM(),
        eN = new eM(),
        eD = new eM(),
        eU = new eM(),
        ek = new eM(),
        eF = new eM(),
        ez = new eM(),
        eB = new eM();
      function eV(e, t, n, r, i) {
        for (let s = 0, a = e.length - 3; s <= a; s += 3) {
          eB.fromArray(e, s);
          let a =
              i.x * Math.abs(eB.x) +
              i.y * Math.abs(eB.y) +
              i.z * Math.abs(eB.z),
            o = t.dot(eB),
            l = n.dot(eB),
            u = r.dot(eB);
          if (Math.max(-Math.max(o, l, u), Math.min(o, l, u)) > a) return !1;
        }
        return !0;
      }
      let ej = new eA(),
        eH = new eM(),
        eG = new eM();
      class eW {
        constructor(e = new eM(), t = -1) {
          (this.center = e), (this.radius = t);
        }
        set(e, t) {
          return this.center.copy(e), (this.radius = t), this;
        }
        setFromPoints(e, t) {
          let n = this.center;
          void 0 !== t ? n.copy(t) : ej.setFromPoints(e).getCenter(n);
          let r = 0;
          for (let t = 0, i = e.length; t < i; t++)
            r = Math.max(r, n.distanceToSquared(e[t]));
          return (this.radius = Math.sqrt(r)), this;
        }
        copy(e) {
          return this.center.copy(e.center), (this.radius = e.radius), this;
        }
        isEmpty() {
          return this.radius < 0;
        }
        makeEmpty() {
          return this.center.set(0, 0, 0), (this.radius = -1), this;
        }
        containsPoint(e) {
          return e.distanceToSquared(this.center) <= this.radius * this.radius;
        }
        distanceToPoint(e) {
          return e.distanceTo(this.center) - this.radius;
        }
        intersectsSphere(e) {
          let t = this.radius + e.radius;
          return e.center.distanceToSquared(this.center) <= t * t;
        }
        intersectsBox(e) {
          return e.intersectsSphere(this);
        }
        intersectsPlane(e) {
          return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
        }
        clampPoint(e, t) {
          let n = this.center.distanceToSquared(e);
          return (
            t.copy(e),
            n > this.radius * this.radius &&
              (t.sub(this.center).normalize(),
              t.multiplyScalar(this.radius).add(this.center)),
            t
          );
        }
        getBoundingBox(e) {
          return (
            this.isEmpty()
              ? e.makeEmpty()
              : (e.set(this.center, this.center),
                e.expandByScalar(this.radius)),
            e
          );
        }
        applyMatrix4(e) {
          return (
            this.center.applyMatrix4(e),
            (this.radius = this.radius * e.getMaxScaleOnAxis()),
            this
          );
        }
        translate(e) {
          return this.center.add(e), this;
        }
        expandByPoint(e) {
          if (this.isEmpty())
            return this.center.copy(e), (this.radius = 0), this;
          eH.subVectors(e, this.center);
          let t = eH.lengthSq();
          if (t > this.radius * this.radius) {
            let e = Math.sqrt(t),
              n = (e - this.radius) * 0.5;
            this.center.addScaledVector(eH, n / e), (this.radius += n);
          }
          return this;
        }
        union(e) {
          return (
            e.isEmpty() ||
              (this.isEmpty()
                ? this.copy(e)
                : !0 === this.center.equals(e.center)
                ? (this.radius = Math.max(this.radius, e.radius))
                : (eG.subVectors(e.center, this.center).setLength(e.radius),
                  this.expandByPoint(eH.copy(e.center).add(eG)),
                  this.expandByPoint(eH.copy(e.center).sub(eG)))),
            this
          );
        }
        equals(e) {
          return e.center.equals(this.center) && e.radius === this.radius;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      let e$ = new eM(),
        eX = new eM(),
        eq = new eM(),
        eY = new eM(),
        eJ = new eM(),
        eZ = new eM(),
        eK = new eM();
      class eQ {
        constructor(e = new eM(), t = new eM(0, 0, -1)) {
          (this.origin = e), (this.direction = t);
        }
        set(e, t) {
          return this.origin.copy(e), this.direction.copy(t), this;
        }
        copy(e) {
          return (
            this.origin.copy(e.origin), this.direction.copy(e.direction), this
          );
        }
        at(e, t) {
          return t.copy(this.origin).addScaledVector(this.direction, e);
        }
        lookAt(e) {
          return this.direction.copy(e).sub(this.origin).normalize(), this;
        }
        recast(e) {
          return this.origin.copy(this.at(e, e$)), this;
        }
        closestPointToPoint(e, t) {
          t.subVectors(e, this.origin);
          let n = t.dot(this.direction);
          return n < 0
            ? t.copy(this.origin)
            : t.copy(this.origin).addScaledVector(this.direction, n);
        }
        distanceToPoint(e) {
          return Math.sqrt(this.distanceSqToPoint(e));
        }
        distanceSqToPoint(e) {
          let t = e$.subVectors(e, this.origin).dot(this.direction);
          return t < 0
            ? this.origin.distanceToSquared(e)
            : (e$.copy(this.origin).addScaledVector(this.direction, t),
              e$.distanceToSquared(e));
        }
        distanceSqToSegment(e, t, n, r) {
          let i, s, a, o;
          eX.copy(e).add(t).multiplyScalar(0.5),
            eq.copy(t).sub(e).normalize(),
            eY.copy(this.origin).sub(eX);
          let l = 0.5 * e.distanceTo(t),
            u = -this.direction.dot(eq),
            c = eY.dot(this.direction),
            h = -eY.dot(eq),
            d = eY.lengthSq(),
            p = Math.abs(1 - u * u);
          if (p > 0) {
            if (((i = u * h - c), (s = u * c - h), (o = l * p), i >= 0)) {
              if (s >= -o) {
                if (s <= o) {
                  let e = 1 / p;
                  (i *= e),
                    (s *= e),
                    (a = i * (i + u * s + 2 * c) + s * (u * i + s + 2 * h) + d);
                } else
                  a =
                    -(i = Math.max(0, -(u * (s = l) + c))) * i +
                    s * (s + 2 * h) +
                    d;
              } else
                a =
                  -(i = Math.max(0, -(u * (s = -l) + c))) * i +
                  s * (s + 2 * h) +
                  d;
            } else
              s <= -o
                ? ((s =
                    (i = Math.max(0, -(-u * l + c))) > 0
                      ? -l
                      : Math.min(Math.max(-l, -h), l)),
                  (a = -i * i + s * (s + 2 * h) + d))
                : s <= o
                ? ((i = 0),
                  (a = (s = Math.min(Math.max(-l, -h), l)) * (s + 2 * h) + d))
                : ((s =
                    (i = Math.max(0, -(u * l + c))) > 0
                      ? l
                      : Math.min(Math.max(-l, -h), l)),
                  (a = -i * i + s * (s + 2 * h) + d));
          } else
            (s = u > 0 ? -l : l),
              (a = -(i = Math.max(0, -(u * s + c))) * i + s * (s + 2 * h) + d);
          return (
            n && n.copy(this.origin).addScaledVector(this.direction, i),
            r && r.copy(eX).addScaledVector(eq, s),
            a
          );
        }
        intersectSphere(e, t) {
          e$.subVectors(e.center, this.origin);
          let n = e$.dot(this.direction),
            r = e$.dot(e$) - n * n,
            i = e.radius * e.radius;
          if (r > i) return null;
          let s = Math.sqrt(i - r),
            a = n - s,
            o = n + s;
          return o < 0 ? null : a < 0 ? this.at(o, t) : this.at(a, t);
        }
        intersectsSphere(e) {
          return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
        }
        distanceToPlane(e) {
          let t = e.normal.dot(this.direction);
          if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
          let n = -(this.origin.dot(e.normal) + e.constant) / t;
          return n >= 0 ? n : null;
        }
        intersectPlane(e, t) {
          let n = this.distanceToPlane(e);
          return null === n ? null : this.at(n, t);
        }
        intersectsPlane(e) {
          let t = e.distanceToPoint(this.origin);
          if (0 === t) return !0;
          let n = e.normal.dot(this.direction);
          return n * t < 0;
        }
        intersectBox(e, t) {
          let n, r, i, s, a, o;
          let l = 1 / this.direction.x,
            u = 1 / this.direction.y,
            c = 1 / this.direction.z,
            h = this.origin;
          return (l >= 0
            ? ((n = (e.min.x - h.x) * l), (r = (e.max.x - h.x) * l))
            : ((n = (e.max.x - h.x) * l), (r = (e.min.x - h.x) * l)),
          u >= 0
            ? ((i = (e.min.y - h.y) * u), (s = (e.max.y - h.y) * u))
            : ((i = (e.max.y - h.y) * u), (s = (e.min.y - h.y) * u)),
          n > s || i > r)
            ? null
            : ((i > n || isNaN(n)) && (n = i),
              (s < r || isNaN(r)) && (r = s),
              c >= 0
                ? ((a = (e.min.z - h.z) * c), (o = (e.max.z - h.z) * c))
                : ((a = (e.max.z - h.z) * c), (o = (e.min.z - h.z) * c)),
              n > o || a > r)
            ? null
            : ((a > n || n != n) && (n = a),
              (o < r || r != r) && (r = o),
              r < 0)
            ? null
            : this.at(n >= 0 ? n : r, t);
        }
        intersectsBox(e) {
          return null !== this.intersectBox(e, e$);
        }
        intersectTriangle(e, t, n, r, i) {
          let s;
          eJ.subVectors(t, e), eZ.subVectors(n, e), eK.crossVectors(eJ, eZ);
          let a = this.direction.dot(eK);
          if (a > 0) {
            if (r) return null;
            s = 1;
          } else {
            if (!(a < 0)) return null;
            (s = -1), (a = -a);
          }
          eY.subVectors(this.origin, e);
          let o = s * this.direction.dot(eZ.crossVectors(eY, eZ));
          if (o < 0) return null;
          let l = s * this.direction.dot(eJ.cross(eY));
          if (l < 0 || o + l > a) return null;
          let u = -s * eY.dot(eK);
          return u < 0 ? null : this.at(u / a, i);
        }
        applyMatrix4(e) {
          return (
            this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
          );
        }
        equals(e) {
          return (
            e.origin.equals(this.origin) && e.direction.equals(this.direction)
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      class e0 {
        constructor(e, t, n, r, i, s, a, o, l, u, c, h, d, p, f, m) {
          (e0.prototype.isMatrix4 = !0),
            (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
            void 0 !== e &&
              this.set(e, t, n, r, i, s, a, o, l, u, c, h, d, p, f, m);
        }
        set(e, t, n, r, i, s, a, o, l, u, c, h, d, p, f, m) {
          let g = this.elements;
          return (
            (g[0] = e),
            (g[4] = t),
            (g[8] = n),
            (g[12] = r),
            (g[1] = i),
            (g[5] = s),
            (g[9] = a),
            (g[13] = o),
            (g[2] = l),
            (g[6] = u),
            (g[10] = c),
            (g[14] = h),
            (g[3] = d),
            (g[7] = p),
            (g[11] = f),
            (g[15] = m),
            this
          );
        }
        identity() {
          return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        clone() {
          return new e0().fromArray(this.elements);
        }
        copy(e) {
          let t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            (t[9] = n[9]),
            (t[10] = n[10]),
            (t[11] = n[11]),
            (t[12] = n[12]),
            (t[13] = n[13]),
            (t[14] = n[14]),
            (t[15] = n[15]),
            this
          );
        }
        copyPosition(e) {
          let t = this.elements,
            n = e.elements;
          return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
        }
        setFromMatrix3(e) {
          let t = e.elements;
          return (
            this.set(
              t[0],
              t[3],
              t[6],
              0,
              t[1],
              t[4],
              t[7],
              0,
              t[2],
              t[5],
              t[8],
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        extractBasis(e, t, n) {
          return (
            e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
          );
        }
        makeBasis(e, t, n) {
          return (
            this.set(
              e.x,
              t.x,
              n.x,
              0,
              e.y,
              t.y,
              n.y,
              0,
              e.z,
              t.z,
              n.z,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        extractRotation(e) {
          let t = this.elements,
            n = e.elements,
            r = 1 / e1.setFromMatrixColumn(e, 0).length(),
            i = 1 / e1.setFromMatrixColumn(e, 1).length(),
            s = 1 / e1.setFromMatrixColumn(e, 2).length();
          return (
            (t[0] = n[0] * r),
            (t[1] = n[1] * r),
            (t[2] = n[2] * r),
            (t[3] = 0),
            (t[4] = n[4] * i),
            (t[5] = n[5] * i),
            (t[6] = n[6] * i),
            (t[7] = 0),
            (t[8] = n[8] * s),
            (t[9] = n[9] * s),
            (t[10] = n[10] * s),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        }
        makeRotationFromEuler(e) {
          let t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z,
            s = Math.cos(n),
            a = Math.sin(n),
            o = Math.cos(r),
            l = Math.sin(r),
            u = Math.cos(i),
            c = Math.sin(i);
          if ("XYZ" === e.order) {
            let e = s * u,
              n = s * c,
              r = a * u,
              i = a * c;
            (t[0] = o * u),
              (t[4] = -o * c),
              (t[8] = l),
              (t[1] = n + r * l),
              (t[5] = e - i * l),
              (t[9] = -a * o),
              (t[2] = i - e * l),
              (t[6] = r + n * l),
              (t[10] = s * o);
          } else if ("YXZ" === e.order) {
            let e = o * u,
              n = o * c,
              r = l * u,
              i = l * c;
            (t[0] = e + i * a),
              (t[4] = r * a - n),
              (t[8] = s * l),
              (t[1] = s * c),
              (t[5] = s * u),
              (t[9] = -a),
              (t[2] = n * a - r),
              (t[6] = i + e * a),
              (t[10] = s * o);
          } else if ("ZXY" === e.order) {
            let e = o * u,
              n = o * c,
              r = l * u,
              i = l * c;
            (t[0] = e - i * a),
              (t[4] = -s * c),
              (t[8] = r + n * a),
              (t[1] = n + r * a),
              (t[5] = s * u),
              (t[9] = i - e * a),
              (t[2] = -s * l),
              (t[6] = a),
              (t[10] = s * o);
          } else if ("ZYX" === e.order) {
            let e = s * u,
              n = s * c,
              r = a * u,
              i = a * c;
            (t[0] = o * u),
              (t[4] = r * l - n),
              (t[8] = e * l + i),
              (t[1] = o * c),
              (t[5] = i * l + e),
              (t[9] = n * l - r),
              (t[2] = -l),
              (t[6] = a * o),
              (t[10] = s * o);
          } else if ("YZX" === e.order) {
            let e = s * o,
              n = s * l,
              r = a * o,
              i = a * l;
            (t[0] = o * u),
              (t[4] = i - e * c),
              (t[8] = r * c + n),
              (t[1] = c),
              (t[5] = s * u),
              (t[9] = -a * u),
              (t[2] = -l * u),
              (t[6] = n * c + r),
              (t[10] = e - i * c);
          } else if ("XZY" === e.order) {
            let e = s * o,
              n = s * l,
              r = a * o,
              i = a * l;
            (t[0] = o * u),
              (t[4] = -c),
              (t[8] = l * u),
              (t[1] = e * c + i),
              (t[5] = s * u),
              (t[9] = n * c - r),
              (t[2] = r * c - n),
              (t[6] = a * u),
              (t[10] = i * c + e);
          }
          return (
            (t[3] = 0),
            (t[7] = 0),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        }
        makeRotationFromQuaternion(e) {
          return this.compose(e3, e, e4);
        }
        lookAt(e, t, n) {
          let r = this.elements;
          return (
            e8.subVectors(e, t),
            0 === e8.lengthSq() && (e8.z = 1),
            e8.normalize(),
            e5.crossVectors(n, e8),
            0 === e5.lengthSq() &&
              (1 === Math.abs(n.z) ? (e8.x += 1e-4) : (e8.z += 1e-4),
              e8.normalize(),
              e5.crossVectors(n, e8)),
            e5.normalize(),
            e6.crossVectors(e8, e5),
            (r[0] = e5.x),
            (r[4] = e6.x),
            (r[8] = e8.x),
            (r[1] = e5.y),
            (r[5] = e6.y),
            (r[9] = e8.y),
            (r[2] = e5.z),
            (r[6] = e6.z),
            (r[10] = e8.z),
            this
          );
        }
        multiply(e) {
          return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
          return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, t) {
          let n = e.elements,
            r = t.elements,
            i = this.elements,
            s = n[0],
            a = n[4],
            o = n[8],
            l = n[12],
            u = n[1],
            c = n[5],
            h = n[9],
            d = n[13],
            p = n[2],
            f = n[6],
            m = n[10],
            g = n[14],
            _ = n[3],
            v = n[7],
            y = n[11],
            x = n[15],
            b = r[0],
            S = r[4],
            E = r[8],
            M = r[12],
            w = r[1],
            T = r[5],
            A = r[9],
            C = r[13],
            R = r[2],
            P = r[6],
            O = r[10],
            L = r[14],
            I = r[3],
            N = r[7],
            D = r[11],
            U = r[15];
          return (
            (i[0] = s * b + a * w + o * R + l * I),
            (i[4] = s * S + a * T + o * P + l * N),
            (i[8] = s * E + a * A + o * O + l * D),
            (i[12] = s * M + a * C + o * L + l * U),
            (i[1] = u * b + c * w + h * R + d * I),
            (i[5] = u * S + c * T + h * P + d * N),
            (i[9] = u * E + c * A + h * O + d * D),
            (i[13] = u * M + c * C + h * L + d * U),
            (i[2] = p * b + f * w + m * R + g * I),
            (i[6] = p * S + f * T + m * P + g * N),
            (i[10] = p * E + f * A + m * O + g * D),
            (i[14] = p * M + f * C + m * L + g * U),
            (i[3] = _ * b + v * w + y * R + x * I),
            (i[7] = _ * S + v * T + y * P + x * N),
            (i[11] = _ * E + v * A + y * O + x * D),
            (i[15] = _ * M + v * C + y * L + x * U),
            this
          );
        }
        multiplyScalar(e) {
          let t = this.elements;
          return (
            (t[0] *= e),
            (t[4] *= e),
            (t[8] *= e),
            (t[12] *= e),
            (t[1] *= e),
            (t[5] *= e),
            (t[9] *= e),
            (t[13] *= e),
            (t[2] *= e),
            (t[6] *= e),
            (t[10] *= e),
            (t[14] *= e),
            (t[3] *= e),
            (t[7] *= e),
            (t[11] *= e),
            (t[15] *= e),
            this
          );
        }
        determinant() {
          let e = this.elements,
            t = e[0],
            n = e[4],
            r = e[8],
            i = e[12],
            s = e[1],
            a = e[5],
            o = e[9],
            l = e[13],
            u = e[2],
            c = e[6],
            h = e[10],
            d = e[14],
            p = e[3],
            f = e[7],
            m = e[11],
            g = e[15];
          return (
            p *
              (+i * o * c -
                r * l * c -
                i * a * h +
                n * l * h +
                r * a * d -
                n * o * d) +
            f *
              (+t * o * d -
                t * l * h +
                i * s * h -
                r * s * d +
                r * l * u -
                i * o * u) +
            m *
              (+t * l * c -
                t * a * d -
                i * s * c +
                n * s * d +
                i * a * u -
                n * l * u) +
            g *
              (-r * a * u -
                t * o * c +
                t * a * h +
                r * s * c -
                n * s * h +
                n * o * u)
          );
        }
        transpose() {
          let e;
          let t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[4]),
            (t[4] = e),
            (e = t[2]),
            (t[2] = t[8]),
            (t[8] = e),
            (e = t[6]),
            (t[6] = t[9]),
            (t[9] = e),
            (e = t[3]),
            (t[3] = t[12]),
            (t[12] = e),
            (e = t[7]),
            (t[7] = t[13]),
            (t[13] = e),
            (e = t[11]),
            (t[11] = t[14]),
            (t[14] = e),
            this
          );
        }
        setPosition(e, t, n) {
          let r = this.elements;
          return (
            e.isVector3
              ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
              : ((r[12] = e), (r[13] = t), (r[14] = n)),
            this
          );
        }
        invert() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            s = e[4],
            a = e[5],
            o = e[6],
            l = e[7],
            u = e[8],
            c = e[9],
            h = e[10],
            d = e[11],
            p = e[12],
            f = e[13],
            m = e[14],
            g = e[15],
            _ =
              c * m * l -
              f * h * l +
              f * o * d -
              a * m * d -
              c * o * g +
              a * h * g,
            v =
              p * h * l -
              u * m * l -
              p * o * d +
              s * m * d +
              u * o * g -
              s * h * g,
            y =
              u * f * l -
              p * c * l +
              p * a * d -
              s * f * d -
              u * a * g +
              s * c * g,
            x =
              p * c * o -
              u * f * o -
              p * a * h +
              s * f * h +
              u * a * m -
              s * c * m,
            b = t * _ + n * v + r * y + i * x;
          if (0 === b)
            return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
          let S = 1 / b;
          return (
            (e[0] = _ * S),
            (e[1] =
              (f * h * i -
                c * m * i -
                f * r * d +
                n * m * d +
                c * r * g -
                n * h * g) *
              S),
            (e[2] =
              (a * m * i -
                f * o * i +
                f * r * l -
                n * m * l -
                a * r * g +
                n * o * g) *
              S),
            (e[3] =
              (c * o * i -
                a * h * i -
                c * r * l +
                n * h * l +
                a * r * d -
                n * o * d) *
              S),
            (e[4] = v * S),
            (e[5] =
              (u * m * i -
                p * h * i +
                p * r * d -
                t * m * d -
                u * r * g +
                t * h * g) *
              S),
            (e[6] =
              (p * o * i -
                s * m * i -
                p * r * l +
                t * m * l +
                s * r * g -
                t * o * g) *
              S),
            (e[7] =
              (s * h * i -
                u * o * i +
                u * r * l -
                t * h * l -
                s * r * d +
                t * o * d) *
              S),
            (e[8] = y * S),
            (e[9] =
              (p * c * i -
                u * f * i -
                p * n * d +
                t * f * d +
                u * n * g -
                t * c * g) *
              S),
            (e[10] =
              (s * f * i -
                p * a * i +
                p * n * l -
                t * f * l -
                s * n * g +
                t * a * g) *
              S),
            (e[11] =
              (u * a * i -
                s * c * i -
                u * n * l +
                t * c * l +
                s * n * d -
                t * a * d) *
              S),
            (e[12] = x * S),
            (e[13] =
              (u * f * r -
                p * c * r +
                p * n * h -
                t * f * h -
                u * n * m +
                t * c * m) *
              S),
            (e[14] =
              (p * a * r -
                s * f * r -
                p * n * o +
                t * f * o +
                s * n * m -
                t * a * m) *
              S),
            (e[15] =
              (s * c * r -
                u * a * r +
                u * n * o -
                t * c * o -
                s * n * h +
                t * a * h) *
              S),
            this
          );
        }
        scale(e) {
          let t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z;
          return (
            (t[0] *= n),
            (t[4] *= r),
            (t[8] *= i),
            (t[1] *= n),
            (t[5] *= r),
            (t[9] *= i),
            (t[2] *= n),
            (t[6] *= r),
            (t[10] *= i),
            (t[3] *= n),
            (t[7] *= r),
            (t[11] *= i),
            this
          );
        }
        getMaxScaleOnAxis() {
          let e = this.elements,
            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
            n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
            r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
          return Math.sqrt(Math.max(t, n, r));
        }
        makeTranslation(e, t, n) {
          return (
            e.isVector3
              ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
              : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
            this
          );
        }
        makeRotationX(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationY(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationZ(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationAxis(e, t) {
          let n = Math.cos(t),
            r = Math.sin(t),
            i = 1 - n,
            s = e.x,
            a = e.y,
            o = e.z,
            l = i * s,
            u = i * a;
          return (
            this.set(
              l * s + n,
              l * a - r * o,
              l * o + r * a,
              0,
              l * a + r * o,
              u * a + n,
              u * o - r * s,
              0,
              l * o - r * a,
              u * o + r * s,
              i * o * o + n,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        makeScale(e, t, n) {
          return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
        }
        makeShear(e, t, n, r, i, s) {
          return this.set(1, n, i, 0, e, 1, s, 0, t, r, 1, 0, 0, 0, 0, 1), this;
        }
        compose(e, t, n) {
          let r = this.elements,
            i = t._x,
            s = t._y,
            a = t._z,
            o = t._w,
            l = i + i,
            u = s + s,
            c = a + a,
            h = i * l,
            d = i * u,
            p = i * c,
            f = s * u,
            m = s * c,
            g = a * c,
            _ = o * l,
            v = o * u,
            y = o * c,
            x = n.x,
            b = n.y,
            S = n.z;
          return (
            (r[0] = (1 - (f + g)) * x),
            (r[1] = (d + y) * x),
            (r[2] = (p - v) * x),
            (r[3] = 0),
            (r[4] = (d - y) * b),
            (r[5] = (1 - (h + g)) * b),
            (r[6] = (m + _) * b),
            (r[7] = 0),
            (r[8] = (p + v) * S),
            (r[9] = (m - _) * S),
            (r[10] = (1 - (h + f)) * S),
            (r[11] = 0),
            (r[12] = e.x),
            (r[13] = e.y),
            (r[14] = e.z),
            (r[15] = 1),
            this
          );
        }
        decompose(e, t, n) {
          let r = this.elements,
            i = e1.set(r[0], r[1], r[2]).length(),
            s = e1.set(r[4], r[5], r[6]).length(),
            a = e1.set(r[8], r[9], r[10]).length(),
            o = this.determinant();
          o < 0 && (i = -i),
            (e.x = r[12]),
            (e.y = r[13]),
            (e.z = r[14]),
            e2.copy(this);
          let l = 1 / i,
            u = 1 / s,
            c = 1 / a;
          return (
            (e2.elements[0] *= l),
            (e2.elements[1] *= l),
            (e2.elements[2] *= l),
            (e2.elements[4] *= u),
            (e2.elements[5] *= u),
            (e2.elements[6] *= u),
            (e2.elements[8] *= c),
            (e2.elements[9] *= c),
            (e2.elements[10] *= c),
            t.setFromRotationMatrix(e2),
            (n.x = i),
            (n.y = s),
            (n.z = a),
            this
          );
        }
        makePerspective(e, t, n, r, i, s, a = 2e3) {
          let o, l;
          let u = this.elements;
          if (2e3 === a) (o = -(s + i) / (s - i)), (l = (-2 * s * i) / (s - i));
          else if (2001 === a) (o = -s / (s - i)), (l = (-s * i) / (s - i));
          else
            throw Error(
              "THREE.Matrix4.makePerspective(): Invalid coordinate system: " + a
            );
          return (
            (u[0] = (2 * i) / (t - e)),
            (u[4] = 0),
            (u[8] = (t + e) / (t - e)),
            (u[12] = 0),
            (u[1] = 0),
            (u[5] = (2 * i) / (n - r)),
            (u[9] = (n + r) / (n - r)),
            (u[13] = 0),
            (u[2] = 0),
            (u[6] = 0),
            (u[10] = o),
            (u[14] = l),
            (u[3] = 0),
            (u[7] = 0),
            (u[11] = -1),
            (u[15] = 0),
            this
          );
        }
        makeOrthographic(e, t, n, r, i, s, a = 2e3) {
          let o, l;
          let u = this.elements,
            c = 1 / (t - e),
            h = 1 / (n - r),
            d = 1 / (s - i);
          if (2e3 === a) (o = (s + i) * d), (l = -2 * d);
          else if (2001 === a) (o = i * d), (l = -1 * d);
          else
            throw Error(
              "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " +
                a
            );
          return (
            (u[0] = 2 * c),
            (u[4] = 0),
            (u[8] = 0),
            (u[12] = -((t + e) * c)),
            (u[1] = 0),
            (u[5] = 2 * h),
            (u[9] = 0),
            (u[13] = -((n + r) * h)),
            (u[2] = 0),
            (u[6] = 0),
            (u[10] = l),
            (u[14] = -o),
            (u[3] = 0),
            (u[7] = 0),
            (u[11] = 0),
            (u[15] = 1),
            this
          );
        }
        equals(e) {
          let t = this.elements,
            n = e.elements;
          for (let e = 0; e < 16; e++) if (t[e] !== n[e]) return !1;
          return !0;
        }
        fromArray(e, t = 0) {
          for (let n = 0; n < 16; n++) this.elements[n] = e[n + t];
          return this;
        }
        toArray(e = [], t = 0) {
          let n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            (e[t + 9] = n[9]),
            (e[t + 10] = n[10]),
            (e[t + 11] = n[11]),
            (e[t + 12] = n[12]),
            (e[t + 13] = n[13]),
            (e[t + 14] = n[14]),
            (e[t + 15] = n[15]),
            e
          );
        }
      }
      let e1 = new eM(),
        e2 = new e0(),
        e3 = new eM(0, 0, 0),
        e4 = new eM(1, 1, 1),
        e5 = new eM(),
        e6 = new eM(),
        e8 = new eM(),
        e7 = new e0(),
        e9 = new eE();
      class te {
        constructor(e = 0, t = 0, n = 0, r = te.DEFAULT_ORDER) {
          (this.isEuler = !0),
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = r);
        }
        get x() {
          return this._x;
        }
        set x(e) {
          (this._x = e), this._onChangeCallback();
        }
        get y() {
          return this._y;
        }
        set y(e) {
          (this._y = e), this._onChangeCallback();
        }
        get z() {
          return this._z;
        }
        set z(e) {
          (this._z = e), this._onChangeCallback();
        }
        get order() {
          return this._order;
        }
        set order(e) {
          (this._order = e), this._onChangeCallback();
        }
        set(e, t, n, r = this._order) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = r),
            this._onChangeCallback(),
            this
          );
        }
        clone() {
          return new this.constructor(this._x, this._y, this._z, this._order);
        }
        copy(e) {
          return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this._onChangeCallback(),
            this
          );
        }
        setFromRotationMatrix(e, t = this._order, n = !0) {
          let r = e.elements,
            i = r[0],
            s = r[4],
            a = r[8],
            o = r[1],
            l = r[5],
            u = r[9],
            c = r[2],
            h = r[6],
            d = r[10];
          switch (t) {
            case "XYZ":
              (this._y = Math.asin(G(a, -1, 1))),
                0.9999999 > Math.abs(a)
                  ? ((this._x = Math.atan2(-u, d)),
                    (this._z = Math.atan2(-s, i)))
                  : ((this._x = Math.atan2(h, l)), (this._z = 0));
              break;
            case "YXZ":
              (this._x = Math.asin(-G(u, -1, 1))),
                0.9999999 > Math.abs(u)
                  ? ((this._y = Math.atan2(a, d)), (this._z = Math.atan2(o, l)))
                  : ((this._y = Math.atan2(-c, i)), (this._z = 0));
              break;
            case "ZXY":
              (this._x = Math.asin(G(h, -1, 1))),
                0.9999999 > Math.abs(h)
                  ? ((this._y = Math.atan2(-c, d)),
                    (this._z = Math.atan2(-s, l)))
                  : ((this._y = 0), (this._z = Math.atan2(o, i)));
              break;
            case "ZYX":
              (this._y = Math.asin(-G(c, -1, 1))),
                0.9999999 > Math.abs(c)
                  ? ((this._x = Math.atan2(h, d)), (this._z = Math.atan2(o, i)))
                  : ((this._x = 0), (this._z = Math.atan2(-s, l)));
              break;
            case "YZX":
              (this._z = Math.asin(G(o, -1, 1))),
                0.9999999 > Math.abs(o)
                  ? ((this._x = Math.atan2(-u, l)),
                    (this._y = Math.atan2(-c, i)))
                  : ((this._x = 0), (this._y = Math.atan2(a, d)));
              break;
            case "XZY":
              (this._z = Math.asin(-G(s, -1, 1))),
                0.9999999 > Math.abs(s)
                  ? ((this._x = Math.atan2(h, l)), (this._y = Math.atan2(a, i)))
                  : ((this._x = Math.atan2(-u, d)), (this._y = 0));
              break;
            default:
              console.warn(
                "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
                  t
              );
          }
          return (this._order = t), !0 === n && this._onChangeCallback(), this;
        }
        setFromQuaternion(e, t, n) {
          return (
            e7.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(e7, t, n)
          );
        }
        setFromVector3(e, t = this._order) {
          return this.set(e.x, e.y, e.z, t);
        }
        reorder(e) {
          return e9.setFromEuler(this), this.setFromQuaternion(e9, e);
        }
        equals(e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
          );
        }
        fromArray(e) {
          return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            void 0 !== e[3] && (this._order = e[3]),
            this._onChangeCallback(),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
          );
        }
        _onChange(e) {
          return (this._onChangeCallback = e), this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
          yield this._x, yield this._y, yield this._z, yield this._order;
        }
      }
      te.DEFAULT_ORDER = "XYZ";
      class tt {
        constructor() {
          this.mask = 1;
        }
        set(e) {
          this.mask = ((1 << e) | 0) >>> 0;
        }
        enable(e) {
          this.mask |= (1 << e) | 0;
        }
        enableAll() {
          this.mask = -1;
        }
        toggle(e) {
          this.mask ^= (1 << e) | 0;
        }
        disable(e) {
          this.mask &= ~((1 << e) | 0);
        }
        disableAll() {
          this.mask = 0;
        }
        test(e) {
          return (this.mask & e.mask) != 0;
        }
        isEnabled(e) {
          return (this.mask & ((1 << e) | 0)) != 0;
        }
      }
      let tn = 0,
        tr = new eM(),
        ti = new eE(),
        ts = new e0(),
        ta = new eM(),
        to = new eM(),
        tl = new eM(),
        tu = new eE(),
        tc = new eM(1, 0, 0),
        th = new eM(0, 1, 0),
        td = new eM(0, 0, 1),
        tp = { type: "added" },
        tf = { type: "removed" };
      class tm extends F {
        constructor() {
          super(),
            (this.isObject3D = !0),
            Object.defineProperty(this, "id", { value: tn++ }),
            (this.uuid = H()),
            (this.name = ""),
            (this.type = "Object3D"),
            (this.parent = null),
            (this.children = []),
            (this.up = tm.DEFAULT_UP.clone());
          let e = new eM(),
            t = new te(),
            n = new eE(),
            r = new eM(1, 1, 1);
          t._onChange(function () {
            n.setFromEuler(t, !1);
          }),
            n._onChange(function () {
              t.setFromQuaternion(n, void 0, !1);
            }),
            Object.defineProperties(this, {
              position: { configurable: !0, enumerable: !0, value: e },
              rotation: { configurable: !0, enumerable: !0, value: t },
              quaternion: { configurable: !0, enumerable: !0, value: n },
              scale: { configurable: !0, enumerable: !0, value: r },
              modelViewMatrix: { value: new e0() },
              normalMatrix: { value: new ee() },
            }),
            (this.matrix = new e0()),
            (this.matrixWorld = new e0()),
            (this.matrixAutoUpdate = tm.DEFAULT_MATRIX_AUTO_UPDATE),
            (this.matrixWorldNeedsUpdate = !1),
            (this.matrixWorldAutoUpdate = tm.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
            (this.layers = new tt()),
            (this.visible = !0),
            (this.castShadow = !1),
            (this.receiveShadow = !1),
            (this.frustumCulled = !0),
            (this.renderOrder = 0),
            (this.animations = []),
            (this.userData = {});
        }
        onBeforeRender() {}
        onAfterRender() {}
        applyMatrix4(e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
        }
        applyQuaternion(e) {
          return this.quaternion.premultiply(e), this;
        }
        setRotationFromAxisAngle(e, t) {
          this.quaternion.setFromAxisAngle(e, t);
        }
        setRotationFromEuler(e) {
          this.quaternion.setFromEuler(e, !0);
        }
        setRotationFromMatrix(e) {
          this.quaternion.setFromRotationMatrix(e);
        }
        setRotationFromQuaternion(e) {
          this.quaternion.copy(e);
        }
        rotateOnAxis(e, t) {
          return ti.setFromAxisAngle(e, t), this.quaternion.multiply(ti), this;
        }
        rotateOnWorldAxis(e, t) {
          return (
            ti.setFromAxisAngle(e, t), this.quaternion.premultiply(ti), this
          );
        }
        rotateX(e) {
          return this.rotateOnAxis(tc, e);
        }
        rotateY(e) {
          return this.rotateOnAxis(th, e);
        }
        rotateZ(e) {
          return this.rotateOnAxis(td, e);
        }
        translateOnAxis(e, t) {
          return (
            tr.copy(e).applyQuaternion(this.quaternion),
            this.position.add(tr.multiplyScalar(t)),
            this
          );
        }
        translateX(e) {
          return this.translateOnAxis(tc, e);
        }
        translateY(e) {
          return this.translateOnAxis(th, e);
        }
        translateZ(e) {
          return this.translateOnAxis(td, e);
        }
        localToWorld(e) {
          return (
            this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld)
          );
        }
        worldToLocal(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            e.applyMatrix4(ts.copy(this.matrixWorld).invert())
          );
        }
        lookAt(e, t, n) {
          e.isVector3 ? ta.copy(e) : ta.set(e, t, n);
          let r = this.parent;
          this.updateWorldMatrix(!0, !1),
            to.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight
              ? ts.lookAt(to, ta, this.up)
              : ts.lookAt(ta, to, this.up),
            this.quaternion.setFromRotationMatrix(ts),
            r &&
              (ts.extractRotation(r.matrixWorld),
              ti.setFromRotationMatrix(ts),
              this.quaternion.premultiply(ti.invert()));
        }
        add(e) {
          if (arguments.length > 1) {
            for (let e = 0; e < arguments.length; e++) this.add(arguments[e]);
            return this;
          }
          return (
            e === this
              ? console.error(
                  "THREE.Object3D.add: object can't be added as a child of itself.",
                  e
                )
              : e && e.isObject3D
              ? (null !== e.parent && e.parent.remove(e),
                (e.parent = this),
                this.children.push(e),
                e.dispatchEvent(tp))
              : console.error(
                  "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                  e
                ),
            this
          );
        }
        remove(e) {
          if (arguments.length > 1) {
            for (let e = 0; e < arguments.length; e++)
              this.remove(arguments[e]);
            return this;
          }
          let t = this.children.indexOf(e);
          return (
            -1 !== t &&
              ((e.parent = null),
              this.children.splice(t, 1),
              e.dispatchEvent(tf)),
            this
          );
        }
        removeFromParent() {
          let e = this.parent;
          return null !== e && e.remove(this), this;
        }
        clear() {
          return this.remove(...this.children);
        }
        attach(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            ts.copy(this.matrixWorld).invert(),
            null !== e.parent &&
              (e.parent.updateWorldMatrix(!0, !1),
              ts.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(ts),
            this.add(e),
            e.updateWorldMatrix(!1, !0),
            this
          );
        }
        getObjectById(e) {
          return this.getObjectByProperty("id", e);
        }
        getObjectByName(e) {
          return this.getObjectByProperty("name", e);
        }
        getObjectByProperty(e, t) {
          if (this[e] === t) return this;
          for (let n = 0, r = this.children.length; n < r; n++) {
            let r = this.children[n],
              i = r.getObjectByProperty(e, t);
            if (void 0 !== i) return i;
          }
        }
        getObjectsByProperty(e, t) {
          let n = [];
          this[e] === t && n.push(this);
          for (let r = 0, i = this.children.length; r < i; r++) {
            let i = this.children[r].getObjectsByProperty(e, t);
            i.length > 0 && (n = n.concat(i));
          }
          return n;
        }
        getWorldPosition(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            e.setFromMatrixPosition(this.matrixWorld)
          );
        }
        getWorldQuaternion(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(to, e, tl),
            e
          );
        }
        getWorldScale(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(to, tu, e),
            e
          );
        }
        getWorldDirection(e) {
          this.updateWorldMatrix(!0, !1);
          let t = this.matrixWorld.elements;
          return e.set(t[8], t[9], t[10]).normalize();
        }
        raycast() {}
        traverse(e) {
          e(this);
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) t[n].traverse(e);
        }
        traverseVisible(e) {
          if (!1 === this.visible) return;
          e(this);
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e);
        }
        traverseAncestors(e) {
          let t = this.parent;
          null !== t && (e(t), t.traverseAncestors(e));
        }
        updateMatrix() {
          this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
        }
        updateMatrixWorld(e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
              (null === this.parent
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              (this.matrixWorldNeedsUpdate = !1),
              (e = !0));
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) {
            let r = t[n];
            (!0 === r.matrixWorldAutoUpdate || !0 === e) &&
              r.updateMatrixWorld(e);
          }
        }
        updateWorldMatrix(e, t) {
          let n = this.parent;
          if (
            (!0 === e &&
              null !== n &&
              !0 === n.matrixWorldAutoUpdate &&
              n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent
              ? this.matrixWorld.copy(this.matrix)
              : this.matrixWorld.multiplyMatrices(
                  this.parent.matrixWorld,
                  this.matrix
                ),
            !0 === t)
          ) {
            let e = this.children;
            for (let t = 0, n = e.length; t < n; t++) {
              let n = e[t];
              !0 === n.matrixWorldAutoUpdate && n.updateWorldMatrix(!1, !0);
            }
          }
        }
        toJSON(e) {
          let t = void 0 === e || "string" == typeof e,
            n = {};
          t &&
            ((e = {
              geometries: {},
              materials: {},
              textures: {},
              images: {},
              shapes: {},
              skeletons: {},
              animations: {},
              nodes: {},
            }),
            (n.metadata = {
              version: 4.6,
              type: "Object",
              generator: "Object3D.toJSON",
            }));
          let r = {};
          function i(t, n) {
            return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
          }
          if (
            ((r.uuid = this.uuid),
            (r.type = this.type),
            "" !== this.name && (r.name = this.name),
            !0 === this.castShadow && (r.castShadow = !0),
            !0 === this.receiveShadow && (r.receiveShadow = !0),
            !1 === this.visible && (r.visible = !1),
            !1 === this.frustumCulled && (r.frustumCulled = !1),
            0 !== this.renderOrder && (r.renderOrder = this.renderOrder),
            Object.keys(this.userData).length > 0 &&
              (r.userData = this.userData),
            (r.layers = this.layers.mask),
            (r.matrix = this.matrix.toArray()),
            (r.up = this.up.toArray()),
            !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
            this.isInstancedMesh &&
              ((r.type = "InstancedMesh"),
              (r.count = this.count),
              (r.instanceMatrix = this.instanceMatrix.toJSON()),
              null !== this.instanceColor &&
                (r.instanceColor = this.instanceColor.toJSON())),
            this.isScene)
          )
            this.background &&
              (this.background.isColor
                ? (r.background = this.background.toJSON())
                : this.background.isTexture &&
                  (r.background = this.background.toJSON(e).uuid)),
              this.environment &&
                this.environment.isTexture &&
                !0 !== this.environment.isRenderTargetTexture &&
                (r.environment = this.environment.toJSON(e).uuid);
          else if (this.isMesh || this.isLine || this.isPoints) {
            r.geometry = i(e.geometries, this.geometry);
            let t = this.geometry.parameters;
            if (void 0 !== t && void 0 !== t.shapes) {
              let n = t.shapes;
              if (Array.isArray(n))
                for (let t = 0, r = n.length; t < r; t++) {
                  let r = n[t];
                  i(e.shapes, r);
                }
              else i(e.shapes, n);
            }
          }
          if (
            (this.isSkinnedMesh &&
              ((r.bindMode = this.bindMode),
              (r.bindMatrix = this.bindMatrix.toArray()),
              void 0 !== this.skeleton &&
                (i(e.skeletons, this.skeleton),
                (r.skeleton = this.skeleton.uuid))),
            void 0 !== this.material)
          ) {
            if (Array.isArray(this.material)) {
              let t = [];
              for (let n = 0, r = this.material.length; n < r; n++)
                t.push(i(e.materials, this.material[n]));
              r.material = t;
            } else r.material = i(e.materials, this.material);
          }
          if (this.children.length > 0) {
            r.children = [];
            for (let t = 0; t < this.children.length; t++)
              r.children.push(this.children[t].toJSON(e).object);
          }
          if (this.animations.length > 0) {
            r.animations = [];
            for (let t = 0; t < this.animations.length; t++) {
              let n = this.animations[t];
              r.animations.push(i(e.animations, n));
            }
          }
          if (t) {
            let t = s(e.geometries),
              r = s(e.materials),
              i = s(e.textures),
              a = s(e.images),
              o = s(e.shapes),
              l = s(e.skeletons),
              u = s(e.animations),
              c = s(e.nodes);
            t.length > 0 && (n.geometries = t),
              r.length > 0 && (n.materials = r),
              i.length > 0 && (n.textures = i),
              a.length > 0 && (n.images = a),
              o.length > 0 && (n.shapes = o),
              l.length > 0 && (n.skeletons = l),
              u.length > 0 && (n.animations = u),
              c.length > 0 && (n.nodes = c);
          }
          return (n.object = r), n;
          function s(e) {
            let t = [];
            for (let n in e) {
              let r = e[n];
              delete r.metadata, t.push(r);
            }
            return t;
          }
        }
        clone(e) {
          return new this.constructor().copy(this, e);
        }
        copy(e, t = !0) {
          if (
            ((this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            (this.rotation.order = e.rotation.order),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.animations = e.animations.slice()),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            !0 === t)
          )
            for (let t = 0; t < e.children.length; t++) {
              let n = e.children[t];
              this.add(n.clone());
            }
          return this;
        }
      }
      (tm.DEFAULT_UP = new eM(0, 1, 0)),
        (tm.DEFAULT_MATRIX_AUTO_UPDATE = !0),
        (tm.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0);
      let tg = new eM(),
        t_ = new eM(),
        tv = new eM(),
        ty = new eM(),
        tx = new eM(),
        tb = new eM(),
        tS = new eM(),
        tE = new eM(),
        tM = new eM(),
        tw = new eM(),
        tT = !1;
      class tA {
        constructor(e = new eM(), t = new eM(), n = new eM()) {
          (this.a = e), (this.b = t), (this.c = n);
        }
        static getNormal(e, t, n, r) {
          r.subVectors(n, t), tg.subVectors(e, t), r.cross(tg);
          let i = r.lengthSq();
          return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0);
        }
        static getBarycoord(e, t, n, r, i) {
          tg.subVectors(r, t), t_.subVectors(n, t), tv.subVectors(e, t);
          let s = tg.dot(tg),
            a = tg.dot(t_),
            o = tg.dot(tv),
            l = t_.dot(t_),
            u = t_.dot(tv),
            c = s * l - a * a;
          if (0 === c) return i.set(-2, -1, -1);
          let h = 1 / c,
            d = (l * o - a * u) * h,
            p = (s * u - a * o) * h;
          return i.set(1 - d - p, p, d);
        }
        static containsPoint(e, t, n, r) {
          return (
            this.getBarycoord(e, t, n, r, ty),
            ty.x >= 0 && ty.y >= 0 && ty.x + ty.y <= 1
          );
        }
        static getUV(e, t, n, r, i, s, a, o) {
          return (
            !1 === tT &&
              (console.warn(
                "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
              ),
              (tT = !0)),
            this.getInterpolation(e, t, n, r, i, s, a, o)
          );
        }
        static getInterpolation(e, t, n, r, i, s, a, o) {
          return (
            this.getBarycoord(e, t, n, r, ty),
            o.setScalar(0),
            o.addScaledVector(i, ty.x),
            o.addScaledVector(s, ty.y),
            o.addScaledVector(a, ty.z),
            o
          );
        }
        static isFrontFacing(e, t, n, r) {
          return (
            tg.subVectors(n, t), t_.subVectors(e, t), 0 > tg.cross(t_).dot(r)
          );
        }
        set(e, t, n) {
          return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
        }
        setFromPointsAndIndices(e, t, n, r) {
          return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this;
        }
        setFromAttributeAndIndices(e, t, n, r) {
          return (
            this.a.fromBufferAttribute(e, t),
            this.b.fromBufferAttribute(e, n),
            this.c.fromBufferAttribute(e, r),
            this
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        }
        getArea() {
          return (
            tg.subVectors(this.c, this.b),
            t_.subVectors(this.a, this.b),
            0.5 * tg.cross(t_).length()
          );
        }
        getMidpoint(e) {
          return e
            .addVectors(this.a, this.b)
            .add(this.c)
            .multiplyScalar(1 / 3);
        }
        getNormal(e) {
          return tA.getNormal(this.a, this.b, this.c, e);
        }
        getPlane(e) {
          return e.setFromCoplanarPoints(this.a, this.b, this.c);
        }
        getBarycoord(e, t) {
          return tA.getBarycoord(e, this.a, this.b, this.c, t);
        }
        getUV(e, t, n, r, i) {
          return (
            !1 === tT &&
              (console.warn(
                "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
              ),
              (tT = !0)),
            tA.getInterpolation(e, this.a, this.b, this.c, t, n, r, i)
          );
        }
        getInterpolation(e, t, n, r, i) {
          return tA.getInterpolation(e, this.a, this.b, this.c, t, n, r, i);
        }
        containsPoint(e) {
          return tA.containsPoint(e, this.a, this.b, this.c);
        }
        isFrontFacing(e) {
          return tA.isFrontFacing(this.a, this.b, this.c, e);
        }
        intersectsBox(e) {
          return e.intersectsTriangle(this);
        }
        closestPointToPoint(e, t) {
          let n, r;
          let i = this.a,
            s = this.b,
            a = this.c;
          tx.subVectors(s, i), tb.subVectors(a, i), tE.subVectors(e, i);
          let o = tx.dot(tE),
            l = tb.dot(tE);
          if (o <= 0 && l <= 0) return t.copy(i);
          tM.subVectors(e, s);
          let u = tx.dot(tM),
            c = tb.dot(tM);
          if (u >= 0 && c <= u) return t.copy(s);
          let h = o * c - u * l;
          if (h <= 0 && o >= 0 && u <= 0)
            return (n = o / (o - u)), t.copy(i).addScaledVector(tx, n);
          tw.subVectors(e, a);
          let d = tx.dot(tw),
            p = tb.dot(tw);
          if (p >= 0 && d <= p) return t.copy(a);
          let f = d * l - o * p;
          if (f <= 0 && l >= 0 && p <= 0)
            return (r = l / (l - p)), t.copy(i).addScaledVector(tb, r);
          let m = u * p - d * c;
          if (m <= 0 && c - u >= 0 && d - p >= 0)
            return (
              tS.subVectors(a, s),
              (r = (c - u) / (c - u + (d - p))),
              t.copy(s).addScaledVector(tS, r)
            );
          let g = 1 / (m + f + h);
          return (
            (n = f * g),
            (r = h * g),
            t.copy(i).addScaledVector(tx, n).addScaledVector(tb, r)
          );
        }
        equals(e) {
          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        }
      }
      let tC = 0;
      class tR extends F {
        constructor() {
          super(),
            (this.isMaterial = !0),
            Object.defineProperty(this, "id", { value: tC++ }),
            (this.uuid = H()),
            (this.name = ""),
            (this.type = "Material"),
            (this.blending = h),
            (this.side = o),
            (this.vertexColors = !1),
            (this.opacity = 1),
            (this.transparent = !1),
            (this.alphaHash = !1),
            (this.blendSrc = 204),
            (this.blendDst = 205),
            (this.blendEquation = 100),
            (this.blendSrcAlpha = null),
            (this.blendDstAlpha = null),
            (this.blendEquationAlpha = null),
            (this.depthFunc = 3),
            (this.depthTest = !0),
            (this.depthWrite = !0),
            (this.stencilWriteMask = 255),
            (this.stencilFunc = 519),
            (this.stencilRef = 0),
            (this.stencilFuncMask = 255),
            (this.stencilFail = 7680),
            (this.stencilZFail = 7680),
            (this.stencilZPass = 7680),
            (this.stencilWrite = !1),
            (this.clippingPlanes = null),
            (this.clipIntersection = !1),
            (this.clipShadows = !1),
            (this.shadowSide = null),
            (this.colorWrite = !0),
            (this.precision = null),
            (this.polygonOffset = !1),
            (this.polygonOffsetFactor = 0),
            (this.polygonOffsetUnits = 0),
            (this.dithering = !1),
            (this.alphaToCoverage = !1),
            (this.premultipliedAlpha = !1),
            (this.forceSinglePass = !1),
            (this.visible = !0),
            (this.toneMapped = !0),
            (this.userData = {}),
            (this.version = 0),
            (this._alphaTest = 0);
        }
        get alphaTest() {
          return this._alphaTest;
        }
        set alphaTest(e) {
          this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
        }
        onBuild() {}
        onBeforeRender() {}
        onBeforeCompile() {}
        customProgramCacheKey() {
          return this.onBeforeCompile.toString();
        }
        setValues(e) {
          if (void 0 !== e)
            for (let t in e) {
              let n = e[t];
              if (void 0 === n) {
                console.warn(
                  `THREE.Material: parameter '${t}' has value of undefined.`
                );
                continue;
              }
              let r = this[t];
              if (void 0 === r) {
                console.warn(
                  `THREE.Material: '${t}' is not a property of THREE.${this.type}.`
                );
                continue;
              }
              r && r.isColor
                ? r.set(n)
                : r && r.isVector3 && n && n.isVector3
                ? r.copy(n)
                : (this[t] = n);
            }
        }
        toJSON(e) {
          let t = void 0 === e || "string" == typeof e;
          t && (e = { textures: {}, images: {} });
          let n = {
            metadata: {
              version: 4.6,
              type: "Material",
              generator: "Material.toJSON",
            },
          };
          function r(e) {
            let t = [];
            for (let n in e) {
              let r = e[n];
              delete r.metadata, t.push(r);
            }
            return t;
          }
          if (
            ((n.uuid = this.uuid),
            (n.type = this.type),
            "" !== this.name && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            void 0 !== this.roughness && (n.roughness = this.roughness),
            void 0 !== this.metalness && (n.metalness = this.metalness),
            void 0 !== this.sheen && (n.sheen = this.sheen),
            this.sheenColor &&
              this.sheenColor.isColor &&
              (n.sheenColor = this.sheenColor.getHex()),
            void 0 !== this.sheenRoughness &&
              (n.sheenRoughness = this.sheenRoughness),
            this.emissive &&
              this.emissive.isColor &&
              (n.emissive = this.emissive.getHex()),
            this.emissiveIntensity &&
              1 !== this.emissiveIntensity &&
              (n.emissiveIntensity = this.emissiveIntensity),
            this.specular &&
              this.specular.isColor &&
              (n.specular = this.specular.getHex()),
            void 0 !== this.specularIntensity &&
              (n.specularIntensity = this.specularIntensity),
            this.specularColor &&
              this.specularColor.isColor &&
              (n.specularColor = this.specularColor.getHex()),
            void 0 !== this.shininess && (n.shininess = this.shininess),
            void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
            void 0 !== this.clearcoatRoughness &&
              (n.clearcoatRoughness = this.clearcoatRoughness),
            this.clearcoatMap &&
              this.clearcoatMap.isTexture &&
              (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
            this.clearcoatRoughnessMap &&
              this.clearcoatRoughnessMap.isTexture &&
              (n.clearcoatRoughnessMap =
                this.clearcoatRoughnessMap.toJSON(e).uuid),
            this.clearcoatNormalMap &&
              this.clearcoatNormalMap.isTexture &&
              ((n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
              (n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
            void 0 !== this.iridescence && (n.iridescence = this.iridescence),
            void 0 !== this.iridescenceIOR &&
              (n.iridescenceIOR = this.iridescenceIOR),
            void 0 !== this.iridescenceThicknessRange &&
              (n.iridescenceThicknessRange = this.iridescenceThicknessRange),
            this.iridescenceMap &&
              this.iridescenceMap.isTexture &&
              (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
            this.iridescenceThicknessMap &&
              this.iridescenceThicknessMap.isTexture &&
              (n.iridescenceThicknessMap =
                this.iridescenceThicknessMap.toJSON(e).uuid),
            void 0 !== this.anisotropy && (n.anisotropy = this.anisotropy),
            void 0 !== this.anisotropyRotation &&
              (n.anisotropyRotation = this.anisotropyRotation),
            this.anisotropyMap &&
              this.anisotropyMap.isTexture &&
              (n.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
            this.matcap &&
              this.matcap.isTexture &&
              (n.matcap = this.matcap.toJSON(e).uuid),
            this.alphaMap &&
              this.alphaMap.isTexture &&
              (n.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap &&
              this.lightMap.isTexture &&
              ((n.lightMap = this.lightMap.toJSON(e).uuid),
              (n.lightMapIntensity = this.lightMapIntensity)),
            this.aoMap &&
              this.aoMap.isTexture &&
              ((n.aoMap = this.aoMap.toJSON(e).uuid),
              (n.aoMapIntensity = this.aoMapIntensity)),
            this.bumpMap &&
              this.bumpMap.isTexture &&
              ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
              (n.bumpScale = this.bumpScale)),
            this.normalMap &&
              this.normalMap.isTexture &&
              ((n.normalMap = this.normalMap.toJSON(e).uuid),
              (n.normalMapType = this.normalMapType),
              (n.normalScale = this.normalScale.toArray())),
            this.displacementMap &&
              this.displacementMap.isTexture &&
              ((n.displacementMap = this.displacementMap.toJSON(e).uuid),
              (n.displacementScale = this.displacementScale),
              (n.displacementBias = this.displacementBias)),
            this.roughnessMap &&
              this.roughnessMap.isTexture &&
              (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap &&
              this.metalnessMap.isTexture &&
              (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap &&
              this.emissiveMap.isTexture &&
              (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap &&
              this.specularMap.isTexture &&
              (n.specularMap = this.specularMap.toJSON(e).uuid),
            this.specularIntensityMap &&
              this.specularIntensityMap.isTexture &&
              (n.specularIntensityMap =
                this.specularIntensityMap.toJSON(e).uuid),
            this.specularColorMap &&
              this.specularColorMap.isTexture &&
              (n.specularColorMap = this.specularColorMap.toJSON(e).uuid),
            this.envMap &&
              this.envMap.isTexture &&
              ((n.envMap = this.envMap.toJSON(e).uuid),
              void 0 !== this.combine && (n.combine = this.combine)),
            void 0 !== this.envMapIntensity &&
              (n.envMapIntensity = this.envMapIntensity),
            void 0 !== this.reflectivity &&
              (n.reflectivity = this.reflectivity),
            void 0 !== this.refractionRatio &&
              (n.refractionRatio = this.refractionRatio),
            this.gradientMap &&
              this.gradientMap.isTexture &&
              (n.gradientMap = this.gradientMap.toJSON(e).uuid),
            void 0 !== this.transmission &&
              (n.transmission = this.transmission),
            this.transmissionMap &&
              this.transmissionMap.isTexture &&
              (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
            void 0 !== this.thickness && (n.thickness = this.thickness),
            this.thicknessMap &&
              this.thicknessMap.isTexture &&
              (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
            void 0 !== this.attenuationDistance &&
              this.attenuationDistance !== 1 / 0 &&
              (n.attenuationDistance = this.attenuationDistance),
            void 0 !== this.attenuationColor &&
              (n.attenuationColor = this.attenuationColor.getHex()),
            void 0 !== this.size && (n.size = this.size),
            null !== this.shadowSide && (n.shadowSide = this.shadowSide),
            void 0 !== this.sizeAttenuation &&
              (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== h && (n.blending = this.blending),
            this.side !== o && (n.side = this.side),
            this.vertexColors && (n.vertexColors = !0),
            this.opacity < 1 && (n.opacity = this.opacity),
            !0 === this.transparent && (n.transparent = this.transparent),
            (n.depthFunc = this.depthFunc),
            (n.depthTest = this.depthTest),
            (n.depthWrite = this.depthWrite),
            (n.colorWrite = this.colorWrite),
            (n.stencilWrite = this.stencilWrite),
            (n.stencilWriteMask = this.stencilWriteMask),
            (n.stencilFunc = this.stencilFunc),
            (n.stencilRef = this.stencilRef),
            (n.stencilFuncMask = this.stencilFuncMask),
            (n.stencilFail = this.stencilFail),
            (n.stencilZFail = this.stencilZFail),
            (n.stencilZPass = this.stencilZPass),
            void 0 !== this.rotation &&
              0 !== this.rotation &&
              (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            0 !== this.polygonOffsetFactor &&
              (n.polygonOffsetFactor = this.polygonOffsetFactor),
            0 !== this.polygonOffsetUnits &&
              (n.polygonOffsetUnits = this.polygonOffsetUnits),
            void 0 !== this.linewidth &&
              1 !== this.linewidth &&
              (n.linewidth = this.linewidth),
            void 0 !== this.dashSize && (n.dashSize = this.dashSize),
            void 0 !== this.gapSize && (n.gapSize = this.gapSize),
            void 0 !== this.scale && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.alphaHash && (n.alphaHash = this.alphaHash),
            !0 === this.alphaToCoverage &&
              (n.alphaToCoverage = this.alphaToCoverage),
            !0 === this.premultipliedAlpha &&
              (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.forceSinglePass &&
              (n.forceSinglePass = this.forceSinglePass),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 &&
              (n.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap &&
              (n.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin &&
              (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            !1 === this.visible && (n.visible = !1),
            !1 === this.toneMapped && (n.toneMapped = !1),
            !1 === this.fog && (n.fog = !1),
            Object.keys(this.userData).length > 0 &&
              (n.userData = this.userData),
            t)
          ) {
            let t = r(e.textures),
              i = r(e.images);
            t.length > 0 && (n.textures = t), i.length > 0 && (n.images = i);
          }
          return n;
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          (this.name = e.name),
            (this.blending = e.blending),
            (this.side = e.side),
            (this.vertexColors = e.vertexColors),
            (this.opacity = e.opacity),
            (this.transparent = e.transparent),
            (this.blendSrc = e.blendSrc),
            (this.blendDst = e.blendDst),
            (this.blendEquation = e.blendEquation),
            (this.blendSrcAlpha = e.blendSrcAlpha),
            (this.blendDstAlpha = e.blendDstAlpha),
            (this.blendEquationAlpha = e.blendEquationAlpha),
            (this.depthFunc = e.depthFunc),
            (this.depthTest = e.depthTest),
            (this.depthWrite = e.depthWrite),
            (this.stencilWriteMask = e.stencilWriteMask),
            (this.stencilFunc = e.stencilFunc),
            (this.stencilRef = e.stencilRef),
            (this.stencilFuncMask = e.stencilFuncMask),
            (this.stencilFail = e.stencilFail),
            (this.stencilZFail = e.stencilZFail),
            (this.stencilZPass = e.stencilZPass),
            (this.stencilWrite = e.stencilWrite);
          let t = e.clippingPlanes,
            n = null;
          if (null !== t) {
            let e = t.length;
            n = Array(e);
            for (let r = 0; r !== e; ++r) n[r] = t[r].clone();
          }
          return (
            (this.clippingPlanes = n),
            (this.clipIntersection = e.clipIntersection),
            (this.clipShadows = e.clipShadows),
            (this.shadowSide = e.shadowSide),
            (this.colorWrite = e.colorWrite),
            (this.precision = e.precision),
            (this.polygonOffset = e.polygonOffset),
            (this.polygonOffsetFactor = e.polygonOffsetFactor),
            (this.polygonOffsetUnits = e.polygonOffsetUnits),
            (this.dithering = e.dithering),
            (this.alphaTest = e.alphaTest),
            (this.alphaHash = e.alphaHash),
            (this.alphaToCoverage = e.alphaToCoverage),
            (this.premultipliedAlpha = e.premultipliedAlpha),
            (this.forceSinglePass = e.forceSinglePass),
            (this.visible = e.visible),
            (this.toneMapped = e.toneMapped),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: "dispose" });
        }
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
      }
      let tP = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        },
        tO = { h: 0, s: 0, l: 0 },
        tL = { h: 0, s: 0, l: 0 };
      function tI(e, t, n) {
        return (n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6)
          ? e + (t - e) * 6 * n
          : n < 0.5
          ? t
          : n < 2 / 3
          ? e + (t - e) * 6 * (2 / 3 - n)
          : e;
      }
      class tN {
        constructor(e, t, n) {
          return (
            (this.isColor = !0),
            (this.r = 1),
            (this.g = 1),
            (this.b = 1),
            this.set(e, t, n)
          );
        }
        set(e, t, n) {
          return (
            void 0 === t && void 0 === n
              ? e && e.isColor
                ? this.copy(e)
                : "number" == typeof e
                ? this.setHex(e)
                : "string" == typeof e && this.setStyle(e)
              : this.setRGB(e, t, n),
            this
          );
        }
        setScalar(e) {
          return (this.r = e), (this.g = e), (this.b = e), this;
        }
        setHex(e, t = L) {
          return (
            (e = Math.floor(e)),
            (this.r = ((e >> 16) & 255) / 255),
            (this.g = ((e >> 8) & 255) / 255),
            (this.b = (255 & e) / 255),
            ed.toWorkingColorSpace(this, t),
            this
          );
        }
        setRGB(e, t, n, r = ed.workingColorSpace) {
          return (
            (this.r = e),
            (this.g = t),
            (this.b = n),
            ed.toWorkingColorSpace(this, r),
            this
          );
        }
        setHSL(e, t, n, r = ed.workingColorSpace) {
          if (((e = W(e, 1)), (t = G(t, 0, 1)), (n = G(n, 0, 1)), 0 === t))
            this.r = this.g = this.b = n;
          else {
            let r = n <= 0.5 ? n * (1 + t) : n + t - n * t,
              i = 2 * n - r;
            (this.r = tI(i, r, e + 1 / 3)),
              (this.g = tI(i, r, e)),
              (this.b = tI(i, r, e - 1 / 3));
          }
          return ed.toWorkingColorSpace(this, r), this;
        }
        setStyle(e, t = L) {
          let n;
          function r(t) {
            void 0 !== t &&
              1 > parseFloat(t) &&
              console.warn(
                "THREE.Color: Alpha component of " + e + " will be ignored."
              );
          }
          if ((n = /^(\w+)\(([^\)]*)\)/.exec(e))) {
            let i;
            let s = n[1],
              a = n[2];
            switch (s) {
              case "rgb":
              case "rgba":
                if (
                  (i =
                    /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      a
                    ))
                )
                  return (
                    r(i[4]),
                    this.setRGB(
                      Math.min(255, parseInt(i[1], 10)) / 255,
                      Math.min(255, parseInt(i[2], 10)) / 255,
                      Math.min(255, parseInt(i[3], 10)) / 255,
                      t
                    )
                  );
                if (
                  (i =
                    /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      a
                    ))
                )
                  return (
                    r(i[4]),
                    this.setRGB(
                      Math.min(100, parseInt(i[1], 10)) / 100,
                      Math.min(100, parseInt(i[2], 10)) / 100,
                      Math.min(100, parseInt(i[3], 10)) / 100,
                      t
                    )
                  );
                break;
              case "hsl":
              case "hsla":
                if (
                  (i =
                    /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      a
                    ))
                )
                  return (
                    r(i[4]),
                    this.setHSL(
                      parseFloat(i[1]) / 360,
                      parseFloat(i[2]) / 100,
                      parseFloat(i[3]) / 100,
                      t
                    )
                  );
                break;
              default:
                console.warn("THREE.Color: Unknown color model " + e);
            }
          } else if ((n = /^\#([A-Fa-f\d]+)$/.exec(e))) {
            let r = n[1],
              i = r.length;
            if (3 === i)
              return this.setRGB(
                parseInt(r.charAt(0), 16) / 15,
                parseInt(r.charAt(1), 16) / 15,
                parseInt(r.charAt(2), 16) / 15,
                t
              );
            if (6 === i) return this.setHex(parseInt(r, 16), t);
            console.warn("THREE.Color: Invalid hex color " + e);
          } else if (e && e.length > 0) return this.setColorName(e, t);
          return this;
        }
        setColorName(e, t = L) {
          let n = tP[e.toLowerCase()];
          return (
            void 0 !== n
              ? this.setHex(n, t)
              : console.warn("THREE.Color: Unknown color " + e),
            this
          );
        }
        clone() {
          return new this.constructor(this.r, this.g, this.b);
        }
        copy(e) {
          return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
        }
        copySRGBToLinear(e) {
          return (
            (this.r = ea(e.r)), (this.g = ea(e.g)), (this.b = ea(e.b)), this
          );
        }
        copyLinearToSRGB(e) {
          return (
            (this.r = eo(e.r)), (this.g = eo(e.g)), (this.b = eo(e.b)), this
          );
        }
        convertSRGBToLinear() {
          return this.copySRGBToLinear(this), this;
        }
        convertLinearToSRGB() {
          return this.copyLinearToSRGB(this), this;
        }
        getHex(e = L) {
          return (
            ed.fromWorkingColorSpace(tD.copy(this), e),
            65536 * Math.round(G(255 * tD.r, 0, 255)) +
              256 * Math.round(G(255 * tD.g, 0, 255)) +
              Math.round(G(255 * tD.b, 0, 255))
          );
        }
        getHexString(e = L) {
          return ("000000" + this.getHex(e).toString(16)).slice(-6);
        }
        getHSL(e, t = ed.workingColorSpace) {
          let n, r;
          ed.fromWorkingColorSpace(tD.copy(this), t);
          let i = tD.r,
            s = tD.g,
            a = tD.b,
            o = Math.max(i, s, a),
            l = Math.min(i, s, a),
            u = (l + o) / 2;
          if (l === o) (n = 0), (r = 0);
          else {
            let e = o - l;
            switch (((r = u <= 0.5 ? e / (o + l) : e / (2 - o - l)), o)) {
              case i:
                n = (s - a) / e + (s < a ? 6 : 0);
                break;
              case s:
                n = (a - i) / e + 2;
                break;
              case a:
                n = (i - s) / e + 4;
            }
            n /= 6;
          }
          return (e.h = n), (e.s = r), (e.l = u), e;
        }
        getRGB(e, t = ed.workingColorSpace) {
          return (
            ed.fromWorkingColorSpace(tD.copy(this), t),
            (e.r = tD.r),
            (e.g = tD.g),
            (e.b = tD.b),
            e
          );
        }
        getStyle(e = L) {
          ed.fromWorkingColorSpace(tD.copy(this), e);
          let t = tD.r,
            n = tD.g,
            r = tD.b;
          return e !== L
            ? `color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`
            : `rgb(${Math.round(255 * t)},${Math.round(255 * n)},${Math.round(
                255 * r
              )})`;
        }
        offsetHSL(e, t, n) {
          return (
            this.getHSL(tO),
            (tO.h += e),
            (tO.s += t),
            (tO.l += n),
            this.setHSL(tO.h, tO.s, tO.l),
            this
          );
        }
        add(e) {
          return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
        }
        addColors(e, t) {
          return (
            (this.r = e.r + t.r),
            (this.g = e.g + t.g),
            (this.b = e.b + t.b),
            this
          );
        }
        addScalar(e) {
          return (this.r += e), (this.g += e), (this.b += e), this;
        }
        sub(e) {
          return (
            (this.r = Math.max(0, this.r - e.r)),
            (this.g = Math.max(0, this.g - e.g)),
            (this.b = Math.max(0, this.b - e.b)),
            this
          );
        }
        multiply(e) {
          return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
        }
        multiplyScalar(e) {
          return (this.r *= e), (this.g *= e), (this.b *= e), this;
        }
        lerp(e, t) {
          return (
            (this.r += (e.r - this.r) * t),
            (this.g += (e.g - this.g) * t),
            (this.b += (e.b - this.b) * t),
            this
          );
        }
        lerpColors(e, t, n) {
          return (
            (this.r = e.r + (t.r - e.r) * n),
            (this.g = e.g + (t.g - e.g) * n),
            (this.b = e.b + (t.b - e.b) * n),
            this
          );
        }
        lerpHSL(e, t) {
          this.getHSL(tO), e.getHSL(tL);
          let n = $(tO.h, tL.h, t),
            r = $(tO.s, tL.s, t),
            i = $(tO.l, tL.l, t);
          return this.setHSL(n, r, i), this;
        }
        setFromVector3(e) {
          return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
        }
        applyMatrix3(e) {
          let t = this.r,
            n = this.g,
            r = this.b,
            i = e.elements;
          return (
            (this.r = i[0] * t + i[3] * n + i[6] * r),
            (this.g = i[1] * t + i[4] * n + i[7] * r),
            (this.b = i[2] * t + i[5] * n + i[8] * r),
            this
          );
        }
        equals(e) {
          return e.r === this.r && e.g === this.g && e.b === this.b;
        }
        fromArray(e, t = 0) {
          return (
            (this.r = e[t]), (this.g = e[t + 1]), (this.b = e[t + 2]), this
          );
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e;
        }
        fromBufferAttribute(e, t) {
          return (
            (this.r = e.getX(t)),
            (this.g = e.getY(t)),
            (this.b = e.getZ(t)),
            this
          );
        }
        toJSON() {
          return this.getHex();
        }
        *[Symbol.iterator]() {
          yield this.r, yield this.g, yield this.b;
        }
      }
      let tD = new tN();
      tN.NAMES = tP;
      class tU extends tR {
        constructor(e) {
          super(),
            (this.isMeshBasicMaterial = !0),
            (this.type = "MeshBasicMaterial"),
            (this.color = new tN(16777215)),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.combine = 0),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = "round"),
            (this.wireframeLinejoin = "round"),
            (this.fog = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.fog = e.fog),
            this
          );
        }
      }
      let tk = new eM(),
        tF = new Q();
      class tz {
        constructor(e, t, n = !1) {
          if (Array.isArray(e))
            throw TypeError(
              "THREE.BufferAttribute: array should be a Typed Array."
            );
          (this.isBufferAttribute = !0),
            (this.name = ""),
            (this.array = e),
            (this.itemSize = t),
            (this.count = void 0 !== e ? e.length / t : 0),
            (this.normalized = n),
            (this.usage = D),
            (this.updateRange = { offset: 0, count: -1 }),
            (this.gpuType = 1015),
            (this.version = 0);
        }
        onUploadCallback() {}
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        setUsage(e) {
          return (this.usage = e), this;
        }
        copy(e) {
          return (
            (this.name = e.name),
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.usage = e.usage),
            (this.gpuType = e.gpuType),
            this
          );
        }
        copyAt(e, t, n) {
          (e *= this.itemSize), (n *= t.itemSize);
          for (let r = 0, i = this.itemSize; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        }
        copyArray(e) {
          return this.array.set(e), this;
        }
        applyMatrix3(e) {
          if (2 === this.itemSize)
            for (let t = 0, n = this.count; t < n; t++)
              tF.fromBufferAttribute(this, t),
                tF.applyMatrix3(e),
                this.setXY(t, tF.x, tF.y);
          else if (3 === this.itemSize)
            for (let t = 0, n = this.count; t < n; t++)
              tk.fromBufferAttribute(this, t),
                tk.applyMatrix3(e),
                this.setXYZ(t, tk.x, tk.y, tk.z);
          return this;
        }
        applyMatrix4(e) {
          for (let t = 0, n = this.count; t < n; t++)
            tk.fromBufferAttribute(this, t),
              tk.applyMatrix4(e),
              this.setXYZ(t, tk.x, tk.y, tk.z);
          return this;
        }
        applyNormalMatrix(e) {
          for (let t = 0, n = this.count; t < n; t++)
            tk.fromBufferAttribute(this, t),
              tk.applyNormalMatrix(e),
              this.setXYZ(t, tk.x, tk.y, tk.z);
          return this;
        }
        transformDirection(e) {
          for (let t = 0, n = this.count; t < n; t++)
            tk.fromBufferAttribute(this, t),
              tk.transformDirection(e),
              this.setXYZ(t, tk.x, tk.y, tk.z);
          return this;
        }
        set(e, t = 0) {
          return this.array.set(e, t), this;
        }
        getComponent(e, t) {
          let n = this.array[e * this.itemSize + t];
          return this.normalized && (n = J(n, this.array)), n;
        }
        setComponent(e, t, n) {
          return (
            this.normalized && (n = Z(n, this.array)),
            (this.array[e * this.itemSize + t] = n),
            this
          );
        }
        getX(e) {
          let t = this.array[e * this.itemSize];
          return this.normalized && (t = J(t, this.array)), t;
        }
        setX(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.array[e * this.itemSize] = t),
            this
          );
        }
        getY(e) {
          let t = this.array[e * this.itemSize + 1];
          return this.normalized && (t = J(t, this.array)), t;
        }
        setY(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.array[e * this.itemSize + 1] = t),
            this
          );
        }
        getZ(e) {
          let t = this.array[e * this.itemSize + 2];
          return this.normalized && (t = J(t, this.array)), t;
        }
        setZ(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.array[e * this.itemSize + 2] = t),
            this
          );
        }
        getW(e) {
          let t = this.array[e * this.itemSize + 3];
          return this.normalized && (t = J(t, this.array)), t;
        }
        setW(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.array[e * this.itemSize + 3] = t),
            this
          );
        }
        setXY(e, t, n) {
          return (
            (e *= this.itemSize),
            this.normalized && ((t = Z(t, this.array)), (n = Z(n, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
          );
        }
        setXYZ(e, t, n, r) {
          return (
            (e *= this.itemSize),
            this.normalized &&
              ((t = Z(t, this.array)),
              (n = Z(n, this.array)),
              (r = Z(r, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            this
          );
        }
        setXYZW(e, t, n, r, i) {
          return (
            (e *= this.itemSize),
            this.normalized &&
              ((t = Z(t, this.array)),
              (n = Z(n, this.array)),
              (r = Z(r, this.array)),
              (i = Z(i, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            (this.array[e + 3] = i),
            this
          );
        }
        onUpload(e) {
          return (this.onUploadCallback = e), this;
        }
        clone() {
          return new this.constructor(this.array, this.itemSize).copy(this);
        }
        toJSON() {
          let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.from(this.array),
            normalized: this.normalized,
          };
          return (
            "" !== this.name && (e.name = this.name),
            this.usage !== D && (e.usage = this.usage),
            (0 !== this.updateRange.offset || -1 !== this.updateRange.count) &&
              (e.updateRange = this.updateRange),
            e
          );
        }
      }
      class tB extends tz {
        constructor(e, t, n) {
          super(new Uint16Array(e), t, n);
        }
      }
      class tV extends tz {
        constructor(e, t, n) {
          super(new Uint32Array(e), t, n);
        }
      }
      class tj extends tz {
        constructor(e, t, n) {
          super(new Float32Array(e), t, n);
        }
      }
      let tH = 0,
        tG = new e0(),
        tW = new tm(),
        t$ = new eM(),
        tX = new eA(),
        tq = new eA(),
        tY = new eM();
      class tJ extends F {
        constructor() {
          super(),
            (this.isBufferGeometry = !0),
            Object.defineProperty(this, "id", { value: tH++ }),
            (this.uuid = H()),
            (this.name = ""),
            (this.type = "BufferGeometry"),
            (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.morphTargetsRelative = !1),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.drawRange = { start: 0, count: 1 / 0 }),
            (this.userData = {});
        }
        getIndex() {
          return this.index;
        }
        setIndex(e) {
          return (
            Array.isArray(e)
              ? (this.index = new (en(e) ? tV : tB)(e, 1))
              : (this.index = e),
            this
          );
        }
        getAttribute(e) {
          return this.attributes[e];
        }
        setAttribute(e, t) {
          return (this.attributes[e] = t), this;
        }
        deleteAttribute(e) {
          return delete this.attributes[e], this;
        }
        hasAttribute(e) {
          return void 0 !== this.attributes[e];
        }
        addGroup(e, t, n = 0) {
          this.groups.push({ start: e, count: t, materialIndex: n });
        }
        clearGroups() {
          this.groups = [];
        }
        setDrawRange(e, t) {
          (this.drawRange.start = e), (this.drawRange.count = t);
        }
        applyMatrix4(e) {
          let t = this.attributes.position;
          void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
          let n = this.attributes.normal;
          if (void 0 !== n) {
            let t = new ee().getNormalMatrix(e);
            n.applyNormalMatrix(t), (n.needsUpdate = !0);
          }
          let r = this.attributes.tangent;
          return (
            void 0 !== r && (r.transformDirection(e), (r.needsUpdate = !0)),
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
          );
        }
        applyQuaternion(e) {
          return tG.makeRotationFromQuaternion(e), this.applyMatrix4(tG), this;
        }
        rotateX(e) {
          return tG.makeRotationX(e), this.applyMatrix4(tG), this;
        }
        rotateY(e) {
          return tG.makeRotationY(e), this.applyMatrix4(tG), this;
        }
        rotateZ(e) {
          return tG.makeRotationZ(e), this.applyMatrix4(tG), this;
        }
        translate(e, t, n) {
          return tG.makeTranslation(e, t, n), this.applyMatrix4(tG), this;
        }
        scale(e, t, n) {
          return tG.makeScale(e, t, n), this.applyMatrix4(tG), this;
        }
        lookAt(e) {
          return (
            tW.lookAt(e), tW.updateMatrix(), this.applyMatrix4(tW.matrix), this
          );
        }
        center() {
          return (
            this.computeBoundingBox(),
            this.boundingBox.getCenter(t$).negate(),
            this.translate(t$.x, t$.y, t$.z),
            this
          );
        }
        setFromPoints(e) {
          let t = [];
          for (let n = 0, r = e.length; n < r; n++) {
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
          }
          return this.setAttribute("position", new tj(t, 3)), this;
        }
        computeBoundingBox() {
          null === this.boundingBox && (this.boundingBox = new eA());
          let e = this.attributes.position,
            t = this.morphAttributes.position;
          if (e && e.isGLBufferAttribute) {
            console.error(
              'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
              this
            ),
              this.boundingBox.set(
                new eM(-1 / 0, -1 / 0, -1 / 0),
                new eM(Infinity, Infinity, Infinity)
              );
            return;
          }
          if (void 0 !== e) {
            if ((this.boundingBox.setFromBufferAttribute(e), t))
              for (let e = 0, n = t.length; e < n; e++) {
                let n = t[e];
                tX.setFromBufferAttribute(n),
                  this.morphTargetsRelative
                    ? (tY.addVectors(this.boundingBox.min, tX.min),
                      this.boundingBox.expandByPoint(tY),
                      tY.addVectors(this.boundingBox.max, tX.max),
                      this.boundingBox.expandByPoint(tY))
                    : (this.boundingBox.expandByPoint(tX.min),
                      this.boundingBox.expandByPoint(tX.max));
              }
          } else this.boundingBox.makeEmpty();
          (isNaN(this.boundingBox.min.x) ||
            isNaN(this.boundingBox.min.y) ||
            isNaN(this.boundingBox.min.z)) &&
            console.error(
              'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
              this
            );
        }
        computeBoundingSphere() {
          null === this.boundingSphere && (this.boundingSphere = new eW());
          let e = this.attributes.position,
            t = this.morphAttributes.position;
          if (e && e.isGLBufferAttribute) {
            console.error(
              'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
              this
            ),
              this.boundingSphere.set(new eM(), 1 / 0);
            return;
          }
          if (e) {
            let n = this.boundingSphere.center;
            if ((tX.setFromBufferAttribute(e), t))
              for (let e = 0, n = t.length; e < n; e++) {
                let n = t[e];
                tq.setFromBufferAttribute(n),
                  this.morphTargetsRelative
                    ? (tY.addVectors(tX.min, tq.min),
                      tX.expandByPoint(tY),
                      tY.addVectors(tX.max, tq.max),
                      tX.expandByPoint(tY))
                    : (tX.expandByPoint(tq.min), tX.expandByPoint(tq.max));
              }
            tX.getCenter(n);
            let r = 0;
            for (let t = 0, i = e.count; t < i; t++)
              tY.fromBufferAttribute(e, t),
                (r = Math.max(r, n.distanceToSquared(tY)));
            if (t)
              for (let i = 0, s = t.length; i < s; i++) {
                let s = t[i],
                  a = this.morphTargetsRelative;
                for (let t = 0, i = s.count; t < i; t++)
                  tY.fromBufferAttribute(s, t),
                    a && (t$.fromBufferAttribute(e, t), tY.add(t$)),
                    (r = Math.max(r, n.distanceToSquared(tY)));
              }
            (this.boundingSphere.radius = Math.sqrt(r)),
              isNaN(this.boundingSphere.radius) &&
                console.error(
                  'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                  this
                );
          }
        }
        computeTangents() {
          let e = this.index,
            t = this.attributes;
          if (
            null === e ||
            void 0 === t.position ||
            void 0 === t.normal ||
            void 0 === t.uv
          ) {
            console.error(
              "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
            );
            return;
          }
          let n = e.array,
            r = t.position.array,
            i = t.normal.array,
            s = t.uv.array,
            a = r.length / 3;
          !1 === this.hasAttribute("tangent") &&
            this.setAttribute("tangent", new tz(new Float32Array(4 * a), 4));
          let o = this.getAttribute("tangent").array,
            l = [],
            u = [];
          for (let e = 0; e < a; e++) (l[e] = new eM()), (u[e] = new eM());
          let c = new eM(),
            h = new eM(),
            d = new eM(),
            p = new Q(),
            f = new Q(),
            m = new Q(),
            g = new eM(),
            _ = new eM(),
            v = this.groups;
          0 === v.length && (v = [{ start: 0, count: n.length }]);
          for (let e = 0, t = v.length; e < t; ++e) {
            let t = v[e],
              i = t.start,
              a = t.count;
            for (let e = i, t = i + a; e < t; e += 3)
              !(function (e, t, n) {
                c.fromArray(r, 3 * e),
                  h.fromArray(r, 3 * t),
                  d.fromArray(r, 3 * n),
                  p.fromArray(s, 2 * e),
                  f.fromArray(s, 2 * t),
                  m.fromArray(s, 2 * n),
                  h.sub(c),
                  d.sub(c),
                  f.sub(p),
                  m.sub(p);
                let i = 1 / (f.x * m.y - m.x * f.y);
                isFinite(i) &&
                  (g
                    .copy(h)
                    .multiplyScalar(m.y)
                    .addScaledVector(d, -f.y)
                    .multiplyScalar(i),
                  _.copy(d)
                    .multiplyScalar(f.x)
                    .addScaledVector(h, -m.x)
                    .multiplyScalar(i),
                  l[e].add(g),
                  l[t].add(g),
                  l[n].add(g),
                  u[e].add(_),
                  u[t].add(_),
                  u[n].add(_));
              })(n[e + 0], n[e + 1], n[e + 2]);
          }
          let y = new eM(),
            x = new eM(),
            b = new eM(),
            S = new eM();
          function E(e) {
            b.fromArray(i, 3 * e), S.copy(b);
            let t = l[e];
            y.copy(t),
              y.sub(b.multiplyScalar(b.dot(t))).normalize(),
              x.crossVectors(S, t);
            let n = x.dot(u[e]);
            (o[4 * e] = y.x),
              (o[4 * e + 1] = y.y),
              (o[4 * e + 2] = y.z),
              (o[4 * e + 3] = n < 0 ? -1 : 1);
          }
          for (let e = 0, t = v.length; e < t; ++e) {
            let t = v[e],
              r = t.start,
              i = t.count;
            for (let e = r, t = r + i; e < t; e += 3)
              E(n[e + 0]), E(n[e + 1]), E(n[e + 2]);
          }
        }
        computeVertexNormals() {
          let e = this.index,
            t = this.getAttribute("position");
          if (void 0 !== t) {
            let n = this.getAttribute("normal");
            if (void 0 === n)
              (n = new tz(new Float32Array(3 * t.count), 3)),
                this.setAttribute("normal", n);
            else for (let e = 0, t = n.count; e < t; e++) n.setXYZ(e, 0, 0, 0);
            let r = new eM(),
              i = new eM(),
              s = new eM(),
              a = new eM(),
              o = new eM(),
              l = new eM(),
              u = new eM(),
              c = new eM();
            if (e)
              for (let h = 0, d = e.count; h < d; h += 3) {
                let d = e.getX(h + 0),
                  p = e.getX(h + 1),
                  f = e.getX(h + 2);
                r.fromBufferAttribute(t, d),
                  i.fromBufferAttribute(t, p),
                  s.fromBufferAttribute(t, f),
                  u.subVectors(s, i),
                  c.subVectors(r, i),
                  u.cross(c),
                  a.fromBufferAttribute(n, d),
                  o.fromBufferAttribute(n, p),
                  l.fromBufferAttribute(n, f),
                  a.add(u),
                  o.add(u),
                  l.add(u),
                  n.setXYZ(d, a.x, a.y, a.z),
                  n.setXYZ(p, o.x, o.y, o.z),
                  n.setXYZ(f, l.x, l.y, l.z);
              }
            else
              for (let e = 0, a = t.count; e < a; e += 3)
                r.fromBufferAttribute(t, e + 0),
                  i.fromBufferAttribute(t, e + 1),
                  s.fromBufferAttribute(t, e + 2),
                  u.subVectors(s, i),
                  c.subVectors(r, i),
                  u.cross(c),
                  n.setXYZ(e + 0, u.x, u.y, u.z),
                  n.setXYZ(e + 1, u.x, u.y, u.z),
                  n.setXYZ(e + 2, u.x, u.y, u.z);
            this.normalizeNormals(), (n.needsUpdate = !0);
          }
        }
        normalizeNormals() {
          let e = this.attributes.normal;
          for (let t = 0, n = e.count; t < n; t++)
            tY.fromBufferAttribute(e, t),
              tY.normalize(),
              e.setXYZ(t, tY.x, tY.y, tY.z);
        }
        toNonIndexed() {
          function e(e, t) {
            let n = e.array,
              r = e.itemSize,
              i = e.normalized,
              s = new n.constructor(t.length * r),
              a = 0,
              o = 0;
            for (let i = 0, l = t.length; i < l; i++) {
              a = e.isInterleavedBufferAttribute
                ? t[i] * e.data.stride + e.offset
                : t[i] * r;
              for (let e = 0; e < r; e++) s[o++] = n[a++];
            }
            return new tz(s, r, i);
          }
          if (null === this.index)
            return (
              console.warn(
                "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
              ),
              this
            );
          let t = new tJ(),
            n = this.index.array,
            r = this.attributes;
          for (let i in r) {
            let s = r[i],
              a = e(s, n);
            t.setAttribute(i, a);
          }
          let i = this.morphAttributes;
          for (let r in i) {
            let s = [],
              a = i[r];
            for (let t = 0, r = a.length; t < r; t++) {
              let r = a[t],
                i = e(r, n);
              s.push(i);
            }
            t.morphAttributes[r] = s;
          }
          t.morphTargetsRelative = this.morphTargetsRelative;
          let s = this.groups;
          for (let e = 0, n = s.length; e < n; e++) {
            let n = s[e];
            t.addGroup(n.start, n.count, n.materialIndex);
          }
          return t;
        }
        toJSON() {
          let e = {
            metadata: {
              version: 4.6,
              type: "BufferGeometry",
              generator: "BufferGeometry.toJSON",
            },
          };
          if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            "" !== this.name && (e.name = this.name),
            Object.keys(this.userData).length > 0 &&
              (e.userData = this.userData),
            void 0 !== this.parameters)
          ) {
            let t = this.parameters;
            for (let n in t) void 0 !== t[n] && (e[n] = t[n]);
            return e;
          }
          e.data = { attributes: {} };
          let t = this.index;
          null !== t &&
            (e.data.index = {
              type: t.array.constructor.name,
              array: Array.prototype.slice.call(t.array),
            });
          let n = this.attributes;
          for (let t in n) {
            let r = n[t];
            e.data.attributes[t] = r.toJSON(e.data);
          }
          let r = {},
            i = !1;
          for (let t in this.morphAttributes) {
            let n = this.morphAttributes[t],
              s = [];
            for (let t = 0, r = n.length; t < r; t++) {
              let r = n[t];
              s.push(r.toJSON(e.data));
            }
            s.length > 0 && ((r[t] = s), (i = !0));
          }
          i &&
            ((e.data.morphAttributes = r),
            (e.data.morphTargetsRelative = this.morphTargetsRelative));
          let s = this.groups;
          s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
          let a = this.boundingSphere;
          return (
            null !== a &&
              (e.data.boundingSphere = {
                center: a.center.toArray(),
                radius: a.radius,
              }),
            e
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null);
          let t = {};
          this.name = e.name;
          let n = e.index;
          null !== n && this.setIndex(n.clone(t));
          let r = e.attributes;
          for (let e in r) {
            let n = r[e];
            this.setAttribute(e, n.clone(t));
          }
          let i = e.morphAttributes;
          for (let e in i) {
            let n = [],
              r = i[e];
            for (let e = 0, i = r.length; e < i; e++) n.push(r[e].clone(t));
            this.morphAttributes[e] = n;
          }
          this.morphTargetsRelative = e.morphTargetsRelative;
          let s = e.groups;
          for (let e = 0, t = s.length; e < t; e++) {
            let t = s[e];
            this.addGroup(t.start, t.count, t.materialIndex);
          }
          let a = e.boundingBox;
          null !== a && (this.boundingBox = a.clone());
          let o = e.boundingSphere;
          return (
            null !== o && (this.boundingSphere = o.clone()),
            (this.drawRange.start = e.drawRange.start),
            (this.drawRange.count = e.drawRange.count),
            (this.userData = e.userData),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: "dispose" });
        }
      }
      let tZ = new e0(),
        tK = new eQ(),
        tQ = new eW(),
        t0 = new eM(),
        t1 = new eM(),
        t2 = new eM(),
        t3 = new eM(),
        t4 = new eM(),
        t5 = new eM(),
        t6 = new Q(),
        t8 = new Q(),
        t7 = new Q(),
        t9 = new eM(),
        ne = new eM(),
        nt = new eM(),
        nn = new eM(),
        nr = new eM();
      class ni extends tm {
        constructor(e = new tJ(), t = new tU()) {
          super(),
            (this.isMesh = !0),
            (this.type = "Mesh"),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            void 0 !== e.morphTargetInfluences &&
              (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
            void 0 !== e.morphTargetDictionary &&
              (this.morphTargetDictionary = Object.assign(
                {},
                e.morphTargetDictionary
              )),
            (this.material = Array.isArray(e.material)
              ? e.material.slice()
              : e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        updateMorphTargets() {
          let e = this.geometry,
            t = e.morphAttributes,
            n = Object.keys(t);
          if (n.length > 0) {
            let e = t[n[0]];
            if (void 0 !== e) {
              (this.morphTargetInfluences = []),
                (this.morphTargetDictionary = {});
              for (let t = 0, n = e.length; t < n; t++) {
                let n = e[t].name || String(t);
                this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = t);
              }
            }
          }
        }
        getVertexPosition(e, t) {
          let n = this.geometry,
            r = n.attributes.position,
            i = n.morphAttributes.position,
            s = n.morphTargetsRelative;
          t.fromBufferAttribute(r, e);
          let a = this.morphTargetInfluences;
          if (i && a) {
            t5.set(0, 0, 0);
            for (let n = 0, r = i.length; n < r; n++) {
              let r = a[n],
                o = i[n];
              0 !== r &&
                (t4.fromBufferAttribute(o, e),
                s
                  ? t5.addScaledVector(t4, r)
                  : t5.addScaledVector(t4.sub(t), r));
            }
            t.add(t5);
          }
          return t;
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.material,
            i = this.matrixWorld;
          if (void 0 !== r) {
            if (
              (null === n.boundingSphere && n.computeBoundingSphere(),
              tQ.copy(n.boundingSphere),
              tQ.applyMatrix4(i),
              tK.copy(e.ray).recast(e.near),
              (!1 === tQ.containsPoint(tK.origin) &&
                (null === tK.intersectSphere(tQ, t0) ||
                  tK.origin.distanceToSquared(t0) > (e.far - e.near) ** 2)) ||
                (tZ.copy(i).invert(),
                tK.copy(e.ray).applyMatrix4(tZ),
                null !== n.boundingBox &&
                  !1 === tK.intersectsBox(n.boundingBox)))
            )
              return;
            this._computeIntersections(e, t, tK);
          }
        }
        _computeIntersections(e, t, n) {
          let r;
          let i = this.geometry,
            s = this.material,
            a = i.index,
            o = i.attributes.position,
            l = i.attributes.uv,
            u = i.attributes.uv1,
            c = i.attributes.normal,
            h = i.groups,
            d = i.drawRange;
          if (null !== a) {
            if (Array.isArray(s))
              for (let i = 0, o = h.length; i < o; i++) {
                let o = h[i],
                  p = s[o.materialIndex],
                  f = Math.max(o.start, d.start),
                  m = Math.min(
                    a.count,
                    Math.min(o.start + o.count, d.start + d.count)
                  );
                for (let i = f; i < m; i += 3) {
                  let s = a.getX(i),
                    h = a.getX(i + 1),
                    d = a.getX(i + 2);
                  (r = ns(this, p, e, n, l, u, c, s, h, d)) &&
                    ((r.faceIndex = Math.floor(i / 3)),
                    (r.face.materialIndex = o.materialIndex),
                    t.push(r));
                }
              }
            else {
              let i = Math.max(0, d.start),
                o = Math.min(a.count, d.start + d.count);
              for (let h = i; h < o; h += 3) {
                let i = a.getX(h),
                  o = a.getX(h + 1),
                  d = a.getX(h + 2);
                (r = ns(this, s, e, n, l, u, c, i, o, d)) &&
                  ((r.faceIndex = Math.floor(h / 3)), t.push(r));
              }
            }
          } else if (void 0 !== o) {
            if (Array.isArray(s))
              for (let i = 0, a = h.length; i < a; i++) {
                let a = h[i],
                  p = s[a.materialIndex],
                  f = Math.max(a.start, d.start),
                  m = Math.min(
                    o.count,
                    Math.min(a.start + a.count, d.start + d.count)
                  );
                for (let i = f; i < m; i += 3) {
                  let s = i,
                    o = i + 1,
                    h = i + 2;
                  (r = ns(this, p, e, n, l, u, c, s, o, h)) &&
                    ((r.faceIndex = Math.floor(i / 3)),
                    (r.face.materialIndex = a.materialIndex),
                    t.push(r));
                }
              }
            else {
              let i = Math.max(0, d.start),
                a = Math.min(o.count, d.start + d.count);
              for (let o = i; o < a; o += 3) {
                let i = o,
                  a = o + 1,
                  h = o + 2;
                (r = ns(this, s, e, n, l, u, c, i, a, h)) &&
                  ((r.faceIndex = Math.floor(o / 3)), t.push(r));
              }
            }
          }
        }
      }
      function ns(e, t, n, r, i, s, a, u, c, h) {
        e.getVertexPosition(u, t1),
          e.getVertexPosition(c, t2),
          e.getVertexPosition(h, t3);
        let d = (function (e, t, n, r, i, s, a, u) {
          if (
            null ===
            (t.side === l
              ? r.intersectTriangle(a, s, i, !0, u)
              : r.intersectTriangle(i, s, a, t.side === o, u))
          )
            return null;
          nr.copy(u), nr.applyMatrix4(e.matrixWorld);
          let c = n.ray.origin.distanceTo(nr);
          return c < n.near || c > n.far
            ? null
            : { distance: c, point: nr.clone(), object: e };
        })(e, t, n, r, t1, t2, t3, nn);
        if (d) {
          i &&
            (t6.fromBufferAttribute(i, u),
            t8.fromBufferAttribute(i, c),
            t7.fromBufferAttribute(i, h),
            (d.uv = tA.getInterpolation(nn, t1, t2, t3, t6, t8, t7, new Q()))),
            s &&
              (t6.fromBufferAttribute(s, u),
              t8.fromBufferAttribute(s, c),
              t7.fromBufferAttribute(s, h),
              (d.uv1 = tA.getInterpolation(
                nn,
                t1,
                t2,
                t3,
                t6,
                t8,
                t7,
                new Q()
              )),
              (d.uv2 = d.uv1)),
            a &&
              (t9.fromBufferAttribute(a, u),
              ne.fromBufferAttribute(a, c),
              nt.fromBufferAttribute(a, h),
              (d.normal = tA.getInterpolation(
                nn,
                t1,
                t2,
                t3,
                t9,
                ne,
                nt,
                new eM()
              )),
              d.normal.dot(r.direction) > 0 && d.normal.multiplyScalar(-1));
          let e = { a: u, b: c, c: h, normal: new eM(), materialIndex: 0 };
          tA.getNormal(t1, t2, t3, e.normal), (d.face = e);
        }
        return d;
      }
      class na extends tJ {
        constructor(e = 1, t = 1, n = 1, r = 1, i = 1, s = 1) {
          super(),
            (this.type = "BoxGeometry"),
            (this.parameters = {
              width: e,
              height: t,
              depth: n,
              widthSegments: r,
              heightSegments: i,
              depthSegments: s,
            });
          let a = this;
          (r = Math.floor(r)), (i = Math.floor(i)), (s = Math.floor(s));
          let o = [],
            l = [],
            u = [],
            c = [],
            h = 0,
            d = 0;
          function p(e, t, n, r, i, s, p, f, m, g, _) {
            let v = s / m,
              y = p / g,
              x = s / 2,
              b = p / 2,
              S = f / 2,
              E = m + 1,
              M = g + 1,
              w = 0,
              T = 0,
              A = new eM();
            for (let s = 0; s < M; s++) {
              let a = s * y - b;
              for (let o = 0; o < E; o++) {
                let h = o * v - x;
                (A[e] = h * r),
                  (A[t] = a * i),
                  (A[n] = S),
                  l.push(A.x, A.y, A.z),
                  (A[e] = 0),
                  (A[t] = 0),
                  (A[n] = f > 0 ? 1 : -1),
                  u.push(A.x, A.y, A.z),
                  c.push(o / m),
                  c.push(1 - s / g),
                  (w += 1);
              }
            }
            for (let e = 0; e < g; e++)
              for (let t = 0; t < m; t++) {
                let n = h + t + E * e,
                  r = h + t + E * (e + 1),
                  i = h + (t + 1) + E * (e + 1),
                  s = h + (t + 1) + E * e;
                o.push(n, r, s), o.push(r, i, s), (T += 6);
              }
            a.addGroup(d, T, _), (d += T), (h += w);
          }
          p("z", "y", "x", -1, -1, n, t, e, s, i, 0),
            p("z", "y", "x", 1, -1, n, t, -e, s, i, 1),
            p("x", "z", "y", 1, 1, e, n, t, r, s, 2),
            p("x", "z", "y", 1, -1, e, n, -t, r, s, 3),
            p("x", "y", "z", 1, -1, e, t, n, r, i, 4),
            p("x", "y", "z", -1, -1, e, t, -n, r, i, 5),
            this.setIndex(o),
            this.setAttribute("position", new tj(l, 3)),
            this.setAttribute("normal", new tj(u, 3)),
            this.setAttribute("uv", new tj(c, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new na(
            e.width,
            e.height,
            e.depth,
            e.widthSegments,
            e.heightSegments,
            e.depthSegments
          );
        }
      }
      function no(e) {
        let t = {};
        for (let n in e)
          for (let r in ((t[n] = {}), e[n])) {
            let i = e[n][r];
            i &&
            (i.isColor ||
              i.isMatrix3 ||
              i.isMatrix4 ||
              i.isVector2 ||
              i.isVector3 ||
              i.isVector4 ||
              i.isTexture ||
              i.isQuaternion)
              ? i.isRenderTargetTexture
                ? (console.warn(
                    "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
                  ),
                  (t[n][r] = null))
                : (t[n][r] = i.clone())
              : Array.isArray(i)
              ? (t[n][r] = i.slice())
              : (t[n][r] = i);
          }
        return t;
      }
      function nl(e) {
        let t = {};
        for (let n = 0; n < e.length; n++) {
          let r = no(e[n]);
          for (let e in r) t[e] = r[e];
        }
        return t;
      }
      function nu(e) {
        return null === e.getRenderTarget() ? e.outputColorSpace : I;
      }
      let nc = { clone: no, merge: nl };
      class nh extends tR {
        constructor(e) {
          super(),
            (this.isShaderMaterial = !0),
            (this.type = "ShaderMaterial"),
            (this.defines = {}),
            (this.uniforms = {}),
            (this.uniformsGroups = []),
            (this.vertexShader =
              "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
            (this.fragmentShader =
              "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
            (this.linewidth = 1),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.fog = !1),
            (this.lights = !1),
            (this.clipping = !1),
            (this.forceSinglePass = !0),
            (this.extensions = {
              derivatives: !1,
              fragDepth: !1,
              drawBuffers: !1,
              shaderTextureLOD: !1,
            }),
            (this.defaultAttributeValues = {
              color: [1, 1, 1],
              uv: [0, 0],
              uv1: [0, 0],
            }),
            (this.index0AttributeName = void 0),
            (this.uniformsNeedUpdate = !1),
            (this.glslVersion = null),
            void 0 !== e && this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.fragmentShader = e.fragmentShader),
            (this.vertexShader = e.vertexShader),
            (this.uniforms = no(e.uniforms)),
            (this.uniformsGroups = (function (e) {
              let t = [];
              for (let n = 0; n < e.length; n++) t.push(e[n].clone());
              return t;
            })(e.uniformsGroups)),
            (this.defines = Object.assign({}, e.defines)),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.fog = e.fog),
            (this.lights = e.lights),
            (this.clipping = e.clipping),
            (this.extensions = Object.assign({}, e.extensions)),
            (this.glslVersion = e.glslVersion),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          for (let n in ((t.glslVersion = this.glslVersion),
          (t.uniforms = {}),
          this.uniforms)) {
            let r = this.uniforms[n],
              i = r.value;
            i && i.isTexture
              ? (t.uniforms[n] = { type: "t", value: i.toJSON(e).uuid })
              : i && i.isColor
              ? (t.uniforms[n] = { type: "c", value: i.getHex() })
              : i && i.isVector2
              ? (t.uniforms[n] = { type: "v2", value: i.toArray() })
              : i && i.isVector3
              ? (t.uniforms[n] = { type: "v3", value: i.toArray() })
              : i && i.isVector4
              ? (t.uniforms[n] = { type: "v4", value: i.toArray() })
              : i && i.isMatrix3
              ? (t.uniforms[n] = { type: "m3", value: i.toArray() })
              : i && i.isMatrix4
              ? (t.uniforms[n] = { type: "m4", value: i.toArray() })
              : (t.uniforms[n] = { value: i });
          }
          Object.keys(this.defines).length > 0 && (t.defines = this.defines),
            (t.vertexShader = this.vertexShader),
            (t.fragmentShader = this.fragmentShader),
            (t.lights = this.lights),
            (t.clipping = this.clipping);
          let n = {};
          for (let e in this.extensions)
            !0 === this.extensions[e] && (n[e] = !0);
          return Object.keys(n).length > 0 && (t.extensions = n), t;
        }
      }
      class nd extends tm {
        constructor() {
          super(),
            (this.isCamera = !0),
            (this.type = "Camera"),
            (this.matrixWorldInverse = new e0()),
            (this.projectionMatrix = new e0()),
            (this.projectionMatrixInverse = new e0()),
            (this.coordinateSystem = 2e3);
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            (this.coordinateSystem = e.coordinateSystem),
            this
          );
        }
        getWorldDirection(e) {
          this.updateWorldMatrix(!0, !1);
          let t = this.matrixWorld.elements;
          return e.set(-t[8], -t[9], -t[10]).normalize();
        }
        updateMatrixWorld(e) {
          super.updateMatrixWorld(e),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        updateWorldMatrix(e, t) {
          super.updateWorldMatrix(e, t),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      class np extends nd {
        constructor(e = 50, t = 1, n = 0.1, r = 2e3) {
          super(),
            (this.isPerspectiveCamera = !0),
            (this.type = "PerspectiveCamera"),
            (this.fov = e),
            (this.zoom = 1),
            (this.near = n),
            (this.far = r),
            (this.focus = 10),
            (this.aspect = t),
            (this.view = null),
            (this.filmGauge = 35),
            (this.filmOffset = 0),
            this.updateProjectionMatrix();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        }
        setFocalLength(e) {
          let t = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * j * Math.atan(t)), this.updateProjectionMatrix();
        }
        getFocalLength() {
          let e = Math.tan(0.5 * V * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        }
        getEffectiveFOV() {
          return 2 * j * Math.atan(Math.tan(0.5 * V * this.fov) / this.zoom);
        }
        getFilmWidth() {
          return this.filmGauge * Math.min(this.aspect, 1);
        }
        getFilmHeight() {
          return this.filmGauge / Math.max(this.aspect, 1);
        }
        setViewOffset(e, t, n, r, i, s) {
          (this.aspect = e / t),
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = r),
            (this.view.width = i),
            (this.view.height = s),
            this.updateProjectionMatrix();
        }
        clearViewOffset() {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
          let e = this.near,
            t = (e * Math.tan(0.5 * V * this.fov)) / this.zoom,
            n = 2 * t,
            r = this.aspect * n,
            i = -0.5 * r,
            s = this.view;
          if (null !== this.view && this.view.enabled) {
            let e = s.fullWidth,
              a = s.fullHeight;
            (i += (s.offsetX * r) / e),
              (t -= (s.offsetY * n) / a),
              (r *= s.width / e),
              (n *= s.height / a);
          }
          let a = this.filmOffset;
          0 !== a && (i += (e * a) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              i,
              i + r,
              t,
              t - n,
              e,
              this.far,
              this.coordinateSystem
            ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
          );
        }
      }
      class nf extends tm {
        constructor(e, t, n) {
          super(),
            (this.type = "CubeCamera"),
            (this.renderTarget = n),
            (this.coordinateSystem = null);
          let r = new np(-90, 1, e, t);
          (r.layers = this.layers), this.add(r);
          let i = new np(-90, 1, e, t);
          (i.layers = this.layers), this.add(i);
          let s = new np(-90, 1, e, t);
          (s.layers = this.layers), this.add(s);
          let a = new np(-90, 1, e, t);
          (a.layers = this.layers), this.add(a);
          let o = new np(-90, 1, e, t);
          (o.layers = this.layers), this.add(o);
          let l = new np(-90, 1, e, t);
          (l.layers = this.layers), this.add(l);
        }
        updateCoordinateSystem() {
          let e = this.coordinateSystem,
            t = this.children.concat(),
            [n, r, i, s, a, o] = t;
          for (let e of t) this.remove(e);
          if (2e3 === e)
            n.up.set(0, 1, 0),
              n.lookAt(1, 0, 0),
              r.up.set(0, 1, 0),
              r.lookAt(-1, 0, 0),
              i.up.set(0, 0, -1),
              i.lookAt(0, 1, 0),
              s.up.set(0, 0, 1),
              s.lookAt(0, -1, 0),
              a.up.set(0, 1, 0),
              a.lookAt(0, 0, 1),
              o.up.set(0, 1, 0),
              o.lookAt(0, 0, -1);
          else if (2001 === e)
            n.up.set(0, -1, 0),
              n.lookAt(-1, 0, 0),
              r.up.set(0, -1, 0),
              r.lookAt(1, 0, 0),
              i.up.set(0, 0, 1),
              i.lookAt(0, 1, 0),
              s.up.set(0, 0, -1),
              s.lookAt(0, -1, 0),
              a.up.set(0, -1, 0),
              a.lookAt(0, 0, 1),
              o.up.set(0, -1, 0),
              o.lookAt(0, 0, -1);
          else
            throw Error(
              "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
                e
            );
          for (let e of t) this.add(e), e.updateMatrixWorld();
        }
        update(e, t) {
          null === this.parent && this.updateMatrixWorld();
          let n = this.renderTarget;
          this.coordinateSystem !== e.coordinateSystem &&
            ((this.coordinateSystem = e.coordinateSystem),
            this.updateCoordinateSystem());
          let [r, i, s, a, o, l] = this.children,
            u = e.getRenderTarget(),
            c = e.xr.enabled;
          e.xr.enabled = !1;
          let h = n.texture.generateMipmaps;
          (n.texture.generateMipmaps = !1),
            e.setRenderTarget(n, 0),
            e.render(t, r),
            e.setRenderTarget(n, 1),
            e.render(t, i),
            e.setRenderTarget(n, 2),
            e.render(t, s),
            e.setRenderTarget(n, 3),
            e.render(t, a),
            e.setRenderTarget(n, 4),
            e.render(t, o),
            (n.texture.generateMipmaps = h),
            e.setRenderTarget(n, 5),
            e.render(t, l),
            e.setRenderTarget(u),
            (e.xr.enabled = c),
            (n.texture.needsPMREMUpdate = !0);
        }
      }
      class nm extends ev {
        constructor(e, t, n, r, i, s, a, o, l, u) {
          super(
            (e = void 0 !== e ? e : []),
            (t = void 0 !== t ? t : 301),
            n,
            r,
            i,
            s,
            a,
            o,
            l,
            u
          ),
            (this.isCubeTexture = !0),
            (this.flipY = !1);
        }
        get images() {
          return this.image;
        }
        set images(e) {
          this.image = e;
        }
      }
      class ng extends eb {
        constructor(e = 1, t = {}) {
          super(e, e, t), (this.isWebGLCubeRenderTarget = !0);
          let n = { width: e, height: e, depth: 1 },
            r = [n, n, n, n, n, n];
          void 0 !== t.encoding &&
            (es(
              "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
            ),
            (t.colorSpace = 3001 === t.encoding ? L : "")),
            (this.texture = new nm(
              r,
              t.mapping,
              t.wrapS,
              t.wrapT,
              t.magFilter,
              t.minFilter,
              t.format,
              t.type,
              t.anisotropy,
              t.colorSpace
            )),
            (this.texture.isRenderTargetTexture = !0),
            (this.texture.generateMipmaps =
              void 0 !== t.generateMipmaps && t.generateMipmaps),
            (this.texture.minFilter = void 0 !== t.minFilter ? t.minFilter : S);
        }
        fromEquirectangularTexture(e, t) {
          (this.texture.type = t.type),
            (this.texture.colorSpace = t.colorSpace),
            (this.texture.generateMipmaps = t.generateMipmaps),
            (this.texture.minFilter = t.minFilter),
            (this.texture.magFilter = t.magFilter);
          let n = {
              uniforms: { tEquirect: { value: null } },
              vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
              fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
            },
            r = new na(5, 5, 5),
            i = new nh({
              name: "CubemapFromEquirect",
              uniforms: no(n.uniforms),
              vertexShader: n.vertexShader,
              fragmentShader: n.fragmentShader,
              side: l,
              blending: c,
            });
          i.uniforms.tEquirect.value = t;
          let s = new ni(r, i),
            a = t.minFilter;
          t.minFilter === M && (t.minFilter = S);
          let o = new nf(1, 10, this);
          return (
            o.update(e, s),
            (t.minFilter = a),
            s.geometry.dispose(),
            s.material.dispose(),
            this
          );
        }
        clear(e, t, n, r) {
          let i = e.getRenderTarget();
          for (let i = 0; i < 6; i++)
            e.setRenderTarget(this, i), e.clear(t, n, r);
          e.setRenderTarget(i);
        }
      }
      let n_ = new eM(),
        nv = new eM(),
        ny = new ee();
      class nx {
        constructor(e = new eM(1, 0, 0), t = 0) {
          (this.isPlane = !0), (this.normal = e), (this.constant = t);
        }
        set(e, t) {
          return this.normal.copy(e), (this.constant = t), this;
        }
        setComponents(e, t, n, r) {
          return this.normal.set(e, t, n), (this.constant = r), this;
        }
        setFromNormalAndCoplanarPoint(e, t) {
          return (
            this.normal.copy(e), (this.constant = -t.dot(this.normal)), this
          );
        }
        setFromCoplanarPoints(e, t, n) {
          let r = n_.subVectors(n, t).cross(nv.subVectors(e, t)).normalize();
          return this.setFromNormalAndCoplanarPoint(r, e), this;
        }
        copy(e) {
          return this.normal.copy(e.normal), (this.constant = e.constant), this;
        }
        normalize() {
          let e = 1 / this.normal.length();
          return this.normal.multiplyScalar(e), (this.constant *= e), this;
        }
        negate() {
          return (this.constant *= -1), this.normal.negate(), this;
        }
        distanceToPoint(e) {
          return this.normal.dot(e) + this.constant;
        }
        distanceToSphere(e) {
          return this.distanceToPoint(e.center) - e.radius;
        }
        projectPoint(e, t) {
          return t
            .copy(e)
            .addScaledVector(this.normal, -this.distanceToPoint(e));
        }
        intersectLine(e, t) {
          let n = e.delta(n_),
            r = this.normal.dot(n);
          if (0 === r)
            return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : null;
          let i = -(e.start.dot(this.normal) + this.constant) / r;
          return i < 0 || i > 1 ? null : t.copy(e.start).addScaledVector(n, i);
        }
        intersectsLine(e) {
          let t = this.distanceToPoint(e.start),
            n = this.distanceToPoint(e.end);
          return (t < 0 && n > 0) || (n < 0 && t > 0);
        }
        intersectsBox(e) {
          return e.intersectsPlane(this);
        }
        intersectsSphere(e) {
          return e.intersectsPlane(this);
        }
        coplanarPoint(e) {
          return e.copy(this.normal).multiplyScalar(-this.constant);
        }
        applyMatrix4(e, t) {
          let n = t || ny.getNormalMatrix(e),
            r = this.coplanarPoint(n_).applyMatrix4(e),
            i = this.normal.applyMatrix3(n).normalize();
          return (this.constant = -r.dot(i)), this;
        }
        translate(e) {
          return (this.constant -= e.dot(this.normal)), this;
        }
        equals(e) {
          return e.normal.equals(this.normal) && e.constant === this.constant;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      let nb = new eW(),
        nS = new eM();
      class nE {
        constructor(
          e = new nx(),
          t = new nx(),
          n = new nx(),
          r = new nx(),
          i = new nx(),
          s = new nx()
        ) {
          this.planes = [e, t, n, r, i, s];
        }
        set(e, t, n, r, i, s) {
          let a = this.planes;
          return (
            a[0].copy(e),
            a[1].copy(t),
            a[2].copy(n),
            a[3].copy(r),
            a[4].copy(i),
            a[5].copy(s),
            this
          );
        }
        copy(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++) t[n].copy(e.planes[n]);
          return this;
        }
        setFromProjectionMatrix(e, t = 2e3) {
          let n = this.planes,
            r = e.elements,
            i = r[0],
            s = r[1],
            a = r[2],
            o = r[3],
            l = r[4],
            u = r[5],
            c = r[6],
            h = r[7],
            d = r[8],
            p = r[9],
            f = r[10],
            m = r[11],
            g = r[12],
            _ = r[13],
            v = r[14],
            y = r[15];
          if (
            (n[0].setComponents(o - i, h - l, m - d, y - g).normalize(),
            n[1].setComponents(o + i, h + l, m + d, y + g).normalize(),
            n[2].setComponents(o + s, h + u, m + p, y + _).normalize(),
            n[3].setComponents(o - s, h - u, m - p, y - _).normalize(),
            n[4].setComponents(o - a, h - c, m - f, y - v).normalize(),
            2e3 === t)
          )
            n[5].setComponents(o + a, h + c, m + f, y + v).normalize();
          else if (2001 === t) n[5].setComponents(a, c, f, v).normalize();
          else
            throw Error(
              "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
                t
            );
          return this;
        }
        intersectsObject(e) {
          if (void 0 !== e.boundingSphere)
            null === e.boundingSphere && e.computeBoundingSphere(),
              nb.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
          else {
            let t = e.geometry;
            null === t.boundingSphere && t.computeBoundingSphere(),
              nb.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
          }
          return this.intersectsSphere(nb);
        }
        intersectsSprite(e) {
          return (
            nb.center.set(0, 0, 0),
            (nb.radius = 0.7071067811865476),
            nb.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(nb)
          );
        }
        intersectsSphere(e) {
          let t = this.planes,
            n = e.center,
            r = -e.radius;
          for (let e = 0; e < 6; e++) {
            let i = t[e].distanceToPoint(n);
            if (i < r) return !1;
          }
          return !0;
        }
        intersectsBox(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++) {
            let r = t[n];
            if (
              ((nS.x = r.normal.x > 0 ? e.max.x : e.min.x),
              (nS.y = r.normal.y > 0 ? e.max.y : e.min.y),
              (nS.z = r.normal.z > 0 ? e.max.z : e.min.z),
              0 > r.distanceToPoint(nS))
            )
              return !1;
          }
          return !0;
        }
        containsPoint(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++)
            if (0 > t[n].distanceToPoint(e)) return !1;
          return !0;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      function nM() {
        let e = null,
          t = !1,
          n = null,
          r = null;
        function i(t, s) {
          n(t, s), (r = e.requestAnimationFrame(i));
        }
        return {
          start: function () {
            !0 !== t &&
              null !== n &&
              ((r = e.requestAnimationFrame(i)), (t = !0));
          },
          stop: function () {
            e.cancelAnimationFrame(r), (t = !1);
          },
          setAnimationLoop: function (e) {
            n = e;
          },
          setContext: function (t) {
            e = t;
          },
        };
      }
      function nw(e, t) {
        let n = t.isWebGL2,
          r = new WeakMap();
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
          },
          remove: function (t) {
            t.isInterleavedBufferAttribute && (t = t.data);
            let n = r.get(t);
            n && (e.deleteBuffer(n.buffer), r.delete(t));
          },
          update: function (t, i) {
            if (t.isGLBufferAttribute) {
              let e = r.get(t);
              (!e || e.version < t.version) &&
                r.set(t, {
                  buffer: t.buffer,
                  type: t.type,
                  bytesPerElement: t.elementSize,
                  version: t.version,
                });
              return;
            }
            t.isInterleavedBufferAttribute && (t = t.data);
            let s = r.get(t);
            void 0 === s
              ? r.set(
                  t,
                  (function (t, r) {
                    let i;
                    let s = t.array,
                      a = t.usage,
                      o = e.createBuffer();
                    if (
                      (e.bindBuffer(r, o),
                      e.bufferData(r, s, a),
                      t.onUploadCallback(),
                      s instanceof Float32Array)
                    )
                      i = e.FLOAT;
                    else if (s instanceof Uint16Array) {
                      if (t.isFloat16BufferAttribute) {
                        if (n) i = e.HALF_FLOAT;
                        else
                          throw Error(
                            "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
                          );
                      } else i = e.UNSIGNED_SHORT;
                    } else if (s instanceof Int16Array) i = e.SHORT;
                    else if (s instanceof Uint32Array) i = e.UNSIGNED_INT;
                    else if (s instanceof Int32Array) i = e.INT;
                    else if (s instanceof Int8Array) i = e.BYTE;
                    else if (s instanceof Uint8Array) i = e.UNSIGNED_BYTE;
                    else if (s instanceof Uint8ClampedArray)
                      i = e.UNSIGNED_BYTE;
                    else
                      throw Error(
                        "THREE.WebGLAttributes: Unsupported buffer data format: " +
                          s
                      );
                    return {
                      buffer: o,
                      type: i,
                      bytesPerElement: s.BYTES_PER_ELEMENT,
                      version: t.version,
                    };
                  })(t, i)
                )
              : s.version < t.version &&
                (!(function (t, r, i) {
                  let s = r.array,
                    a = r.updateRange;
                  e.bindBuffer(i, t),
                    -1 === a.count
                      ? e.bufferSubData(i, 0, s)
                      : (n
                          ? e.bufferSubData(
                              i,
                              a.offset * s.BYTES_PER_ELEMENT,
                              s,
                              a.offset,
                              a.count
                            )
                          : e.bufferSubData(
                              i,
                              a.offset * s.BYTES_PER_ELEMENT,
                              s.subarray(a.offset, a.offset + a.count)
                            ),
                        (a.count = -1)),
                    r.onUploadCallback();
                })(s.buffer, t, i),
                (s.version = t.version));
          },
        };
      }
      class nT extends tJ {
        constructor(e = 1, t = 1, n = 1, r = 1) {
          super(),
            (this.type = "PlaneGeometry"),
            (this.parameters = {
              width: e,
              height: t,
              widthSegments: n,
              heightSegments: r,
            });
          let i = e / 2,
            s = t / 2,
            a = Math.floor(n),
            o = Math.floor(r),
            l = a + 1,
            u = o + 1,
            c = e / a,
            h = t / o,
            d = [],
            p = [],
            f = [],
            m = [];
          for (let e = 0; e < u; e++) {
            let t = e * h - s;
            for (let n = 0; n < l; n++) {
              let r = n * c - i;
              p.push(r, -t, 0),
                f.push(0, 0, 1),
                m.push(n / a),
                m.push(1 - e / o);
            }
          }
          for (let e = 0; e < o; e++)
            for (let t = 0; t < a; t++) {
              let n = t + l * e,
                r = t + l * (e + 1),
                i = t + 1 + l * (e + 1),
                s = t + 1 + l * e;
              d.push(n, r, s), d.push(r, i, s);
            }
          this.setIndex(d),
            this.setAttribute("position", new tj(p, 3)),
            this.setAttribute("normal", new tj(f, 3)),
            this.setAttribute("uv", new tj(m, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new nT(e.width, e.height, e.widthSegments, e.heightSegments);
        }
      }
      let nA = {
          alphahash_fragment:
            "#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",
          alphahash_pars_fragment:
            "#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",
          alphatest_fragment:
            "#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",
          alphatest_pars_fragment:
            "#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",
          aomap_fragment:
            "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",
          begin_vertex:
            "vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",
          beginnormal_vertex:
            "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",
          bsdfs:
            "float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",
          iridescence_fragment:
            "#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",
          color_fragment:
            "#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",
          color_pars_vertex:
            "#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",
          color_vertex:
            "#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",
          common:
            "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",
          defaultnormal_vertex:
            "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",
          colorspace_fragment:
            "gl_FragColor = linearToOutputTexel( gl_FragColor );",
          colorspace_pars_fragment:
            "vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",
          envmap_common_pars_fragment:
            "#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",
          envmap_pars_fragment:
            "#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",
          envmap_physical_pars_fragment:
            "#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",
          fog_vertex: "#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",
          fog_pars_vertex: "#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",
          fog_fragment:
            "#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
          fog_pars_fragment:
            "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",
          gradientmap_pars_fragment:
            "#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",
          lights_lambert_fragment:
            "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",
          lights_lambert_pars_fragment:
            "varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",
          lights_pars_begin:
            "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",
          lights_toon_fragment:
            "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
          lights_toon_pars_fragment:
            "varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	anisotropyV /= material.anisotropy;\n	material.anisotropy = saturate( material.anisotropy );\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
          lights_fragment_begin:
            "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
          lights_fragment_maps:
            "#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",
          lights_fragment_end:
            "#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",
          map_fragment:
            "#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",
          map_pars_fragment: "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",
          map_particle_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
          map_particle_pars_fragment:
            "#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",
          morphcolor_vertex:
            "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",
          normal_fragment_begin:
            "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 geometryNormal = normal;",
          normal_fragment_maps:
            "#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
          normal_pars_fragment:
            "#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",
          normal_pars_vertex:
            "#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",
          normal_vertex:
            "#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",
          clearcoat_normal_fragment_begin:
            "#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",
          clearcoat_normal_fragment_maps:
            "#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",
          clearcoat_pars_fragment:
            "#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",
          iridescence_pars_fragment:
            "#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",
          opaque_fragment:
            "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",
          project_vertex:
            "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
          dithering_fragment:
            "#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
          dithering_pars_fragment:
            "#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",
          shadowmap_pars_vertex:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",
          shadowmap_vertex:
            "#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",
          skinning_vertex:
            "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
          tonemapping_pars_fragment:
            "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
          transmission_fragment:
            "#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",
          transmission_pars_fragment:
            "#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",
          uv_pars_fragment:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",
          uv_pars_vertex:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",
          uv_vertex:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",
          background_vert:
            "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
          background_frag:
            "uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",
          backgroundCube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",
          backgroundCube_frag:
            "#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",
          cube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",
          cube_frag:
            "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",
          equirect_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",
          meshlambert_frag:
            "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          meshmatcap_vert:
            "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",
          meshmatcap_frag:
            "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          meshnormal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",
          meshnormal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          meshphysical_vert:
            "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",
          meshphysical_frag:
            "#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          meshtoon_vert:
            "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",
          meshtoon_frag:
            "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",
          shadow_vert:
            "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",
          sprite_vert:
            "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",
          sprite_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",
        },
        nC = {
          common: {
            diffuse: { value: new tN(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            mapTransform: { value: new ee() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new ee() },
            alphaTest: { value: 0 },
          },
          specularmap: {
            specularMap: { value: null },
            specularMapTransform: { value: new ee() },
          },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
          },
          aomap: {
            aoMap: { value: null },
            aoMapIntensity: { value: 1 },
            aoMapTransform: { value: new ee() },
          },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
            lightMapTransform: { value: new ee() },
          },
          bumpmap: {
            bumpMap: { value: null },
            bumpMapTransform: { value: new ee() },
            bumpScale: { value: 1 },
          },
          normalmap: {
            normalMap: { value: null },
            normalMapTransform: { value: new ee() },
            normalScale: { value: new Q(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementMapTransform: { value: new ee() },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          emissivemap: {
            emissiveMap: { value: null },
            emissiveMapTransform: { value: new ee() },
          },
          metalnessmap: {
            metalnessMap: { value: null },
            metalnessMapTransform: { value: new ee() },
          },
          roughnessmap: {
            roughnessMap: { value: null },
            roughnessMapTransform: { value: new ee() },
          },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new tN(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
              value: [],
              properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
              },
            },
            spotLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotLightMap: { value: [] },
            spotShadowMap: { value: [] },
            spotLightMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: { color: {}, position: {}, decay: {}, distance: {} },
            },
            pointLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
          },
          points: {
            diffuse: { value: new tN(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaMapTransform: { value: new ee() },
            alphaTest: { value: 0 },
            uvTransform: { value: new ee() },
          },
          sprite: {
            diffuse: { value: new tN(16777215) },
            opacity: { value: 1 },
            center: { value: new Q(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            mapTransform: { value: new ee() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new ee() },
            alphaTest: { value: 0 },
          },
        },
        nR = {
          basic: {
            uniforms: nl([
              nC.common,
              nC.specularmap,
              nC.envmap,
              nC.aomap,
              nC.lightmap,
              nC.fog,
            ]),
            vertexShader: nA.meshbasic_vert,
            fragmentShader: nA.meshbasic_frag,
          },
          lambert: {
            uniforms: nl([
              nC.common,
              nC.specularmap,
              nC.envmap,
              nC.aomap,
              nC.lightmap,
              nC.emissivemap,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              nC.fog,
              nC.lights,
              { emissive: { value: new tN(0) } },
            ]),
            vertexShader: nA.meshlambert_vert,
            fragmentShader: nA.meshlambert_frag,
          },
          phong: {
            uniforms: nl([
              nC.common,
              nC.specularmap,
              nC.envmap,
              nC.aomap,
              nC.lightmap,
              nC.emissivemap,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              nC.fog,
              nC.lights,
              {
                emissive: { value: new tN(0) },
                specular: { value: new tN(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: nA.meshphong_vert,
            fragmentShader: nA.meshphong_frag,
          },
          standard: {
            uniforms: nl([
              nC.common,
              nC.envmap,
              nC.aomap,
              nC.lightmap,
              nC.emissivemap,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              nC.roughnessmap,
              nC.metalnessmap,
              nC.fog,
              nC.lights,
              {
                emissive: { value: new tN(0) },
                roughness: { value: 1 },
                metalness: { value: 0 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: nA.meshphysical_vert,
            fragmentShader: nA.meshphysical_frag,
          },
          toon: {
            uniforms: nl([
              nC.common,
              nC.aomap,
              nC.lightmap,
              nC.emissivemap,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              nC.gradientmap,
              nC.fog,
              nC.lights,
              { emissive: { value: new tN(0) } },
            ]),
            vertexShader: nA.meshtoon_vert,
            fragmentShader: nA.meshtoon_frag,
          },
          matcap: {
            uniforms: nl([
              nC.common,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              nC.fog,
              { matcap: { value: null } },
            ]),
            vertexShader: nA.meshmatcap_vert,
            fragmentShader: nA.meshmatcap_frag,
          },
          points: {
            uniforms: nl([nC.points, nC.fog]),
            vertexShader: nA.points_vert,
            fragmentShader: nA.points_frag,
          },
          dashed: {
            uniforms: nl([
              nC.common,
              nC.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: nA.linedashed_vert,
            fragmentShader: nA.linedashed_frag,
          },
          depth: {
            uniforms: nl([nC.common, nC.displacementmap]),
            vertexShader: nA.depth_vert,
            fragmentShader: nA.depth_frag,
          },
          normal: {
            uniforms: nl([
              nC.common,
              nC.bumpmap,
              nC.normalmap,
              nC.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: nA.meshnormal_vert,
            fragmentShader: nA.meshnormal_frag,
          },
          sprite: {
            uniforms: nl([nC.sprite, nC.fog]),
            vertexShader: nA.sprite_vert,
            fragmentShader: nA.sprite_frag,
          },
          background: {
            uniforms: {
              uvTransform: { value: new ee() },
              t2D: { value: null },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: nA.background_vert,
            fragmentShader: nA.background_frag,
          },
          backgroundCube: {
            uniforms: {
              envMap: { value: null },
              flipEnvMap: { value: -1 },
              backgroundBlurriness: { value: 0 },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: nA.backgroundCube_vert,
            fragmentShader: nA.backgroundCube_frag,
          },
          cube: {
            uniforms: {
              tCube: { value: null },
              tFlip: { value: -1 },
              opacity: { value: 1 },
            },
            vertexShader: nA.cube_vert,
            fragmentShader: nA.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: nA.equirect_vert,
            fragmentShader: nA.equirect_frag,
          },
          distanceRGBA: {
            uniforms: nl([
              nC.common,
              nC.displacementmap,
              {
                referencePosition: { value: new eM() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: nA.distanceRGBA_vert,
            fragmentShader: nA.distanceRGBA_frag,
          },
          shadow: {
            uniforms: nl([
              nC.lights,
              nC.fog,
              { color: { value: new tN(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: nA.shadow_vert,
            fragmentShader: nA.shadow_frag,
          },
        };
      nR.physical = {
        uniforms: nl([
          nR.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatMapTransform: { value: new ee() },
            clearcoatNormalMap: { value: null },
            clearcoatNormalMapTransform: { value: new ee() },
            clearcoatNormalScale: { value: new Q(1, 1) },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatRoughnessMapTransform: { value: new ee() },
            iridescence: { value: 0 },
            iridescenceMap: { value: null },
            iridescenceMapTransform: { value: new ee() },
            iridescenceIOR: { value: 1.3 },
            iridescenceThicknessMinimum: { value: 100 },
            iridescenceThicknessMaximum: { value: 400 },
            iridescenceThicknessMap: { value: null },
            iridescenceThicknessMapTransform: { value: new ee() },
            sheen: { value: 0 },
            sheenColor: { value: new tN(0) },
            sheenColorMap: { value: null },
            sheenColorMapTransform: { value: new ee() },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            sheenRoughnessMapTransform: { value: new ee() },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionMapTransform: { value: new ee() },
            transmissionSamplerSize: { value: new Q() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            thicknessMapTransform: { value: new ee() },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new tN(0) },
            specularColor: { value: new tN(1, 1, 1) },
            specularColorMap: { value: null },
            specularColorMapTransform: { value: new ee() },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularIntensityMapTransform: { value: new ee() },
            anisotropyVector: { value: new Q() },
            anisotropyMap: { value: null },
            anisotropyMapTransform: { value: new ee() },
          },
        ]),
        vertexShader: nA.meshphysical_vert,
        fragmentShader: nA.meshphysical_frag,
      };
      let nP = { r: 0, b: 0, g: 0 };
      function nO(e, t, n, r, i, s, a) {
        let u, c;
        let h = new tN(0),
          d = !0 === s ? 0 : 1,
          p = null,
          f = 0,
          m = null;
        function g(t, n) {
          t.getRGB(nP, nu(e)), r.buffers.color.setClear(nP.r, nP.g, nP.b, n, a);
        }
        return {
          getClearColor: function () {
            return h;
          },
          setClearColor: function (e, t = 1) {
            h.set(e), g(h, (d = t));
          },
          getClearAlpha: function () {
            return d;
          },
          setClearAlpha: function (e) {
            g(h, (d = e));
          },
          render: function (s, _) {
            let v = !1,
              y = !0 === _.isScene ? _.background : null;
            if (y && y.isTexture) {
              let e = _.backgroundBlurriness > 0;
              y = (e ? n : t).get(y);
            }
            null === y ? g(h, d) : y && y.isColor && (g(y, 1), (v = !0));
            let x = e.xr.getEnvironmentBlendMode();
            "additive" === x
              ? r.buffers.color.setClear(0, 0, 0, 1, a)
              : "alpha-blend" === x && r.buffers.color.setClear(0, 0, 0, 0, a),
              (e.autoClear || v) &&
                e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
              y && (y.isCubeTexture || 306 === y.mapping)
                ? (void 0 === c &&
                    ((c = new ni(
                      new na(1, 1, 1),
                      new nh({
                        name: "BackgroundCubeMaterial",
                        uniforms: no(nR.backgroundCube.uniforms),
                        vertexShader: nR.backgroundCube.vertexShader,
                        fragmentShader: nR.backgroundCube.fragmentShader,
                        side: l,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    c.geometry.deleteAttribute("uv"),
                    (c.onBeforeRender = function (e, t, n) {
                      this.matrixWorld.copyPosition(n.matrixWorld);
                    }),
                    Object.defineProperty(c.material, "envMap", {
                      get: function () {
                        return this.uniforms.envMap.value;
                      },
                    }),
                    i.update(c)),
                  (c.material.uniforms.envMap.value = y),
                  (c.material.uniforms.flipEnvMap.value =
                    y.isCubeTexture && !1 === y.isRenderTargetTexture ? -1 : 1),
                  (c.material.uniforms.backgroundBlurriness.value =
                    _.backgroundBlurriness),
                  (c.material.uniforms.backgroundIntensity.value =
                    _.backgroundIntensity),
                  (c.material.toneMapped = y.colorSpace !== L),
                  (p !== y || f !== y.version || m !== e.toneMapping) &&
                    ((c.material.needsUpdate = !0),
                    (p = y),
                    (f = y.version),
                    (m = e.toneMapping)),
                  c.layers.enableAll(),
                  s.unshift(c, c.geometry, c.material, 0, 0, null))
                : y &&
                  y.isTexture &&
                  (void 0 === u &&
                    ((u = new ni(
                      new nT(2, 2),
                      new nh({
                        name: "BackgroundMaterial",
                        uniforms: no(nR.background.uniforms),
                        vertexShader: nR.background.vertexShader,
                        fragmentShader: nR.background.fragmentShader,
                        side: o,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    Object.defineProperty(u.material, "map", {
                      get: function () {
                        return this.uniforms.t2D.value;
                      },
                    }),
                    i.update(u)),
                  (u.material.uniforms.t2D.value = y),
                  (u.material.uniforms.backgroundIntensity.value =
                    _.backgroundIntensity),
                  (u.material.toneMapped = y.colorSpace !== L),
                  !0 === y.matrixAutoUpdate && y.updateMatrix(),
                  u.material.uniforms.uvTransform.value.copy(y.matrix),
                  (p !== y || f !== y.version || m !== e.toneMapping) &&
                    ((u.material.needsUpdate = !0),
                    (p = y),
                    (f = y.version),
                    (m = e.toneMapping)),
                  u.layers.enableAll(),
                  s.unshift(u, u.geometry, u.material, 0, 0, null));
          },
        };
      }
      function nL(e, t, n, r) {
        let i = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          s = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
          a = r.isWebGL2 || null !== s,
          o = {},
          l = p(null),
          u = l,
          c = !1;
        function h(t) {
          return r.isWebGL2 ? e.bindVertexArray(t) : s.bindVertexArrayOES(t);
        }
        function d(t) {
          return r.isWebGL2
            ? e.deleteVertexArray(t)
            : s.deleteVertexArrayOES(t);
        }
        function p(e) {
          let t = [],
            n = [],
            r = [];
          for (let e = 0; e < i; e++) (t[e] = 0), (n[e] = 0), (r[e] = 0);
          return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: t,
            enabledAttributes: n,
            attributeDivisors: r,
            object: e,
            attributes: {},
            index: null,
          };
        }
        function f() {
          let e = u.newAttributes;
          for (let t = 0, n = e.length; t < n; t++) e[t] = 0;
        }
        function m(e) {
          g(e, 0);
        }
        function g(n, i) {
          let s = u.newAttributes,
            a = u.enabledAttributes,
            o = u.attributeDivisors;
          if (
            ((s[n] = 1),
            0 === a[n] && (e.enableVertexAttribArray(n), (a[n] = 1)),
            o[n] !== i)
          ) {
            let s = r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays");
            s[r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](
              n,
              i
            ),
              (o[n] = i);
          }
        }
        function _() {
          let t = u.newAttributes,
            n = u.enabledAttributes;
          for (let r = 0, i = n.length; r < i; r++)
            n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
        }
        function v(t, n, r, i, s, a, o) {
          !0 === o
            ? e.vertexAttribIPointer(t, n, r, s, a)
            : e.vertexAttribPointer(t, n, r, i, s, a);
        }
        function y() {
          x(), (c = !0), u !== l && h((u = l).object);
        }
        function x() {
          (l.geometry = null), (l.program = null), (l.wireframe = !1);
        }
        return {
          setup: function (i, l, d, y, x) {
            let b = !1;
            if (a) {
              let t = (function (t, n, i) {
                let a = !0 === i.wireframe,
                  l = o[t.id];
                void 0 === l && ((l = {}), (o[t.id] = l));
                let u = l[n.id];
                void 0 === u && ((u = {}), (l[n.id] = u));
                let c = u[a];
                return (
                  void 0 === c &&
                    ((c = p(
                      r.isWebGL2
                        ? e.createVertexArray()
                        : s.createVertexArrayOES()
                    )),
                    (u[a] = c)),
                  c
                );
              })(y, d, l);
              u !== t && h((u = t).object),
                (b = (function (e, t, n, r) {
                  let i = u.attributes,
                    s = t.attributes,
                    a = 0,
                    o = n.getAttributes();
                  for (let t in o) {
                    let n = o[t];
                    if (n.location >= 0) {
                      let n = i[t],
                        r = s[t];
                      if (
                        (void 0 === r &&
                          ("instanceMatrix" === t &&
                            e.instanceMatrix &&
                            (r = e.instanceMatrix),
                          "instanceColor" === t &&
                            e.instanceColor &&
                            (r = e.instanceColor)),
                        void 0 === n ||
                          n.attribute !== r ||
                          (r && n.data !== r.data))
                      )
                        return !0;
                      a++;
                    }
                  }
                  return u.attributesNum !== a || u.index !== r;
                })(i, y, d, x)) &&
                  (function (e, t, n, r) {
                    let i = {},
                      s = t.attributes,
                      a = 0,
                      o = n.getAttributes();
                    for (let t in o) {
                      let n = o[t];
                      if (n.location >= 0) {
                        let n = s[t];
                        void 0 === n &&
                          ("instanceMatrix" === t &&
                            e.instanceMatrix &&
                            (n = e.instanceMatrix),
                          "instanceColor" === t &&
                            e.instanceColor &&
                            (n = e.instanceColor));
                        let r = {};
                        (r.attribute = n),
                          n && n.data && (r.data = n.data),
                          (i[t] = r),
                          a++;
                      }
                    }
                    (u.attributes = i), (u.attributesNum = a), (u.index = r);
                  })(i, y, d, x);
            } else {
              let e = !0 === l.wireframe;
              (u.geometry !== y.id ||
                u.program !== d.id ||
                u.wireframe !== e) &&
                ((u.geometry = y.id),
                (u.program = d.id),
                (u.wireframe = e),
                (b = !0));
            }
            null !== x && n.update(x, e.ELEMENT_ARRAY_BUFFER),
              (b || c) &&
                ((c = !1),
                (function (i, s, a, o) {
                  if (
                    !1 === r.isWebGL2 &&
                    (i.isInstancedMesh || o.isInstancedBufferGeometry) &&
                    null === t.get("ANGLE_instanced_arrays")
                  )
                    return;
                  f();
                  let l = o.attributes,
                    u = a.getAttributes(),
                    c = s.defaultAttributeValues;
                  for (let t in u) {
                    let s = u[t];
                    if (s.location >= 0) {
                      let a = l[t];
                      if (
                        (void 0 === a &&
                          ("instanceMatrix" === t &&
                            i.instanceMatrix &&
                            (a = i.instanceMatrix),
                          "instanceColor" === t &&
                            i.instanceColor &&
                            (a = i.instanceColor)),
                        void 0 !== a)
                      ) {
                        let t = a.normalized,
                          l = a.itemSize,
                          u = n.get(a);
                        if (void 0 === u) continue;
                        let c = u.buffer,
                          h = u.type,
                          d = u.bytesPerElement,
                          p =
                            !0 === r.isWebGL2 &&
                            (h === e.INT ||
                              h === e.UNSIGNED_INT ||
                              1013 === a.gpuType);
                        if (a.isInterleavedBufferAttribute) {
                          let n = a.data,
                            r = n.stride,
                            u = a.offset;
                          if (n.isInstancedInterleavedBuffer) {
                            for (let e = 0; e < s.locationSize; e++)
                              g(s.location + e, n.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === o._maxInstanceCount &&
                              (o._maxInstanceCount =
                                n.meshPerAttribute * n.count);
                          } else
                            for (let e = 0; e < s.locationSize; e++)
                              m(s.location + e);
                          e.bindBuffer(e.ARRAY_BUFFER, c);
                          for (let e = 0; e < s.locationSize; e++)
                            v(
                              s.location + e,
                              l / s.locationSize,
                              h,
                              t,
                              r * d,
                              (u + (l / s.locationSize) * e) * d,
                              p
                            );
                        } else {
                          if (a.isInstancedBufferAttribute) {
                            for (let e = 0; e < s.locationSize; e++)
                              g(s.location + e, a.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === o._maxInstanceCount &&
                              (o._maxInstanceCount =
                                a.meshPerAttribute * a.count);
                          } else
                            for (let e = 0; e < s.locationSize; e++)
                              m(s.location + e);
                          e.bindBuffer(e.ARRAY_BUFFER, c);
                          for (let e = 0; e < s.locationSize; e++)
                            v(
                              s.location + e,
                              l / s.locationSize,
                              h,
                              t,
                              l * d,
                              (l / s.locationSize) * e * d,
                              p
                            );
                        }
                      } else if (void 0 !== c) {
                        let n = c[t];
                        if (void 0 !== n)
                          switch (n.length) {
                            case 2:
                              e.vertexAttrib2fv(s.location, n);
                              break;
                            case 3:
                              e.vertexAttrib3fv(s.location, n);
                              break;
                            case 4:
                              e.vertexAttrib4fv(s.location, n);
                              break;
                            default:
                              e.vertexAttrib1fv(s.location, n);
                          }
                      }
                    }
                  }
                  _();
                })(i, l, d, y),
                null !== x &&
                  e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n.get(x).buffer));
          },
          reset: y,
          resetDefaultState: x,
          dispose: function () {
            for (let e in (y(), o)) {
              let t = o[e];
              for (let e in t) {
                let n = t[e];
                for (let e in n) d(n[e].object), delete n[e];
                delete t[e];
              }
              delete o[e];
            }
          },
          releaseStatesOfGeometry: function (e) {
            if (void 0 === o[e.id]) return;
            let t = o[e.id];
            for (let e in t) {
              let n = t[e];
              for (let e in n) d(n[e].object), delete n[e];
              delete t[e];
            }
            delete o[e.id];
          },
          releaseStatesOfProgram: function (e) {
            for (let t in o) {
              let n = o[t];
              if (void 0 === n[e.id]) continue;
              let r = n[e.id];
              for (let e in r) d(r[e].object), delete r[e];
              delete n[e.id];
            }
          },
          initAttributes: f,
          enableAttribute: m,
          disableUnusedAttributes: _,
        };
      }
      function nI(e, t, n, r) {
        let i;
        let s = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.render = function (t, r) {
            e.drawArrays(i, t, r), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, a, o) {
            let l, u;
            if (0 !== o) {
              if (s) (l = e), (u = "drawArraysInstanced");
              else if (
                ((l = t.get("ANGLE_instanced_arrays")),
                (u = "drawArraysInstancedANGLE"),
                null === l)
              ) {
                console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
                return;
              }
              l[u](i, r, a, o), n.update(a, i, o);
            }
          });
      }
      function nN(e, t, n) {
        let r;
        function i(t) {
          if ("highp" === t) {
            if (
              e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT)
                .precision > 0 &&
              e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT)
                .precision > 0
            )
              return "highp";
            t = "mediump";
          }
          return "mediump" === t &&
            e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT)
              .precision > 0 &&
            e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT)
              .precision > 0
            ? "mediump"
            : "lowp";
        }
        let s =
            "undefined" != typeof WebGL2RenderingContext &&
            "WebGL2RenderingContext" === e.constructor.name,
          a = void 0 !== n.precision ? n.precision : "highp",
          o = i(a);
        o !== a &&
          (console.warn(
            "THREE.WebGLRenderer:",
            a,
            "not supported, using",
            o,
            "instead."
          ),
          (a = o));
        let l = s || t.has("WEBGL_draw_buffers"),
          u = !0 === n.logarithmicDepthBuffer,
          c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
          h = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
          d = e.getParameter(e.MAX_TEXTURE_SIZE),
          p = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
          f = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          m = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
          g = e.getParameter(e.MAX_VARYING_VECTORS),
          _ = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
          v = h > 0,
          y = s || t.has("OES_texture_float"),
          x = s ? e.getParameter(e.MAX_SAMPLES) : 0;
        return {
          isWebGL2: s,
          drawBuffers: l,
          getMaxAnisotropy: function () {
            if (void 0 !== r) return r;
            if (!0 === t.has("EXT_texture_filter_anisotropic")) {
              let n = t.get("EXT_texture_filter_anisotropic");
              r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else r = 0;
            return r;
          },
          getMaxPrecision: i,
          precision: a,
          logarithmicDepthBuffer: u,
          maxTextures: c,
          maxVertexTextures: h,
          maxTextureSize: d,
          maxCubemapSize: p,
          maxAttributes: f,
          maxVertexUniforms: m,
          maxVaryings: g,
          maxFragmentUniforms: _,
          vertexTextures: v,
          floatFragmentTextures: y,
          floatVertexTextures: v && y,
          maxSamples: x,
        };
      }
      function nD(e) {
        let t = this,
          n = null,
          r = 0,
          i = !1,
          s = !1,
          a = new nx(),
          o = new ee(),
          l = { value: null, needsUpdate: !1 };
        function u(e, n, r, i) {
          let s = null !== e ? e.length : 0,
            u = null;
          if (0 !== s) {
            if (((u = l.value), !0 !== i || null === u)) {
              let t = r + 4 * s,
                i = n.matrixWorldInverse;
              o.getNormalMatrix(i),
                (null === u || u.length < t) && (u = new Float32Array(t));
              for (let t = 0, n = r; t !== s; ++t, n += 4)
                a.copy(e[t]).applyMatrix4(i, o),
                  a.normal.toArray(u, n),
                  (u[n + 3] = a.constant);
            }
            (l.value = u), (l.needsUpdate = !0);
          }
          return (t.numPlanes = s), (t.numIntersection = 0), u;
        }
        (this.uniform = l),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t) {
            let n = 0 !== e.length || t || 0 !== r || i;
            return (i = t), (r = e.length), n;
          }),
          (this.beginShadows = function () {
            (s = !0), u(null);
          }),
          (this.endShadows = function () {
            s = !1;
          }),
          (this.setGlobalState = function (e, t) {
            n = u(e, t, 0);
          }),
          (this.setState = function (a, o, c) {
            let h = a.clippingPlanes,
              d = a.clipIntersection,
              p = a.clipShadows,
              f = e.get(a);
            if (i && null !== h && 0 !== h.length && (!s || p)) {
              let e = s ? 0 : r,
                t = 4 * e,
                i = f.clippingState || null;
              (l.value = i), (i = u(h, o, t, c));
              for (let e = 0; e !== t; ++e) i[e] = n[e];
              (f.clippingState = i),
                (this.numIntersection = d ? this.numPlanes : 0),
                (this.numPlanes += e);
            } else
              s
                ? u(null)
                : (l.value !== n && ((l.value = n), (l.needsUpdate = r > 0)),
                  (t.numPlanes = r),
                  (t.numIntersection = 0));
          });
      }
      function nU(e) {
        let t = new WeakMap();
        function n(e, t) {
          return (
            303 === t ? (e.mapping = 301) : 304 === t && (e.mapping = 302), e
          );
        }
        function r(e) {
          let n = e.target;
          n.removeEventListener("dispose", r);
          let i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
              let s = i.mapping;
              if (303 === s || 304 === s) {
                if (t.has(i)) {
                  let e = t.get(i).texture;
                  return n(e, i.mapping);
                }
                {
                  let s = i.image;
                  if (!s || !(s.height > 0)) return null;
                  {
                    let a = new ng(s.height / 2);
                    return (
                      a.fromEquirectangularTexture(e, i),
                      t.set(i, a),
                      i.addEventListener("dispose", r),
                      n(a.texture, i.mapping)
                    );
                  }
                }
              }
            }
            return i;
          },
          dispose: function () {
            t = new WeakMap();
          },
        };
      }
      class nk extends nd {
        constructor(e = -1, t = 1, n = 1, r = -1, i = 0.1, s = 2e3) {
          super(),
            (this.isOrthographicCamera = !0),
            (this.type = "OrthographicCamera"),
            (this.zoom = 1),
            (this.view = null),
            (this.left = e),
            (this.right = t),
            (this.top = n),
            (this.bottom = r),
            (this.near = i),
            (this.far = s),
            this.updateProjectionMatrix();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            this
          );
        }
        setViewOffset(e, t, n, r, i, s) {
          null === this.view &&
            (this.view = {
              enabled: !0,
              fullWidth: 1,
              fullHeight: 1,
              offsetX: 0,
              offsetY: 0,
              width: 1,
              height: 1,
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = r),
            (this.view.width = i),
            (this.view.height = s),
            this.updateProjectionMatrix();
        }
        clearViewOffset() {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
          let e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            r = (this.top + this.bottom) / 2,
            i = n - e,
            s = n + e,
            a = r + t,
            o = r - t;
          if (null !== this.view && this.view.enabled) {
            let e = (this.right - this.left) / this.view.fullWidth / this.zoom,
              t = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            (i += e * this.view.offsetX),
              (s = i + e * this.view.width),
              (a -= t * this.view.offsetY),
              (o = a - t * this.view.height);
          }
          this.projectionMatrix.makeOrthographic(
            i,
            s,
            a,
            o,
            this.near,
            this.far,
            this.coordinateSystem
          ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            t
          );
        }
      }
      let nF = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
        nz = new nk(),
        nB = new tN(),
        nV = null,
        nj = (1 + Math.sqrt(5)) / 2,
        nH = 1 / nj,
        nG = [
          new eM(1, 1, 1),
          new eM(-1, 1, 1),
          new eM(1, 1, -1),
          new eM(-1, 1, -1),
          new eM(0, nj, nH),
          new eM(0, nj, -nH),
          new eM(nH, 0, nj),
          new eM(-nH, 0, nj),
          new eM(nj, nH, 0),
          new eM(-nj, nH, 0),
        ];
      class nW {
        constructor(e) {
          (this._renderer = e),
            (this._pingPongRenderTarget = null),
            (this._lodMax = 0),
            (this._cubeSize = 0),
            (this._lodPlanes = []),
            (this._sizeLods = []),
            (this._sigmas = []),
            (this._blurMaterial = null),
            (this._cubemapMaterial = null),
            (this._equirectMaterial = null),
            this._compileMaterial(this._blurMaterial);
        }
        fromScene(e, t = 0, n = 0.1, r = 100) {
          (nV = this._renderer.getRenderTarget()), this._setSize(256);
          let i = this._allocateTargets();
          return (
            (i.depthBuffer = !0),
            this._sceneToCubeUV(e, n, r, i),
            t > 0 && this._blur(i, 0, 0, t),
            this._applyPMREM(i),
            this._cleanup(i),
            i
          );
        }
        fromEquirectangular(e, t = null) {
          return this._fromTexture(e, t);
        }
        fromCubemap(e, t = null) {
          return this._fromTexture(e, t);
        }
        compileCubemapShader() {
          null === this._cubemapMaterial &&
            ((this._cubemapMaterial = nY()),
            this._compileMaterial(this._cubemapMaterial));
        }
        compileEquirectangularShader() {
          null === this._equirectMaterial &&
            ((this._equirectMaterial = nq()),
            this._compileMaterial(this._equirectMaterial));
        }
        dispose() {
          this._dispose(),
            null !== this._cubemapMaterial && this._cubemapMaterial.dispose(),
            null !== this._equirectMaterial && this._equirectMaterial.dispose();
        }
        _setSize(e) {
          (this._lodMax = Math.floor(Math.log2(e))),
            (this._cubeSize = Math.pow(2, this._lodMax));
        }
        _dispose() {
          null !== this._blurMaterial && this._blurMaterial.dispose(),
            null !== this._pingPongRenderTarget &&
              this._pingPongRenderTarget.dispose();
          for (let e = 0; e < this._lodPlanes.length; e++)
            this._lodPlanes[e].dispose();
        }
        _cleanup(e) {
          this._renderer.setRenderTarget(nV),
            (e.scissorTest = !1),
            nX(e, 0, 0, e.width, e.height);
        }
        _fromTexture(e, t) {
          301 === e.mapping || 302 === e.mapping
            ? this._setSize(
                0 === e.image.length
                  ? 16
                  : e.image[0].width || e.image[0].image.width
              )
            : this._setSize(e.image.width / 4),
            (nV = this._renderer.getRenderTarget());
          let n = t || this._allocateTargets();
          return (
            this._textureToCubeUV(e, n),
            this._applyPMREM(n),
            this._cleanup(n),
            n
          );
        }
        _allocateTargets() {
          let e = 3 * Math.max(this._cubeSize, 112),
            t = 4 * this._cubeSize,
            n = {
              magFilter: S,
              minFilter: S,
              generateMipmaps: !1,
              type: w,
              format: T,
              colorSpace: I,
              depthBuffer: !1,
            },
            r = n$(e, t, n);
          if (
            null === this._pingPongRenderTarget ||
            this._pingPongRenderTarget.width !== e ||
            this._pingPongRenderTarget.height !== t
          ) {
            null !== this._pingPongRenderTarget && this._dispose(),
              (this._pingPongRenderTarget = n$(e, t, n));
            let { _lodMax: r } = this;
            ({
              sizeLods: this._sizeLods,
              lodPlanes: this._lodPlanes,
              sigmas: this._sigmas,
            } = (function (e) {
              let t = [],
                n = [],
                r = [],
                i = e,
                s = e - 4 + 1 + nF.length;
              for (let a = 0; a < s; a++) {
                let s = Math.pow(2, i);
                n.push(s);
                let o = 1 / s;
                a > e - 4 ? (o = nF[a - e + 4 - 1]) : 0 === a && (o = 0),
                  r.push(o);
                let l = 1 / (s - 2),
                  u = -l,
                  c = 1 + l,
                  h = [u, u, c, u, c, c, u, u, c, c, u, c],
                  d = new Float32Array(108),
                  p = new Float32Array(72),
                  f = new Float32Array(36);
                for (let e = 0; e < 6; e++) {
                  let t = ((e % 3) * 2) / 3 - 1,
                    n = e > 2 ? 0 : -1,
                    r = [
                      t,
                      n,
                      0,
                      t + 2 / 3,
                      n,
                      0,
                      t + 2 / 3,
                      n + 1,
                      0,
                      t,
                      n,
                      0,
                      t + 2 / 3,
                      n + 1,
                      0,
                      t,
                      n + 1,
                      0,
                    ];
                  d.set(r, 18 * e), p.set(h, 12 * e);
                  let i = [e, e, e, e, e, e];
                  f.set(i, 6 * e);
                }
                let m = new tJ();
                m.setAttribute("position", new tz(d, 3)),
                  m.setAttribute("uv", new tz(p, 2)),
                  m.setAttribute("faceIndex", new tz(f, 1)),
                  t.push(m),
                  i > 4 && i--;
              }
              return { lodPlanes: t, sizeLods: n, sigmas: r };
            })(r)),
              (this._blurMaterial = (function (e, t, n) {
                let r = new Float32Array(20),
                  i = new eM(0, 1, 0),
                  s = new nh({
                    name: "SphericalGaussianBlur",
                    defines: {
                      n: 20,
                      CUBEUV_TEXEL_WIDTH: 1 / t,
                      CUBEUV_TEXEL_HEIGHT: 1 / n,
                      CUBEUV_MAX_MIP: `${e}.0`,
                    },
                    uniforms: {
                      envMap: { value: null },
                      samples: { value: 1 },
                      weights: { value: r },
                      latitudinal: { value: !1 },
                      dTheta: { value: 0 },
                      mipInt: { value: 0 },
                      poleAxis: { value: i },
                    },
                    vertexShader: nJ(),
                    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
                    blending: c,
                    depthTest: !1,
                    depthWrite: !1,
                  });
                return s;
              })(r, e, t));
          }
          return r;
        }
        _compileMaterial(e) {
          let t = new ni(this._lodPlanes[0], e);
          this._renderer.compile(t, nz);
        }
        _sceneToCubeUV(e, t, n, r) {
          let i = new np(90, 1, t, n),
            s = [1, -1, 1, 1, 1, 1],
            a = [1, 1, 1, -1, -1, -1],
            o = this._renderer,
            u = o.autoClear,
            c = o.toneMapping;
          o.getClearColor(nB), (o.toneMapping = m), (o.autoClear = !1);
          let h = new tU({
              name: "PMREM.Background",
              side: l,
              depthWrite: !1,
              depthTest: !1,
            }),
            d = new ni(new na(), h),
            p = !1,
            f = e.background;
          f
            ? f.isColor && (h.color.copy(f), (e.background = null), (p = !0))
            : (h.color.copy(nB), (p = !0));
          for (let t = 0; t < 6; t++) {
            let n = t % 3;
            0 === n
              ? (i.up.set(0, s[t], 0), i.lookAt(a[t], 0, 0))
              : 1 === n
              ? (i.up.set(0, 0, s[t]), i.lookAt(0, a[t], 0))
              : (i.up.set(0, s[t], 0), i.lookAt(0, 0, a[t]));
            let l = this._cubeSize;
            nX(r, n * l, t > 2 ? l : 0, l, l),
              o.setRenderTarget(r),
              p && o.render(d, i),
              o.render(e, i);
          }
          d.geometry.dispose(),
            d.material.dispose(),
            (o.toneMapping = c),
            (o.autoClear = u),
            (e.background = f);
        }
        _textureToCubeUV(e, t) {
          let n = this._renderer,
            r = 301 === e.mapping || 302 === e.mapping;
          r
            ? (null === this._cubemapMaterial && (this._cubemapMaterial = nY()),
              (this._cubemapMaterial.uniforms.flipEnvMap.value =
                !1 === e.isRenderTargetTexture ? -1 : 1))
            : null === this._equirectMaterial &&
              (this._equirectMaterial = nq());
          let i = r ? this._cubemapMaterial : this._equirectMaterial,
            s = new ni(this._lodPlanes[0], i),
            a = i.uniforms;
          a.envMap.value = e;
          let o = this._cubeSize;
          nX(t, 0, 0, 3 * o, 2 * o), n.setRenderTarget(t), n.render(s, nz);
        }
        _applyPMREM(e) {
          let t = this._renderer,
            n = t.autoClear;
          t.autoClear = !1;
          for (let t = 1; t < this._lodPlanes.length; t++) {
            let n = Math.sqrt(
                this._sigmas[t] * this._sigmas[t] -
                  this._sigmas[t - 1] * this._sigmas[t - 1]
              ),
              r = nG[(t - 1) % nG.length];
            this._blur(e, t - 1, t, n, r);
          }
          t.autoClear = n;
        }
        _blur(e, t, n, r, i) {
          let s = this._pingPongRenderTarget;
          this._halfBlur(e, s, t, n, r, "latitudinal", i),
            this._halfBlur(s, e, n, n, r, "longitudinal", i);
        }
        _halfBlur(e, t, n, r, i, s, a) {
          let o = this._renderer,
            l = this._blurMaterial;
          "latitudinal" !== s &&
            "longitudinal" !== s &&
            console.error(
              "blur direction must be either latitudinal or longitudinal!"
            );
          let u = new ni(this._lodPlanes[r], l),
            c = l.uniforms,
            h = this._sizeLods[n] - 1,
            d = isFinite(i) ? Math.PI / (2 * h) : (2 * Math.PI) / 39,
            p = i / d,
            f = isFinite(i) ? 1 + Math.floor(3 * p) : 20;
          f > 20 &&
            console.warn(
              `sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`
            );
          let m = [],
            g = 0;
          for (let e = 0; e < 20; ++e) {
            let t = e / p,
              n = Math.exp((-t * t) / 2);
            m.push(n), 0 === e ? (g += n) : e < f && (g += 2 * n);
          }
          for (let e = 0; e < m.length; e++) m[e] = m[e] / g;
          (c.envMap.value = e.texture),
            (c.samples.value = f),
            (c.weights.value = m),
            (c.latitudinal.value = "latitudinal" === s),
            a && (c.poleAxis.value = a);
          let { _lodMax: _ } = this;
          (c.dTheta.value = d), (c.mipInt.value = _ - n);
          let v = this._sizeLods[r],
            y = 3 * v * (r > _ - 4 ? r - _ + 4 : 0),
            x = 4 * (this._cubeSize - v);
          nX(t, y, x, 3 * v, 2 * v), o.setRenderTarget(t), o.render(u, nz);
        }
      }
      function n$(e, t, n) {
        let r = new eb(e, t, n);
        return (
          (r.texture.mapping = 306),
          (r.texture.name = "PMREM.cubeUv"),
          (r.scissorTest = !0),
          r
        );
      }
      function nX(e, t, n, r, i) {
        e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i);
      }
      function nq() {
        return new nh({
          name: "EquirectangularToCubeUV",
          uniforms: { envMap: { value: null } },
          vertexShader: nJ(),
          fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
          blending: c,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function nY() {
        return new nh({
          name: "CubemapToCubeUV",
          uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
          vertexShader: nJ(),
          fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
          blending: c,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function nJ() {
        return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
      }
      function nZ(e) {
        let t = new WeakMap(),
          n = null;
        function r(e) {
          let n = e.target;
          n.removeEventListener("dispose", r);
          let i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture) {
              let s = i.mapping,
                a = 303 === s || 304 === s,
                o = 301 === s || 302 === s;
              if (a || o) {
                if (i.isRenderTargetTexture && !0 === i.needsPMREMUpdate) {
                  i.needsPMREMUpdate = !1;
                  let r = t.get(i);
                  return (
                    null === n && (n = new nW(e)),
                    (r = a ? n.fromEquirectangular(i, r) : n.fromCubemap(i, r)),
                    t.set(i, r),
                    r.texture
                  );
                }
                if (t.has(i)) return t.get(i).texture;
                {
                  let s = i.image;
                  if (
                    !(
                      (a && s && s.height > 0) ||
                      (o &&
                        s &&
                        (function (e) {
                          let t = 0;
                          for (let n = 0; n < 6; n++) void 0 !== e[n] && t++;
                          return 6 === t;
                        })(s))
                    )
                  )
                    return null;
                  {
                    null === n && (n = new nW(e));
                    let s = a ? n.fromEquirectangular(i) : n.fromCubemap(i);
                    return (
                      t.set(i, s), i.addEventListener("dispose", r), s.texture
                    );
                  }
                }
              }
            }
            return i;
          },
          dispose: function () {
            (t = new WeakMap()), null !== n && (n.dispose(), (n = null));
          },
        };
      }
      function nK(e) {
        let t = {};
        function n(n) {
          let r;
          if (void 0 !== t[n]) return t[n];
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            default:
              r = e.getExtension(n);
          }
          return (t[n] = r), r;
        }
        return {
          has: function (e) {
            return null !== n(e);
          },
          init: function (e) {
            e.isWebGL2
              ? n("EXT_color_buffer_float")
              : (n("WEBGL_depth_texture"),
                n("OES_texture_float"),
                n("OES_texture_half_float"),
                n("OES_texture_half_float_linear"),
                n("OES_standard_derivatives"),
                n("OES_element_index_uint"),
                n("OES_vertex_array_object"),
                n("ANGLE_instanced_arrays")),
              n("OES_texture_float_linear"),
              n("EXT_color_buffer_half_float"),
              n("WEBGL_multisampled_render_to_texture");
          },
          get: function (e) {
            let t = n(e);
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              t
            );
          },
        };
      }
      function nQ(e, t, n, r) {
        let i = {},
          s = new WeakMap();
        function a(e) {
          let o = e.target;
          for (let e in (null !== o.index && t.remove(o.index), o.attributes))
            t.remove(o.attributes[e]);
          for (let e in o.morphAttributes) {
            let n = o.morphAttributes[e];
            for (let e = 0, r = n.length; e < r; e++) t.remove(n[e]);
          }
          o.removeEventListener("dispose", a), delete i[o.id];
          let l = s.get(o);
          l && (t.remove(l), s.delete(o)),
            r.releaseStatesOfGeometry(o),
            !0 === o.isInstancedBufferGeometry && delete o._maxInstanceCount,
            n.memory.geometries--;
        }
        function o(e) {
          let n = [],
            r = e.index,
            i = e.attributes.position,
            a = 0;
          if (null !== r) {
            let e = r.array;
            a = r.version;
            for (let t = 0, r = e.length; t < r; t += 3) {
              let r = e[t + 0],
                i = e[t + 1],
                s = e[t + 2];
              n.push(r, i, i, s, s, r);
            }
          } else {
            if (void 0 === i) return;
            let e = i.array;
            a = i.version;
            for (let t = 0, r = e.length / 3 - 1; t < r; t += 3) {
              let e = t + 0,
                r = t + 1,
                i = t + 2;
              n.push(e, r, r, i, i, e);
            }
          }
          let o = new (en(n) ? tV : tB)(n, 1);
          o.version = a;
          let l = s.get(e);
          l && t.remove(l), s.set(e, o);
        }
        return {
          get: function (e, t) {
            return (
              !0 === i[t.id] ||
                (t.addEventListener("dispose", a),
                (i[t.id] = !0),
                n.memory.geometries++),
              t
            );
          },
          update: function (n) {
            let r = n.attributes;
            for (let n in r) t.update(r[n], e.ARRAY_BUFFER);
            let i = n.morphAttributes;
            for (let n in i) {
              let r = i[n];
              for (let n = 0, i = r.length; n < i; n++)
                t.update(r[n], e.ARRAY_BUFFER);
            }
          },
          getWireframeAttribute: function (e) {
            let t = s.get(e);
            if (t) {
              let n = e.index;
              null !== n && t.version < n.version && o(e);
            } else o(e);
            return s.get(e);
          },
        };
      }
      function n0(e, t, n, r) {
        let i, s, a;
        let o = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.setIndex = function (e) {
            (s = e.type), (a = e.bytesPerElement);
          }),
          (this.render = function (t, r) {
            e.drawElements(i, r, s, t * a), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, l, u) {
            let c, h;
            if (0 !== u) {
              if (o) (c = e), (h = "drawElementsInstanced");
              else if (
                ((c = t.get("ANGLE_instanced_arrays")),
                (h = "drawElementsInstancedANGLE"),
                null === c)
              ) {
                console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
                return;
              }
              c[h](i, l, s, r * a, u), n.update(l, i, u);
            }
          });
      }
      function n1(e) {
        let t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: t,
          programs: null,
          autoReset: !0,
          reset: function () {
            (t.calls = 0), (t.triangles = 0), (t.points = 0), (t.lines = 0);
          },
          update: function (n, r, i) {
            switch ((t.calls++, r)) {
              case e.TRIANGLES:
                t.triangles += i * (n / 3);
                break;
              case e.LINES:
                t.lines += i * (n / 2);
                break;
              case e.LINE_STRIP:
                t.lines += i * (n - 1);
                break;
              case e.LINE_LOOP:
                t.lines += i * n;
                break;
              case e.POINTS:
                t.points += i * n;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", r);
            }
          },
        };
      }
      function n2(e, t) {
        return e[0] - t[0];
      }
      function n3(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function n4(e, t, n) {
        let r = {},
          i = new Float32Array(8),
          s = new WeakMap(),
          a = new ey(),
          o = [];
        for (let e = 0; e < 8; e++) o[e] = [e, 0];
        return {
          update: function (l, u, c) {
            let h = l.morphTargetInfluences;
            if (!0 === t.isWebGL2) {
              let r =
                  u.morphAttributes.position ||
                  u.morphAttributes.normal ||
                  u.morphAttributes.color,
                i = void 0 !== r ? r.length : 0,
                o = s.get(u);
              if (void 0 === o || o.count !== i) {
                void 0 !== o && o.texture.dispose();
                let e = void 0 !== u.morphAttributes.position,
                  n = void 0 !== u.morphAttributes.normal,
                  r = void 0 !== u.morphAttributes.color,
                  l = u.morphAttributes.position || [],
                  c = u.morphAttributes.normal || [],
                  h = u.morphAttributes.color || [],
                  d = 0;
                !0 === e && (d = 1), !0 === n && (d = 2), !0 === r && (d = 3);
                let p = u.attributes.position.count * d,
                  f = 1;
                p > t.maxTextureSize &&
                  ((f = Math.ceil(p / t.maxTextureSize)),
                  (p = t.maxTextureSize));
                let m = new Float32Array(p * f * 4 * i),
                  g = new eS(m, p, f, i);
                (g.type = 1015), (g.needsUpdate = !0);
                let _ = 4 * d;
                for (let t = 0; t < i; t++) {
                  let i = l[t],
                    s = c[t],
                    o = h[t],
                    u = p * f * 4 * t;
                  for (let t = 0; t < i.count; t++) {
                    let l = t * _;
                    !0 === e &&
                      (a.fromBufferAttribute(i, t),
                      (m[u + l + 0] = a.x),
                      (m[u + l + 1] = a.y),
                      (m[u + l + 2] = a.z),
                      (m[u + l + 3] = 0)),
                      !0 === n &&
                        (a.fromBufferAttribute(s, t),
                        (m[u + l + 4] = a.x),
                        (m[u + l + 5] = a.y),
                        (m[u + l + 6] = a.z),
                        (m[u + l + 7] = 0)),
                      !0 === r &&
                        (a.fromBufferAttribute(o, t),
                        (m[u + l + 8] = a.x),
                        (m[u + l + 9] = a.y),
                        (m[u + l + 10] = a.z),
                        (m[u + l + 11] = 4 === o.itemSize ? a.w : 1));
                  }
                }
                (o = { count: i, texture: g, size: new Q(p, f) }),
                  s.set(u, o),
                  u.addEventListener("dispose", function e() {
                    g.dispose(),
                      s.delete(u),
                      u.removeEventListener("dispose", e);
                  });
              }
              let l = 0;
              for (let e = 0; e < h.length; e++) l += h[e];
              let d = u.morphTargetsRelative ? 1 : 1 - l;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", d),
                c.getUniforms().setValue(e, "morphTargetInfluences", h),
                c
                  .getUniforms()
                  .setValue(e, "morphTargetsTexture", o.texture, n),
                c.getUniforms().setValue(e, "morphTargetsTextureSize", o.size);
            } else {
              let t = void 0 === h ? 0 : h.length,
                n = r[u.id];
              if (void 0 === n || n.length !== t) {
                n = [];
                for (let e = 0; e < t; e++) n[e] = [e, 0];
                r[u.id] = n;
              }
              for (let e = 0; e < t; e++) {
                let t = n[e];
                (t[0] = e), (t[1] = h[e]);
              }
              n.sort(n3);
              for (let e = 0; e < 8; e++)
                e < t && n[e][1]
                  ? ((o[e][0] = n[e][0]), (o[e][1] = n[e][1]))
                  : ((o[e][0] = Number.MAX_SAFE_INTEGER), (o[e][1] = 0));
              o.sort(n2);
              let s = u.morphAttributes.position,
                a = u.morphAttributes.normal,
                l = 0;
              for (let e = 0; e < 8; e++) {
                let t = o[e],
                  n = t[0],
                  r = t[1];
                n !== Number.MAX_SAFE_INTEGER && r
                  ? (s &&
                      u.getAttribute("morphTarget" + e) !== s[n] &&
                      u.setAttribute("morphTarget" + e, s[n]),
                    a &&
                      u.getAttribute("morphNormal" + e) !== a[n] &&
                      u.setAttribute("morphNormal" + e, a[n]),
                    (i[e] = r),
                    (l += r))
                  : (s &&
                      !0 === u.hasAttribute("morphTarget" + e) &&
                      u.deleteAttribute("morphTarget" + e),
                    a &&
                      !0 === u.hasAttribute("morphNormal" + e) &&
                      u.deleteAttribute("morphNormal" + e),
                    (i[e] = 0));
              }
              let d = u.morphTargetsRelative ? 1 : 1 - l;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", d),
                c.getUniforms().setValue(e, "morphTargetInfluences", i);
            }
          },
        };
      }
      function n5(e, t, n, r) {
        let i = new WeakMap();
        function s(e) {
          let t = e.target;
          t.removeEventListener("dispose", s),
            n.remove(t.instanceMatrix),
            null !== t.instanceColor && n.remove(t.instanceColor);
        }
        return {
          update: function (a) {
            let o = r.render.frame,
              l = a.geometry,
              u = t.get(a, l);
            if (
              (i.get(u) !== o && (t.update(u), i.set(u, o)),
              a.isInstancedMesh &&
                (!1 === a.hasEventListener("dispose", s) &&
                  a.addEventListener("dispose", s),
                i.get(a) !== o &&
                  (n.update(a.instanceMatrix, e.ARRAY_BUFFER),
                  null !== a.instanceColor &&
                    n.update(a.instanceColor, e.ARRAY_BUFFER),
                  i.set(a, o))),
              a.isSkinnedMesh)
            ) {
              let e = a.skeleton;
              i.get(e) !== o && (e.update(), i.set(e, o));
            }
            return u;
          },
          dispose: function () {
            i = new WeakMap();
          },
        };
      }
      let n6 = new ev(),
        n8 = new eS(),
        n7 = new (class extends ev {
          constructor(e = null, t = 1, n = 1, r = 1) {
            super(null),
              (this.isData3DTexture = !0),
              (this.image = { data: e, width: t, height: n, depth: r }),
              (this.magFilter = y),
              (this.minFilter = y),
              (this.wrapR = _),
              (this.generateMipmaps = !1),
              (this.flipY = !1),
              (this.unpackAlignment = 1);
          }
        })(),
        n9 = new nm(),
        re = [],
        rt = [],
        rn = new Float32Array(16),
        rr = new Float32Array(9),
        ri = new Float32Array(4);
      function rs(e, t, n) {
        let r = e[0];
        if (r <= 0 || r > 0) return e;
        let i = t * n,
          s = re[i];
        if (
          (void 0 === s && ((s = new Float32Array(i)), (re[i] = s)), 0 !== t)
        ) {
          r.toArray(s, 0);
          for (let r = 1, i = 0; r !== t; ++r) (i += n), e[r].toArray(s, i);
        }
        return s;
      }
      function ra(e, t) {
        if (e.length !== t.length) return !1;
        for (let n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      function ro(e, t) {
        for (let n = 0, r = t.length; n < r; n++) e[n] = t[n];
      }
      function rl(e, t) {
        let n = rt[t];
        void 0 === n && ((n = new Int32Array(t)), (rt[t] = n));
        for (let r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
        return n;
      }
      function ru(e, t) {
        let n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
      }
      function rc(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y) &&
            (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (ra(n, t)) return;
          e.uniform2fv(this.addr, t), ro(n, t);
        }
      }
      function rh(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z) &&
            (e.uniform3f(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else if (void 0 !== t.r)
          (n[0] !== t.r || n[1] !== t.g || n[2] !== t.b) &&
            (e.uniform3f(this.addr, t.r, t.g, t.b),
            (n[0] = t.r),
            (n[1] = t.g),
            (n[2] = t.b));
        else {
          if (ra(n, t)) return;
          e.uniform3fv(this.addr, t), ro(n, t);
        }
      }
      function rd(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z || n[3] !== t.w) &&
            (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (ra(n, t)) return;
          e.uniform4fv(this.addr, t), ro(n, t);
        }
      }
      function rp(e, t) {
        let n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (ra(n, t)) return;
          e.uniformMatrix2fv(this.addr, !1, t), ro(n, t);
        } else {
          if (ra(n, r)) return;
          ri.set(r), e.uniformMatrix2fv(this.addr, !1, ri), ro(n, r);
        }
      }
      function rf(e, t) {
        let n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (ra(n, t)) return;
          e.uniformMatrix3fv(this.addr, !1, t), ro(n, t);
        } else {
          if (ra(n, r)) return;
          rr.set(r), e.uniformMatrix3fv(this.addr, !1, rr), ro(n, r);
        }
      }
      function rm(e, t) {
        let n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (ra(n, t)) return;
          e.uniformMatrix4fv(this.addr, !1, t), ro(n, t);
        } else {
          if (ra(n, r)) return;
          rn.set(r), e.uniformMatrix4fv(this.addr, !1, rn), ro(n, r);
        }
      }
      function rg(e, t) {
        let n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
      }
      function r_(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y) &&
            (e.uniform2i(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (ra(n, t)) return;
          e.uniform2iv(this.addr, t), ro(n, t);
        }
      }
      function rv(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z) &&
            (e.uniform3i(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (ra(n, t)) return;
          e.uniform3iv(this.addr, t), ro(n, t);
        }
      }
      function ry(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z || n[3] !== t.w) &&
            (e.uniform4i(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (ra(n, t)) return;
          e.uniform4iv(this.addr, t), ro(n, t);
        }
      }
      function rx(e, t) {
        let n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
      }
      function rb(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y) &&
            (e.uniform2ui(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (ra(n, t)) return;
          e.uniform2uiv(this.addr, t), ro(n, t);
        }
      }
      function rS(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z) &&
            (e.uniform3ui(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (ra(n, t)) return;
          e.uniform3uiv(this.addr, t), ro(n, t);
        }
      }
      function rE(e, t) {
        let n = this.cache;
        if (void 0 !== t.x)
          (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z || n[3] !== t.w) &&
            (e.uniform4ui(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (ra(n, t)) return;
          e.uniform4uiv(this.addr, t), ro(n, t);
        }
      }
      function rM(e, t, n) {
        let r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2D(t || n6, i);
      }
      function rw(e, t, n) {
        let r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture3D(t || n7, i);
      }
      function rT(e, t, n) {
        let r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTextureCube(t || n9, i);
      }
      function rA(e, t, n) {
        let r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2DArray(t || n8, i);
      }
      function rC(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function rR(e, t) {
        let n = rs(t, this.size, 2);
        e.uniform2fv(this.addr, n);
      }
      function rP(e, t) {
        let n = rs(t, this.size, 3);
        e.uniform3fv(this.addr, n);
      }
      function rO(e, t) {
        let n = rs(t, this.size, 4);
        e.uniform4fv(this.addr, n);
      }
      function rL(e, t) {
        let n = rs(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n);
      }
      function rI(e, t) {
        let n = rs(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n);
      }
      function rN(e, t) {
        let n = rs(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n);
      }
      function rD(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function rU(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function rk(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function rF(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function rz(e, t) {
        e.uniform1uiv(this.addr, t);
      }
      function rB(e, t) {
        e.uniform2uiv(this.addr, t);
      }
      function rV(e, t) {
        e.uniform3uiv(this.addr, t);
      }
      function rj(e, t) {
        e.uniform4uiv(this.addr, t);
      }
      function rH(e, t, n) {
        let r = this.cache,
          i = t.length,
          s = rl(n, i);
        ra(r, s) || (e.uniform1iv(this.addr, s), ro(r, s));
        for (let e = 0; e !== i; ++e) n.setTexture2D(t[e] || n6, s[e]);
      }
      function rG(e, t, n) {
        let r = this.cache,
          i = t.length,
          s = rl(n, i);
        ra(r, s) || (e.uniform1iv(this.addr, s), ro(r, s));
        for (let e = 0; e !== i; ++e) n.setTexture3D(t[e] || n7, s[e]);
      }
      function rW(e, t, n) {
        let r = this.cache,
          i = t.length,
          s = rl(n, i);
        ra(r, s) || (e.uniform1iv(this.addr, s), ro(r, s));
        for (let e = 0; e !== i; ++e) n.setTextureCube(t[e] || n9, s[e]);
      }
      function r$(e, t, n) {
        let r = this.cache,
          i = t.length,
          s = rl(n, i);
        ra(r, s) || (e.uniform1iv(this.addr, s), ro(r, s));
        for (let e = 0; e !== i; ++e) n.setTexture2DArray(t[e] || n8, s[e]);
      }
      class rX {
        constructor(e, t, n) {
          (this.id = e),
            (this.addr = n),
            (this.cache = []),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return ru;
                case 35664:
                  return rc;
                case 35665:
                  return rh;
                case 35666:
                  return rd;
                case 35674:
                  return rp;
                case 35675:
                  return rf;
                case 35676:
                  return rm;
                case 5124:
                case 35670:
                  return rg;
                case 35667:
                case 35671:
                  return r_;
                case 35668:
                case 35672:
                  return rv;
                case 35669:
                case 35673:
                  return ry;
                case 5125:
                  return rx;
                case 36294:
                  return rb;
                case 36295:
                  return rS;
                case 36296:
                  return rE;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return rM;
                case 35679:
                case 36299:
                case 36307:
                  return rw;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return rT;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return rA;
              }
            })(t.type));
        }
      }
      class rq {
        constructor(e, t, n) {
          (this.id = e),
            (this.addr = n),
            (this.cache = []),
            (this.size = t.size),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return rC;
                case 35664:
                  return rR;
                case 35665:
                  return rP;
                case 35666:
                  return rO;
                case 35674:
                  return rL;
                case 35675:
                  return rI;
                case 35676:
                  return rN;
                case 5124:
                case 35670:
                  return rD;
                case 35667:
                case 35671:
                  return rU;
                case 35668:
                case 35672:
                  return rk;
                case 35669:
                case 35673:
                  return rF;
                case 5125:
                  return rz;
                case 36294:
                  return rB;
                case 36295:
                  return rV;
                case 36296:
                  return rj;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return rH;
                case 35679:
                case 36299:
                case 36307:
                  return rG;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return rW;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return r$;
              }
            })(t.type));
        }
      }
      class rY {
        constructor(e) {
          (this.id = e), (this.seq = []), (this.map = {});
        }
        setValue(e, t, n) {
          let r = this.seq;
          for (let i = 0, s = r.length; i !== s; ++i) {
            let s = r[i];
            s.setValue(e, t[s.id], n);
          }
        }
      }
      let rJ = /(\w+)(\])?(\[|\.)?/g;
      function rZ(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      class rK {
        constructor(e, t) {
          (this.seq = []), (this.map = {});
          let n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
          for (let r = 0; r < n; ++r) {
            let n = e.getActiveUniform(t, r),
              i = e.getUniformLocation(t, n.name);
            !(function (e, t, n) {
              let r = e.name,
                i = r.length;
              for (rJ.lastIndex = 0; ; ) {
                let s = rJ.exec(r),
                  a = rJ.lastIndex,
                  o = s[1],
                  l = "]" === s[2],
                  u = s[3];
                if (
                  (l && (o |= 0), void 0 === u || ("[" === u && a + 2 === i))
                ) {
                  rZ(n, void 0 === u ? new rX(o, e, t) : new rq(o, e, t));
                  break;
                }
                {
                  let e = n.map,
                    t = e[o];
                  void 0 === t && rZ(n, (t = new rY(o))), (n = t);
                }
              }
            })(n, i, this);
          }
        }
        setValue(e, t, n, r) {
          let i = this.map[t];
          void 0 !== i && i.setValue(e, n, r);
        }
        setOptional(e, t, n) {
          let r = t[n];
          void 0 !== r && this.setValue(e, n, r);
        }
        static upload(e, t, n, r) {
          for (let i = 0, s = t.length; i !== s; ++i) {
            let s = t[i],
              a = n[s.id];
            !1 !== a.needsUpdate && s.setValue(e, a.value, r);
          }
        }
        static seqWithValue(e, t) {
          let n = [];
          for (let r = 0, i = e.length; r !== i; ++r) {
            let i = e[r];
            i.id in t && n.push(i);
          }
          return n;
        }
      }
      function rQ(e, t, n) {
        let r = e.createShader(t);
        return e.shaderSource(r, n), e.compileShader(r), r;
      }
      let r0 = 0;
      function r1(e, t, n) {
        let r = e.getShaderParameter(t, e.COMPILE_STATUS),
          i = e.getShaderInfoLog(t).trim();
        if (r && "" === i) return "";
        let s = /ERROR: 0:(\d+)/.exec(i);
        if (!s) return i;
        {
          let r = parseInt(s[1]);
          return (
            n.toUpperCase() +
            "\n\n" +
            i +
            "\n\n" +
            (function (e, t) {
              let n = e.split("\n"),
                r = [],
                i = Math.max(t - 6, 0),
                s = Math.min(t + 6, n.length);
              for (let e = i; e < s; e++) {
                let i = e + 1;
                r.push(`${i === t ? ">" : " "} ${i}: ${n[e]}`);
              }
              return r.join("\n");
            })(e.getShaderSource(t), r)
          );
        }
      }
      function r2(e) {
        return "" !== e;
      }
      function r3(e, t) {
        let n =
          t.numSpotLightShadows +
          t.numSpotLightMaps -
          t.numSpotLightShadowsWithMaps;
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_SPOT_LIGHT_MAPS/g, t.numSpotLightMaps)
          .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
          .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
          .replace(
            /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,
            t.numSpotLightShadowsWithMaps
          )
          .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
          .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
      }
      function r4(e, t) {
        return e
          .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            t.numClippingPlanes - t.numClipIntersection
          );
      }
      let r5 = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function r6(e) {
        return e.replace(r5, r7);
      }
      let r8 = new Map([
        ["encodings_fragment", "colorspace_fragment"],
        ["encodings_pars_fragment", "colorspace_pars_fragment"],
        ["output_fragment", "opaque_fragment"],
      ]);
      function r7(e, t) {
        let n = nA[t];
        if (void 0 === n) {
          let e = r8.get(t);
          if (void 0 !== e)
            (n = nA[e]),
              console.warn(
                'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
                t,
                e
              );
          else throw Error("Can not resolve #include <" + t + ">");
        }
        return r6(n);
      }
      let r9 =
        /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
      function ie(e) {
        return e.replace(r9, it);
      }
      function it(e, t, n, r) {
        let i = "";
        for (let e = parseInt(t); e < parseInt(n); e++)
          i += r
            .replace(/\[\s*i\s*\]/g, "[ " + e + " ]")
            .replace(/UNROLLED_LOOP_INDEX/g, e);
        return i;
      }
      function ir(e) {
        let t =
          "precision " +
          e.precision +
          " float;\nprecision " +
          e.precision +
          " int;";
        return (
          "highp" === e.precision
            ? (t += "\n#define HIGH_PRECISION")
            : "mediump" === e.precision
            ? (t += "\n#define MEDIUM_PRECISION")
            : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
          t
        );
      }
      function ii(e, t, n, r) {
        let i, s, o, l, u, c;
        let h = e.getContext(),
          d = n.defines,
          p = n.vertexShader,
          f = n.fragmentShader,
          g =
            ((u = "SHADOWMAP_TYPE_BASIC"),
            1 === n.shadowMapType
              ? (u = "SHADOWMAP_TYPE_PCF")
              : n.shadowMapType === a
              ? (u = "SHADOWMAP_TYPE_PCF_SOFT")
              : 3 === n.shadowMapType && (u = "SHADOWMAP_TYPE_VSM"),
            u),
          _ = (function (e) {
            let t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
              switch (e.envMapMode) {
                case 301:
                case 302:
                  t = "ENVMAP_TYPE_CUBE";
                  break;
                case 306:
                  t = "ENVMAP_TYPE_CUBE_UV";
              }
            return t;
          })(n),
          v =
            ((c = "ENVMAP_MODE_REFLECTION"),
            n.envMap && 302 === n.envMapMode && (c = "ENVMAP_MODE_REFRACTION"),
            c),
          y = (function (e) {
            let t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
              switch (e.combine) {
                case 0:
                  t = "ENVMAP_BLENDING_MULTIPLY";
                  break;
                case 1:
                  t = "ENVMAP_BLENDING_MIX";
                  break;
                case 2:
                  t = "ENVMAP_BLENDING_ADD";
              }
            return t;
          })(n),
          x = (function (e) {
            let t = e.envMapCubeUVHeight;
            if (null === t) return null;
            let n = Math.log2(t) - 2,
              r = 1 / (3 * Math.max(Math.pow(2, n), 112));
            return { texelWidth: r, texelHeight: 1 / t, maxMip: n };
          })(n),
          b = n.isWebGL2
            ? ""
            : (function (e) {
                let t = [
                  e.extensionDerivatives ||
                  e.envMapCubeUVHeight ||
                  e.bumpMap ||
                  e.normalMapTangentSpace ||
                  e.clearcoatNormalMap ||
                  e.flatShading ||
                  "physical" === e.shaderID
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
                  e.rendererExtensionFragDepth
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
                  e.rendererExtensionShaderTextureLod
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : "",
                ];
                return t.filter(r2).join("\n");
              })(n),
          S = (function (e) {
            let t = [];
            for (let n in e) {
              let r = e[n];
              !1 !== r && t.push("#define " + n + " " + r);
            }
            return t.join("\n");
          })(d),
          E = h.createProgram(),
          M = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
        n.isRawShaderMaterial
          ? ((i = [
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              S,
            ]
              .filter(r2)
              .join("\n")).length > 0 && (i += "\n"),
            (s = [
              b,
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              S,
            ]
              .filter(r2)
              .join("\n")).length > 0 && (s += "\n"))
          : ((i = [
              ir(n),
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              S,
              n.instancing ? "#define USE_INSTANCING" : "",
              n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + v : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaHash ? "#define USE_ALPHAHASH" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.mapUv ? "#define MAP_UV " + n.mapUv : "",
              n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
              n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
              n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
              n.emissiveMapUv
                ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv
                : "",
              n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
              n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
              n.displacementMapUv
                ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv
                : "",
              n.metalnessMapUv
                ? "#define METALNESSMAP_UV " + n.metalnessMapUv
                : "",
              n.roughnessMapUv
                ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv
                : "",
              n.anisotropyMapUv
                ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv
                : "",
              n.clearcoatMapUv
                ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv
                : "",
              n.clearcoatNormalMapUv
                ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv
                : "",
              n.clearcoatRoughnessMapUv
                ? "#define CLEARCOAT_ROUGHNESSMAP_UV " +
                  n.clearcoatRoughnessMapUv
                : "",
              n.iridescenceMapUv
                ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv
                : "",
              n.iridescenceThicknessMapUv
                ? "#define IRIDESCENCE_THICKNESSMAP_UV " +
                  n.iridescenceThicknessMapUv
                : "",
              n.sheenColorMapUv
                ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv
                : "",
              n.sheenRoughnessMapUv
                ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv
                : "",
              n.specularMapUv
                ? "#define SPECULARMAP_UV " + n.specularMapUv
                : "",
              n.specularColorMapUv
                ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv
                : "",
              n.specularIntensityMapUv
                ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv
                : "",
              n.transmissionMapUv
                ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv
                : "",
              n.thicknessMapUv
                ? "#define THICKNESSMAP_UV " + n.thicknessMapUv
                : "",
              n.vertexTangents && !1 === n.flatShading
                ? "#define USE_TANGENT"
                : "",
              n.vertexColors ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.skinning ? "#define USE_SKINNING" : "",
              n.morphTargets ? "#define USE_MORPHTARGETS" : "",
              n.morphNormals && !1 === n.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE"
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
                : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + g : "",
              n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              "#ifdef USE_INSTANCING",
              "	attribute mat4 instanceMatrix;",
              "#endif",
              "#ifdef USE_INSTANCING_COLOR",
              "	attribute vec3 instanceColor;",
              "#endif",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_UV1",
              "	attribute vec2 uv1;",
              "#endif",
              "#ifdef USE_UV2",
              "	attribute vec2 uv2;",
              "#endif",
              "#ifdef USE_UV3",
              "	attribute vec2 uv3;",
              "#endif",
              "#ifdef USE_TANGENT",
              "	attribute vec4 tangent;",
              "#endif",
              "#if defined( USE_COLOR_ALPHA )",
              "	attribute vec4 color;",
              "#elif defined( USE_COLOR )",
              "	attribute vec3 color;",
              "#endif",
              "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
              "	attribute vec3 morphTarget0;",
              "	attribute vec3 morphTarget1;",
              "	attribute vec3 morphTarget2;",
              "	attribute vec3 morphTarget3;",
              "	#ifdef USE_MORPHNORMALS",
              "		attribute vec3 morphNormal0;",
              "		attribute vec3 morphNormal1;",
              "		attribute vec3 morphNormal2;",
              "		attribute vec3 morphNormal3;",
              "	#else",
              "		attribute vec3 morphTarget4;",
              "		attribute vec3 morphTarget5;",
              "		attribute vec3 morphTarget6;",
              "		attribute vec3 morphTarget7;",
              "	#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "	attribute vec4 skinIndex;",
              "	attribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(r2)
              .join("\n")),
            (s = [
              b,
              ir(n),
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              S,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.matcap ? "#define USE_MATCAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + _ : "",
              n.envMap ? "#define " + v : "",
              n.envMap ? "#define " + y : "",
              x ? "#define CUBEUV_TEXEL_WIDTH " + x.texelWidth : "",
              x ? "#define CUBEUV_TEXEL_HEIGHT " + x.texelHeight : "",
              x ? "#define CUBEUV_MAX_MIP " + x.maxMip + ".0" : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.anisotropy ? "#define USE_ANISOTROPY" : "",
              n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
              n.clearcoat ? "#define USE_CLEARCOAT" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescence ? "#define USE_IRIDESCENCE" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaTest ? "#define USE_ALPHATEST" : "",
              n.alphaHash ? "#define USE_ALPHAHASH" : "",
              n.sheen ? "#define USE_SHEEN" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.vertexTangents && !1 === n.flatShading
                ? "#define USE_TANGENT"
                : "",
              n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.gradientMap ? "#define USE_GRADIENTMAP" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + g : "",
              n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
              n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              n.toneMapping !== m ? "#define TONE_MAPPING" : "",
              n.toneMapping !== m ? nA.tonemapping_pars_fragment : "",
              n.toneMapping !== m
                ? (function (e, t) {
                    let n;
                    switch (t) {
                      case 1:
                        n = "Linear";
                        break;
                      case 2:
                        n = "Reinhard";
                        break;
                      case 3:
                        n = "OptimizedCineon";
                        break;
                      case 4:
                        n = "ACESFilmic";
                        break;
                      case 5:
                        n = "Custom";
                        break;
                      default:
                        console.warn(
                          "THREE.WebGLProgram: Unsupported toneMapping:",
                          t
                        ),
                          (n = "Linear");
                    }
                    return (
                      "vec3 " +
                      e +
                      "( vec3 color ) { return " +
                      n +
                      "ToneMapping( color ); }"
                    );
                  })("toneMapping", n.toneMapping)
                : "",
              n.dithering ? "#define DITHERING" : "",
              n.opaque ? "#define OPAQUE" : "",
              nA.colorspace_pars_fragment,
              (function (e, t) {
                let n = (function (e) {
                  switch (e) {
                    case I:
                      return ["Linear", "( value )"];
                    case L:
                      return ["sRGB", "( value )"];
                    default:
                      return (
                        console.warn(
                          "THREE.WebGLProgram: Unsupported color space:",
                          e
                        ),
                        ["Linear", "( value )"]
                      );
                  }
                })(t);
                return (
                  "vec4 " +
                  e +
                  "( vec4 value ) { return LinearTo" +
                  n[0] +
                  n[1] +
                  "; }"
                );
              })("linearToOutputTexel", n.outputColorSpace),
              n.useDepthPacking
                ? "#define DEPTH_PACKING " + n.depthPacking
                : "",
              "\n",
            ]
              .filter(r2)
              .join("\n"))),
          (p = r4((p = r3((p = r6(p)), n)), n)),
          (f = r4((f = r3((f = r6(f)), n)), n)),
          (p = ie(p)),
          (f = ie(f)),
          n.isWebGL2 &&
            !0 !== n.isRawShaderMaterial &&
            ((M = "#version 300 es\n"),
            (i =
              "precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n" +
              i),
            (s =
              [
                "#define varying in",
                n.glslVersion === k
                  ? ""
                  : "layout(location = 0) out highp vec4 pc_fragColor;",
                n.glslVersion === k ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad",
              ].join("\n") +
              "\n" +
              s));
        let w = M + i + p,
          T = M + s + f,
          A = rQ(h, h.VERTEX_SHADER, w),
          C = rQ(h, h.FRAGMENT_SHADER, T);
        if (
          (h.attachShader(E, A),
          h.attachShader(E, C),
          void 0 !== n.index0AttributeName
            ? h.bindAttribLocation(E, 0, n.index0AttributeName)
            : !0 === n.morphTargets && h.bindAttribLocation(E, 0, "position"),
          h.linkProgram(E),
          e.debug.checkShaderErrors)
        ) {
          let t = h.getProgramInfoLog(E).trim(),
            n = h.getShaderInfoLog(A).trim(),
            r = h.getShaderInfoLog(C).trim(),
            a = !0,
            o = !0;
          if (!1 === h.getProgramParameter(E, h.LINK_STATUS)) {
            if (((a = !1), "function" == typeof e.debug.onShaderError))
              e.debug.onShaderError(h, E, A, C);
            else {
              let e = r1(h, A, "vertex"),
                n = r1(h, C, "fragment");
              console.error(
                "THREE.WebGLProgram: Shader Error " +
                  h.getError() +
                  " - VALIDATE_STATUS " +
                  h.getProgramParameter(E, h.VALIDATE_STATUS) +
                  "\n\nProgram Info Log: " +
                  t +
                  "\n" +
                  e +
                  "\n" +
                  n
              );
            }
          } else
            "" !== t
              ? console.warn("THREE.WebGLProgram: Program Info Log:", t)
              : ("" === n || "" === r) && (o = !1);
          o &&
            (this.diagnostics = {
              runnable: a,
              programLog: t,
              vertexShader: { log: n, prefix: i },
              fragmentShader: { log: r, prefix: s },
            });
        }
        return (
          h.deleteShader(A),
          h.deleteShader(C),
          (this.getUniforms = function () {
            return void 0 === o && (o = new rK(h, E)), o;
          }),
          (this.getAttributes = function () {
            return (
              void 0 === l &&
                (l = (function (e, t) {
                  let n = {},
                    r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES);
                  for (let i = 0; i < r; i++) {
                    let r = e.getActiveAttrib(t, i),
                      s = r.name,
                      a = 1;
                    r.type === e.FLOAT_MAT2 && (a = 2),
                      r.type === e.FLOAT_MAT3 && (a = 3),
                      r.type === e.FLOAT_MAT4 && (a = 4),
                      (n[s] = {
                        type: r.type,
                        location: e.getAttribLocation(t, s),
                        locationSize: a,
                      });
                  }
                  return n;
                })(h, E)),
              l
            );
          }),
          (this.destroy = function () {
            r.releaseStatesOfProgram(this),
              h.deleteProgram(E),
              (this.program = void 0);
          }),
          (this.type = n.shaderType),
          (this.name = n.shaderName),
          (this.id = r0++),
          (this.cacheKey = t),
          (this.usedTimes = 1),
          (this.program = E),
          (this.vertexShader = A),
          (this.fragmentShader = C),
          this
        );
      }
      let is = 0;
      class ia {
        constructor() {
          (this.shaderCache = new Map()), (this.materialCache = new Map());
        }
        update(e) {
          let t = e.vertexShader,
            n = e.fragmentShader,
            r = this._getShaderStage(t),
            i = this._getShaderStage(n),
            s = this._getShaderCacheForMaterial(e);
          return (
            !1 === s.has(r) && (s.add(r), r.usedTimes++),
            !1 === s.has(i) && (s.add(i), i.usedTimes++),
            this
          );
        }
        remove(e) {
          let t = this.materialCache.get(e);
          for (let e of t)
            e.usedTimes--, 0 === e.usedTimes && this.shaderCache.delete(e.code);
          return this.materialCache.delete(e), this;
        }
        getVertexShaderID(e) {
          return this._getShaderStage(e.vertexShader).id;
        }
        getFragmentShaderID(e) {
          return this._getShaderStage(e.fragmentShader).id;
        }
        dispose() {
          this.shaderCache.clear(), this.materialCache.clear();
        }
        _getShaderCacheForMaterial(e) {
          let t = this.materialCache,
            n = t.get(e);
          return void 0 === n && ((n = new Set()), t.set(e, n)), n;
        }
        _getShaderStage(e) {
          let t = this.shaderCache,
            n = t.get(e);
          return void 0 === n && ((n = new io(e)), t.set(e, n)), n;
        }
      }
      class io {
        constructor(e) {
          (this.id = is++), (this.code = e), (this.usedTimes = 0);
        }
      }
      function il(e, t, n, r, i, s, a) {
        let o = new tt(),
          c = new ia(),
          d = [],
          p = i.isWebGL2,
          f = i.logarithmicDepthBuffer,
          g = i.vertexTextures,
          _ = i.precision,
          v = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite",
          };
        function y(e) {
          return 0 === e ? "uv" : `uv${e}`;
        }
        return {
          getParameters: function (s, o, d, x, b) {
            let S, E, M, w;
            let T = x.fog,
              A = b.geometry,
              C = s.isMeshStandardMaterial ? x.environment : null,
              R = (s.isMeshStandardMaterial ? n : t).get(s.envMap || C),
              P = R && 306 === R.mapping ? R.image.height : null,
              O = v[s.type];
            null !== s.precision &&
              (_ = i.getMaxPrecision(s.precision)) !== s.precision &&
              console.warn(
                "THREE.WebGLProgram.getParameters:",
                s.precision,
                "not supported, using",
                _,
                "instead."
              );
            let N =
                A.morphAttributes.position ||
                A.morphAttributes.normal ||
                A.morphAttributes.color,
              D = void 0 !== N ? N.length : 0,
              U = 0;
            if (
              (void 0 !== A.morphAttributes.position && (U = 1),
              void 0 !== A.morphAttributes.normal && (U = 2),
              void 0 !== A.morphAttributes.color && (U = 3),
              O)
            ) {
              let e = nR[O];
              (S = e.vertexShader), (E = e.fragmentShader);
            } else
              (S = s.vertexShader),
                (E = s.fragmentShader),
                c.update(s),
                (M = c.getVertexShaderID(s)),
                (w = c.getFragmentShaderID(s));
            let k = e.getRenderTarget(),
              F = !0 === b.isInstancedMesh,
              z = !!s.map,
              B = !!s.matcap,
              V = !!R,
              j = !!s.aoMap,
              H = !!s.lightMap,
              G = !!s.bumpMap,
              W = !!s.normalMap,
              $ = !!s.displacementMap,
              X = !!s.emissiveMap,
              q = !!s.metalnessMap,
              Y = !!s.roughnessMap,
              J = s.anisotropy > 0,
              Z = s.clearcoat > 0,
              K = s.iridescence > 0,
              Q = s.sheen > 0,
              ee = s.transmission > 0,
              et = J && !!s.anisotropyMap,
              en = Z && !!s.clearcoatMap,
              er = Z && !!s.clearcoatNormalMap,
              ei = Z && !!s.clearcoatRoughnessMap,
              es = K && !!s.iridescenceMap,
              ea = K && !!s.iridescenceThicknessMap,
              eo = Q && !!s.sheenColorMap,
              el = Q && !!s.sheenRoughnessMap,
              eu = !!s.specularMap,
              ec = !!s.specularColorMap,
              eh = !!s.specularIntensityMap,
              ed = ee && !!s.transmissionMap,
              ep = ee && !!s.thicknessMap,
              ef = !!s.gradientMap,
              em = !!s.alphaMap,
              eg = s.alphaTest > 0,
              e_ = !!s.alphaHash,
              ev = !!s.extensions,
              ey = !!A.attributes.uv1,
              ex = !!A.attributes.uv2,
              eb = !!A.attributes.uv3,
              eS = m;
            s.toneMapped &&
              (null === k || !0 === k.isXRRenderTarget) &&
              (eS = e.toneMapping);
            let eE = {
              isWebGL2: p,
              shaderID: O,
              shaderType: s.type,
              shaderName: s.name,
              vertexShader: S,
              fragmentShader: E,
              defines: s.defines,
              customVertexShaderID: M,
              customFragmentShaderID: w,
              isRawShaderMaterial: !0 === s.isRawShaderMaterial,
              glslVersion: s.glslVersion,
              precision: _,
              instancing: F,
              instancingColor: F && null !== b.instanceColor,
              supportsVertexTextures: g,
              outputColorSpace:
                null === k
                  ? e.outputColorSpace
                  : !0 === k.isXRRenderTarget
                  ? k.texture.colorSpace
                  : I,
              map: z,
              matcap: B,
              envMap: V,
              envMapMode: V && R.mapping,
              envMapCubeUVHeight: P,
              aoMap: j,
              lightMap: H,
              bumpMap: G,
              normalMap: W,
              displacementMap: g && $,
              emissiveMap: X,
              normalMapObjectSpace: W && 1 === s.normalMapType,
              normalMapTangentSpace: W && 0 === s.normalMapType,
              metalnessMap: q,
              roughnessMap: Y,
              anisotropy: J,
              anisotropyMap: et,
              clearcoat: Z,
              clearcoatMap: en,
              clearcoatNormalMap: er,
              clearcoatRoughnessMap: ei,
              iridescence: K,
              iridescenceMap: es,
              iridescenceThicknessMap: ea,
              sheen: Q,
              sheenColorMap: eo,
              sheenRoughnessMap: el,
              specularMap: eu,
              specularColorMap: ec,
              specularIntensityMap: eh,
              transmission: ee,
              transmissionMap: ed,
              thicknessMap: ep,
              gradientMap: ef,
              opaque: !1 === s.transparent && s.blending === h,
              alphaMap: em,
              alphaTest: eg,
              alphaHash: e_,
              combine: s.combine,
              mapUv: z && y(s.map.channel),
              aoMapUv: j && y(s.aoMap.channel),
              lightMapUv: H && y(s.lightMap.channel),
              bumpMapUv: G && y(s.bumpMap.channel),
              normalMapUv: W && y(s.normalMap.channel),
              displacementMapUv: $ && y(s.displacementMap.channel),
              emissiveMapUv: X && y(s.emissiveMap.channel),
              metalnessMapUv: q && y(s.metalnessMap.channel),
              roughnessMapUv: Y && y(s.roughnessMap.channel),
              anisotropyMapUv: et && y(s.anisotropyMap.channel),
              clearcoatMapUv: en && y(s.clearcoatMap.channel),
              clearcoatNormalMapUv: er && y(s.clearcoatNormalMap.channel),
              clearcoatRoughnessMapUv: ei && y(s.clearcoatRoughnessMap.channel),
              iridescenceMapUv: es && y(s.iridescenceMap.channel),
              iridescenceThicknessMapUv:
                ea && y(s.iridescenceThicknessMap.channel),
              sheenColorMapUv: eo && y(s.sheenColorMap.channel),
              sheenRoughnessMapUv: el && y(s.sheenRoughnessMap.channel),
              specularMapUv: eu && y(s.specularMap.channel),
              specularColorMapUv: ec && y(s.specularColorMap.channel),
              specularIntensityMapUv: eh && y(s.specularIntensityMap.channel),
              transmissionMapUv: ed && y(s.transmissionMap.channel),
              thicknessMapUv: ep && y(s.thicknessMap.channel),
              alphaMapUv: em && y(s.alphaMap.channel),
              vertexTangents: !!A.attributes.tangent && (W || J),
              vertexColors: s.vertexColors,
              vertexAlphas:
                !0 === s.vertexColors &&
                !!A.attributes.color &&
                4 === A.attributes.color.itemSize,
              vertexUv1s: ey,
              vertexUv2s: ex,
              vertexUv3s: eb,
              pointsUvs: !0 === b.isPoints && !!A.attributes.uv && (z || em),
              fog: !!T,
              useFog: !0 === s.fog,
              fogExp2: T && T.isFogExp2,
              flatShading: !0 === s.flatShading,
              sizeAttenuation: !0 === s.sizeAttenuation,
              logarithmicDepthBuffer: f,
              skinning: !0 === b.isSkinnedMesh,
              morphTargets: void 0 !== A.morphAttributes.position,
              morphNormals: void 0 !== A.morphAttributes.normal,
              morphColors: void 0 !== A.morphAttributes.color,
              morphTargetsCount: D,
              morphTextureStride: U,
              numDirLights: o.directional.length,
              numPointLights: o.point.length,
              numSpotLights: o.spot.length,
              numSpotLightMaps: o.spotLightMap.length,
              numRectAreaLights: o.rectArea.length,
              numHemiLights: o.hemi.length,
              numDirLightShadows: o.directionalShadowMap.length,
              numPointLightShadows: o.pointShadowMap.length,
              numSpotLightShadows: o.spotShadowMap.length,
              numSpotLightShadowsWithMaps: o.numSpotLightShadowsWithMaps,
              numClippingPlanes: a.numPlanes,
              numClipIntersection: a.numIntersection,
              dithering: s.dithering,
              shadowMapEnabled: e.shadowMap.enabled && d.length > 0,
              shadowMapType: e.shadowMap.type,
              toneMapping: eS,
              useLegacyLights: e._useLegacyLights,
              decodeVideoTexture:
                z && !0 === s.map.isVideoTexture && s.map.colorSpace === L,
              premultipliedAlpha: s.premultipliedAlpha,
              doubleSided: s.side === u,
              flipSided: s.side === l,
              useDepthPacking: s.depthPacking >= 0,
              depthPacking: s.depthPacking || 0,
              index0AttributeName: s.index0AttributeName,
              extensionDerivatives: ev && !0 === s.extensions.derivatives,
              extensionFragDepth: ev && !0 === s.extensions.fragDepth,
              extensionDrawBuffers: ev && !0 === s.extensions.drawBuffers,
              extensionShaderTextureLOD:
                ev && !0 === s.extensions.shaderTextureLOD,
              rendererExtensionFragDepth: p || r.has("EXT_frag_depth"),
              rendererExtensionDrawBuffers: p || r.has("WEBGL_draw_buffers"),
              rendererExtensionShaderTextureLod:
                p || r.has("EXT_shader_texture_lod"),
              customProgramCacheKey: s.customProgramCacheKey(),
            };
            return eE;
          },
          getProgramCacheKey: function (t) {
            let n = [];
            if (
              (t.shaderID
                ? n.push(t.shaderID)
                : (n.push(t.customVertexShaderID),
                  n.push(t.customFragmentShaderID)),
              void 0 !== t.defines)
            )
              for (let e in t.defines) n.push(e), n.push(t.defines[e]);
            return (
              !1 === t.isRawShaderMaterial &&
                (n.push(t.precision),
                n.push(t.outputColorSpace),
                n.push(t.envMapMode),
                n.push(t.envMapCubeUVHeight),
                n.push(t.mapUv),
                n.push(t.alphaMapUv),
                n.push(t.lightMapUv),
                n.push(t.aoMapUv),
                n.push(t.bumpMapUv),
                n.push(t.normalMapUv),
                n.push(t.displacementMapUv),
                n.push(t.emissiveMapUv),
                n.push(t.metalnessMapUv),
                n.push(t.roughnessMapUv),
                n.push(t.anisotropyMapUv),
                n.push(t.clearcoatMapUv),
                n.push(t.clearcoatNormalMapUv),
                n.push(t.clearcoatRoughnessMapUv),
                n.push(t.iridescenceMapUv),
                n.push(t.iridescenceThicknessMapUv),
                n.push(t.sheenColorMapUv),
                n.push(t.sheenRoughnessMapUv),
                n.push(t.specularMapUv),
                n.push(t.specularColorMapUv),
                n.push(t.specularIntensityMapUv),
                n.push(t.transmissionMapUv),
                n.push(t.thicknessMapUv),
                n.push(t.combine),
                n.push(t.fogExp2),
                n.push(t.sizeAttenuation),
                n.push(t.morphTargetsCount),
                n.push(t.morphAttributeCount),
                n.push(t.numDirLights),
                n.push(t.numPointLights),
                n.push(t.numSpotLights),
                n.push(t.numSpotLightMaps),
                n.push(t.numHemiLights),
                n.push(t.numRectAreaLights),
                n.push(t.numDirLightShadows),
                n.push(t.numPointLightShadows),
                n.push(t.numSpotLightShadows),
                n.push(t.numSpotLightShadowsWithMaps),
                n.push(t.shadowMapType),
                n.push(t.toneMapping),
                n.push(t.numClippingPlanes),
                n.push(t.numClipIntersection),
                n.push(t.depthPacking),
                o.disableAll(),
                t.isWebGL2 && o.enable(0),
                t.supportsVertexTextures && o.enable(1),
                t.instancing && o.enable(2),
                t.instancingColor && o.enable(3),
                t.matcap && o.enable(4),
                t.envMap && o.enable(5),
                t.normalMapObjectSpace && o.enable(6),
                t.normalMapTangentSpace && o.enable(7),
                t.clearcoat && o.enable(8),
                t.iridescence && o.enable(9),
                t.alphaTest && o.enable(10),
                t.vertexColors && o.enable(11),
                t.vertexAlphas && o.enable(12),
                t.vertexUv1s && o.enable(13),
                t.vertexUv2s && o.enable(14),
                t.vertexUv3s && o.enable(15),
                t.vertexTangents && o.enable(16),
                t.anisotropy && o.enable(17),
                n.push(o.mask),
                o.disableAll(),
                t.fog && o.enable(0),
                t.useFog && o.enable(1),
                t.flatShading && o.enable(2),
                t.logarithmicDepthBuffer && o.enable(3),
                t.skinning && o.enable(4),
                t.morphTargets && o.enable(5),
                t.morphNormals && o.enable(6),
                t.morphColors && o.enable(7),
                t.premultipliedAlpha && o.enable(8),
                t.shadowMapEnabled && o.enable(9),
                t.useLegacyLights && o.enable(10),
                t.doubleSided && o.enable(11),
                t.flipSided && o.enable(12),
                t.useDepthPacking && o.enable(13),
                t.dithering && o.enable(14),
                t.transmission && o.enable(15),
                t.sheen && o.enable(16),
                t.opaque && o.enable(17),
                t.pointsUvs && o.enable(18),
                t.decodeVideoTexture && o.enable(19),
                n.push(o.mask),
                n.push(e.outputColorSpace)),
              n.push(t.customProgramCacheKey),
              n.join()
            );
          },
          getUniforms: function (e) {
            let t;
            let n = v[e.type];
            if (n) {
              let e = nR[n];
              t = nc.clone(e.uniforms);
            } else t = e.uniforms;
            return t;
          },
          acquireProgram: function (t, n) {
            let r;
            for (let e = 0, t = d.length; e < t; e++) {
              let t = d[e];
              if (t.cacheKey === n) {
                (r = t), ++r.usedTimes;
                break;
              }
            }
            return void 0 === r && ((r = new ii(e, n, t, s)), d.push(r)), r;
          },
          releaseProgram: function (e) {
            if (0 == --e.usedTimes) {
              let t = d.indexOf(e);
              (d[t] = d[d.length - 1]), d.pop(), e.destroy();
            }
          },
          releaseShaderCache: function (e) {
            c.remove(e);
          },
          programs: d,
          dispose: function () {
            c.dispose();
          },
        };
      }
      function iu() {
        let e = new WeakMap();
        return {
          get: function (t) {
            let n = e.get(t);
            return void 0 === n && ((n = {}), e.set(t, n)), n;
          },
          remove: function (t) {
            e.delete(t);
          },
          update: function (t, n, r) {
            e.get(t)[n] = r;
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function ic(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function ih(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function id() {
        let e = [],
          t = 0,
          n = [],
          r = [],
          i = [];
        function s(n, r, i, s, a, o) {
          let l = e[t];
          return (
            void 0 === l
              ? ((l = {
                  id: n.id,
                  object: n,
                  geometry: r,
                  material: i,
                  groupOrder: s,
                  renderOrder: n.renderOrder,
                  z: a,
                  group: o,
                }),
                (e[t] = l))
              : ((l.id = n.id),
                (l.object = n),
                (l.geometry = r),
                (l.material = i),
                (l.groupOrder = s),
                (l.renderOrder = n.renderOrder),
                (l.z = a),
                (l.group = o)),
            t++,
            l
          );
        }
        return {
          opaque: n,
          transmissive: r,
          transparent: i,
          init: function () {
            (t = 0), (n.length = 0), (r.length = 0), (i.length = 0);
          },
          push: function (e, t, a, o, l, u) {
            let c = s(e, t, a, o, l, u);
            a.transmission > 0
              ? r.push(c)
              : !0 === a.transparent
              ? i.push(c)
              : n.push(c);
          },
          unshift: function (e, t, a, o, l, u) {
            let c = s(e, t, a, o, l, u);
            a.transmission > 0
              ? r.unshift(c)
              : !0 === a.transparent
              ? i.unshift(c)
              : n.unshift(c);
          },
          finish: function () {
            for (let n = t, r = e.length; n < r; n++) {
              let t = e[n];
              if (null === t.id) break;
              (t.id = null),
                (t.object = null),
                (t.geometry = null),
                (t.material = null),
                (t.group = null);
            }
          },
          sort: function (e, t) {
            n.length > 1 && n.sort(e || ic),
              r.length > 1 && r.sort(t || ih),
              i.length > 1 && i.sort(t || ih);
          },
        };
      }
      function ip() {
        let e = new WeakMap();
        return {
          get: function (t, n) {
            let r;
            let i = e.get(t);
            return (
              void 0 === i
                ? ((r = new id()), e.set(t, [r]))
                : n >= i.length
                ? ((r = new id()), i.push(r))
                : (r = i[n]),
              r
            );
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function im() {
        let e = {};
        return {
          get: function (t) {
            let n;
            if (void 0 !== e[t.id]) return e[t.id];
            switch (t.type) {
              case "DirectionalLight":
                n = { direction: new eM(), color: new tN() };
                break;
              case "SpotLight":
                n = {
                  position: new eM(),
                  direction: new eM(),
                  color: new tN(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                };
                break;
              case "PointLight":
                n = {
                  position: new eM(),
                  color: new tN(),
                  distance: 0,
                  decay: 0,
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new eM(),
                  skyColor: new tN(),
                  groundColor: new tN(),
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new tN(),
                  position: new eM(),
                  halfWidth: new eM(),
                  halfHeight: new eM(),
                };
            }
            return (e[t.id] = n), n;
          },
        };
      }
      let ig = 0;
      function i_(e, t) {
        return (
          (t.castShadow ? 2 : 0) -
          (e.castShadow ? 2 : 0) +
          (t.map ? 1 : 0) -
          (e.map ? 1 : 0)
        );
      }
      function iv(e, t) {
        let n = new im(),
          r = (function () {
            let e = {};
            return {
              get: function (t) {
                let n;
                if (void 0 !== e[t.id]) return e[t.id];
                switch (t.type) {
                  case "DirectionalLight":
                  case "SpotLight":
                    n = {
                      shadowBias: 0,
                      shadowNormalBias: 0,
                      shadowRadius: 1,
                      shadowMapSize: new Q(),
                    };
                    break;
                  case "PointLight":
                    n = {
                      shadowBias: 0,
                      shadowNormalBias: 0,
                      shadowRadius: 1,
                      shadowMapSize: new Q(),
                      shadowCameraNear: 1,
                      shadowCameraFar: 1e3,
                    };
                }
                return (e[t.id] = n), n;
              },
            };
          })(),
          i = {
            version: 0,
            hash: {
              directionalLength: -1,
              pointLength: -1,
              spotLength: -1,
              rectAreaLength: -1,
              hemiLength: -1,
              numDirectionalShadows: -1,
              numPointShadows: -1,
              numSpotShadows: -1,
              numSpotMaps: -1,
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotLightMap: [],
            spotShadow: [],
            spotShadowMap: [],
            spotLightMatrix: [],
            rectArea: [],
            rectAreaLTC1: null,
            rectAreaLTC2: null,
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            numSpotLightShadowsWithMaps: 0,
          };
        for (let e = 0; e < 9; e++) i.probe.push(new eM());
        let s = new eM(),
          a = new e0(),
          o = new e0();
        return {
          setup: function (s, a) {
            let o = 0,
              l = 0,
              u = 0;
            for (let e = 0; e < 9; e++) i.probe[e].set(0, 0, 0);
            let c = 0,
              h = 0,
              d = 0,
              p = 0,
              f = 0,
              m = 0,
              g = 0,
              _ = 0,
              v = 0,
              y = 0;
            s.sort(i_);
            let x = !0 === a ? Math.PI : 1;
            for (let e = 0, t = s.length; e < t; e++) {
              let t = s[e],
                a = t.color,
                b = t.intensity,
                S = t.distance,
                E = t.shadow && t.shadow.map ? t.shadow.map.texture : null;
              if (t.isAmbientLight)
                (o += a.r * b * x), (l += a.g * b * x), (u += a.b * b * x);
              else if (t.isLightProbe)
                for (let e = 0; e < 9; e++)
                  i.probe[e].addScaledVector(t.sh.coefficients[e], b);
              else if (t.isDirectionalLight) {
                let e = n.get(t);
                if (
                  (e.color.copy(t.color).multiplyScalar(t.intensity * x),
                  t.castShadow)
                ) {
                  let e = t.shadow,
                    n = r.get(t);
                  (n.shadowBias = e.bias),
                    (n.shadowNormalBias = e.normalBias),
                    (n.shadowRadius = e.radius),
                    (n.shadowMapSize = e.mapSize),
                    (i.directionalShadow[c] = n),
                    (i.directionalShadowMap[c] = E),
                    (i.directionalShadowMatrix[c] = t.shadow.matrix),
                    m++;
                }
                (i.directional[c] = e), c++;
              } else if (t.isSpotLight) {
                let e = n.get(t);
                e.position.setFromMatrixPosition(t.matrixWorld),
                  e.color.copy(a).multiplyScalar(b * x),
                  (e.distance = S),
                  (e.coneCos = Math.cos(t.angle)),
                  (e.penumbraCos = Math.cos(t.angle * (1 - t.penumbra))),
                  (e.decay = t.decay),
                  (i.spot[d] = e);
                let s = t.shadow;
                if (
                  (t.map &&
                    ((i.spotLightMap[v] = t.map),
                    v++,
                    s.updateMatrices(t),
                    t.castShadow && y++),
                  (i.spotLightMatrix[d] = s.matrix),
                  t.castShadow)
                ) {
                  let e = r.get(t);
                  (e.shadowBias = s.bias),
                    (e.shadowNormalBias = s.normalBias),
                    (e.shadowRadius = s.radius),
                    (e.shadowMapSize = s.mapSize),
                    (i.spotShadow[d] = e),
                    (i.spotShadowMap[d] = E),
                    _++;
                }
                d++;
              } else if (t.isRectAreaLight) {
                let e = n.get(t);
                e.color.copy(a).multiplyScalar(b),
                  e.halfWidth.set(0.5 * t.width, 0, 0),
                  e.halfHeight.set(0, 0.5 * t.height, 0),
                  (i.rectArea[p] = e),
                  p++;
              } else if (t.isPointLight) {
                let e = n.get(t);
                if (
                  (e.color.copy(t.color).multiplyScalar(t.intensity * x),
                  (e.distance = t.distance),
                  (e.decay = t.decay),
                  t.castShadow)
                ) {
                  let e = t.shadow,
                    n = r.get(t);
                  (n.shadowBias = e.bias),
                    (n.shadowNormalBias = e.normalBias),
                    (n.shadowRadius = e.radius),
                    (n.shadowMapSize = e.mapSize),
                    (n.shadowCameraNear = e.camera.near),
                    (n.shadowCameraFar = e.camera.far),
                    (i.pointShadow[h] = n),
                    (i.pointShadowMap[h] = E),
                    (i.pointShadowMatrix[h] = t.shadow.matrix),
                    g++;
                }
                (i.point[h] = e), h++;
              } else if (t.isHemisphereLight) {
                let e = n.get(t);
                e.skyColor.copy(t.color).multiplyScalar(b * x),
                  e.groundColor.copy(t.groundColor).multiplyScalar(b * x),
                  (i.hemi[f] = e),
                  f++;
              }
            }
            p > 0 &&
              (t.isWebGL2
                ? ((i.rectAreaLTC1 = nC.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = nC.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_float_linear")
                ? ((i.rectAreaLTC1 = nC.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = nC.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_half_float_linear")
                ? ((i.rectAreaLTC1 = nC.LTC_HALF_1),
                  (i.rectAreaLTC2 = nC.LTC_HALF_2))
                : console.error(
                    "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
                  )),
              (i.ambient[0] = o),
              (i.ambient[1] = l),
              (i.ambient[2] = u);
            let b = i.hash;
            (b.directionalLength !== c ||
              b.pointLength !== h ||
              b.spotLength !== d ||
              b.rectAreaLength !== p ||
              b.hemiLength !== f ||
              b.numDirectionalShadows !== m ||
              b.numPointShadows !== g ||
              b.numSpotShadows !== _ ||
              b.numSpotMaps !== v) &&
              ((i.directional.length = c),
              (i.spot.length = d),
              (i.rectArea.length = p),
              (i.point.length = h),
              (i.hemi.length = f),
              (i.directionalShadow.length = m),
              (i.directionalShadowMap.length = m),
              (i.pointShadow.length = g),
              (i.pointShadowMap.length = g),
              (i.spotShadow.length = _),
              (i.spotShadowMap.length = _),
              (i.directionalShadowMatrix.length = m),
              (i.pointShadowMatrix.length = g),
              (i.spotLightMatrix.length = _ + v - y),
              (i.spotLightMap.length = v),
              (i.numSpotLightShadowsWithMaps = y),
              (b.directionalLength = c),
              (b.pointLength = h),
              (b.spotLength = d),
              (b.rectAreaLength = p),
              (b.hemiLength = f),
              (b.numDirectionalShadows = m),
              (b.numPointShadows = g),
              (b.numSpotShadows = _),
              (b.numSpotMaps = v),
              (i.version = ig++));
          },
          setupView: function (e, t) {
            let n = 0,
              r = 0,
              l = 0,
              u = 0,
              c = 0,
              h = t.matrixWorldInverse;
            for (let t = 0, d = e.length; t < d; t++) {
              let d = e[t];
              if (d.isDirectionalLight) {
                let e = i.directional[n];
                e.direction.setFromMatrixPosition(d.matrixWorld),
                  s.setFromMatrixPosition(d.target.matrixWorld),
                  e.direction.sub(s),
                  e.direction.transformDirection(h),
                  n++;
              } else if (d.isSpotLight) {
                let e = i.spot[l];
                e.position.setFromMatrixPosition(d.matrixWorld),
                  e.position.applyMatrix4(h),
                  e.direction.setFromMatrixPosition(d.matrixWorld),
                  s.setFromMatrixPosition(d.target.matrixWorld),
                  e.direction.sub(s),
                  e.direction.transformDirection(h),
                  l++;
              } else if (d.isRectAreaLight) {
                let e = i.rectArea[u];
                e.position.setFromMatrixPosition(d.matrixWorld),
                  e.position.applyMatrix4(h),
                  o.identity(),
                  a.copy(d.matrixWorld),
                  a.premultiply(h),
                  o.extractRotation(a),
                  e.halfWidth.set(0.5 * d.width, 0, 0),
                  e.halfHeight.set(0, 0.5 * d.height, 0),
                  e.halfWidth.applyMatrix4(o),
                  e.halfHeight.applyMatrix4(o),
                  u++;
              } else if (d.isPointLight) {
                let e = i.point[r];
                e.position.setFromMatrixPosition(d.matrixWorld),
                  e.position.applyMatrix4(h),
                  r++;
              } else if (d.isHemisphereLight) {
                let e = i.hemi[c];
                e.direction.setFromMatrixPosition(d.matrixWorld),
                  e.direction.transformDirection(h),
                  c++;
              }
            }
          },
          state: i,
        };
      }
      function iy(e, t) {
        let n = new iv(e, t),
          r = [],
          i = [];
        return {
          init: function () {
            (r.length = 0), (i.length = 0);
          },
          state: { lightsArray: r, shadowsArray: i, lights: n },
          setupLights: function (e) {
            n.setup(r, e);
          },
          setupLightsView: function (e) {
            n.setupView(r, e);
          },
          pushLight: function (e) {
            r.push(e);
          },
          pushShadow: function (e) {
            i.push(e);
          },
        };
      }
      function ix(e, t) {
        let n = new WeakMap();
        return {
          get: function (r, i = 0) {
            let s;
            let a = n.get(r);
            return (
              void 0 === a
                ? ((s = new iy(e, t)), n.set(r, [s]))
                : i >= a.length
                ? ((s = new iy(e, t)), a.push(s))
                : (s = a[i]),
              s
            );
          },
          dispose: function () {
            n = new WeakMap();
          },
        };
      }
      class ib extends tR {
        constructor(e) {
          super(),
            (this.isMeshDepthMaterial = !0),
            (this.type = "MeshDepthMaterial"),
            (this.depthPacking = 3200),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.depthPacking = e.depthPacking),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            this
          );
        }
      }
      class iS extends tR {
        constructor(e) {
          super(),
            (this.isMeshDistanceMaterial = !0),
            (this.type = "MeshDistanceMaterial"),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            this
          );
        }
      }
      function iE(e, t, n) {
        let r = new nE(),
          i = new Q(),
          s = new Q(),
          a = new ey(),
          h = new ib({ depthPacking: 3201 }),
          d = new iS(),
          p = {},
          f = n.maxTextureSize,
          m = { [o]: l, [l]: o, [u]: u },
          g = new nh({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
              shadow_pass: { value: null },
              resolution: { value: new Q() },
              radius: { value: 4 },
            },
            vertexShader:
              "void main() {\n	gl_Position = vec4( position, 1.0 );\n}",
            fragmentShader:
              "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
          }),
          _ = g.clone();
        _.defines.HORIZONTAL_PASS = 1;
        let v = new tJ();
        v.setAttribute(
          "position",
          new tz(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
        );
        let x = new ni(v, g),
          b = this;
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = 1);
        let S = this.type;
        function E(t, n, r, i) {
          let s = null,
            a =
              !0 === r.isPointLight
                ? t.customDistanceMaterial
                : t.customDepthMaterial;
          if (void 0 !== a) s = a;
          else if (
            ((s = !0 === r.isPointLight ? d : h),
            (e.localClippingEnabled &&
              !0 === n.clipShadows &&
              Array.isArray(n.clippingPlanes) &&
              0 !== n.clippingPlanes.length) ||
              (n.displacementMap && 0 !== n.displacementScale) ||
              (n.alphaMap && n.alphaTest > 0) ||
              (n.map && n.alphaTest > 0))
          ) {
            let e = s.uuid,
              t = n.uuid,
              r = p[e];
            void 0 === r && ((r = {}), (p[e] = r));
            let i = r[t];
            void 0 === i && ((i = s.clone()), (r[t] = i)), (s = i);
          }
          if (
            ((s.visible = n.visible),
            (s.wireframe = n.wireframe),
            3 === i
              ? (s.side = null !== n.shadowSide ? n.shadowSide : n.side)
              : (s.side = null !== n.shadowSide ? n.shadowSide : m[n.side]),
            (s.alphaMap = n.alphaMap),
            (s.alphaTest = n.alphaTest),
            (s.map = n.map),
            (s.clipShadows = n.clipShadows),
            (s.clippingPlanes = n.clippingPlanes),
            (s.clipIntersection = n.clipIntersection),
            (s.displacementMap = n.displacementMap),
            (s.displacementScale = n.displacementScale),
            (s.displacementBias = n.displacementBias),
            (s.wireframeLinewidth = n.wireframeLinewidth),
            (s.linewidth = n.linewidth),
            !0 === r.isPointLight && !0 === s.isMeshDistanceMaterial)
          ) {
            let t = e.properties.get(s);
            t.light = r;
          }
          return s;
        }
        this.render = function (n, o, l) {
          if (
            !1 === b.enabled ||
            (!1 === b.autoUpdate && !1 === b.needsUpdate) ||
            0 === n.length
          )
            return;
          let u = e.getRenderTarget(),
            h = e.getActiveCubeFace(),
            d = e.getActiveMipmapLevel(),
            p = e.state;
          p.setBlending(c),
            p.buffers.color.setClear(1, 1, 1, 1),
            p.buffers.depth.setTest(!0),
            p.setScissorTest(!1);
          let m = 3 !== S && 3 === this.type,
            v = 3 === S && 3 !== this.type;
          for (let u = 0, c = n.length; u < c; u++) {
            let c = n[u],
              h = c.shadow;
            if (void 0 === h) {
              console.warn("THREE.WebGLShadowMap:", c, "has no shadow.");
              continue;
            }
            if (!1 === h.autoUpdate && !1 === h.needsUpdate) continue;
            i.copy(h.mapSize);
            let d = h.getFrameExtents();
            if (
              (i.multiply(d),
              s.copy(h.mapSize),
              (i.x > f || i.y > f) &&
                (i.x > f &&
                  ((s.x = Math.floor(f / d.x)),
                  (i.x = s.x * d.x),
                  (h.mapSize.x = s.x)),
                i.y > f &&
                  ((s.y = Math.floor(f / d.y)),
                  (i.y = s.y * d.y),
                  (h.mapSize.y = s.y))),
              null === h.map || !0 === m || !0 === v)
            ) {
              let e = 3 !== this.type ? { minFilter: y, magFilter: y } : {};
              null !== h.map && h.map.dispose(),
                (h.map = new eb(i.x, i.y, e)),
                (h.map.texture.name = c.name + ".shadowMap"),
                h.camera.updateProjectionMatrix();
            }
            e.setRenderTarget(h.map), e.clear();
            let b = h.getViewportCount();
            for (let n = 0; n < b; n++) {
              let i = h.getViewport(n);
              a.set(s.x * i.x, s.y * i.y, s.x * i.z, s.y * i.w),
                p.viewport(a),
                h.updateMatrices(c, n),
                (r = h.getFrustum()),
                (function n(i, s, a, o, l) {
                  if (!1 === i.visible) return;
                  let u = i.layers.test(s.layers);
                  if (
                    u &&
                    (i.isMesh || i.isLine || i.isPoints) &&
                    (i.castShadow || (i.receiveShadow && 3 === l)) &&
                    (!i.frustumCulled || r.intersectsObject(i))
                  ) {
                    i.modelViewMatrix.multiplyMatrices(
                      a.matrixWorldInverse,
                      i.matrixWorld
                    );
                    let n = t.update(i),
                      r = i.material;
                    if (Array.isArray(r)) {
                      let t = n.groups;
                      for (let s = 0, u = t.length; s < u; s++) {
                        let u = t[s],
                          c = r[u.materialIndex];
                        if (c && c.visible) {
                          let t = E(i, c, o, l);
                          e.renderBufferDirect(a, null, n, t, i, u);
                        }
                      }
                    } else if (r.visible) {
                      let t = E(i, r, o, l);
                      e.renderBufferDirect(a, null, n, t, i, null);
                    }
                  }
                  let c = i.children;
                  for (let e = 0, t = c.length; e < t; e++) n(c[e], s, a, o, l);
                })(o, l, h.camera, c, this.type);
            }
            !0 !== h.isPointLightShadow &&
              3 === this.type &&
              (function (n, r) {
                let s = t.update(x);
                g.defines.VSM_SAMPLES !== n.blurSamples &&
                  ((g.defines.VSM_SAMPLES = n.blurSamples),
                  (_.defines.VSM_SAMPLES = n.blurSamples),
                  (g.needsUpdate = !0),
                  (_.needsUpdate = !0)),
                  null === n.mapPass && (n.mapPass = new eb(i.x, i.y)),
                  (g.uniforms.shadow_pass.value = n.map.texture),
                  (g.uniforms.resolution.value = n.mapSize),
                  (g.uniforms.radius.value = n.radius),
                  e.setRenderTarget(n.mapPass),
                  e.clear(),
                  e.renderBufferDirect(r, null, s, g, x, null),
                  (_.uniforms.shadow_pass.value = n.mapPass.texture),
                  (_.uniforms.resolution.value = n.mapSize),
                  (_.uniforms.radius.value = n.radius),
                  e.setRenderTarget(n.map),
                  e.clear(),
                  e.renderBufferDirect(r, null, s, _, x, null);
              })(h, l),
              (h.needsUpdate = !1);
          }
          (S = this.type), (b.needsUpdate = !1), e.setRenderTarget(u, h, d);
        };
      }
      function iM(e, t, n) {
        let r = n.isWebGL2,
          i = new (function () {
            let t = !1,
              n = new ey(),
              r = null,
              i = new ey(0, 0, 0, 0);
            return {
              setMask: function (n) {
                r === n || t || (e.colorMask(n, n, n, n), (r = n));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t, r, s, a, o) {
                !0 === o && ((t *= a), (r *= a), (s *= a)),
                  n.set(t, r, s, a),
                  !1 === i.equals(n) && (e.clearColor(t, r, s, a), i.copy(n));
              },
              reset: function () {
                (t = !1), (r = null), i.set(-1, 0, 0, 0);
              },
            };
          })(),
          s = new (function () {
            let t = !1,
              n = null,
              r = null,
              i = null;
            return {
              setTest: function (t) {
                t ? $(e.DEPTH_TEST) : X(e.DEPTH_TEST);
              },
              setMask: function (r) {
                n === r || t || (e.depthMask(r), (n = r));
              },
              setFunc: function (t) {
                if (r !== t) {
                  switch (t) {
                    case 0:
                      e.depthFunc(e.NEVER);
                      break;
                    case 1:
                      e.depthFunc(e.ALWAYS);
                      break;
                    case 2:
                      e.depthFunc(e.LESS);
                      break;
                    case 3:
                    default:
                      e.depthFunc(e.LEQUAL);
                      break;
                    case 4:
                      e.depthFunc(e.EQUAL);
                      break;
                    case 5:
                      e.depthFunc(e.GEQUAL);
                      break;
                    case 6:
                      e.depthFunc(e.GREATER);
                      break;
                    case 7:
                      e.depthFunc(e.NOTEQUAL);
                  }
                  r = t;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                i !== t && (e.clearDepth(t), (i = t));
              },
              reset: function () {
                (t = !1), (n = null), (r = null), (i = null);
              },
            };
          })(),
          a = new (function () {
            let t = !1,
              n = null,
              r = null,
              i = null,
              s = null,
              a = null,
              o = null,
              l = null,
              u = null;
            return {
              setTest: function (n) {
                t || (n ? $(e.STENCIL_TEST) : X(e.STENCIL_TEST));
              },
              setMask: function (r) {
                n === r || t || (e.stencilMask(r), (n = r));
              },
              setFunc: function (t, n, a) {
                (r !== t || i !== n || s !== a) &&
                  (e.stencilFunc(t, n, a), (r = t), (i = n), (s = a));
              },
              setOp: function (t, n, r) {
                (a !== t || o !== n || l !== r) &&
                  (e.stencilOp(t, n, r), (a = t), (o = n), (l = r));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                u !== t && (e.clearStencil(t), (u = t));
              },
              reset: function () {
                (t = !1),
                  (n = null),
                  (r = null),
                  (i = null),
                  (s = null),
                  (a = null),
                  (o = null),
                  (l = null),
                  (u = null);
              },
            };
          })(),
          o = new WeakMap(),
          m = new WeakMap(),
          g = {},
          _ = {},
          v = new WeakMap(),
          y = [],
          x = null,
          b = !1,
          S = null,
          E = null,
          M = null,
          w = null,
          T = null,
          A = null,
          C = null,
          R = !1,
          P = null,
          O = null,
          L = null,
          I = null,
          N = null,
          D = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
          U = !1,
          k = e.getParameter(e.VERSION);
        -1 !== k.indexOf("WebGL")
          ? (U = parseFloat(/^WebGL (\d)/.exec(k)[1]) >= 1)
          : -1 !== k.indexOf("OpenGL ES") &&
            (U = parseFloat(/^OpenGL ES (\d)/.exec(k)[1]) >= 2);
        let F = null,
          z = {},
          B = e.getParameter(e.SCISSOR_BOX),
          V = e.getParameter(e.VIEWPORT),
          j = new ey().fromArray(B),
          H = new ey().fromArray(V);
        function G(t, n, i, s) {
          let a = new Uint8Array(4),
            o = e.createTexture();
          e.bindTexture(t, o),
            e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
            e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
          for (let o = 0; o < i; o++)
            r && (t === e.TEXTURE_3D || t === e.TEXTURE_2D_ARRAY)
              ? e.texImage3D(
                  n,
                  0,
                  e.RGBA,
                  1,
                  1,
                  s,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  a
                )
              : e.texImage2D(
                  n + o,
                  0,
                  e.RGBA,
                  1,
                  1,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  a
                );
          return o;
        }
        let W = {};
        function $(t) {
          !0 !== g[t] && (e.enable(t), (g[t] = !0));
        }
        function X(t) {
          !1 !== g[t] && (e.disable(t), (g[t] = !1));
        }
        (W[e.TEXTURE_2D] = G(e.TEXTURE_2D, e.TEXTURE_2D, 1)),
          (W[e.TEXTURE_CUBE_MAP] = G(
            e.TEXTURE_CUBE_MAP,
            e.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
          )),
          r &&
            ((W[e.TEXTURE_2D_ARRAY] = G(
              e.TEXTURE_2D_ARRAY,
              e.TEXTURE_2D_ARRAY,
              1,
              1
            )),
            (W[e.TEXTURE_3D] = G(e.TEXTURE_3D, e.TEXTURE_3D, 1, 1))),
          i.setClear(0, 0, 0, 1),
          s.setClear(1),
          a.setClear(0),
          $(e.DEPTH_TEST),
          s.setFunc(3),
          Z(!1),
          K(1),
          $(e.CULL_FACE),
          J(c);
        let q = {
          100: e.FUNC_ADD,
          101: e.FUNC_SUBTRACT,
          102: e.FUNC_REVERSE_SUBTRACT,
        };
        if (r) (q[103] = e.MIN), (q[104] = e.MAX);
        else {
          let e = t.get("EXT_blend_minmax");
          null !== e && ((q[103] = e.MIN_EXT), (q[104] = e.MAX_EXT));
        }
        let Y = {
          200: e.ZERO,
          201: e.ONE,
          202: e.SRC_COLOR,
          204: e.SRC_ALPHA,
          210: e.SRC_ALPHA_SATURATE,
          208: e.DST_COLOR,
          206: e.DST_ALPHA,
          203: e.ONE_MINUS_SRC_COLOR,
          205: e.ONE_MINUS_SRC_ALPHA,
          209: e.ONE_MINUS_DST_COLOR,
          207: e.ONE_MINUS_DST_ALPHA,
        };
        function J(t, n, r, i, s, a, o, l) {
          if (t === c) {
            !0 === b && (X(e.BLEND), (b = !1));
            return;
          }
          if ((!1 === b && ($(e.BLEND), (b = !0)), 5 !== t)) {
            if (t !== S || l !== R) {
              if (
                ((100 !== E || 100 !== T) &&
                  (e.blendEquation(e.FUNC_ADD), (E = 100), (T = 100)),
                l)
              )
                switch (t) {
                  case h:
                    e.blendFuncSeparate(
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case d:
                    e.blendFunc(e.ONE, e.ONE);
                    break;
                  case p:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case f:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.SRC_COLOR,
                      e.ZERO,
                      e.SRC_ALPHA
                    );
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              else
                switch (t) {
                  case h:
                    e.blendFuncSeparate(
                      e.SRC_ALPHA,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case d:
                    e.blendFunc(e.SRC_ALPHA, e.ONE);
                    break;
                  case p:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case f:
                    e.blendFunc(e.ZERO, e.SRC_COLOR);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              (M = null), (w = null), (A = null), (C = null), (S = t), (R = l);
            }
            return;
          }
          (s = s || n),
            (a = a || r),
            (o = o || i),
            (n !== E || s !== T) &&
              (e.blendEquationSeparate(q[n], q[s]), (E = n), (T = s)),
            (r !== M || i !== w || a !== A || o !== C) &&
              (e.blendFuncSeparate(Y[r], Y[i], Y[a], Y[o]),
              (M = r),
              (w = i),
              (A = a),
              (C = o)),
            (S = t),
            (R = !1);
        }
        function Z(t) {
          P !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), (P = t));
        }
        function K(t) {
          0 !== t
            ? ($(e.CULL_FACE),
              t !== O &&
                (1 === t
                  ? e.cullFace(e.BACK)
                  : 2 === t
                  ? e.cullFace(e.FRONT)
                  : e.cullFace(e.FRONT_AND_BACK)))
            : X(e.CULL_FACE),
            (O = t);
        }
        function Q(t, n, r) {
          t
            ? ($(e.POLYGON_OFFSET_FILL),
              (I !== n || N !== r) && (e.polygonOffset(n, r), (I = n), (N = r)))
            : X(e.POLYGON_OFFSET_FILL);
        }
        return {
          buffers: { color: i, depth: s, stencil: a },
          enable: $,
          disable: X,
          bindFramebuffer: function (t, n) {
            return (
              _[t] !== n &&
              (e.bindFramebuffer(t, n),
              (_[t] = n),
              r &&
                (t === e.DRAW_FRAMEBUFFER && (_[e.FRAMEBUFFER] = n),
                t === e.FRAMEBUFFER && (_[e.DRAW_FRAMEBUFFER] = n)),
              !0)
            );
          },
          drawBuffers: function (r, i) {
            let s = y,
              a = !1;
            if (r) {
              if (
                (void 0 === (s = v.get(i)) && ((s = []), v.set(i, s)),
                r.isWebGLMultipleRenderTargets)
              ) {
                let t = r.texture;
                if (s.length !== t.length || s[0] !== e.COLOR_ATTACHMENT0) {
                  for (let n = 0, r = t.length; n < r; n++)
                    s[n] = e.COLOR_ATTACHMENT0 + n;
                  (s.length = t.length), (a = !0);
                }
              } else
                s[0] !== e.COLOR_ATTACHMENT0 &&
                  ((s[0] = e.COLOR_ATTACHMENT0), (a = !0));
            } else s[0] !== e.BACK && ((s[0] = e.BACK), (a = !0));
            a &&
              (n.isWebGL2
                ? e.drawBuffers(s)
                : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(s));
          },
          useProgram: function (t) {
            return x !== t && (e.useProgram(t), (x = t), !0);
          },
          setBlending: J,
          setMaterial: function (t, n) {
            t.side === u ? X(e.CULL_FACE) : $(e.CULL_FACE);
            let r = t.side === l;
            n && (r = !r),
              Z(r),
              t.blending === h && !1 === t.transparent
                ? J(c)
                : J(
                    t.blending,
                    t.blendEquation,
                    t.blendSrc,
                    t.blendDst,
                    t.blendEquationAlpha,
                    t.blendSrcAlpha,
                    t.blendDstAlpha,
                    t.premultipliedAlpha
                  ),
              s.setFunc(t.depthFunc),
              s.setTest(t.depthTest),
              s.setMask(t.depthWrite),
              i.setMask(t.colorWrite);
            let o = t.stencilWrite;
            a.setTest(o),
              o &&
                (a.setMask(t.stencilWriteMask),
                a.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
                a.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
              Q(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits),
              !0 === t.alphaToCoverage
                ? $(e.SAMPLE_ALPHA_TO_COVERAGE)
                : X(e.SAMPLE_ALPHA_TO_COVERAGE);
          },
          setFlipSided: Z,
          setCullFace: K,
          setLineWidth: function (t) {
            t !== L && (U && e.lineWidth(t), (L = t));
          },
          setPolygonOffset: Q,
          setScissorTest: function (t) {
            t ? $(e.SCISSOR_TEST) : X(e.SCISSOR_TEST);
          },
          activeTexture: function (t) {
            void 0 === t && (t = e.TEXTURE0 + D - 1),
              F !== t && (e.activeTexture(t), (F = t));
          },
          bindTexture: function (t, n, r) {
            void 0 === r && (r = null === F ? e.TEXTURE0 + D - 1 : F);
            let i = z[r];
            void 0 === i &&
              ((i = { type: void 0, texture: void 0 }), (z[r] = i)),
              (i.type !== t || i.texture !== n) &&
                (F !== r && (e.activeTexture(r), (F = r)),
                e.bindTexture(t, n || W[t]),
                (i.type = t),
                (i.texture = n));
          },
          unbindTexture: function () {
            let t = z[F];
            void 0 !== t &&
              void 0 !== t.type &&
              (e.bindTexture(t.type, null),
              (t.type = void 0),
              (t.texture = void 0));
          },
          compressedTexImage2D: function () {
            try {
              e.compressedTexImage2D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          compressedTexImage3D: function () {
            try {
              e.compressedTexImage3D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          texImage2D: function () {
            try {
              e.texImage2D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          texImage3D: function () {
            try {
              e.texImage3D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          updateUBOMapping: function (t, n) {
            let r = m.get(n);
            void 0 === r && ((r = new WeakMap()), m.set(n, r));
            let i = r.get(t);
            void 0 === i &&
              ((i = e.getUniformBlockIndex(n, t.name)), r.set(t, i));
          },
          uniformBlockBinding: function (t, n) {
            let r = m.get(n),
              i = r.get(t);
            o.get(n) !== i &&
              (e.uniformBlockBinding(n, i, t.__bindingPointIndex), o.set(n, i));
          },
          texStorage2D: function () {
            try {
              e.texStorage2D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          texStorage3D: function () {
            try {
              e.texStorage3D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          texSubImage2D: function () {
            try {
              e.texSubImage2D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          texSubImage3D: function () {
            try {
              e.texSubImage3D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          compressedTexSubImage2D: function () {
            try {
              e.compressedTexSubImage2D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          compressedTexSubImage3D: function () {
            try {
              e.compressedTexSubImage3D.apply(e, arguments);
            } catch (e) {
              console.error("THREE.WebGLState:", e);
            }
          },
          scissor: function (t) {
            !1 === j.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), j.copy(t));
          },
          viewport: function (t) {
            !1 === H.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), H.copy(t));
          },
          reset: function () {
            e.disable(e.BLEND),
              e.disable(e.CULL_FACE),
              e.disable(e.DEPTH_TEST),
              e.disable(e.POLYGON_OFFSET_FILL),
              e.disable(e.SCISSOR_TEST),
              e.disable(e.STENCIL_TEST),
              e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),
              e.blendEquation(e.FUNC_ADD),
              e.blendFunc(e.ONE, e.ZERO),
              e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO),
              e.colorMask(!0, !0, !0, !0),
              e.clearColor(0, 0, 0, 0),
              e.depthMask(!0),
              e.depthFunc(e.LESS),
              e.clearDepth(1),
              e.stencilMask(4294967295),
              e.stencilFunc(e.ALWAYS, 0, 4294967295),
              e.stencilOp(e.KEEP, e.KEEP, e.KEEP),
              e.clearStencil(0),
              e.cullFace(e.BACK),
              e.frontFace(e.CCW),
              e.polygonOffset(0, 0),
              e.activeTexture(e.TEXTURE0),
              e.bindFramebuffer(e.FRAMEBUFFER, null),
              !0 === r &&
                (e.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                e.bindFramebuffer(e.READ_FRAMEBUFFER, null)),
              e.useProgram(null),
              e.lineWidth(1),
              e.scissor(0, 0, e.canvas.width, e.canvas.height),
              e.viewport(0, 0, e.canvas.width, e.canvas.height),
              (g = {}),
              (F = null),
              (z = {}),
              (_ = {}),
              (v = new WeakMap()),
              (y = []),
              (x = null),
              (b = !1),
              (S = null),
              (E = null),
              (M = null),
              (w = null),
              (T = null),
              (A = null),
              (C = null),
              (R = !1),
              (P = null),
              (O = null),
              (L = null),
              (I = null),
              (N = null),
              j.set(0, 0, e.canvas.width, e.canvas.height),
              H.set(0, 0, e.canvas.width, e.canvas.height),
              i.reset(),
              s.reset(),
              a.reset();
          },
        };
      }
      function iw(e, t, n, r, i, s, a) {
        let o;
        let l = i.isWebGL2,
          u = i.maxTextures,
          c = i.maxCubemapSize,
          h = i.maxTextureSize,
          d = i.maxSamples,
          p = t.has("WEBGL_multisampled_render_to_texture")
            ? t.get("WEBGL_multisampled_render_to_texture")
            : null,
          f =
            "undefined" != typeof navigator &&
            /OculusBrowser/g.test(navigator.userAgent),
          m = new WeakMap(),
          A = new WeakMap(),
          C = !1;
        try {
          C =
            "undefined" != typeof OffscreenCanvas &&
            null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (e) {}
        function R(e, t) {
          return C ? new OffscreenCanvas(e, t) : er("canvas");
        }
        function P(e, t, n, r) {
          let i = 1;
          if (
            ((e.width > r || e.height > r) &&
              (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t)
          ) {
            if (
              ("undefined" != typeof HTMLImageElement &&
                e instanceof HTMLImageElement) ||
              ("undefined" != typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement) ||
              ("undefined" != typeof ImageBitmap && e instanceof ImageBitmap)
            ) {
              let r = t ? Y : Math.floor,
                s = r(i * e.width),
                a = r(i * e.height);
              void 0 === o && (o = R(s, a));
              let l = n ? R(s, a) : o;
              (l.width = s), (l.height = a);
              let u = l.getContext("2d");
              return (
                u.drawImage(e, 0, 0, s, a),
                console.warn(
                  "THREE.WebGLRenderer: Texture has been resized from (" +
                    e.width +
                    "x" +
                    e.height +
                    ") to (" +
                    s +
                    "x" +
                    a +
                    ")."
                ),
                l
              );
            }
            "data" in e &&
              console.warn(
                "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                  e.width +
                  "x" +
                  e.height +
                  ")."
              );
          }
          return e;
        }
        function O(e) {
          return X(e.width) && X(e.height);
        }
        function D(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== y && e.minFilter !== S
          );
        }
        function U(t) {
          e.generateMipmap(t);
        }
        function k(n, r, i, s, a = !1) {
          if (!1 === l) return r;
          if (null !== n) {
            if (void 0 !== e[n]) return e[n];
            console.warn(
              "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                n +
                "'"
            );
          }
          let o = r;
          return (
            r === e.RED &&
              (i === e.FLOAT && (o = e.R32F),
              i === e.HALF_FLOAT && (o = e.R16F),
              i === e.UNSIGNED_BYTE && (o = e.R8)),
            r === e.RED_INTEGER &&
              (i === e.UNSIGNED_BYTE && (o = e.R8UI),
              i === e.UNSIGNED_SHORT && (o = e.R16UI),
              i === e.UNSIGNED_INT && (o = e.R32UI),
              i === e.BYTE && (o = e.R8I),
              i === e.SHORT && (o = e.R16I),
              i === e.INT && (o = e.R32I)),
            r === e.RG &&
              (i === e.FLOAT && (o = e.RG32F),
              i === e.HALF_FLOAT && (o = e.RG16F),
              i === e.UNSIGNED_BYTE && (o = e.RG8)),
            r === e.RGBA &&
              (i === e.FLOAT && (o = e.RGBA32F),
              i === e.HALF_FLOAT && (o = e.RGBA16F),
              i === e.UNSIGNED_BYTE &&
                (o = s === L && !1 === a ? e.SRGB8_ALPHA8 : e.RGBA8),
              i === e.UNSIGNED_SHORT_4_4_4_4 && (o = e.RGBA4),
              i === e.UNSIGNED_SHORT_5_5_5_1 && (o = e.RGB5_A1)),
            (o === e.R16F ||
              o === e.R32F ||
              o === e.RG16F ||
              o === e.RG32F ||
              o === e.RGBA16F ||
              o === e.RGBA32F) &&
              t.get("EXT_color_buffer_float"),
            o
          );
        }
        function F(e, t, n) {
          return !0 === D(e, n) ||
            (e.isFramebufferTexture && e.minFilter !== y && e.minFilter !== S)
            ? Math.log2(Math.max(t.width, t.height)) + 1
            : void 0 !== e.mipmaps && e.mipmaps.length > 0
            ? e.mipmaps.length
            : e.isCompressedTexture && Array.isArray(e.image)
            ? t.mipmaps.length
            : 1;
        }
        function z(t) {
          return t === y || t === x || t === b ? e.NEAREST : e.LINEAR;
        }
        function B(e) {
          let t = e.target;
          t.removeEventListener("dispose", B),
            (function (e) {
              let t = r.get(e);
              if (void 0 === t.__webglInit) return;
              let n = e.source,
                i = A.get(n);
              if (i) {
                let r = i[t.__cacheKey];
                r.usedTimes--,
                  0 === r.usedTimes && j(e),
                  0 === Object.keys(i).length && A.delete(n);
              }
              r.remove(e);
            })(t),
            t.isVideoTexture && m.delete(t);
        }
        function V(t) {
          let n = t.target;
          n.removeEventListener("dispose", V),
            (function (t) {
              let n = t.texture,
                i = r.get(t),
                s = r.get(n);
              if (
                (void 0 !== s.__webglTexture &&
                  (e.deleteTexture(s.__webglTexture), a.memory.textures--),
                t.depthTexture && t.depthTexture.dispose(),
                t.isWebGLCubeRenderTarget)
              )
                for (let t = 0; t < 6; t++) {
                  if (Array.isArray(i.__webglFramebuffer[t]))
                    for (let n = 0; n < i.__webglFramebuffer[t].length; n++)
                      e.deleteFramebuffer(i.__webglFramebuffer[t][n]);
                  else e.deleteFramebuffer(i.__webglFramebuffer[t]);
                  i.__webglDepthbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthbuffer[t]);
                }
              else {
                if (Array.isArray(i.__webglFramebuffer))
                  for (let t = 0; t < i.__webglFramebuffer.length; t++)
                    e.deleteFramebuffer(i.__webglFramebuffer[t]);
                else e.deleteFramebuffer(i.__webglFramebuffer);
                if (
                  (i.__webglDepthbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthbuffer),
                  i.__webglMultisampledFramebuffer &&
                    e.deleteFramebuffer(i.__webglMultisampledFramebuffer),
                  i.__webglColorRenderbuffer)
                )
                  for (let t = 0; t < i.__webglColorRenderbuffer.length; t++)
                    i.__webglColorRenderbuffer[t] &&
                      e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);
                i.__webglDepthRenderbuffer &&
                  e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
              }
              if (t.isWebGLMultipleRenderTargets)
                for (let t = 0, i = n.length; t < i; t++) {
                  let i = r.get(n[t]);
                  i.__webglTexture &&
                    (e.deleteTexture(i.__webglTexture), a.memory.textures--),
                    r.remove(n[t]);
                }
              r.remove(n), r.remove(t);
            })(n);
        }
        function j(t) {
          let n = r.get(t);
          e.deleteTexture(n.__webglTexture);
          let i = t.source,
            s = A.get(i);
          delete s[n.__cacheKey], a.memory.textures--;
        }
        let H = 0;
        function G(t, i) {
          let s = r.get(t);
          if (
            (t.isVideoTexture &&
              (function (e) {
                let t = a.render.frame;
                m.get(e) !== t && (m.set(e, t), e.update());
              })(t),
            !1 === t.isRenderTargetTexture &&
              t.version > 0 &&
              s.__version !== t.version)
          ) {
            let e = t.image;
            if (null === e)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but no image data found."
              );
            else if (!1 === e.complete)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            else {
              K(s, t, i);
              return;
            }
          }
          n.bindTexture(e.TEXTURE_2D, s.__webglTexture, e.TEXTURE0 + i);
        }
        let W = { [g]: e.REPEAT, [_]: e.CLAMP_TO_EDGE, [v]: e.MIRRORED_REPEAT },
          $ = {
            [y]: e.NEAREST,
            [x]: e.NEAREST_MIPMAP_NEAREST,
            [b]: e.NEAREST_MIPMAP_LINEAR,
            [S]: e.LINEAR,
            [E]: e.LINEAR_MIPMAP_NEAREST,
            [M]: e.LINEAR_MIPMAP_LINEAR,
          },
          q = {
            512: e.NEVER,
            519: e.ALWAYS,
            513: e.LESS,
            515: e.LEQUAL,
            514: e.EQUAL,
            518: e.GEQUAL,
            516: e.GREATER,
            517: e.NOTEQUAL,
          };
        function J(n, s, a) {
          if (
            (a
              ? (e.texParameteri(n, e.TEXTURE_WRAP_S, W[s.wrapS]),
                e.texParameteri(n, e.TEXTURE_WRAP_T, W[s.wrapT]),
                (n === e.TEXTURE_3D || n === e.TEXTURE_2D_ARRAY) &&
                  e.texParameteri(n, e.TEXTURE_WRAP_R, W[s.wrapR]),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, $[s.magFilter]),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, $[s.minFilter]))
              : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                (n === e.TEXTURE_3D || n === e.TEXTURE_2D_ARRAY) &&
                  e.texParameteri(n, e.TEXTURE_WRAP_R, e.CLAMP_TO_EDGE),
                (s.wrapS !== _ || s.wrapT !== _) &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, z(s.magFilter)),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, z(s.minFilter)),
                s.minFilter !== y &&
                  s.minFilter !== S &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            s.compareFunction &&
              (e.texParameteri(
                n,
                e.TEXTURE_COMPARE_MODE,
                e.COMPARE_REF_TO_TEXTURE
              ),
              e.texParameteri(n, e.TEXTURE_COMPARE_FUNC, q[s.compareFunction])),
            !0 === t.has("EXT_texture_filter_anisotropic"))
          ) {
            let a = t.get("EXT_texture_filter_anisotropic");
            s.magFilter !== y &&
              (s.minFilter === b || s.minFilter === M) &&
              (1015 !== s.type || !1 !== t.has("OES_texture_float_linear")) &&
              (!1 !== l ||
                s.type !== w ||
                !1 !== t.has("OES_texture_half_float_linear")) &&
              (s.anisotropy > 1 || r.get(s).__currentAnisotropy) &&
              (e.texParameterf(
                n,
                a.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(s.anisotropy, i.getMaxAnisotropy())
              ),
              (r.get(s).__currentAnisotropy = s.anisotropy));
          }
        }
        function Z(t, n) {
          let r = !1;
          void 0 === t.__webglInit &&
            ((t.__webglInit = !0), n.addEventListener("dispose", B));
          let i = n.source,
            s = A.get(i);
          void 0 === s && ((s = {}), A.set(i, s));
          let o = (function (e) {
            let t = [];
            return (
              t.push(e.wrapS),
              t.push(e.wrapT),
              t.push(e.wrapR || 0),
              t.push(e.magFilter),
              t.push(e.minFilter),
              t.push(e.anisotropy),
              t.push(e.internalFormat),
              t.push(e.format),
              t.push(e.type),
              t.push(e.generateMipmaps),
              t.push(e.premultiplyAlpha),
              t.push(e.flipY),
              t.push(e.unpackAlignment),
              t.push(e.colorSpace),
              t.join()
            );
          })(n);
          if (o !== t.__cacheKey) {
            void 0 === s[o] &&
              ((s[o] = { texture: e.createTexture(), usedTimes: 0 }),
              a.memory.textures++,
              (r = !0)),
              s[o].usedTimes++;
            let i = s[t.__cacheKey];
            void 0 !== i &&
              (s[t.__cacheKey].usedTimes--, 0 === i.usedTimes && j(n)),
              (t.__cacheKey = o),
              (t.__webglTexture = s[o].texture);
          }
          return r;
        }
        function K(t, i, a) {
          let o = e.TEXTURE_2D;
          (i.isDataArrayTexture || i.isCompressedArrayTexture) &&
            (o = e.TEXTURE_2D_ARRAY),
            i.isData3DTexture && (o = e.TEXTURE_3D);
          let u = Z(t, i),
            c = i.source;
          n.bindTexture(o, t.__webglTexture, e.TEXTURE0 + a);
          let d = r.get(c);
          if (c.version !== d.__version || !0 === u) {
            let t;
            n.activeTexture(e.TEXTURE0 + a),
              e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY),
              e.pixelStorei(
                e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                i.premultiplyAlpha
              ),
              e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment),
              e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, e.NONE);
            let r =
                !l &&
                (i.wrapS !== _ ||
                  i.wrapT !== _ ||
                  (i.minFilter !== y && i.minFilter !== S)) &&
                !1 === O(i.image),
              p = P(i.image, r, !1, h);
            p = es(i, p);
            let f = O(p) || l,
              m = s.convert(i.format, i.colorSpace),
              g = s.convert(i.type),
              v = k(i.internalFormat, m, g, i.colorSpace, i.isVideoTexture);
            J(o, i, f);
            let x = i.mipmaps,
              b = l && !0 !== i.isVideoTexture,
              E = void 0 === d.__version || !0 === u,
              M = F(i, p, f);
            if (i.isDepthTexture)
              (v = e.DEPTH_COMPONENT),
                l
                  ? (v =
                      1015 === i.type
                        ? e.DEPTH_COMPONENT32F
                        : 1014 === i.type
                        ? e.DEPTH_COMPONENT24
                        : 1020 === i.type
                        ? e.DEPTH24_STENCIL8
                        : e.DEPTH_COMPONENT16)
                  : 1015 === i.type &&
                    console.error(
                      "WebGLRenderer: Floating point depth texture requires WebGL2."
                    ),
                1026 === i.format &&
                  v === e.DEPTH_COMPONENT &&
                  1012 !== i.type &&
                  1014 !== i.type &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                  ),
                  (i.type = 1014),
                  (g = s.convert(i.type))),
                1027 === i.format &&
                  v === e.DEPTH_COMPONENT &&
                  ((v = e.DEPTH_STENCIL),
                  1020 !== i.type &&
                    (console.warn(
                      "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                    ),
                    (i.type = 1020),
                    (g = s.convert(i.type)))),
                E &&
                  (b
                    ? n.texStorage2D(e.TEXTURE_2D, 1, v, p.width, p.height)
                    : n.texImage2D(
                        e.TEXTURE_2D,
                        0,
                        v,
                        p.width,
                        p.height,
                        0,
                        m,
                        g,
                        null
                      ));
            else if (i.isDataTexture) {
              if (x.length > 0 && f) {
                b &&
                  E &&
                  n.texStorage2D(e.TEXTURE_2D, M, v, x[0].width, x[0].height);
                for (let r = 0, i = x.length; r < i; r++)
                  (t = x[r]),
                    b
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          r,
                          0,
                          0,
                          t.width,
                          t.height,
                          m,
                          g,
                          t.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          r,
                          v,
                          t.width,
                          t.height,
                          0,
                          m,
                          g,
                          t.data
                        );
                i.generateMipmaps = !1;
              } else
                b
                  ? (E && n.texStorage2D(e.TEXTURE_2D, M, v, p.width, p.height),
                    n.texSubImage2D(
                      e.TEXTURE_2D,
                      0,
                      0,
                      0,
                      p.width,
                      p.height,
                      m,
                      g,
                      p.data
                    ))
                  : n.texImage2D(
                      e.TEXTURE_2D,
                      0,
                      v,
                      p.width,
                      p.height,
                      0,
                      m,
                      g,
                      p.data
                    );
            } else if (i.isCompressedTexture) {
              if (i.isCompressedArrayTexture) {
                b &&
                  E &&
                  n.texStorage3D(
                    e.TEXTURE_2D_ARRAY,
                    M,
                    v,
                    x[0].width,
                    x[0].height,
                    p.depth
                  );
                for (let r = 0, s = x.length; r < s; r++)
                  (t = x[r]),
                    i.format !== T
                      ? null !== m
                        ? b
                          ? n.compressedTexSubImage3D(
                              e.TEXTURE_2D_ARRAY,
                              r,
                              0,
                              0,
                              0,
                              t.width,
                              t.height,
                              p.depth,
                              m,
                              t.data,
                              0,
                              0
                            )
                          : n.compressedTexImage3D(
                              e.TEXTURE_2D_ARRAY,
                              r,
                              v,
                              t.width,
                              t.height,
                              p.depth,
                              0,
                              t.data,
                              0,
                              0
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : b
                      ? n.texSubImage3D(
                          e.TEXTURE_2D_ARRAY,
                          r,
                          0,
                          0,
                          0,
                          t.width,
                          t.height,
                          p.depth,
                          m,
                          g,
                          t.data
                        )
                      : n.texImage3D(
                          e.TEXTURE_2D_ARRAY,
                          r,
                          v,
                          t.width,
                          t.height,
                          p.depth,
                          0,
                          m,
                          g,
                          t.data
                        );
              } else {
                b &&
                  E &&
                  n.texStorage2D(e.TEXTURE_2D, M, v, x[0].width, x[0].height);
                for (let r = 0, s = x.length; r < s; r++)
                  (t = x[r]),
                    i.format !== T
                      ? null !== m
                        ? b
                          ? n.compressedTexSubImage2D(
                              e.TEXTURE_2D,
                              r,
                              0,
                              0,
                              t.width,
                              t.height,
                              m,
                              t.data
                            )
                          : n.compressedTexImage2D(
                              e.TEXTURE_2D,
                              r,
                              v,
                              t.width,
                              t.height,
                              0,
                              t.data
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : b
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          r,
                          0,
                          0,
                          t.width,
                          t.height,
                          m,
                          g,
                          t.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          r,
                          v,
                          t.width,
                          t.height,
                          0,
                          m,
                          g,
                          t.data
                        );
              }
            } else if (i.isDataArrayTexture)
              b
                ? (E &&
                    n.texStorage3D(
                      e.TEXTURE_2D_ARRAY,
                      M,
                      v,
                      p.width,
                      p.height,
                      p.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    0,
                    0,
                    0,
                    p.width,
                    p.height,
                    p.depth,
                    m,
                    g,
                    p.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    v,
                    p.width,
                    p.height,
                    p.depth,
                    0,
                    m,
                    g,
                    p.data
                  );
            else if (i.isData3DTexture)
              b
                ? (E &&
                    n.texStorage3D(
                      e.TEXTURE_3D,
                      M,
                      v,
                      p.width,
                      p.height,
                      p.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_3D,
                    0,
                    0,
                    0,
                    0,
                    p.width,
                    p.height,
                    p.depth,
                    m,
                    g,
                    p.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_3D,
                    0,
                    v,
                    p.width,
                    p.height,
                    p.depth,
                    0,
                    m,
                    g,
                    p.data
                  );
            else if (i.isFramebufferTexture) {
              if (E) {
                if (b) n.texStorage2D(e.TEXTURE_2D, M, v, p.width, p.height);
                else {
                  let t = p.width,
                    r = p.height;
                  for (let i = 0; i < M; i++)
                    n.texImage2D(e.TEXTURE_2D, i, v, t, r, 0, m, g, null),
                      (t >>= 1),
                      (r >>= 1);
                }
              }
            } else if (x.length > 0 && f) {
              b &&
                E &&
                n.texStorage2D(e.TEXTURE_2D, M, v, x[0].width, x[0].height);
              for (let r = 0, i = x.length; r < i; r++)
                (t = x[r]),
                  b
                    ? n.texSubImage2D(e.TEXTURE_2D, r, 0, 0, m, g, t)
                    : n.texImage2D(e.TEXTURE_2D, r, v, m, g, t);
              i.generateMipmaps = !1;
            } else
              b
                ? (E && n.texStorage2D(e.TEXTURE_2D, M, v, p.width, p.height),
                  n.texSubImage2D(e.TEXTURE_2D, 0, 0, 0, m, g, p))
                : n.texImage2D(e.TEXTURE_2D, 0, v, m, g, p);
            D(i, f) && U(o),
              (d.__version = c.version),
              i.onUpdate && i.onUpdate(i);
          }
          t.__version = i.version;
        }
        function Q(t, i, a, o, l, u) {
          let c = s.convert(a.format, a.colorSpace),
            h = s.convert(a.type),
            d = k(a.internalFormat, c, h, a.colorSpace),
            f = r.get(i);
          if (!f.__hasExternalTextures) {
            let t = Math.max(1, i.width >> u),
              r = Math.max(1, i.height >> u);
            l === e.TEXTURE_3D || l === e.TEXTURE_2D_ARRAY
              ? n.texImage3D(l, u, d, t, r, i.depth, 0, c, h, null)
              : n.texImage2D(l, u, d, t, r, 0, c, h, null);
          }
          n.bindFramebuffer(e.FRAMEBUFFER, t),
            ei(i)
              ? p.framebufferTexture2DMultisampleEXT(
                  e.FRAMEBUFFER,
                  o,
                  l,
                  r.get(a).__webglTexture,
                  0,
                  en(i)
                )
              : (l === e.TEXTURE_2D ||
                  (l >= e.TEXTURE_CUBE_MAP_POSITIVE_X &&
                    l <= e.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
                e.framebufferTexture2D(
                  e.FRAMEBUFFER,
                  o,
                  l,
                  r.get(a).__webglTexture,
                  u
                ),
            n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function ee(t, n, r) {
          if (
            (e.bindRenderbuffer(e.RENDERBUFFER, t),
            n.depthBuffer && !n.stencilBuffer)
          ) {
            let i = e.DEPTH_COMPONENT16;
            if (r || ei(n)) {
              let t = n.depthTexture;
              t &&
                t.isDepthTexture &&
                (1015 === t.type
                  ? (i = e.DEPTH_COMPONENT32F)
                  : 1014 === t.type && (i = e.DEPTH_COMPONENT24));
              let r = en(n);
              ei(n)
                ? p.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    r,
                    i,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    r,
                    i,
                    n.width,
                    n.height
                  );
            } else e.renderbufferStorage(e.RENDERBUFFER, i, n.width, n.height);
            e.framebufferRenderbuffer(
              e.FRAMEBUFFER,
              e.DEPTH_ATTACHMENT,
              e.RENDERBUFFER,
              t
            );
          } else if (n.depthBuffer && n.stencilBuffer) {
            let i = en(n);
            r && !1 === ei(n)
              ? e.renderbufferStorageMultisample(
                  e.RENDERBUFFER,
                  i,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : ei(n)
              ? p.renderbufferStorageMultisampleEXT(
                  e.RENDERBUFFER,
                  i,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(
                  e.RENDERBUFFER,
                  e.DEPTH_STENCIL,
                  n.width,
                  n.height
                ),
              e.framebufferRenderbuffer(
                e.FRAMEBUFFER,
                e.DEPTH_STENCIL_ATTACHMENT,
                e.RENDERBUFFER,
                t
              );
          } else {
            let t =
              !0 === n.isWebGLMultipleRenderTargets ? n.texture : [n.texture];
            for (let i = 0; i < t.length; i++) {
              let a = t[i],
                o = s.convert(a.format, a.colorSpace),
                l = s.convert(a.type),
                u = k(a.internalFormat, o, l, a.colorSpace),
                c = en(n);
              r && !1 === ei(n)
                ? e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    c,
                    u,
                    n.width,
                    n.height
                  )
                : ei(n)
                ? p.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    c,
                    u,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorage(e.RENDERBUFFER, u, n.width, n.height);
            }
          }
          e.bindRenderbuffer(e.RENDERBUFFER, null);
        }
        function et(t) {
          let i = r.get(t),
            s = !0 === t.isWebGLCubeRenderTarget;
          if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
            if (s)
              throw Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (t, i) {
              let s = i && i.isWebGLCubeRenderTarget;
              if (s)
                throw Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (n.bindFramebuffer(e.FRAMEBUFFER, t),
                !(i.depthTexture && i.depthTexture.isDepthTexture))
              )
                throw Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (r.get(i.depthTexture).__webglTexture &&
                i.depthTexture.image.width === i.width &&
                i.depthTexture.image.height === i.height) ||
                ((i.depthTexture.image.width = i.width),
                (i.depthTexture.image.height = i.height),
                (i.depthTexture.needsUpdate = !0)),
                G(i.depthTexture, 0);
              let a = r.get(i.depthTexture).__webglTexture,
                o = en(i);
              if (1026 === i.depthTexture.format)
                ei(i)
                  ? p.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0
                    );
              else if (1027 === i.depthTexture.format)
                ei(i)
                  ? p.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      a,
                      0
                    );
              else throw Error("Unknown depthTexture format");
            })(i.__webglFramebuffer, t);
          } else if (s) {
            i.__webglDepthbuffer = [];
            for (let r = 0; r < 6; r++)
              n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer[r]),
                (i.__webglDepthbuffer[r] = e.createRenderbuffer()),
                ee(i.__webglDepthbuffer[r], t, !1);
          } else
            n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer),
              (i.__webglDepthbuffer = e.createRenderbuffer()),
              ee(i.__webglDepthbuffer, t, !1);
          n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function en(e) {
          return Math.min(d, e.samples);
        }
        function ei(e) {
          let n = r.get(e);
          return (
            l &&
            e.samples > 0 &&
            !0 === t.has("WEBGL_multisampled_render_to_texture") &&
            !1 !== n.__useRenderToTexture
          );
        }
        function es(e, n) {
          let r = e.colorSpace,
            i = e.format,
            s = e.type;
          return (
            !0 === e.isCompressedTexture ||
              !0 === e.isVideoTexture ||
              1035 === e.format ||
              (r !== I &&
                "" !== r &&
                (r === L || r === N
                  ? !1 === l
                    ? !0 === t.has("EXT_sRGB") && i === T
                      ? ((e.format = 1035),
                        (e.minFilter = S),
                        (e.generateMipmaps = !1))
                      : (n = ep.sRGBToLinear(n))
                    : (i !== T || 1009 !== s) &&
                      console.warn(
                        "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                      )
                  : console.error(
                      "THREE.WebGLTextures: Unsupported texture color space:",
                      r
                    ))),
            n
          );
        }
        (this.allocateTextureUnit = function () {
          let e = H;
          return (
            e >= u &&
              console.warn(
                "THREE.WebGLTextures: Trying to use " +
                  e +
                  " texture units while this GPU supports only " +
                  u
              ),
            (H += 1),
            e
          );
        }),
          (this.resetTextureUnits = function () {
            H = 0;
          }),
          (this.setTexture2D = G),
          (this.setTexture2DArray = function (t, i) {
            let s = r.get(t);
            if (t.version > 0 && s.__version !== t.version) {
              K(s, t, i);
              return;
            }
            n.bindTexture(e.TEXTURE_2D_ARRAY, s.__webglTexture, e.TEXTURE0 + i);
          }),
          (this.setTexture3D = function (t, i) {
            let s = r.get(t);
            if (t.version > 0 && s.__version !== t.version) {
              K(s, t, i);
              return;
            }
            n.bindTexture(e.TEXTURE_3D, s.__webglTexture, e.TEXTURE0 + i);
          }),
          (this.setTextureCube = function (t, i) {
            let a = r.get(t);
            if (t.version > 0 && a.__version !== t.version) {
              (function (t, i, a) {
                if (6 !== i.image.length) return;
                let o = Z(t, i),
                  u = i.source;
                n.bindTexture(
                  e.TEXTURE_CUBE_MAP,
                  t.__webglTexture,
                  e.TEXTURE0 + a
                );
                let h = r.get(u);
                if (u.version !== h.__version || !0 === o) {
                  let t;
                  n.activeTexture(e.TEXTURE0 + a),
                    e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY),
                    e.pixelStorei(
                      e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                      i.premultiplyAlpha
                    ),
                    e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment),
                    e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, e.NONE);
                  let r =
                      i.isCompressedTexture || i.image[0].isCompressedTexture,
                    d = i.image[0] && i.image[0].isDataTexture,
                    p = [];
                  for (let e = 0; e < 6; e++)
                    r || d
                      ? (p[e] = d ? i.image[e].image : i.image[e])
                      : (p[e] = P(i.image[e], !1, !0, c)),
                      (p[e] = es(i, p[e]));
                  let f = p[0],
                    m = O(f) || l,
                    g = s.convert(i.format, i.colorSpace),
                    _ = s.convert(i.type),
                    v = k(i.internalFormat, g, _, i.colorSpace),
                    y = l && !0 !== i.isVideoTexture,
                    x = void 0 === h.__version || !0 === o,
                    b = F(i, f, m);
                  if ((J(e.TEXTURE_CUBE_MAP, i, m), r)) {
                    y &&
                      x &&
                      n.texStorage2D(
                        e.TEXTURE_CUBE_MAP,
                        b,
                        v,
                        f.width,
                        f.height
                      );
                    for (let r = 0; r < 6; r++) {
                      t = p[r].mipmaps;
                      for (let s = 0; s < t.length; s++) {
                        let a = t[s];
                        i.format !== T
                          ? null !== g
                            ? y
                              ? n.compressedTexSubImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                  s,
                                  0,
                                  0,
                                  a.width,
                                  a.height,
                                  g,
                                  a.data
                                )
                              : n.compressedTexImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                  s,
                                  v,
                                  a.width,
                                  a.height,
                                  0,
                                  a.data
                                )
                            : console.warn(
                                "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                              )
                          : y
                          ? n.texSubImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              s,
                              0,
                              0,
                              a.width,
                              a.height,
                              g,
                              _,
                              a.data
                            )
                          : n.texImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              s,
                              v,
                              a.width,
                              a.height,
                              0,
                              g,
                              _,
                              a.data
                            );
                      }
                    }
                  } else {
                    (t = i.mipmaps),
                      y &&
                        x &&
                        (t.length > 0 && b++,
                        n.texStorage2D(
                          e.TEXTURE_CUBE_MAP,
                          b,
                          v,
                          p[0].width,
                          p[0].height
                        ));
                    for (let r = 0; r < 6; r++)
                      if (d) {
                        y
                          ? n.texSubImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              0,
                              0,
                              0,
                              p[r].width,
                              p[r].height,
                              g,
                              _,
                              p[r].data
                            )
                          : n.texImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              0,
                              v,
                              p[r].width,
                              p[r].height,
                              0,
                              g,
                              _,
                              p[r].data
                            );
                        for (let i = 0; i < t.length; i++) {
                          let s = t[i],
                            a = s.image[r].image;
                          y
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                i + 1,
                                0,
                                0,
                                a.width,
                                a.height,
                                g,
                                _,
                                a.data
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                i + 1,
                                v,
                                a.width,
                                a.height,
                                0,
                                g,
                                _,
                                a.data
                              );
                        }
                      } else {
                        y
                          ? n.texSubImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              0,
                              0,
                              0,
                              g,
                              _,
                              p[r]
                            )
                          : n.texImage2D(
                              e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                              0,
                              v,
                              g,
                              _,
                              p[r]
                            );
                        for (let i = 0; i < t.length; i++) {
                          let s = t[i];
                          y
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                i + 1,
                                0,
                                0,
                                g,
                                _,
                                s.image[r]
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + r,
                                i + 1,
                                v,
                                g,
                                _,
                                s.image[r]
                              );
                        }
                      }
                  }
                  D(i, m) && U(e.TEXTURE_CUBE_MAP),
                    (h.__version = u.version),
                    i.onUpdate && i.onUpdate(i);
                }
                t.__version = i.version;
              })(a, t, i);
              return;
            }
            n.bindTexture(e.TEXTURE_CUBE_MAP, a.__webglTexture, e.TEXTURE0 + i);
          }),
          (this.rebindTextures = function (t, n, i) {
            let s = r.get(t);
            void 0 !== n &&
              Q(
                s.__webglFramebuffer,
                t,
                t.texture,
                e.COLOR_ATTACHMENT0,
                e.TEXTURE_2D,
                0
              ),
              void 0 !== i && et(t);
          }),
          (this.setupRenderTarget = function (t) {
            let o = t.texture,
              u = r.get(t),
              c = r.get(o);
            t.addEventListener("dispose", V),
              !0 !== t.isWebGLMultipleRenderTargets &&
                (void 0 === c.__webglTexture &&
                  (c.__webglTexture = e.createTexture()),
                (c.__version = o.version),
                a.memory.textures++);
            let h = !0 === t.isWebGLCubeRenderTarget,
              d = !0 === t.isWebGLMultipleRenderTargets,
              p = O(t) || l;
            if (h) {
              u.__webglFramebuffer = [];
              for (let t = 0; t < 6; t++)
                if (l && o.mipmaps && o.mipmaps.length > 0) {
                  u.__webglFramebuffer[t] = [];
                  for (let n = 0; n < o.mipmaps.length; n++)
                    u.__webglFramebuffer[t][n] = e.createFramebuffer();
                } else u.__webglFramebuffer[t] = e.createFramebuffer();
            } else {
              if (l && o.mipmaps && o.mipmaps.length > 0) {
                u.__webglFramebuffer = [];
                for (let t = 0; t < o.mipmaps.length; t++)
                  u.__webglFramebuffer[t] = e.createFramebuffer();
              } else u.__webglFramebuffer = e.createFramebuffer();
              if (d) {
                if (i.drawBuffers) {
                  let n = t.texture;
                  for (let t = 0, i = n.length; t < i; t++) {
                    let i = r.get(n[t]);
                    void 0 === i.__webglTexture &&
                      ((i.__webglTexture = e.createTexture()),
                      a.memory.textures++);
                  }
                } else
                  console.warn(
                    "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
                  );
              }
              if (l && t.samples > 0 && !1 === ei(t)) {
                let r = d ? o : [o];
                (u.__webglMultisampledFramebuffer = e.createFramebuffer()),
                  (u.__webglColorRenderbuffer = []),
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    u.__webglMultisampledFramebuffer
                  );
                for (let n = 0; n < r.length; n++) {
                  let i = r[n];
                  (u.__webglColorRenderbuffer[n] = e.createRenderbuffer()),
                    e.bindRenderbuffer(
                      e.RENDERBUFFER,
                      u.__webglColorRenderbuffer[n]
                    );
                  let a = s.convert(i.format, i.colorSpace),
                    o = s.convert(i.type),
                    l = k(
                      i.internalFormat,
                      a,
                      o,
                      i.colorSpace,
                      !0 === t.isXRRenderTarget
                    ),
                    c = en(t);
                  e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    c,
                    l,
                    t.width,
                    t.height
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + n,
                      e.RENDERBUFFER,
                      u.__webglColorRenderbuffer[n]
                    );
                }
                e.bindRenderbuffer(e.RENDERBUFFER, null),
                  t.depthBuffer &&
                    ((u.__webglDepthRenderbuffer = e.createRenderbuffer()),
                    ee(u.__webglDepthRenderbuffer, t, !0)),
                  n.bindFramebuffer(e.FRAMEBUFFER, null);
              }
            }
            if (h) {
              n.bindTexture(e.TEXTURE_CUBE_MAP, c.__webglTexture),
                J(e.TEXTURE_CUBE_MAP, o, p);
              for (let n = 0; n < 6; n++)
                if (l && o.mipmaps && o.mipmaps.length > 0)
                  for (let r = 0; r < o.mipmaps.length; r++)
                    Q(
                      u.__webglFramebuffer[n][r],
                      t,
                      o,
                      e.COLOR_ATTACHMENT0,
                      e.TEXTURE_CUBE_MAP_POSITIVE_X + n,
                      r
                    );
                else
                  Q(
                    u.__webglFramebuffer[n],
                    t,
                    o,
                    e.COLOR_ATTACHMENT0,
                    e.TEXTURE_CUBE_MAP_POSITIVE_X + n,
                    0
                  );
              D(o, p) && U(e.TEXTURE_CUBE_MAP), n.unbindTexture();
            } else if (d) {
              let i = t.texture;
              for (let s = 0, a = i.length; s < a; s++) {
                let a = i[s],
                  o = r.get(a);
                n.bindTexture(e.TEXTURE_2D, o.__webglTexture),
                  J(e.TEXTURE_2D, a, p),
                  Q(
                    u.__webglFramebuffer,
                    t,
                    a,
                    e.COLOR_ATTACHMENT0 + s,
                    e.TEXTURE_2D,
                    0
                  ),
                  D(a, p) && U(e.TEXTURE_2D);
              }
              n.unbindTexture();
            } else {
              let r = e.TEXTURE_2D;
              if (
                ((t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) &&
                  (l
                    ? (r = t.isWebGL3DRenderTarget
                        ? e.TEXTURE_3D
                        : e.TEXTURE_2D_ARRAY)
                    : console.error(
                        "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
                      )),
                n.bindTexture(r, c.__webglTexture),
                J(r, o, p),
                l && o.mipmaps && o.mipmaps.length > 0)
              )
                for (let n = 0; n < o.mipmaps.length; n++)
                  Q(u.__webglFramebuffer[n], t, o, e.COLOR_ATTACHMENT0, r, n);
              else Q(u.__webglFramebuffer, t, o, e.COLOR_ATTACHMENT0, r, 0);
              D(o, p) && U(r), n.unbindTexture();
            }
            t.depthBuffer && et(t);
          }),
          (this.updateRenderTargetMipmap = function (t) {
            let i = O(t) || l,
              s =
                !0 === t.isWebGLMultipleRenderTargets ? t.texture : [t.texture];
            for (let a = 0, o = s.length; a < o; a++) {
              let o = s[a];
              if (D(o, i)) {
                let i = t.isWebGLCubeRenderTarget
                    ? e.TEXTURE_CUBE_MAP
                    : e.TEXTURE_2D,
                  s = r.get(o).__webglTexture;
                n.bindTexture(i, s), U(i), n.unbindTexture();
              }
            }
          }),
          (this.updateMultisampleRenderTarget = function (t) {
            if (l && t.samples > 0 && !1 === ei(t)) {
              let i = t.isWebGLMultipleRenderTargets ? t.texture : [t.texture],
                s = t.width,
                a = t.height,
                o = e.COLOR_BUFFER_BIT,
                l = [],
                u = t.stencilBuffer
                  ? e.DEPTH_STENCIL_ATTACHMENT
                  : e.DEPTH_ATTACHMENT,
                c = r.get(t),
                h = !0 === t.isWebGLMultipleRenderTargets;
              if (h)
                for (let t = 0; t < i.length; t++)
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + t,
                      e.RENDERBUFFER,
                      null
                    ),
                    n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + t,
                      e.TEXTURE_2D,
                      null,
                      0
                    );
              n.bindFramebuffer(
                e.READ_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              ),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, c.__webglFramebuffer);
              for (let n = 0; n < i.length; n++) {
                l.push(e.COLOR_ATTACHMENT0 + n), t.depthBuffer && l.push(u);
                let d =
                  void 0 !== c.__ignoreDepthValues && c.__ignoreDepthValues;
                if (
                  (!1 === d &&
                    (t.depthBuffer && (o |= e.DEPTH_BUFFER_BIT),
                    t.stencilBuffer && (o |= e.STENCIL_BUFFER_BIT)),
                  h &&
                    e.framebufferRenderbuffer(
                      e.READ_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[n]
                    ),
                  !0 === d &&
                    (e.invalidateFramebuffer(e.READ_FRAMEBUFFER, [u]),
                    e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER, [u])),
                  h)
                ) {
                  let t = r.get(i[n]).__webglTexture;
                  e.framebufferTexture2D(
                    e.DRAW_FRAMEBUFFER,
                    e.COLOR_ATTACHMENT0,
                    e.TEXTURE_2D,
                    t,
                    0
                  );
                }
                e.blitFramebuffer(0, 0, s, a, 0, 0, s, a, o, e.NEAREST),
                  f && e.invalidateFramebuffer(e.READ_FRAMEBUFFER, l);
              }
              if (
                (n.bindFramebuffer(e.READ_FRAMEBUFFER, null),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                h)
              )
                for (let t = 0; t < i.length; t++) {
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + t,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[t]
                    );
                  let s = r.get(i[t]).__webglTexture;
                  n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + t,
                      e.TEXTURE_2D,
                      s,
                      0
                    );
                }
              n.bindFramebuffer(
                e.DRAW_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              );
            }
          }),
          (this.setupDepthRenderbuffer = et),
          (this.setupFrameBufferTexture = Q),
          (this.useMultisampledRTT = ei);
      }
      function iT(e, t, n) {
        let r = n.isWebGL2;
        return {
          convert: function (n, i = "") {
            let s;
            let a = i === L || i === N ? 1 : 0;
            if (1009 === n) return e.UNSIGNED_BYTE;
            if (1017 === n) return e.UNSIGNED_SHORT_4_4_4_4;
            if (1018 === n) return e.UNSIGNED_SHORT_5_5_5_1;
            if (1010 === n) return e.BYTE;
            if (1011 === n) return e.SHORT;
            if (1012 === n) return e.UNSIGNED_SHORT;
            if (1013 === n) return e.INT;
            if (1014 === n) return e.UNSIGNED_INT;
            if (1015 === n) return e.FLOAT;
            if (n === w)
              return r
                ? e.HALF_FLOAT
                : null !== (s = t.get("OES_texture_half_float"))
                ? s.HALF_FLOAT_OES
                : null;
            if (1021 === n) return e.ALPHA;
            if (n === T) return e.RGBA;
            if (1024 === n) return e.LUMINANCE;
            if (1025 === n) return e.LUMINANCE_ALPHA;
            if (1026 === n) return e.DEPTH_COMPONENT;
            if (1027 === n) return e.DEPTH_STENCIL;
            if (1035 === n)
              return null !== (s = t.get("EXT_sRGB")) ? s.SRGB_ALPHA_EXT : null;
            if (1028 === n) return e.RED;
            if (1029 === n) return e.RED_INTEGER;
            if (1030 === n) return e.RG;
            if (1031 === n) return e.RG_INTEGER;
            if (1033 === n) return e.RGBA_INTEGER;
            if (33776 === n || 33777 === n || 33778 === n || 33779 === n) {
              if (1 === a) {
                if (null === (s = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                  return null;
                if (33776 === n) return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (33777 === n) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (33778 === n) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (33779 === n) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
              } else {
                if (null === (s = t.get("WEBGL_compressed_texture_s3tc")))
                  return null;
                if (33776 === n) return s.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (33777 === n) return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (33778 === n) return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (33779 === n) return s.COMPRESSED_RGBA_S3TC_DXT5_EXT;
              }
            }
            if (35840 === n || 35841 === n || 35842 === n || 35843 === n) {
              if (null === (s = t.get("WEBGL_compressed_texture_pvrtc")))
                return null;
              if (35840 === n) return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (35841 === n) return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (35842 === n) return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (35843 === n) return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (36196 === n)
              return null !== (s = t.get("WEBGL_compressed_texture_etc1"))
                ? s.COMPRESSED_RGB_ETC1_WEBGL
                : null;
            if (37492 === n || 37496 === n) {
              if (null === (s = t.get("WEBGL_compressed_texture_etc")))
                return null;
              if (37492 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ETC2
                  : s.COMPRESSED_RGB8_ETC2;
              if (37496 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                  : s.COMPRESSED_RGBA8_ETC2_EAC;
            }
            if (
              37808 === n ||
              37809 === n ||
              37810 === n ||
              37811 === n ||
              37812 === n ||
              37813 === n ||
              37814 === n ||
              37815 === n ||
              37816 === n ||
              37817 === n ||
              37818 === n ||
              37819 === n ||
              37820 === n ||
              37821 === n
            ) {
              if (null === (s = t.get("WEBGL_compressed_texture_astc")))
                return null;
              if (37808 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                  : s.COMPRESSED_RGBA_ASTC_4x4_KHR;
              if (37809 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                  : s.COMPRESSED_RGBA_ASTC_5x4_KHR;
              if (37810 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                  : s.COMPRESSED_RGBA_ASTC_5x5_KHR;
              if (37811 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                  : s.COMPRESSED_RGBA_ASTC_6x5_KHR;
              if (37812 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                  : s.COMPRESSED_RGBA_ASTC_6x6_KHR;
              if (37813 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                  : s.COMPRESSED_RGBA_ASTC_8x5_KHR;
              if (37814 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                  : s.COMPRESSED_RGBA_ASTC_8x6_KHR;
              if (37815 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                  : s.COMPRESSED_RGBA_ASTC_8x8_KHR;
              if (37816 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                  : s.COMPRESSED_RGBA_ASTC_10x5_KHR;
              if (37817 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                  : s.COMPRESSED_RGBA_ASTC_10x6_KHR;
              if (37818 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                  : s.COMPRESSED_RGBA_ASTC_10x8_KHR;
              if (37819 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                  : s.COMPRESSED_RGBA_ASTC_10x10_KHR;
              if (37820 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                  : s.COMPRESSED_RGBA_ASTC_12x10_KHR;
              if (37821 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                  : s.COMPRESSED_RGBA_ASTC_12x12_KHR;
            }
            if (36492 === n || 36494 === n || 36495 === n) {
              if (null === (s = t.get("EXT_texture_compression_bptc")))
                return null;
              if (36492 === n)
                return 1 === a
                  ? s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                  : s.COMPRESSED_RGBA_BPTC_UNORM_EXT;
              if (36494 === n) return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
              if (36495 === n) return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
            }
            if (36283 === n || 36284 === n || 36285 === n || 36286 === n) {
              if (null === (s = t.get("EXT_texture_compression_rgtc")))
                return null;
              if (36492 === n) return s.COMPRESSED_RED_RGTC1_EXT;
              if (36284 === n) return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;
              if (36285 === n) return s.COMPRESSED_RED_GREEN_RGTC2_EXT;
              if (36286 === n) return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            }
            return 1020 === n
              ? r
                ? e.UNSIGNED_INT_24_8
                : null !== (s = t.get("WEBGL_depth_texture"))
                ? s.UNSIGNED_INT_24_8_WEBGL
                : null
              : void 0 !== e[n]
              ? e[n]
              : null;
          },
        };
      }
      class iA extends np {
        constructor(e = []) {
          super(), (this.isArrayCamera = !0), (this.cameras = e);
        }
      }
      class iC extends tm {
        constructor() {
          super(), (this.isGroup = !0), (this.type = "Group");
        }
      }
      let iR = { type: "move" };
      class iP {
        constructor() {
          (this._targetRay = null), (this._grip = null), (this._hand = null);
        }
        getHandSpace() {
          return (
            null === this._hand &&
              ((this._hand = new iC()),
              (this._hand.matrixAutoUpdate = !1),
              (this._hand.visible = !1),
              (this._hand.joints = {}),
              (this._hand.inputState = { pinching: !1 })),
            this._hand
          );
        }
        getTargetRaySpace() {
          return (
            null === this._targetRay &&
              ((this._targetRay = new iC()),
              (this._targetRay.matrixAutoUpdate = !1),
              (this._targetRay.visible = !1),
              (this._targetRay.hasLinearVelocity = !1),
              (this._targetRay.linearVelocity = new eM()),
              (this._targetRay.hasAngularVelocity = !1),
              (this._targetRay.angularVelocity = new eM())),
            this._targetRay
          );
        }
        getGripSpace() {
          return (
            null === this._grip &&
              ((this._grip = new iC()),
              (this._grip.matrixAutoUpdate = !1),
              (this._grip.visible = !1),
              (this._grip.hasLinearVelocity = !1),
              (this._grip.linearVelocity = new eM()),
              (this._grip.hasAngularVelocity = !1),
              (this._grip.angularVelocity = new eM())),
            this._grip
          );
        }
        dispatchEvent(e) {
          return (
            null !== this._targetRay && this._targetRay.dispatchEvent(e),
            null !== this._grip && this._grip.dispatchEvent(e),
            null !== this._hand && this._hand.dispatchEvent(e),
            this
          );
        }
        connect(e) {
          if (e && e.hand) {
            let t = this._hand;
            if (t) for (let n of e.hand.values()) this._getHandJoint(t, n);
          }
          return this.dispatchEvent({ type: "connected", data: e }), this;
        }
        disconnect(e) {
          return (
            this.dispatchEvent({ type: "disconnected", data: e }),
            null !== this._targetRay && (this._targetRay.visible = !1),
            null !== this._grip && (this._grip.visible = !1),
            null !== this._hand && (this._hand.visible = !1),
            this
          );
        }
        update(e, t, n) {
          let r = null,
            i = null,
            s = null,
            a = this._targetRay,
            o = this._grip,
            l = this._hand;
          if (e && "visible-blurred" !== t.session.visibilityState) {
            if (l && e.hand) {
              for (let r of ((s = !0), e.hand.values())) {
                let e = t.getJointPose(r, n),
                  i = this._getHandJoint(l, r);
                null !== e &&
                  (i.matrix.fromArray(e.transform.matrix),
                  i.matrix.decompose(i.position, i.rotation, i.scale),
                  (i.matrixWorldNeedsUpdate = !0),
                  (i.jointRadius = e.radius)),
                  (i.visible = null !== e);
              }
              let r = l.joints["index-finger-tip"],
                i = l.joints["thumb-tip"],
                a = r.position.distanceTo(i.position);
              l.inputState.pinching && a > 0.025
                ? ((l.inputState.pinching = !1),
                  this.dispatchEvent({
                    type: "pinchend",
                    handedness: e.handedness,
                    target: this,
                  }))
                : !l.inputState.pinching &&
                  a <= 0.015 &&
                  ((l.inputState.pinching = !0),
                  this.dispatchEvent({
                    type: "pinchstart",
                    handedness: e.handedness,
                    target: this,
                  }));
            } else
              null !== o &&
                e.gripSpace &&
                null !== (i = t.getPose(e.gripSpace, n)) &&
                (o.matrix.fromArray(i.transform.matrix),
                o.matrix.decompose(o.position, o.rotation, o.scale),
                (o.matrixWorldNeedsUpdate = !0),
                i.linearVelocity
                  ? ((o.hasLinearVelocity = !0),
                    o.linearVelocity.copy(i.linearVelocity))
                  : (o.hasLinearVelocity = !1),
                i.angularVelocity
                  ? ((o.hasAngularVelocity = !0),
                    o.angularVelocity.copy(i.angularVelocity))
                  : (o.hasAngularVelocity = !1));
            null !== a &&
              (null === (r = t.getPose(e.targetRaySpace, n)) &&
                null !== i &&
                (r = i),
              null !== r &&
                (a.matrix.fromArray(r.transform.matrix),
                a.matrix.decompose(a.position, a.rotation, a.scale),
                (a.matrixWorldNeedsUpdate = !0),
                r.linearVelocity
                  ? ((a.hasLinearVelocity = !0),
                    a.linearVelocity.copy(r.linearVelocity))
                  : (a.hasLinearVelocity = !1),
                r.angularVelocity
                  ? ((a.hasAngularVelocity = !0),
                    a.angularVelocity.copy(r.angularVelocity))
                  : (a.hasAngularVelocity = !1),
                this.dispatchEvent(iR)));
          }
          return (
            null !== a && (a.visible = null !== r),
            null !== o && (o.visible = null !== i),
            null !== l && (l.visible = null !== s),
            this
          );
        }
        _getHandJoint(e, t) {
          if (void 0 === e.joints[t.jointName]) {
            let n = new iC();
            (n.matrixAutoUpdate = !1),
              (n.visible = !1),
              (e.joints[t.jointName] = n),
              e.add(n);
          }
          return e.joints[t.jointName];
        }
      }
      class iO extends ev {
        constructor(e, t, n, r, i, s, a, o, l, u) {
          if (1026 !== (u = void 0 !== u ? u : 1026) && 1027 !== u)
            throw Error(
              "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
            );
          void 0 === n && 1026 === u && (n = 1014),
            void 0 === n && 1027 === u && (n = 1020),
            super(null, r, i, s, a, o, u, n, l),
            (this.isDepthTexture = !0),
            (this.image = { width: e, height: t }),
            (this.magFilter = void 0 !== a ? a : y),
            (this.minFilter = void 0 !== o ? o : y),
            (this.flipY = !1),
            (this.generateMipmaps = !1),
            (this.compareFunction = null);
        }
        copy(e) {
          return (
            super.copy(e), (this.compareFunction = e.compareFunction), this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            null !== this.compareFunction &&
              (t.compareFunction = this.compareFunction),
            t
          );
        }
      }
      class iL extends F {
        constructor(e, t) {
          super();
          let n = this,
            r = null,
            i = 1,
            s = null,
            a = "local-floor",
            o = 1,
            l = null,
            u = null,
            c = null,
            h = null,
            d = null,
            p = null,
            f = t.getContextAttributes(),
            m = null,
            g = null,
            _ = [],
            v = [],
            y = new np();
          y.layers.enable(1), (y.viewport = new ey());
          let x = new np();
          x.layers.enable(2), (x.viewport = new ey());
          let b = [y, x],
            S = new iA();
          S.layers.enable(1), S.layers.enable(2);
          let E = null,
            M = null;
          function w(e) {
            let t = v.indexOf(e.inputSource);
            if (-1 === t) return;
            let n = _[t];
            void 0 !== n &&
              (n.update(e.inputSource, e.frame, l || s),
              n.dispatchEvent({ type: e.type, data: e.inputSource }));
          }
          function A() {
            r.removeEventListener("select", w),
              r.removeEventListener("selectstart", w),
              r.removeEventListener("selectend", w),
              r.removeEventListener("squeeze", w),
              r.removeEventListener("squeezestart", w),
              r.removeEventListener("squeezeend", w),
              r.removeEventListener("end", A),
              r.removeEventListener("inputsourceschange", C);
            for (let e = 0; e < _.length; e++) {
              let t = v[e];
              null !== t && ((v[e] = null), _[e].disconnect(t));
            }
            (E = null),
              (M = null),
              e.setRenderTarget(m),
              (d = null),
              (h = null),
              (c = null),
              (r = null),
              (g = null),
              I.stop(),
              (n.isPresenting = !1),
              n.dispatchEvent({ type: "sessionend" });
          }
          function C(e) {
            for (let t = 0; t < e.removed.length; t++) {
              let n = e.removed[t],
                r = v.indexOf(n);
              r >= 0 && ((v[r] = null), _[r].disconnect(n));
            }
            for (let t = 0; t < e.added.length; t++) {
              let n = e.added[t],
                r = v.indexOf(n);
              if (-1 === r) {
                for (let e = 0; e < _.length; e++) {
                  if (e >= v.length) {
                    v.push(n), (r = e);
                    break;
                  }
                  if (null === v[e]) {
                    (v[e] = n), (r = e);
                    break;
                  }
                }
                if (-1 === r) break;
              }
              let i = _[r];
              i && i.connect(n);
            }
          }
          (this.cameraAutoUpdate = !0),
            (this.enabled = !1),
            (this.isPresenting = !1),
            (this.getController = function (e) {
              let t = _[e];
              return (
                void 0 === t && ((t = new iP()), (_[e] = t)),
                t.getTargetRaySpace()
              );
            }),
            (this.getControllerGrip = function (e) {
              let t = _[e];
              return (
                void 0 === t && ((t = new iP()), (_[e] = t)), t.getGripSpace()
              );
            }),
            (this.getHand = function (e) {
              let t = _[e];
              return (
                void 0 === t && ((t = new iP()), (_[e] = t)), t.getHandSpace()
              );
            }),
            (this.setFramebufferScaleFactor = function (e) {
              (i = e),
                !0 === n.isPresenting &&
                  console.warn(
                    "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
                  );
            }),
            (this.setReferenceSpaceType = function (e) {
              (a = e),
                !0 === n.isPresenting &&
                  console.warn(
                    "THREE.WebXRManager: Cannot change reference space type while presenting."
                  );
            }),
            (this.getReferenceSpace = function () {
              return l || s;
            }),
            (this.setReferenceSpace = function (e) {
              l = e;
            }),
            (this.getBaseLayer = function () {
              return null !== h ? h : d;
            }),
            (this.getBinding = function () {
              return c;
            }),
            (this.getFrame = function () {
              return p;
            }),
            (this.getSession = function () {
              return r;
            }),
            (this.setSession = async function (u) {
              if (null !== (r = u)) {
                if (
                  ((m = e.getRenderTarget()),
                  r.addEventListener("select", w),
                  r.addEventListener("selectstart", w),
                  r.addEventListener("selectend", w),
                  r.addEventListener("squeeze", w),
                  r.addEventListener("squeezestart", w),
                  r.addEventListener("squeezeend", w),
                  r.addEventListener("end", A),
                  r.addEventListener("inputsourceschange", C),
                  !0 !== f.xrCompatible && (await t.makeXRCompatible()),
                  void 0 === r.renderState.layers ||
                    !1 === e.capabilities.isWebGL2)
                ) {
                  let n = {
                    antialias: void 0 !== r.renderState.layers || f.antialias,
                    alpha: !0,
                    depth: f.depth,
                    stencil: f.stencil,
                    framebufferScaleFactor: i,
                  };
                  (d = new XRWebGLLayer(r, t, n)),
                    r.updateRenderState({ baseLayer: d }),
                    (g = new eb(d.framebufferWidth, d.framebufferHeight, {
                      format: T,
                      type: 1009,
                      colorSpace: e.outputColorSpace,
                      stencilBuffer: f.stencil,
                    }));
                } else {
                  let n = null,
                    s = null,
                    a = null;
                  f.depth &&
                    ((a = f.stencil ? t.DEPTH24_STENCIL8 : t.DEPTH_COMPONENT24),
                    (n = f.stencil ? 1027 : 1026),
                    (s = f.stencil ? 1020 : 1014));
                  let o = {
                    colorFormat: t.RGBA8,
                    depthFormat: a,
                    scaleFactor: i,
                  };
                  (h = (c = new XRWebGLBinding(r, t)).createProjectionLayer(o)),
                    r.updateRenderState({ layers: [h] }),
                    (g = new eb(h.textureWidth, h.textureHeight, {
                      format: T,
                      type: 1009,
                      depthTexture: new iO(
                        h.textureWidth,
                        h.textureHeight,
                        s,
                        void 0,
                        void 0,
                        void 0,
                        void 0,
                        void 0,
                        void 0,
                        n
                      ),
                      stencilBuffer: f.stencil,
                      colorSpace: e.outputColorSpace,
                      samples: f.antialias ? 4 : 0,
                    }));
                  let l = e.properties.get(g);
                  l.__ignoreDepthValues = h.ignoreDepthValues;
                }
                (g.isXRRenderTarget = !0),
                  this.setFoveation(o),
                  (l = null),
                  (s = await r.requestReferenceSpace(a)),
                  I.setContext(r),
                  I.start(),
                  (n.isPresenting = !0),
                  n.dispatchEvent({ type: "sessionstart" });
              }
            }),
            (this.getEnvironmentBlendMode = function () {
              if (null !== r) return r.environmentBlendMode;
            });
          let R = new eM(),
            P = new eM();
          function O(e, t) {
            null === t
              ? e.matrixWorld.copy(e.matrix)
              : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
              e.matrixWorldInverse.copy(e.matrixWorld).invert();
          }
          (this.updateCamera = function (e) {
            if (null === r) return;
            (S.near = x.near = y.near = e.near),
              (S.far = x.far = y.far = e.far),
              (E !== S.near || M !== S.far) &&
                (r.updateRenderState({ depthNear: S.near, depthFar: S.far }),
                (E = S.near),
                (M = S.far));
            let t = e.parent,
              n = S.cameras;
            O(S, t);
            for (let e = 0; e < n.length; e++) O(n[e], t);
            2 === n.length
              ? (function (e, t, n) {
                  R.setFromMatrixPosition(t.matrixWorld),
                    P.setFromMatrixPosition(n.matrixWorld);
                  let r = R.distanceTo(P),
                    i = t.projectionMatrix.elements,
                    s = n.projectionMatrix.elements,
                    a = i[14] / (i[10] - 1),
                    o = i[14] / (i[10] + 1),
                    l = (i[9] + 1) / i[5],
                    u = (i[9] - 1) / i[5],
                    c = (i[8] - 1) / i[0],
                    h = (s[8] + 1) / s[0],
                    d = r / (-c + h),
                    p = -(d * c);
                  t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                    e.translateX(p),
                    e.translateZ(d),
                    e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                    e.matrixWorldInverse.copy(e.matrixWorld).invert();
                  let f = a + d,
                    m = o + d,
                    g = a * c - p,
                    _ = a * h + (r - p),
                    v = ((l * o) / m) * f,
                    y = ((u * o) / m) * f;
                  e.projectionMatrix.makePerspective(g, _, v, y, f, m),
                    e.projectionMatrixInverse.copy(e.projectionMatrix).invert();
                })(S, y, x)
              : S.projectionMatrix.copy(y.projectionMatrix),
              null === t
                ? e.matrix.copy(S.matrixWorld)
                : (e.matrix.copy(t.matrixWorld),
                  e.matrix.invert(),
                  e.matrix.multiply(S.matrixWorld)),
              e.matrix.decompose(e.position, e.quaternion, e.scale),
              e.updateMatrixWorld(!0),
              e.projectionMatrix.copy(S.projectionMatrix),
              e.projectionMatrixInverse.copy(S.projectionMatrixInverse),
              e.isPerspectiveCamera &&
                ((e.fov =
                  2 * j * Math.atan(1 / e.projectionMatrix.elements[5])),
                (e.zoom = 1));
          }),
            (this.getCamera = function () {
              return S;
            }),
            (this.getFoveation = function () {
              if (null !== h || null !== d) return o;
            }),
            (this.setFoveation = function (e) {
              (o = e),
                null !== h && (h.fixedFoveation = e),
                null !== d &&
                  void 0 !== d.fixedFoveation &&
                  (d.fixedFoveation = e);
            });
          let L = null,
            I = new nM();
          I.setAnimationLoop(function (t, r) {
            if (((u = r.getViewerPose(l || s)), (p = r), null !== u)) {
              let t = u.views;
              null !== d &&
                (e.setRenderTargetFramebuffer(g, d.framebuffer),
                e.setRenderTarget(g));
              let n = !1;
              t.length !== S.cameras.length &&
                ((S.cameras.length = 0), (n = !0));
              for (let r = 0; r < t.length; r++) {
                let i = t[r],
                  s = null;
                if (null !== d) s = d.getViewport(i);
                else {
                  let t = c.getViewSubImage(h, i);
                  (s = t.viewport),
                    0 === r &&
                      (e.setRenderTargetTextures(
                        g,
                        t.colorTexture,
                        h.ignoreDepthValues ? void 0 : t.depthStencilTexture
                      ),
                      e.setRenderTarget(g));
                }
                let a = b[r];
                void 0 === a &&
                  ((a = new np()).layers.enable(r),
                  (a.viewport = new ey()),
                  (b[r] = a)),
                  a.matrix.fromArray(i.transform.matrix),
                  a.matrix.decompose(a.position, a.quaternion, a.scale),
                  a.projectionMatrix.fromArray(i.projectionMatrix),
                  a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),
                  a.viewport.set(s.x, s.y, s.width, s.height),
                  0 === r &&
                    (S.matrix.copy(a.matrix),
                    S.matrix.decompose(S.position, S.quaternion, S.scale)),
                  !0 === n && S.cameras.push(a);
              }
            }
            for (let e = 0; e < _.length; e++) {
              let t = v[e],
                n = _[e];
              null !== t && void 0 !== n && n.update(t, r, l || s);
            }
            L && L(t, r),
              r.detectedPlanes &&
                n.dispatchEvent({ type: "planesdetected", data: r }),
              (p = null);
          }),
            (this.setAnimationLoop = function (e) {
              L = e;
            }),
            (this.dispose = function () {});
        }
      }
      function iI(e, t) {
        function n(e, t) {
          !0 === e.matrixAutoUpdate && e.updateMatrix(), t.value.copy(e.matrix);
        }
        function r(r, i) {
          (r.opacity.value = i.opacity),
            i.color && r.diffuse.value.copy(i.color),
            i.emissive &&
              r.emissive.value
                .copy(i.emissive)
                .multiplyScalar(i.emissiveIntensity),
            i.map && ((r.map.value = i.map), n(i.map, r.mapTransform)),
            i.alphaMap &&
              ((r.alphaMap.value = i.alphaMap),
              n(i.alphaMap, r.alphaMapTransform)),
            i.bumpMap &&
              ((r.bumpMap.value = i.bumpMap),
              n(i.bumpMap, r.bumpMapTransform),
              (r.bumpScale.value = i.bumpScale),
              i.side === l && (r.bumpScale.value *= -1)),
            i.normalMap &&
              ((r.normalMap.value = i.normalMap),
              n(i.normalMap, r.normalMapTransform),
              r.normalScale.value.copy(i.normalScale),
              i.side === l && r.normalScale.value.negate()),
            i.displacementMap &&
              ((r.displacementMap.value = i.displacementMap),
              n(i.displacementMap, r.displacementMapTransform),
              (r.displacementScale.value = i.displacementScale),
              (r.displacementBias.value = i.displacementBias)),
            i.emissiveMap &&
              ((r.emissiveMap.value = i.emissiveMap),
              n(i.emissiveMap, r.emissiveMapTransform)),
            i.specularMap &&
              ((r.specularMap.value = i.specularMap),
              n(i.specularMap, r.specularMapTransform)),
            i.alphaTest > 0 && (r.alphaTest.value = i.alphaTest);
          let s = t.get(i).envMap;
          if (
            (s &&
              ((r.envMap.value = s),
              (r.flipEnvMap.value =
                s.isCubeTexture && !1 === s.isRenderTargetTexture ? -1 : 1),
              (r.reflectivity.value = i.reflectivity),
              (r.ior.value = i.ior),
              (r.refractionRatio.value = i.refractionRatio)),
            i.lightMap)
          ) {
            r.lightMap.value = i.lightMap;
            let t = !0 === e._useLegacyLights ? Math.PI : 1;
            (r.lightMapIntensity.value = i.lightMapIntensity * t),
              n(i.lightMap, r.lightMapTransform);
          }
          i.aoMap &&
            ((r.aoMap.value = i.aoMap),
            (r.aoMapIntensity.value = i.aoMapIntensity),
            n(i.aoMap, r.aoMapTransform));
        }
        return {
          refreshFogUniforms: function (t, n) {
            n.color.getRGB(t.fogColor.value, nu(e)),
              n.isFog
                ? ((t.fogNear.value = n.near), (t.fogFar.value = n.far))
                : n.isFogExp2 && (t.fogDensity.value = n.density);
          },
          refreshMaterialUniforms: function (e, i, s, a, o) {
            i.isMeshBasicMaterial
              ? r(e, i)
              : i.isMeshLambertMaterial
              ? r(e, i)
              : i.isMeshToonMaterial
              ? (r(e, i),
                i.gradientMap && (e.gradientMap.value = i.gradientMap))
              : i.isMeshPhongMaterial
              ? (r(e, i),
                e.specular.value.copy(i.specular),
                (e.shininess.value = Math.max(i.shininess, 1e-4)))
              : i.isMeshStandardMaterial
              ? (r(e, i),
                (function (e, r) {
                  (e.metalness.value = r.metalness),
                    r.metalnessMap &&
                      ((e.metalnessMap.value = r.metalnessMap),
                      n(r.metalnessMap, e.metalnessMapTransform)),
                    (e.roughness.value = r.roughness),
                    r.roughnessMap &&
                      ((e.roughnessMap.value = r.roughnessMap),
                      n(r.roughnessMap, e.roughnessMapTransform));
                  let i = t.get(r).envMap;
                  i && (e.envMapIntensity.value = r.envMapIntensity);
                })(e, i),
                i.isMeshPhysicalMaterial &&
                  ((e.ior.value = i.ior),
                  i.sheen > 0 &&
                    (e.sheenColor.value
                      .copy(i.sheenColor)
                      .multiplyScalar(i.sheen),
                    (e.sheenRoughness.value = i.sheenRoughness),
                    i.sheenColorMap &&
                      ((e.sheenColorMap.value = i.sheenColorMap),
                      n(i.sheenColorMap, e.sheenColorMapTransform)),
                    i.sheenRoughnessMap &&
                      ((e.sheenRoughnessMap.value = i.sheenRoughnessMap),
                      n(i.sheenRoughnessMap, e.sheenRoughnessMapTransform))),
                  i.clearcoat > 0 &&
                    ((e.clearcoat.value = i.clearcoat),
                    (e.clearcoatRoughness.value = i.clearcoatRoughness),
                    i.clearcoatMap &&
                      ((e.clearcoatMap.value = i.clearcoatMap),
                      n(i.clearcoatMap, e.clearcoatMapTransform)),
                    i.clearcoatRoughnessMap &&
                      ((e.clearcoatRoughnessMap.value =
                        i.clearcoatRoughnessMap),
                      n(
                        i.clearcoatRoughnessMap,
                        e.clearcoatRoughnessMapTransform
                      )),
                    i.clearcoatNormalMap &&
                      ((e.clearcoatNormalMap.value = i.clearcoatNormalMap),
                      n(i.clearcoatNormalMap, e.clearcoatNormalMapTransform),
                      e.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),
                      i.side === l && e.clearcoatNormalScale.value.negate())),
                  i.iridescence > 0 &&
                    ((e.iridescence.value = i.iridescence),
                    (e.iridescenceIOR.value = i.iridescenceIOR),
                    (e.iridescenceThicknessMinimum.value =
                      i.iridescenceThicknessRange[0]),
                    (e.iridescenceThicknessMaximum.value =
                      i.iridescenceThicknessRange[1]),
                    i.iridescenceMap &&
                      ((e.iridescenceMap.value = i.iridescenceMap),
                      n(i.iridescenceMap, e.iridescenceMapTransform)),
                    i.iridescenceThicknessMap &&
                      ((e.iridescenceThicknessMap.value =
                        i.iridescenceThicknessMap),
                      n(
                        i.iridescenceThicknessMap,
                        e.iridescenceThicknessMapTransform
                      ))),
                  i.transmission > 0 &&
                    ((e.transmission.value = i.transmission),
                    (e.transmissionSamplerMap.value = o.texture),
                    e.transmissionSamplerSize.value.set(o.width, o.height),
                    i.transmissionMap &&
                      ((e.transmissionMap.value = i.transmissionMap),
                      n(i.transmissionMap, e.transmissionMapTransform)),
                    (e.thickness.value = i.thickness),
                    i.thicknessMap &&
                      ((e.thicknessMap.value = i.thicknessMap),
                      n(i.thicknessMap, e.thicknessMapTransform)),
                    (e.attenuationDistance.value = i.attenuationDistance),
                    e.attenuationColor.value.copy(i.attenuationColor)),
                  i.anisotropy > 0 &&
                    (e.anisotropyVector.value.set(
                      i.anisotropy * Math.cos(i.anisotropyRotation),
                      i.anisotropy * Math.sin(i.anisotropyRotation)
                    ),
                    i.anisotropyMap &&
                      ((e.anisotropyMap.value = i.anisotropyMap),
                      n(i.anisotropyMap, e.anisotropyMapTransform))),
                  (e.specularIntensity.value = i.specularIntensity),
                  e.specularColor.value.copy(i.specularColor),
                  i.specularColorMap &&
                    ((e.specularColorMap.value = i.specularColorMap),
                    n(i.specularColorMap, e.specularColorMapTransform)),
                  i.specularIntensityMap &&
                    ((e.specularIntensityMap.value = i.specularIntensityMap),
                    n(
                      i.specularIntensityMap,
                      e.specularIntensityMapTransform
                    ))))
              : i.isMeshMatcapMaterial
              ? (r(e, i), i.matcap && (e.matcap.value = i.matcap))
              : i.isMeshDepthMaterial
              ? r(e, i)
              : i.isMeshDistanceMaterial
              ? (r(e, i),
                (function (e, n) {
                  let r = t.get(n).light;
                  e.referencePosition.value.setFromMatrixPosition(
                    r.matrixWorld
                  ),
                    (e.nearDistance.value = r.shadow.camera.near),
                    (e.farDistance.value = r.shadow.camera.far);
                })(e, i))
              : i.isMeshNormalMaterial
              ? r(e, i)
              : i.isLineBasicMaterial
              ? (e.diffuse.value.copy(i.color),
                (e.opacity.value = i.opacity),
                i.map && ((e.map.value = i.map), n(i.map, e.mapTransform)),
                i.isLineDashedMaterial &&
                  ((e.dashSize.value = i.dashSize),
                  (e.totalSize.value = i.dashSize + i.gapSize),
                  (e.scale.value = i.scale)))
              : i.isPointsMaterial
              ? (e.diffuse.value.copy(i.color),
                (e.opacity.value = i.opacity),
                (e.size.value = i.size * s),
                (e.scale.value = 0.5 * a),
                i.map && ((e.map.value = i.map), n(i.map, e.uvTransform)),
                i.alphaMap &&
                  ((e.alphaMap.value = i.alphaMap),
                  n(i.alphaMap, e.alphaMapTransform)),
                i.alphaTest > 0 && (e.alphaTest.value = i.alphaTest))
              : i.isSpriteMaterial
              ? (e.diffuse.value.copy(i.color),
                (e.opacity.value = i.opacity),
                (e.rotation.value = i.rotation),
                i.map && ((e.map.value = i.map), n(i.map, e.mapTransform)),
                i.alphaMap &&
                  ((e.alphaMap.value = i.alphaMap),
                  n(i.alphaMap, e.alphaMapTransform)),
                i.alphaTest > 0 && (e.alphaTest.value = i.alphaTest))
              : i.isShadowMaterial
              ? (e.color.value.copy(i.color), (e.opacity.value = i.opacity))
              : i.isShaderMaterial && (i.uniformsNeedUpdate = !1);
          },
        };
      }
      function iN(e, t, n, r) {
        let i = {},
          s = {},
          a = [],
          o = n.isWebGL2 ? e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
        function l(e) {
          let t = { boundary: 0, storage: 0 };
          return (
            "number" == typeof e
              ? ((t.boundary = 4), (t.storage = 4))
              : e.isVector2
              ? ((t.boundary = 8), (t.storage = 8))
              : e.isVector3 || e.isColor
              ? ((t.boundary = 16), (t.storage = 12))
              : e.isVector4
              ? ((t.boundary = 16), (t.storage = 16))
              : e.isMatrix3
              ? ((t.boundary = 48), (t.storage = 48))
              : e.isMatrix4
              ? ((t.boundary = 64), (t.storage = 64))
              : e.isTexture
              ? console.warn(
                  "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
                )
              : console.warn(
                  "THREE.WebGLRenderer: Unsupported uniform value type.",
                  e
                ),
            t
          );
        }
        function u(t) {
          let n = t.target;
          n.removeEventListener("dispose", u);
          let r = a.indexOf(n.__bindingPointIndex);
          a.splice(r, 1),
            e.deleteBuffer(i[n.id]),
            delete i[n.id],
            delete s[n.id];
        }
        return {
          bind: function (e, t) {
            let n = t.program;
            r.uniformBlockBinding(e, n);
          },
          update: function (n, c) {
            let h = i[n.id];
            void 0 === h &&
              ((function (e) {
                let t = e.uniforms,
                  n = 0,
                  r = 0;
                for (let e = 0, i = t.length; e < i; e++) {
                  let i = t[e],
                    s = { boundary: 0, storage: 0 },
                    a = Array.isArray(i.value) ? i.value : [i.value];
                  for (let e = 0, t = a.length; e < t; e++) {
                    let t = a[e],
                      n = l(t);
                    (s.boundary += n.boundary), (s.storage += n.storage);
                  }
                  if (
                    ((i.__data = new Float32Array(
                      s.storage / Float32Array.BYTES_PER_ELEMENT
                    )),
                    (i.__offset = n),
                    e > 0)
                  ) {
                    r = n % 16;
                    let e = 16 - r;
                    0 !== r &&
                      e - s.boundary < 0 &&
                      ((n += 16 - r), (i.__offset = n));
                  }
                  n += s.storage;
                }
                (r = n % 16) > 0 && (n += 16 - r),
                  (e.__size = n),
                  (e.__cache = {});
              })(n),
              (h = (function (t) {
                let n = (function () {
                  for (let e = 0; e < o; e++)
                    if (-1 === a.indexOf(e)) return a.push(e), e;
                  return (
                    console.error(
                      "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
                    ),
                    0
                  );
                })();
                t.__bindingPointIndex = n;
                let r = e.createBuffer(),
                  i = t.__size,
                  s = t.usage;
                return (
                  e.bindBuffer(e.UNIFORM_BUFFER, r),
                  e.bufferData(e.UNIFORM_BUFFER, i, s),
                  e.bindBuffer(e.UNIFORM_BUFFER, null),
                  e.bindBufferBase(e.UNIFORM_BUFFER, n, r),
                  r
                );
              })(n)),
              (i[n.id] = h),
              n.addEventListener("dispose", u));
            let d = c.program;
            r.updateUBOMapping(n, d);
            let p = t.render.frame;
            s[n.id] !== p &&
              ((function (t) {
                let n = i[t.id],
                  r = t.uniforms,
                  s = t.__cache;
                e.bindBuffer(e.UNIFORM_BUFFER, n);
                for (let t = 0, n = r.length; t < n; t++) {
                  let n = r[t];
                  if (
                    !0 ===
                    (function (e, t, n) {
                      let r = e.value;
                      if (void 0 === n[t]) {
                        if ("number" == typeof r) n[t] = r;
                        else {
                          let e = Array.isArray(r) ? r : [r],
                            i = [];
                          for (let t = 0; t < e.length; t++)
                            i.push(e[t].clone());
                          n[t] = i;
                        }
                        return !0;
                      }
                      if ("number" == typeof r) {
                        if (n[t] !== r) return (n[t] = r), !0;
                      } else {
                        let e = Array.isArray(n[t]) ? n[t] : [n[t]],
                          i = Array.isArray(r) ? r : [r];
                        for (let t = 0; t < e.length; t++) {
                          let n = e[t];
                          if (!1 === n.equals(i[t])) return n.copy(i[t]), !0;
                        }
                      }
                      return !1;
                    })(n, t, s)
                  ) {
                    let t = n.__offset,
                      r = Array.isArray(n.value) ? n.value : [n.value],
                      i = 0;
                    for (let s = 0; s < r.length; s++) {
                      let a = r[s],
                        o = l(a);
                      "number" == typeof a
                        ? ((n.__data[0] = a),
                          e.bufferSubData(e.UNIFORM_BUFFER, t + i, n.__data))
                        : a.isMatrix3
                        ? ((n.__data[0] = a.elements[0]),
                          (n.__data[1] = a.elements[1]),
                          (n.__data[2] = a.elements[2]),
                          (n.__data[3] = a.elements[0]),
                          (n.__data[4] = a.elements[3]),
                          (n.__data[5] = a.elements[4]),
                          (n.__data[6] = a.elements[5]),
                          (n.__data[7] = a.elements[0]),
                          (n.__data[8] = a.elements[6]),
                          (n.__data[9] = a.elements[7]),
                          (n.__data[10] = a.elements[8]),
                          (n.__data[11] = a.elements[0]))
                        : (a.toArray(n.__data, i),
                          (i += o.storage / Float32Array.BYTES_PER_ELEMENT));
                    }
                    e.bufferSubData(e.UNIFORM_BUFFER, t, n.__data);
                  }
                }
                e.bindBuffer(e.UNIFORM_BUFFER, null);
              })(n),
              (s[n.id] = p));
          },
          dispose: function () {
            for (let t in i) e.deleteBuffer(i[t]);
            (a = []), (i = {}), (s = {});
          },
        };
      }
      class iD {
        constructor(e = {}) {
          let t,
            n,
            r,
            i,
            s,
            a,
            c,
            h,
            d,
            p,
            f,
            g,
            _,
            v,
            y,
            x,
            b,
            S,
            E,
            A,
            C,
            R,
            P,
            O,
            N;
          let {
            canvas: D = (function () {
              let e = er("canvas");
              return (e.style.display = "block"), e;
            })(),
            context: U = null,
            depth: k = !0,
            stencil: F = !0,
            alpha: z = !1,
            antialias: B = !1,
            premultipliedAlpha: V = !0,
            preserveDrawingBuffer: j = !1,
            powerPreference: H = "default",
            failIfMajorPerformanceCaveat: G = !1,
          } = e;
          (this.isWebGLRenderer = !0),
            (t = null !== U ? U.getContextAttributes().alpha : z);
          let W = new Uint32Array(4),
            $ = new Int32Array(4),
            X = null,
            q = null,
            J = [],
            Z = [];
          (this.domElement = D),
            (this.debug = { checkShaderErrors: !0, onShaderError: null }),
            (this.autoClear = !0),
            (this.autoClearColor = !0),
            (this.autoClearDepth = !0),
            (this.autoClearStencil = !0),
            (this.sortObjects = !0),
            (this.clippingPlanes = []),
            (this.localClippingEnabled = !1),
            (this.outputColorSpace = L),
            (this._useLegacyLights = !1),
            (this.toneMapping = m),
            (this.toneMappingExposure = 1);
          let K = this,
            ee = !1,
            et = 0,
            en = 0,
            ei = null,
            es = -1,
            ea = null,
            eo = new ey(),
            el = new ey(),
            eu = null,
            ec = new tN(0),
            eh = 0,
            ed = D.width,
            ep = D.height,
            ef = 1,
            em = null,
            eg = null,
            e_ = new ey(0, 0, ed, ep),
            ev = new ey(0, 0, ed, ep),
            ex = !1,
            eS = new nE(),
            eE = !1,
            ew = !1,
            eT = null,
            eA = new e0(),
            eC = new Q(),
            eR = new eM(),
            eP = {
              background: null,
              fog: null,
              environment: null,
              overrideMaterial: null,
              isScene: !0,
            };
          function eO() {
            return null === ei ? ef : 1;
          }
          let eL = U;
          function eI(e, t) {
            for (let n = 0; n < e.length; n++) {
              let r = e[n],
                i = D.getContext(r, t);
              if (null !== i) return i;
            }
            return null;
          }
          try {
            if (
              ("setAttribute" in D &&
                D.setAttribute("data-engine", "three.js r156"),
              D.addEventListener("webglcontextlost", eU, !1),
              D.addEventListener("webglcontextrestored", ek, !1),
              D.addEventListener("webglcontextcreationerror", eF, !1),
              null === eL)
            ) {
              let e = ["webgl2", "webgl", "experimental-webgl"];
              if (
                (!0 === K.isWebGL1Renderer && e.shift(),
                (eL = eI(e, {
                  alpha: !0,
                  depth: k,
                  stencil: F,
                  antialias: B,
                  premultipliedAlpha: V,
                  preserveDrawingBuffer: j,
                  powerPreference: H,
                  failIfMajorPerformanceCaveat: G,
                })),
                null === eL)
              ) {
                if (eI(e))
                  throw Error(
                    "Error creating WebGL context with your selected attributes."
                  );
                throw Error("Error creating WebGL context.");
              }
            }
            "undefined" != typeof WebGLRenderingContext &&
              eL instanceof WebGLRenderingContext &&
              console.warn(
                "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."
              ),
              void 0 === eL.getShaderPrecisionFormat &&
                (eL.getShaderPrecisionFormat = function () {
                  return { rangeMin: 1, rangeMax: 1, precision: 1 };
                });
          } catch (e) {
            throw (console.error("THREE.WebGLRenderer: " + e.message), e);
          }
          function eN() {
            (n = new nK(eL)),
              (r = new nN(eL, n, e)),
              n.init(r),
              (P = new iT(eL, n, r)),
              (i = new iM(eL, n, r)),
              (s = new n1(eL)),
              (a = new iu()),
              (c = new iw(eL, n, i, a, r, P, s)),
              (h = new nU(K)),
              (d = new nZ(K)),
              (p = new nw(eL, r)),
              (O = new nL(eL, n, p, r)),
              (f = new nQ(eL, p, s, O)),
              (g = new n5(eL, f, p, s)),
              (A = new n4(eL, r, c)),
              (b = new nD(a)),
              (_ = new il(K, h, d, n, r, O, b)),
              (v = new iI(K, a)),
              (y = new ip()),
              (x = new ix(n, r)),
              (E = new nO(K, h, d, i, g, t, V)),
              (S = new iE(K, g, r)),
              (N = new iN(eL, s, r, i)),
              (C = new nI(eL, n, s, r)),
              (R = new n0(eL, n, s, r)),
              (s.programs = _.programs),
              (K.capabilities = r),
              (K.extensions = n),
              (K.properties = a),
              (K.renderLists = y),
              (K.shadowMap = S),
              (K.state = i),
              (K.info = s);
          }
          eN();
          let eD = new iL(K, eL);
          function eU(e) {
            e.preventDefault(),
              console.log("THREE.WebGLRenderer: Context Lost."),
              (ee = !0);
          }
          function ek() {
            console.log("THREE.WebGLRenderer: Context Restored."), (ee = !1);
            let e = s.autoReset,
              t = S.enabled,
              n = S.autoUpdate,
              r = S.needsUpdate,
              i = S.type;
            eN(),
              (s.autoReset = e),
              (S.enabled = t),
              (S.autoUpdate = n),
              (S.needsUpdate = r),
              (S.type = i);
          }
          function eF(e) {
            console.error(
              "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
              e.statusMessage
            );
          }
          function ez(e) {
            let t = e.target;
            t.removeEventListener("dispose", ez),
              (function (e) {
                let t = a.get(e).programs;
                void 0 !== t &&
                  (t.forEach(function (e) {
                    _.releaseProgram(e);
                  }),
                  e.isShaderMaterial && _.releaseShaderCache(e));
              })(t),
              a.remove(t);
          }
          (this.xr = eD),
            (this.getContext = function () {
              return eL;
            }),
            (this.getContextAttributes = function () {
              return eL.getContextAttributes();
            }),
            (this.forceContextLoss = function () {
              let e = n.get("WEBGL_lose_context");
              e && e.loseContext();
            }),
            (this.forceContextRestore = function () {
              let e = n.get("WEBGL_lose_context");
              e && e.restoreContext();
            }),
            (this.getPixelRatio = function () {
              return ef;
            }),
            (this.setPixelRatio = function (e) {
              void 0 !== e && ((ef = e), this.setSize(ed, ep, !1));
            }),
            (this.getSize = function (e) {
              return e.set(ed, ep);
            }),
            (this.setSize = function (e, t, n = !0) {
              if (eD.isPresenting) {
                console.warn(
                  "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                );
                return;
              }
              (ed = e),
                (ep = t),
                (D.width = Math.floor(e * ef)),
                (D.height = Math.floor(t * ef)),
                !0 === n &&
                  ((D.style.width = e + "px"), (D.style.height = t + "px")),
                this.setViewport(0, 0, e, t);
            }),
            (this.getDrawingBufferSize = function (e) {
              return e.set(ed * ef, ep * ef).floor();
            }),
            (this.setDrawingBufferSize = function (e, t, n) {
              (ed = e),
                (ep = t),
                (ef = n),
                (D.width = Math.floor(e * n)),
                (D.height = Math.floor(t * n)),
                this.setViewport(0, 0, e, t);
            }),
            (this.getCurrentViewport = function (e) {
              return e.copy(eo);
            }),
            (this.getViewport = function (e) {
              return e.copy(e_);
            }),
            (this.setViewport = function (e, t, n, r) {
              e.isVector4 ? e_.set(e.x, e.y, e.z, e.w) : e_.set(e, t, n, r),
                i.viewport(eo.copy(e_).multiplyScalar(ef).floor());
            }),
            (this.getScissor = function (e) {
              return e.copy(ev);
            }),
            (this.setScissor = function (e, t, n, r) {
              e.isVector4 ? ev.set(e.x, e.y, e.z, e.w) : ev.set(e, t, n, r),
                i.scissor(el.copy(ev).multiplyScalar(ef).floor());
            }),
            (this.getScissorTest = function () {
              return ex;
            }),
            (this.setScissorTest = function (e) {
              i.setScissorTest((ex = e));
            }),
            (this.setOpaqueSort = function (e) {
              em = e;
            }),
            (this.setTransparentSort = function (e) {
              eg = e;
            }),
            (this.getClearColor = function (e) {
              return e.copy(E.getClearColor());
            }),
            (this.setClearColor = function () {
              E.setClearColor.apply(E, arguments);
            }),
            (this.getClearAlpha = function () {
              return E.getClearAlpha();
            }),
            (this.setClearAlpha = function () {
              E.setClearAlpha.apply(E, arguments);
            }),
            (this.clear = function (e = !0, t = !0, n = !0) {
              let r = 0;
              if (e) {
                let e = !1;
                if (null !== ei) {
                  let t = ei.texture.format;
                  e = 1033 === t || 1031 === t || 1029 === t;
                }
                if (e) {
                  let e = ei.texture.type,
                    t = E.getClearColor(),
                    n = E.getClearAlpha(),
                    r = t.r,
                    i = t.g,
                    s = t.b;
                  1009 === e ||
                  1014 === e ||
                  1012 === e ||
                  1020 === e ||
                  1017 === e ||
                  1018 === e
                    ? ((W[0] = r),
                      (W[1] = i),
                      (W[2] = s),
                      (W[3] = n),
                      eL.clearBufferuiv(eL.COLOR, 0, W))
                    : (($[0] = r),
                      ($[1] = i),
                      ($[2] = s),
                      ($[3] = n),
                      eL.clearBufferiv(eL.COLOR, 0, $));
                } else r |= eL.COLOR_BUFFER_BIT;
              }
              t && (r |= eL.DEPTH_BUFFER_BIT),
                n && (r |= eL.STENCIL_BUFFER_BIT),
                eL.clear(r);
            }),
            (this.clearColor = function () {
              this.clear(!0, !1, !1);
            }),
            (this.clearDepth = function () {
              this.clear(!1, !0, !1);
            }),
            (this.clearStencil = function () {
              this.clear(!1, !1, !0);
            }),
            (this.dispose = function () {
              D.removeEventListener("webglcontextlost", eU, !1),
                D.removeEventListener("webglcontextrestored", ek, !1),
                D.removeEventListener("webglcontextcreationerror", eF, !1),
                y.dispose(),
                x.dispose(),
                a.dispose(),
                h.dispose(),
                d.dispose(),
                g.dispose(),
                O.dispose(),
                N.dispose(),
                _.dispose(),
                eD.dispose(),
                eD.removeEventListener("sessionstart", eV),
                eD.removeEventListener("sessionend", ej),
                eT && (eT.dispose(), (eT = null)),
                eH.stop();
            }),
            (this.renderBufferDirect = function (e, t, n, s, o, l) {
              let u;
              null === t && (t = eP);
              let g = o.isMesh && 0 > o.matrixWorld.determinant(),
                _ = (function (e, t, n, s, o) {
                  var l;
                  !0 !== t.isScene && (t = eP), c.resetTextureUnits();
                  let u = t.fog,
                    p = s.isMeshStandardMaterial ? t.environment : null,
                    f =
                      null === ei
                        ? K.outputColorSpace
                        : !0 === ei.isXRRenderTarget
                        ? ei.texture.colorSpace
                        : I,
                    g = (s.isMeshStandardMaterial ? d : h).get(s.envMap || p),
                    _ =
                      !0 === s.vertexColors &&
                      !!n.attributes.color &&
                      4 === n.attributes.color.itemSize,
                    y =
                      !!n.attributes.tangent &&
                      (!!s.normalMap || s.anisotropy > 0),
                    x = !!n.morphAttributes.position,
                    S = !!n.morphAttributes.normal,
                    E = !!n.morphAttributes.color,
                    M = m;
                  s.toneMapped &&
                    (null === ei || !0 === ei.isXRRenderTarget) &&
                    (M = K.toneMapping);
                  let w =
                      n.morphAttributes.position ||
                      n.morphAttributes.normal ||
                      n.morphAttributes.color,
                    T = void 0 !== w ? w.length : 0,
                    C = a.get(s),
                    R = q.state.lights;
                  if (!0 === eE && (!0 === ew || e !== ea)) {
                    let t = e === ea && s.id === es;
                    b.setState(s, e, t);
                  }
                  let P = !1;
                  s.version === C.__version
                    ? C.needsLights && C.lightsStateVersion !== R.state.version
                      ? (P = !0)
                      : C.outputColorSpace !== f
                      ? (P = !0)
                      : o.isInstancedMesh && !1 === C.instancing
                      ? (P = !0)
                      : o.isInstancedMesh || !0 !== C.instancing
                      ? o.isSkinnedMesh && !1 === C.skinning
                        ? (P = !0)
                        : o.isSkinnedMesh || !0 !== C.skinning
                        ? o.isInstancedMesh &&
                          !0 === C.instancingColor &&
                          null === o.instanceColor
                          ? (P = !0)
                          : o.isInstancedMesh &&
                            !1 === C.instancingColor &&
                            null !== o.instanceColor
                          ? (P = !0)
                          : C.envMap !== g
                          ? (P = !0)
                          : !0 === s.fog && C.fog !== u
                          ? (P = !0)
                          : void 0 !== C.numClippingPlanes &&
                            (C.numClippingPlanes !== b.numPlanes ||
                              C.numIntersection !== b.numIntersection)
                          ? (P = !0)
                          : C.vertexAlphas !== _
                          ? (P = !0)
                          : C.vertexTangents !== y
                          ? (P = !0)
                          : C.morphTargets !== x
                          ? (P = !0)
                          : C.morphNormals !== S
                          ? (P = !0)
                          : C.morphColors !== E
                          ? (P = !0)
                          : C.toneMapping !== M
                          ? (P = !0)
                          : !0 === r.isWebGL2 &&
                            C.morphTargetsCount !== T &&
                            (P = !0)
                        : (P = !0)
                      : (P = !0)
                    : ((P = !0), (C.__version = s.version));
                  let O = C.currentProgram;
                  !0 === P && (O = eX(s, t, o));
                  let L = !1,
                    D = !1,
                    U = !1,
                    k = O.getUniforms(),
                    F = C.uniforms;
                  if (
                    (i.useProgram(O.program) && ((L = !0), (D = !0), (U = !0)),
                    s.id !== es && ((es = s.id), (D = !0)),
                    L || ea !== e)
                  ) {
                    k.setValue(eL, "projectionMatrix", e.projectionMatrix),
                      k.setValue(eL, "viewMatrix", e.matrixWorldInverse);
                    let t = k.map.cameraPosition;
                    void 0 !== t &&
                      t.setValue(eL, eR.setFromMatrixPosition(e.matrixWorld)),
                      r.logarithmicDepthBuffer &&
                        k.setValue(
                          eL,
                          "logDepthBufFC",
                          2 / (Math.log(e.far + 1) / Math.LN2)
                        ),
                      (s.isMeshPhongMaterial ||
                        s.isMeshToonMaterial ||
                        s.isMeshLambertMaterial ||
                        s.isMeshBasicMaterial ||
                        s.isMeshStandardMaterial ||
                        s.isShaderMaterial) &&
                        k.setValue(
                          eL,
                          "isOrthographic",
                          !0 === e.isOrthographicCamera
                        ),
                      ea !== e && ((ea = e), (D = !0), (U = !0));
                  }
                  if (o.isSkinnedMesh) {
                    k.setOptional(eL, o, "bindMatrix"),
                      k.setOptional(eL, o, "bindMatrixInverse");
                    let e = o.skeleton;
                    e &&
                      (r.floatVertexTextures
                        ? (null === e.boneTexture && e.computeBoneTexture(),
                          k.setValue(eL, "boneTexture", e.boneTexture, c),
                          k.setValue(eL, "boneTextureSize", e.boneTextureSize))
                        : console.warn(
                            "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
                          ));
                  }
                  let z = n.morphAttributes;
                  if (
                    ((void 0 !== z.position ||
                      void 0 !== z.normal ||
                      (void 0 !== z.color && !0 === r.isWebGL2)) &&
                      A.update(o, n, O),
                    (D || C.receiveShadow !== o.receiveShadow) &&
                      ((C.receiveShadow = o.receiveShadow),
                      k.setValue(eL, "receiveShadow", o.receiveShadow)),
                    s.isMeshGouraudMaterial &&
                      null !== s.envMap &&
                      ((F.envMap.value = g),
                      (F.flipEnvMap.value =
                        g.isCubeTexture && !1 === g.isRenderTargetTexture
                          ? -1
                          : 1)),
                    D &&
                      (k.setValue(
                        eL,
                        "toneMappingExposure",
                        K.toneMappingExposure
                      ),
                      C.needsLights &&
                        ((l = U),
                        (F.ambientLightColor.needsUpdate = l),
                        (F.lightProbe.needsUpdate = l),
                        (F.directionalLights.needsUpdate = l),
                        (F.directionalLightShadows.needsUpdate = l),
                        (F.pointLights.needsUpdate = l),
                        (F.pointLightShadows.needsUpdate = l),
                        (F.spotLights.needsUpdate = l),
                        (F.spotLightShadows.needsUpdate = l),
                        (F.rectAreaLights.needsUpdate = l),
                        (F.hemisphereLights.needsUpdate = l)),
                      u && !0 === s.fog && v.refreshFogUniforms(F, u),
                      v.refreshMaterialUniforms(F, s, ef, ep, eT),
                      rK.upload(eL, C.uniformsList, F, c)),
                    s.isShaderMaterial &&
                      !0 === s.uniformsNeedUpdate &&
                      (rK.upload(eL, C.uniformsList, F, c),
                      (s.uniformsNeedUpdate = !1)),
                    s.isSpriteMaterial && k.setValue(eL, "center", o.center),
                    k.setValue(eL, "modelViewMatrix", o.modelViewMatrix),
                    k.setValue(eL, "normalMatrix", o.normalMatrix),
                    k.setValue(eL, "modelMatrix", o.matrixWorld),
                    s.isShaderMaterial || s.isRawShaderMaterial)
                  ) {
                    let e = s.uniformsGroups;
                    for (let t = 0, n = e.length; t < n; t++)
                      if (r.isWebGL2) {
                        let n = e[t];
                        N.update(n, O), N.bind(n, O);
                      } else
                        console.warn(
                          "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
                        );
                  }
                  return O;
                })(e, t, n, s, o);
              i.setMaterial(s, g);
              let y = n.index,
                x = 1;
              if (!0 === s.wireframe) {
                if (void 0 === (y = f.getWireframeAttribute(n))) return;
                x = 2;
              }
              let S = n.drawRange,
                E = n.attributes.position,
                M = S.start * x,
                w = (S.start + S.count) * x;
              null !== l &&
                ((M = Math.max(M, l.start * x)),
                (w = Math.min(w, (l.start + l.count) * x))),
                null !== y
                  ? ((M = Math.max(M, 0)), (w = Math.min(w, y.count)))
                  : null != E &&
                    ((M = Math.max(M, 0)), (w = Math.min(w, E.count)));
              let T = w - M;
              if (T < 0 || T === 1 / 0) return;
              O.setup(o, s, _, n, y);
              let P = C;
              if (
                (null !== y && ((u = p.get(y)), (P = R).setIndex(u)), o.isMesh)
              )
                !0 === s.wireframe
                  ? (i.setLineWidth(s.wireframeLinewidth * eO()),
                    P.setMode(eL.LINES))
                  : P.setMode(eL.TRIANGLES);
              else if (o.isLine) {
                let e = s.linewidth;
                void 0 === e && (e = 1),
                  i.setLineWidth(e * eO()),
                  o.isLineSegments
                    ? P.setMode(eL.LINES)
                    : o.isLineLoop
                    ? P.setMode(eL.LINE_LOOP)
                    : P.setMode(eL.LINE_STRIP);
              } else
                o.isPoints
                  ? P.setMode(eL.POINTS)
                  : o.isSprite && P.setMode(eL.TRIANGLES);
              if (o.isInstancedMesh) P.renderInstances(M, T, o.count);
              else if (n.isInstancedBufferGeometry) {
                let e =
                    void 0 !== n._maxInstanceCount
                      ? n._maxInstanceCount
                      : 1 / 0,
                  t = Math.min(n.instanceCount, e);
                P.renderInstances(M, T, t);
              } else P.render(M, T);
            }),
            (this.compile = function (e, t) {
              function n(e, t, n) {
                !0 === e.transparent && e.side === u && !1 === e.forceSinglePass
                  ? ((e.side = l),
                    (e.needsUpdate = !0),
                    eX(e, t, n),
                    (e.side = o),
                    (e.needsUpdate = !0),
                    eX(e, t, n),
                    (e.side = u))
                  : eX(e, t, n);
              }
              (q = x.get(e)).init(),
                Z.push(q),
                e.traverseVisible(function (e) {
                  e.isLight &&
                    e.layers.test(t.layers) &&
                    (q.pushLight(e), e.castShadow && q.pushShadow(e));
                }),
                q.setupLights(K._useLegacyLights),
                e.traverse(function (t) {
                  let r = t.material;
                  if (r) {
                    if (Array.isArray(r))
                      for (let i = 0; i < r.length; i++) {
                        let s = r[i];
                        n(s, e, t);
                      }
                    else n(r, e, t);
                  }
                }),
                Z.pop(),
                (q = null);
            });
          let eB = null;
          function eV() {
            eH.stop();
          }
          function ej() {
            eH.start();
          }
          let eH = new nM();
          function eG(e, t, s, a) {
            let o = e.opaque,
              h = e.transmissive,
              d = e.transparent;
            q.setupLightsView(s),
              !0 === eE && b.setGlobalState(K.clippingPlanes, s),
              h.length > 0 &&
                (function (e, t, i, s) {
                  let a = r.isWebGL2;
                  null === eT &&
                    (eT = new eb(1, 1, {
                      generateMipmaps: !0,
                      type: n.has("EXT_color_buffer_half_float") ? w : 1009,
                      minFilter: M,
                      samples: a ? 4 : 0,
                    })),
                    K.getDrawingBufferSize(eC),
                    a ? eT.setSize(eC.x, eC.y) : eT.setSize(Y(eC.x), Y(eC.y));
                  let o = K.getRenderTarget();
                  K.setRenderTarget(eT),
                    K.getClearColor(ec),
                    (eh = K.getClearAlpha()) < 1 &&
                      K.setClearColor(16777215, 0.5),
                    K.clear();
                  let h = K.toneMapping;
                  (K.toneMapping = m),
                    eW(e, i, s),
                    c.updateMultisampleRenderTarget(eT),
                    c.updateRenderTargetMipmap(eT);
                  let d = !1;
                  for (let e = 0, n = t.length; e < n; e++) {
                    let n = t[e],
                      r = n.object,
                      a = n.geometry,
                      o = n.material,
                      c = n.group;
                    if (o.side === u && r.layers.test(s.layers)) {
                      let e = o.side;
                      (o.side = l),
                        (o.needsUpdate = !0),
                        e$(r, i, s, a, o, c),
                        (o.side = e),
                        (o.needsUpdate = !0),
                        (d = !0);
                    }
                  }
                  !0 === d &&
                    (c.updateMultisampleRenderTarget(eT),
                    c.updateRenderTargetMipmap(eT)),
                    K.setRenderTarget(o),
                    K.setClearColor(ec, eh),
                    (K.toneMapping = h);
                })(o, h, t, s),
              a && i.viewport(eo.copy(a)),
              o.length > 0 && eW(o, t, s),
              h.length > 0 && eW(h, t, s),
              d.length > 0 && eW(d, t, s),
              i.buffers.depth.setTest(!0),
              i.buffers.depth.setMask(!0),
              i.buffers.color.setMask(!0),
              i.setPolygonOffset(!1);
          }
          function eW(e, t, n) {
            let r = !0 === t.isScene ? t.overrideMaterial : null;
            for (let i = 0, s = e.length; i < s; i++) {
              let s = e[i],
                a = s.object,
                o = s.geometry,
                l = null === r ? s.material : r,
                u = s.group;
              a.layers.test(n.layers) && e$(a, t, n, o, l, u);
            }
          }
          function e$(e, t, n, r, i, s) {
            e.onBeforeRender(K, t, n, r, i, s),
              e.modelViewMatrix.multiplyMatrices(
                n.matrixWorldInverse,
                e.matrixWorld
              ),
              e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
              i.onBeforeRender(K, t, n, r, e, s),
              !0 === i.transparent && i.side === u && !1 === i.forceSinglePass
                ? ((i.side = l),
                  (i.needsUpdate = !0),
                  K.renderBufferDirect(n, t, r, i, e, s),
                  (i.side = o),
                  (i.needsUpdate = !0),
                  K.renderBufferDirect(n, t, r, i, e, s),
                  (i.side = u))
                : K.renderBufferDirect(n, t, r, i, e, s),
              e.onAfterRender(K, t, n, r, i, s);
          }
          function eX(e, t, n) {
            !0 !== t.isScene && (t = eP);
            let r = a.get(e),
              i = q.state.lights,
              s = q.state.shadowsArray,
              o = i.state.version,
              l = _.getParameters(e, i.state, s, t, n),
              u = _.getProgramCacheKey(l),
              c = r.programs;
            (r.environment = e.isMeshStandardMaterial ? t.environment : null),
              (r.fog = t.fog),
              (r.envMap = (e.isMeshStandardMaterial ? d : h).get(
                e.envMap || r.environment
              )),
              void 0 === c &&
                (e.addEventListener("dispose", ez),
                (c = new Map()),
                (r.programs = c));
            let p = c.get(u);
            if (void 0 !== p) {
              if (r.currentProgram === p && r.lightsStateVersion === o)
                return eq(e, l), p;
            } else
              (l.uniforms = _.getUniforms(e)),
                e.onBuild(n, l, K),
                e.onBeforeCompile(l, K),
                (p = _.acquireProgram(l, u)),
                c.set(u, p),
                (r.uniforms = l.uniforms);
            let f = r.uniforms;
            ((e.isShaderMaterial || e.isRawShaderMaterial) &&
              !0 !== e.clipping) ||
              (f.clippingPlanes = b.uniform),
              eq(e, l),
              (r.needsLights =
                e.isMeshLambertMaterial ||
                e.isMeshToonMaterial ||
                e.isMeshPhongMaterial ||
                e.isMeshStandardMaterial ||
                e.isShadowMaterial ||
                (e.isShaderMaterial && !0 === e.lights)),
              (r.lightsStateVersion = o),
              r.needsLights &&
                ((f.ambientLightColor.value = i.state.ambient),
                (f.lightProbe.value = i.state.probe),
                (f.directionalLights.value = i.state.directional),
                (f.directionalLightShadows.value = i.state.directionalShadow),
                (f.spotLights.value = i.state.spot),
                (f.spotLightShadows.value = i.state.spotShadow),
                (f.rectAreaLights.value = i.state.rectArea),
                (f.ltc_1.value = i.state.rectAreaLTC1),
                (f.ltc_2.value = i.state.rectAreaLTC2),
                (f.pointLights.value = i.state.point),
                (f.pointLightShadows.value = i.state.pointShadow),
                (f.hemisphereLights.value = i.state.hemi),
                (f.directionalShadowMap.value = i.state.directionalShadowMap),
                (f.directionalShadowMatrix.value =
                  i.state.directionalShadowMatrix),
                (f.spotShadowMap.value = i.state.spotShadowMap),
                (f.spotLightMatrix.value = i.state.spotLightMatrix),
                (f.spotLightMap.value = i.state.spotLightMap),
                (f.pointShadowMap.value = i.state.pointShadowMap),
                (f.pointShadowMatrix.value = i.state.pointShadowMatrix));
            let m = p.getUniforms(),
              g = rK.seqWithValue(m.seq, f);
            return (r.currentProgram = p), (r.uniformsList = g), p;
          }
          function eq(e, t) {
            let n = a.get(e);
            (n.outputColorSpace = t.outputColorSpace),
              (n.instancing = t.instancing),
              (n.instancingColor = t.instancingColor),
              (n.skinning = t.skinning),
              (n.morphTargets = t.morphTargets),
              (n.morphNormals = t.morphNormals),
              (n.morphColors = t.morphColors),
              (n.morphTargetsCount = t.morphTargetsCount),
              (n.numClippingPlanes = t.numClippingPlanes),
              (n.numIntersection = t.numClipIntersection),
              (n.vertexAlphas = t.vertexAlphas),
              (n.vertexTangents = t.vertexTangents),
              (n.toneMapping = t.toneMapping);
          }
          eH.setAnimationLoop(function (e) {
            eB && eB(e);
          }),
            "undefined" != typeof self && eH.setContext(self),
            (this.setAnimationLoop = function (e) {
              (eB = e),
                eD.setAnimationLoop(e),
                null === e ? eH.stop() : eH.start();
            }),
            eD.addEventListener("sessionstart", eV),
            eD.addEventListener("sessionend", ej),
            (this.render = function (e, t) {
              if (void 0 !== t && !0 !== t.isCamera) {
                console.error(
                  "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
                );
                return;
              }
              if (!0 === ee) return;
              !0 === e.matrixWorldAutoUpdate && e.updateMatrixWorld(),
                null === t.parent &&
                  !0 === t.matrixWorldAutoUpdate &&
                  t.updateMatrixWorld(),
                !0 === eD.enabled &&
                  !0 === eD.isPresenting &&
                  (!0 === eD.cameraAutoUpdate && eD.updateCamera(t),
                  (t = eD.getCamera())),
                !0 === e.isScene && e.onBeforeRender(K, e, t, ei),
                (q = x.get(e, Z.length)).init(),
                Z.push(q),
                eA.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                eS.setFromProjectionMatrix(eA),
                (ew = this.localClippingEnabled),
                (eE = b.init(this.clippingPlanes, ew)),
                (X = y.get(e, J.length)).init(),
                J.push(X),
                (function e(t, n, r, i) {
                  if (!1 === t.visible) return;
                  let s = t.layers.test(n.layers);
                  if (s) {
                    if (t.isGroup) r = t.renderOrder;
                    else if (t.isLOD) !0 === t.autoUpdate && t.update(n);
                    else if (t.isLight)
                      q.pushLight(t), t.castShadow && q.pushShadow(t);
                    else if (t.isSprite) {
                      if (!t.frustumCulled || eS.intersectsSprite(t)) {
                        i &&
                          eR
                            .setFromMatrixPosition(t.matrixWorld)
                            .applyMatrix4(eA);
                        let e = g.update(t),
                          n = t.material;
                        n.visible && X.push(t, e, n, r, eR.z, null);
                      }
                    } else if (
                      (t.isMesh || t.isLine || t.isPoints) &&
                      (!t.frustumCulled || eS.intersectsObject(t))
                    ) {
                      let e = g.update(t),
                        n = t.material;
                      if (
                        (i &&
                          (void 0 !== t.boundingSphere
                            ? (null === t.boundingSphere &&
                                t.computeBoundingSphere(),
                              eR.copy(t.boundingSphere.center))
                            : (null === e.boundingSphere &&
                                e.computeBoundingSphere(),
                              eR.copy(e.boundingSphere.center)),
                          eR.applyMatrix4(t.matrixWorld).applyMatrix4(eA)),
                        Array.isArray(n))
                      ) {
                        let i = e.groups;
                        for (let s = 0, a = i.length; s < a; s++) {
                          let a = i[s],
                            o = n[a.materialIndex];
                          o && o.visible && X.push(t, e, o, r, eR.z, a);
                        }
                      } else n.visible && X.push(t, e, n, r, eR.z, null);
                    }
                  }
                  let a = t.children;
                  for (let t = 0, s = a.length; t < s; t++) e(a[t], n, r, i);
                })(e, t, 0, K.sortObjects),
                X.finish(),
                !0 === K.sortObjects && X.sort(em, eg),
                this.info.render.frame++,
                !0 === eE && b.beginShadows();
              let n = q.state.shadowsArray;
              if (
                (S.render(n, e, t),
                !0 === eE && b.endShadows(),
                !0 === this.info.autoReset && this.info.reset(),
                E.render(X, e),
                q.setupLights(K._useLegacyLights),
                t.isArrayCamera)
              ) {
                let n = t.cameras;
                for (let t = 0, r = n.length; t < r; t++) {
                  let r = n[t];
                  eG(X, e, r, r.viewport);
                }
              } else eG(X, e, t);
              null !== ei &&
                (c.updateMultisampleRenderTarget(ei),
                c.updateRenderTargetMipmap(ei)),
                !0 === e.isScene && e.onAfterRender(K, e, t),
                O.resetDefaultState(),
                (es = -1),
                (ea = null),
                Z.pop(),
                (q = Z.length > 0 ? Z[Z.length - 1] : null),
                J.pop(),
                (X = J.length > 0 ? J[J.length - 1] : null);
            }),
            (this.getActiveCubeFace = function () {
              return et;
            }),
            (this.getActiveMipmapLevel = function () {
              return en;
            }),
            (this.getRenderTarget = function () {
              return ei;
            }),
            (this.setRenderTargetTextures = function (e, t, r) {
              (a.get(e.texture).__webglTexture = t),
                (a.get(e.depthTexture).__webglTexture = r);
              let i = a.get(e);
              (i.__hasExternalTextures = !0),
                i.__hasExternalTextures &&
                  ((i.__autoAllocateDepthBuffer = void 0 === r),
                  i.__autoAllocateDepthBuffer ||
                    !0 !== n.has("WEBGL_multisampled_render_to_texture") ||
                    (console.warn(
                      "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                    ),
                    (i.__useRenderToTexture = !1)));
            }),
            (this.setRenderTargetFramebuffer = function (e, t) {
              let n = a.get(e);
              (n.__webglFramebuffer = t),
                (n.__useDefaultFramebuffer = void 0 === t);
            }),
            (this.setRenderTarget = function (e, t = 0, n = 0) {
              (ei = e), (et = t), (en = n);
              let s = !0,
                o = null,
                l = !1,
                u = !1;
              if (e) {
                let h = a.get(e);
                void 0 !== h.__useDefaultFramebuffer
                  ? (i.bindFramebuffer(eL.FRAMEBUFFER, null), (s = !1))
                  : void 0 === h.__webglFramebuffer
                  ? c.setupRenderTarget(e)
                  : h.__hasExternalTextures &&
                    c.rebindTextures(
                      e,
                      a.get(e.texture).__webglTexture,
                      a.get(e.depthTexture).__webglTexture
                    );
                let d = e.texture;
                (d.isData3DTexture ||
                  d.isDataArrayTexture ||
                  d.isCompressedArrayTexture) &&
                  (u = !0);
                let p = a.get(e).__webglFramebuffer;
                e.isWebGLCubeRenderTarget
                  ? ((o = Array.isArray(p[t]) ? p[t][n] : p[t]), (l = !0))
                  : (o =
                      r.isWebGL2 &&
                      e.samples > 0 &&
                      !1 === c.useMultisampledRTT(e)
                        ? a.get(e).__webglMultisampledFramebuffer
                        : Array.isArray(p)
                        ? p[n]
                        : p),
                  eo.copy(e.viewport),
                  el.copy(e.scissor),
                  (eu = e.scissorTest);
              } else
                eo.copy(e_).multiplyScalar(ef).floor(),
                  el.copy(ev).multiplyScalar(ef).floor(),
                  (eu = ex);
              let h = i.bindFramebuffer(eL.FRAMEBUFFER, o);
              if (
                (h && r.drawBuffers && s && i.drawBuffers(e, o),
                i.viewport(eo),
                i.scissor(el),
                i.setScissorTest(eu),
                l)
              ) {
                let r = a.get(e.texture);
                eL.framebufferTexture2D(
                  eL.FRAMEBUFFER,
                  eL.COLOR_ATTACHMENT0,
                  eL.TEXTURE_CUBE_MAP_POSITIVE_X + t,
                  r.__webglTexture,
                  n
                );
              } else if (u) {
                let r = a.get(e.texture),
                  i = t || 0;
                eL.framebufferTextureLayer(
                  eL.FRAMEBUFFER,
                  eL.COLOR_ATTACHMENT0,
                  r.__webglTexture,
                  n || 0,
                  i
                );
              }
              es = -1;
            }),
            (this.readRenderTargetPixels = function (e, t, s, o, l, u, c) {
              if (!(e && e.isWebGLRenderTarget)) {
                console.error(
                  "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
                );
                return;
              }
              let h = a.get(e).__webglFramebuffer;
              if (
                (e.isWebGLCubeRenderTarget && void 0 !== c && (h = h[c]), h)
              ) {
                i.bindFramebuffer(eL.FRAMEBUFFER, h);
                try {
                  let i = e.texture,
                    a = i.format,
                    c = i.type;
                  if (
                    a !== T &&
                    P.convert(a) !==
                      eL.getParameter(eL.IMPLEMENTATION_COLOR_READ_FORMAT)
                  ) {
                    console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                    );
                    return;
                  }
                  let h =
                    c === w &&
                    (n.has("EXT_color_buffer_half_float") ||
                      (r.isWebGL2 && n.has("EXT_color_buffer_float")));
                  if (
                    1009 !== c &&
                    P.convert(c) !==
                      eL.getParameter(eL.IMPLEMENTATION_COLOR_READ_TYPE) &&
                    !(
                      1015 === c &&
                      (r.isWebGL2 ||
                        n.has("OES_texture_float") ||
                        n.has("WEBGL_color_buffer_float"))
                    ) &&
                    !h
                  ) {
                    console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                    );
                    return;
                  }
                  t >= 0 &&
                    t <= e.width - o &&
                    s >= 0 &&
                    s <= e.height - l &&
                    eL.readPixels(t, s, o, l, P.convert(a), P.convert(c), u);
                } finally {
                  let e = null !== ei ? a.get(ei).__webglFramebuffer : null;
                  i.bindFramebuffer(eL.FRAMEBUFFER, e);
                }
              }
            }),
            (this.copyFramebufferToTexture = function (e, t, n = 0) {
              let r = Math.pow(2, -n),
                s = Math.floor(t.image.width * r),
                a = Math.floor(t.image.height * r);
              c.setTexture2D(t, 0),
                eL.copyTexSubImage2D(eL.TEXTURE_2D, n, 0, 0, e.x, e.y, s, a),
                i.unbindTexture();
            }),
            (this.copyTextureToTexture = function (e, t, n, r = 0) {
              let s = t.image.width,
                a = t.image.height,
                o = P.convert(n.format),
                l = P.convert(n.type);
              c.setTexture2D(n, 0),
                eL.pixelStorei(eL.UNPACK_FLIP_Y_WEBGL, n.flipY),
                eL.pixelStorei(
                  eL.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                  n.premultiplyAlpha
                ),
                eL.pixelStorei(eL.UNPACK_ALIGNMENT, n.unpackAlignment),
                t.isDataTexture
                  ? eL.texSubImage2D(
                      eL.TEXTURE_2D,
                      r,
                      e.x,
                      e.y,
                      s,
                      a,
                      o,
                      l,
                      t.image.data
                    )
                  : t.isCompressedTexture
                  ? eL.compressedTexSubImage2D(
                      eL.TEXTURE_2D,
                      r,
                      e.x,
                      e.y,
                      t.mipmaps[0].width,
                      t.mipmaps[0].height,
                      o,
                      t.mipmaps[0].data
                    )
                  : eL.texSubImage2D(eL.TEXTURE_2D, r, e.x, e.y, o, l, t.image),
                0 === r &&
                  n.generateMipmaps &&
                  eL.generateMipmap(eL.TEXTURE_2D),
                i.unbindTexture();
            }),
            (this.copyTextureToTexture3D = function (e, t, n, r, s = 0) {
              let a;
              if (K.isWebGL1Renderer) {
                console.warn(
                  "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
                );
                return;
              }
              let o = e.max.x - e.min.x + 1,
                l = e.max.y - e.min.y + 1,
                u = e.max.z - e.min.z + 1,
                h = P.convert(r.format),
                d = P.convert(r.type);
              if (r.isData3DTexture) c.setTexture3D(r, 0), (a = eL.TEXTURE_3D);
              else if (r.isDataArrayTexture)
                c.setTexture2DArray(r, 0), (a = eL.TEXTURE_2D_ARRAY);
              else {
                console.warn(
                  "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
                );
                return;
              }
              eL.pixelStorei(eL.UNPACK_FLIP_Y_WEBGL, r.flipY),
                eL.pixelStorei(
                  eL.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                  r.premultiplyAlpha
                ),
                eL.pixelStorei(eL.UNPACK_ALIGNMENT, r.unpackAlignment);
              let p = eL.getParameter(eL.UNPACK_ROW_LENGTH),
                f = eL.getParameter(eL.UNPACK_IMAGE_HEIGHT),
                m = eL.getParameter(eL.UNPACK_SKIP_PIXELS),
                g = eL.getParameter(eL.UNPACK_SKIP_ROWS),
                _ = eL.getParameter(eL.UNPACK_SKIP_IMAGES),
                v = n.isCompressedTexture ? n.mipmaps[0] : n.image;
              eL.pixelStorei(eL.UNPACK_ROW_LENGTH, v.width),
                eL.pixelStorei(eL.UNPACK_IMAGE_HEIGHT, v.height),
                eL.pixelStorei(eL.UNPACK_SKIP_PIXELS, e.min.x),
                eL.pixelStorei(eL.UNPACK_SKIP_ROWS, e.min.y),
                eL.pixelStorei(eL.UNPACK_SKIP_IMAGES, e.min.z),
                n.isDataTexture || n.isData3DTexture
                  ? eL.texSubImage3D(a, s, t.x, t.y, t.z, o, l, u, h, d, v.data)
                  : n.isCompressedArrayTexture
                  ? (console.warn(
                      "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
                    ),
                    eL.compressedTexSubImage3D(
                      a,
                      s,
                      t.x,
                      t.y,
                      t.z,
                      o,
                      l,
                      u,
                      h,
                      v.data
                    ))
                  : eL.texSubImage3D(a, s, t.x, t.y, t.z, o, l, u, h, d, v),
                eL.pixelStorei(eL.UNPACK_ROW_LENGTH, p),
                eL.pixelStorei(eL.UNPACK_IMAGE_HEIGHT, f),
                eL.pixelStorei(eL.UNPACK_SKIP_PIXELS, m),
                eL.pixelStorei(eL.UNPACK_SKIP_ROWS, g),
                eL.pixelStorei(eL.UNPACK_SKIP_IMAGES, _),
                0 === s && r.generateMipmaps && eL.generateMipmap(a),
                i.unbindTexture();
            }),
            (this.initTexture = function (e) {
              e.isCubeTexture
                ? c.setTextureCube(e, 0)
                : e.isData3DTexture
                ? c.setTexture3D(e, 0)
                : e.isDataArrayTexture || e.isCompressedArrayTexture
                ? c.setTexture2DArray(e, 0)
                : c.setTexture2D(e, 0),
                i.unbindTexture();
            }),
            (this.resetState = function () {
              (et = 0), (en = 0), (ei = null), i.reset(), O.reset();
            }),
            "undefined" != typeof __THREE_DEVTOOLS__ &&
              __THREE_DEVTOOLS__.dispatchEvent(
                new CustomEvent("observe", { detail: this })
              );
        }
        get coordinateSystem() {
          return 2e3;
        }
        get physicallyCorrectLights() {
          return (
            console.warn(
              "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
            ),
            !this.useLegacyLights
          );
        }
        set physicallyCorrectLights(e) {
          console.warn(
            "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
          ),
            (this.useLegacyLights = !e);
        }
        get outputEncoding() {
          return (
            console.warn(
              "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
            ),
            this.outputColorSpace === L ? 3001 : 3e3
          );
        }
        set outputEncoding(e) {
          console.warn(
            "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
          ),
            (this.outputColorSpace = 3001 === e ? L : I);
        }
        get useLegacyLights() {
          return (
            console.warn(
              "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
            ),
            this._useLegacyLights
          );
        }
        set useLegacyLights(e) {
          console.warn(
            "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
          ),
            (this._useLegacyLights = e);
        }
      }
      (class extends iD {}).prototype.isWebGL1Renderer = !0;
      class iU extends tm {
        constructor() {
          super(),
            (this.isScene = !0),
            (this.type = "Scene"),
            (this.background = null),
            (this.environment = null),
            (this.fog = null),
            (this.backgroundBlurriness = 0),
            (this.backgroundIntensity = 1),
            (this.overrideMaterial = null),
            "undefined" != typeof __THREE_DEVTOOLS__ &&
              __THREE_DEVTOOLS__.dispatchEvent(
                new CustomEvent("observe", { detail: this })
              );
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.environment &&
              (this.environment = e.environment.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            (this.backgroundBlurriness = e.backgroundBlurriness),
            (this.backgroundIntensity = e.backgroundIntensity),
            null !== e.overrideMaterial &&
              (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            this.backgroundBlurriness > 0 &&
              (t.object.backgroundBlurriness = this.backgroundBlurriness),
            1 !== this.backgroundIntensity &&
              (t.object.backgroundIntensity = this.backgroundIntensity),
            t
          );
        }
      }
      class ik {
        constructor(e, t) {
          (this.isInterleavedBuffer = !0),
            (this.array = e),
            (this.stride = t),
            (this.count = void 0 !== e ? e.length / t : 0),
            (this.usage = D),
            (this.updateRange = { offset: 0, count: -1 }),
            (this.version = 0),
            (this.uuid = H());
        }
        onUploadCallback() {}
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        setUsage(e) {
          return (this.usage = e), this;
        }
        copy(e) {
          return (
            (this.array = new e.array.constructor(e.array)),
            (this.count = e.count),
            (this.stride = e.stride),
            (this.usage = e.usage),
            this
          );
        }
        copyAt(e, t, n) {
          (e *= this.stride), (n *= t.stride);
          for (let r = 0, i = this.stride; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        }
        set(e, t = 0) {
          return this.array.set(e, t), this;
        }
        clone(e) {
          void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
            void 0 === this.array.buffer._uuid &&
              (this.array.buffer._uuid = H()),
            void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
              (e.arrayBuffers[this.array.buffer._uuid] =
                this.array.slice(0).buffer);
          let t = new this.array.constructor(
              e.arrayBuffers[this.array.buffer._uuid]
            ),
            n = new this.constructor(t, this.stride);
          return n.setUsage(this.usage), n;
        }
        onUpload(e) {
          return (this.onUploadCallback = e), this;
        }
        toJSON(e) {
          return (
            void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
            void 0 === this.array.buffer._uuid &&
              (this.array.buffer._uuid = H()),
            void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
              (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
                new Uint32Array(this.array.buffer)
              )),
            {
              uuid: this.uuid,
              buffer: this.array.buffer._uuid,
              type: this.array.constructor.name,
              stride: this.stride,
            }
          );
        }
      }
      let iF = new eM();
      class iz {
        constructor(e, t, n, r = !1) {
          (this.isInterleavedBufferAttribute = !0),
            (this.name = ""),
            (this.data = e),
            (this.itemSize = t),
            (this.offset = n),
            (this.normalized = r);
        }
        get count() {
          return this.data.count;
        }
        get array() {
          return this.data.array;
        }
        set needsUpdate(e) {
          this.data.needsUpdate = e;
        }
        applyMatrix4(e) {
          for (let t = 0, n = this.data.count; t < n; t++)
            iF.fromBufferAttribute(this, t),
              iF.applyMatrix4(e),
              this.setXYZ(t, iF.x, iF.y, iF.z);
          return this;
        }
        applyNormalMatrix(e) {
          for (let t = 0, n = this.count; t < n; t++)
            iF.fromBufferAttribute(this, t),
              iF.applyNormalMatrix(e),
              this.setXYZ(t, iF.x, iF.y, iF.z);
          return this;
        }
        transformDirection(e) {
          for (let t = 0, n = this.count; t < n; t++)
            iF.fromBufferAttribute(this, t),
              iF.transformDirection(e),
              this.setXYZ(t, iF.x, iF.y, iF.z);
          return this;
        }
        setX(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset] = t),
            this
          );
        }
        setY(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 1] = t),
            this
          );
        }
        setZ(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 2] = t),
            this
          );
        }
        setW(e, t) {
          return (
            this.normalized && (t = Z(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 3] = t),
            this
          );
        }
        getX(e) {
          let t = this.data.array[e * this.data.stride + this.offset];
          return this.normalized && (t = J(t, this.array)), t;
        }
        getY(e) {
          let t = this.data.array[e * this.data.stride + this.offset + 1];
          return this.normalized && (t = J(t, this.array)), t;
        }
        getZ(e) {
          let t = this.data.array[e * this.data.stride + this.offset + 2];
          return this.normalized && (t = J(t, this.array)), t;
        }
        getW(e) {
          let t = this.data.array[e * this.data.stride + this.offset + 3];
          return this.normalized && (t = J(t, this.array)), t;
        }
        setXY(e, t, n) {
          return (
            (e = e * this.data.stride + this.offset),
            this.normalized && ((t = Z(t, this.array)), (n = Z(n, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            this
          );
        }
        setXYZ(e, t, n, r) {
          return (
            (e = e * this.data.stride + this.offset),
            this.normalized &&
              ((t = Z(t, this.array)),
              (n = Z(n, this.array)),
              (r = Z(r, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            this
          );
        }
        setXYZW(e, t, n, r, i) {
          return (
            (e = e * this.data.stride + this.offset),
            this.normalized &&
              ((t = Z(t, this.array)),
              (n = Z(n, this.array)),
              (r = Z(r, this.array)),
              (i = Z(i, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            (this.data.array[e + 3] = i),
            this
          );
        }
        clone(e) {
          if (void 0 !== e)
            return (
              void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
              void 0 === e.interleavedBuffers[this.data.uuid] &&
                (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
              new iz(
                e.interleavedBuffers[this.data.uuid],
                this.itemSize,
                this.offset,
                this.normalized
              )
            );
          {
            console.log(
              "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data."
            );
            let e = [];
            for (let t = 0; t < this.count; t++) {
              let n = t * this.data.stride + this.offset;
              for (let t = 0; t < this.itemSize; t++)
                e.push(this.data.array[n + t]);
            }
            return new tz(
              new this.array.constructor(e),
              this.itemSize,
              this.normalized
            );
          }
        }
        toJSON(e) {
          if (void 0 !== e)
            return (
              void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
              void 0 === e.interleavedBuffers[this.data.uuid] &&
                (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
              {
                isInterleavedBufferAttribute: !0,
                itemSize: this.itemSize,
                data: this.data.uuid,
                offset: this.offset,
                normalized: this.normalized,
              }
            );
          {
            console.log(
              "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data."
            );
            let e = [];
            for (let t = 0; t < this.count; t++) {
              let n = t * this.data.stride + this.offset;
              for (let t = 0; t < this.itemSize; t++)
                e.push(this.data.array[n + t]);
            }
            return {
              itemSize: this.itemSize,
              type: this.array.constructor.name,
              array: e,
              normalized: this.normalized,
            };
          }
        }
      }
      let iB = new eM(),
        iV = new ey(),
        ij = new ey(),
        iH = new eM(),
        iG = new e0(),
        iW = new eM(),
        i$ = new eW(),
        iX = new e0(),
        iq = new eQ();
      class iY extends ni {
        constructor(e, t) {
          super(e, t),
            (this.isSkinnedMesh = !0),
            (this.type = "SkinnedMesh"),
            (this.bindMode = "attached"),
            (this.bindMatrix = new e0()),
            (this.bindMatrixInverse = new e0()),
            (this.boundingBox = null),
            (this.boundingSphere = null);
        }
        computeBoundingBox() {
          let e = this.geometry;
          null === this.boundingBox && (this.boundingBox = new eA()),
            this.boundingBox.makeEmpty();
          let t = e.getAttribute("position");
          for (let e = 0; e < t.count; e++)
            iW.fromBufferAttribute(t, e),
              this.applyBoneTransform(e, iW),
              this.boundingBox.expandByPoint(iW);
        }
        computeBoundingSphere() {
          let e = this.geometry;
          null === this.boundingSphere && (this.boundingSphere = new eW()),
            this.boundingSphere.makeEmpty();
          let t = e.getAttribute("position");
          for (let e = 0; e < t.count; e++)
            iW.fromBufferAttribute(t, e),
              this.applyBoneTransform(e, iW),
              this.boundingSphere.expandByPoint(iW);
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.bindMode = e.bindMode),
            this.bindMatrix.copy(e.bindMatrix),
            this.bindMatrixInverse.copy(e.bindMatrixInverse),
            (this.skeleton = e.skeleton),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            this
          );
        }
        raycast(e, t) {
          let n = this.material,
            r = this.matrixWorld;
          if (
            void 0 !== n &&
            (null === this.boundingSphere && this.computeBoundingSphere(),
            i$.copy(this.boundingSphere),
            i$.applyMatrix4(r),
            !1 !== e.ray.intersectsSphere(i$))
          ) {
            if (
              (iX.copy(r).invert(),
              iq.copy(e.ray).applyMatrix4(iX),
              null !== this.boundingBox &&
                !1 === iq.intersectsBox(this.boundingBox))
            )
              return;
            this._computeIntersections(e, t, iq);
          }
        }
        getVertexPosition(e, t) {
          return (
            super.getVertexPosition(e, t), this.applyBoneTransform(e, t), t
          );
        }
        bind(e, t) {
          (this.skeleton = e),
            void 0 === t &&
              (this.updateMatrixWorld(!0),
              this.skeleton.calculateInverses(),
              (t = this.matrixWorld)),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.copy(t).invert();
        }
        pose() {
          this.skeleton.pose();
        }
        normalizeSkinWeights() {
          let e = new ey(),
            t = this.geometry.attributes.skinWeight;
          for (let n = 0, r = t.count; n < r; n++) {
            e.fromBufferAttribute(t, n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0),
              t.setXYZW(n, e.x, e.y, e.z, e.w);
          }
        }
        updateMatrixWorld(e) {
          super.updateMatrixWorld(e),
            "attached" === this.bindMode
              ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
              : "detached" === this.bindMode
              ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
              : console.warn(
                  "THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode
                );
        }
        applyBoneTransform(e, t) {
          let n = this.skeleton,
            r = this.geometry;
          iV.fromBufferAttribute(r.attributes.skinIndex, e),
            ij.fromBufferAttribute(r.attributes.skinWeight, e),
            iB.copy(t).applyMatrix4(this.bindMatrix),
            t.set(0, 0, 0);
          for (let e = 0; e < 4; e++) {
            let r = ij.getComponent(e);
            if (0 !== r) {
              let i = iV.getComponent(e);
              iG.multiplyMatrices(n.bones[i].matrixWorld, n.boneInverses[i]),
                t.addScaledVector(iH.copy(iB).applyMatrix4(iG), r);
            }
          }
          return t.applyMatrix4(this.bindMatrixInverse);
        }
        boneTransform(e, t) {
          return (
            console.warn(
              "THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."
            ),
            this.applyBoneTransform(e, t)
          );
        }
      }
      class iJ extends tm {
        constructor() {
          super(), (this.isBone = !0), (this.type = "Bone");
        }
      }
      class iZ extends ev {
        constructor(e = null, t = 1, n = 1, r, i, s, a, o, l = y, u = y, c, h) {
          super(null, s, a, o, l, u, r, i, c, h),
            (this.isDataTexture = !0),
            (this.image = { data: e, width: t, height: n }),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
        }
      }
      let iK = new e0(),
        iQ = new e0();
      class i0 {
        constructor(e = [], t = []) {
          (this.uuid = H()),
            (this.bones = e.slice(0)),
            (this.boneInverses = t),
            (this.boneMatrices = null),
            (this.boneTexture = null),
            (this.boneTextureSize = 0),
            this.init();
        }
        init() {
          let e = this.bones,
            t = this.boneInverses;
          if (
            ((this.boneMatrices = new Float32Array(16 * e.length)),
            0 === t.length)
          )
            this.calculateInverses();
          else if (e.length !== t.length) {
            console.warn(
              "THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."
            ),
              (this.boneInverses = []);
            for (let e = 0, t = this.bones.length; e < t; e++)
              this.boneInverses.push(new e0());
          }
        }
        calculateInverses() {
          this.boneInverses.length = 0;
          for (let e = 0, t = this.bones.length; e < t; e++) {
            let t = new e0();
            this.bones[e] && t.copy(this.bones[e].matrixWorld).invert(),
              this.boneInverses.push(t);
          }
        }
        pose() {
          for (let e = 0, t = this.bones.length; e < t; e++) {
            let t = this.bones[e];
            t && t.matrixWorld.copy(this.boneInverses[e]).invert();
          }
          for (let e = 0, t = this.bones.length; e < t; e++) {
            let t = this.bones[e];
            t &&
              (t.parent && t.parent.isBone
                ? (t.matrix.copy(t.parent.matrixWorld).invert(),
                  t.matrix.multiply(t.matrixWorld))
                : t.matrix.copy(t.matrixWorld),
              t.matrix.decompose(t.position, t.quaternion, t.scale));
          }
        }
        update() {
          let e = this.bones,
            t = this.boneInverses,
            n = this.boneMatrices,
            r = this.boneTexture;
          for (let r = 0, i = e.length; r < i; r++) {
            let i = e[r] ? e[r].matrixWorld : iQ;
            iK.multiplyMatrices(i, t[r]), iK.toArray(n, 16 * r);
          }
          null !== r && (r.needsUpdate = !0);
        }
        clone() {
          return new i0(this.bones, this.boneInverses);
        }
        computeBoneTexture() {
          let e = Math.sqrt(4 * this.bones.length);
          e = Math.max((e = q(e)), 4);
          let t = new Float32Array(e * e * 4);
          t.set(this.boneMatrices);
          let n = new iZ(t, e, e, T, 1015);
          return (
            (n.needsUpdate = !0),
            (this.boneMatrices = t),
            (this.boneTexture = n),
            (this.boneTextureSize = e),
            this
          );
        }
        getBoneByName(e) {
          for (let t = 0, n = this.bones.length; t < n; t++) {
            let n = this.bones[t];
            if (n.name === e) return n;
          }
        }
        dispose() {
          null !== this.boneTexture &&
            (this.boneTexture.dispose(), (this.boneTexture = null));
        }
        fromJSON(e, t) {
          this.uuid = e.uuid;
          for (let n = 0, r = e.bones.length; n < r; n++) {
            let r = e.bones[n],
              i = t[r];
            void 0 === i &&
              (console.warn("THREE.Skeleton: No bone found with UUID:", r),
              (i = new iJ())),
              this.bones.push(i),
              this.boneInverses.push(new e0().fromArray(e.boneInverses[n]));
          }
          return this.init(), this;
        }
        toJSON() {
          let e = {
            metadata: {
              version: 4.6,
              type: "Skeleton",
              generator: "Skeleton.toJSON",
            },
            bones: [],
            boneInverses: [],
          };
          e.uuid = this.uuid;
          let t = this.bones,
            n = this.boneInverses;
          for (let r = 0, i = t.length; r < i; r++) {
            let i = t[r];
            e.bones.push(i.uuid);
            let s = n[r];
            e.boneInverses.push(s.toArray());
          }
          return e;
        }
      }
      class i1 extends tz {
        constructor(e, t, n, r = 1) {
          super(e, t, n),
            (this.isInstancedBufferAttribute = !0),
            (this.meshPerAttribute = r);
        }
        copy(e) {
          return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.meshPerAttribute = this.meshPerAttribute),
            (e.isInstancedBufferAttribute = !0),
            e
          );
        }
      }
      let i2 = new e0(),
        i3 = new e0(),
        i4 = [],
        i5 = new eA(),
        i6 = new e0(),
        i8 = new ni(),
        i7 = new eW();
      class i9 extends ni {
        constructor(e, t, n) {
          super(e, t),
            (this.isInstancedMesh = !0),
            (this.instanceMatrix = new i1(new Float32Array(16 * n), 16)),
            (this.instanceColor = null),
            (this.count = n),
            (this.boundingBox = null),
            (this.boundingSphere = null);
          for (let e = 0; e < n; e++) this.setMatrixAt(e, i6);
        }
        computeBoundingBox() {
          let e = this.geometry,
            t = this.count;
          null === this.boundingBox && (this.boundingBox = new eA()),
            null === e.boundingBox && e.computeBoundingBox(),
            this.boundingBox.makeEmpty();
          for (let n = 0; n < t; n++)
            this.getMatrixAt(n, i2),
              i5.copy(e.boundingBox).applyMatrix4(i2),
              this.boundingBox.union(i5);
        }
        computeBoundingSphere() {
          let e = this.geometry,
            t = this.count;
          null === this.boundingSphere && (this.boundingSphere = new eW()),
            null === e.boundingSphere && e.computeBoundingSphere(),
            this.boundingSphere.makeEmpty();
          for (let n = 0; n < t; n++)
            this.getMatrixAt(n, i2),
              i7.copy(e.boundingSphere).applyMatrix4(i2),
              this.boundingSphere.union(i7);
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            this.instanceMatrix.copy(e.instanceMatrix),
            null !== e.instanceColor &&
              (this.instanceColor = e.instanceColor.clone()),
            (this.count = e.count),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            this
          );
        }
        getColorAt(e, t) {
          t.fromArray(this.instanceColor.array, 3 * e);
        }
        getMatrixAt(e, t) {
          t.fromArray(this.instanceMatrix.array, 16 * e);
        }
        raycast(e, t) {
          let n = this.matrixWorld,
            r = this.count;
          if (
            ((i8.geometry = this.geometry),
            (i8.material = this.material),
            void 0 !== i8.material &&
              (null === this.boundingSphere && this.computeBoundingSphere(),
              i7.copy(this.boundingSphere),
              i7.applyMatrix4(n),
              !1 !== e.ray.intersectsSphere(i7)))
          )
            for (let i = 0; i < r; i++) {
              this.getMatrixAt(i, i2),
                i3.multiplyMatrices(n, i2),
                (i8.matrixWorld = i3),
                i8.raycast(e, i4);
              for (let e = 0, n = i4.length; e < n; e++) {
                let n = i4[e];
                (n.instanceId = i), (n.object = this), t.push(n);
              }
              i4.length = 0;
            }
        }
        setColorAt(e, t) {
          null === this.instanceColor &&
            (this.instanceColor = new i1(
              new Float32Array(3 * this.instanceMatrix.count),
              3
            )),
            t.toArray(this.instanceColor.array, 3 * e);
        }
        setMatrixAt(e, t) {
          t.toArray(this.instanceMatrix.array, 16 * e);
        }
        updateMorphTargets() {}
        dispose() {
          this.dispatchEvent({ type: "dispose" });
        }
      }
      class se extends tR {
        constructor(e) {
          super(),
            (this.isLineBasicMaterial = !0),
            (this.type = "LineBasicMaterial"),
            (this.color = new tN(16777215)),
            (this.map = null),
            (this.linewidth = 1),
            (this.linecap = "round"),
            (this.linejoin = "round"),
            (this.fog = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.linewidth = e.linewidth),
            (this.linecap = e.linecap),
            (this.linejoin = e.linejoin),
            (this.fog = e.fog),
            this
          );
        }
      }
      let st = new eM(),
        sn = new eM(),
        sr = new e0(),
        si = new eQ(),
        ss = new eW();
      class sa extends tm {
        constructor(e = new tJ(), t = new se()) {
          super(),
            (this.isLine = !0),
            (this.type = "Line"),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.material = Array.isArray(e.material)
              ? e.material.slice()
              : e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        computeLineDistances() {
          let e = this.geometry;
          if (null === e.index) {
            let t = e.attributes.position,
              n = [0];
            for (let e = 1, r = t.count; e < r; e++)
              st.fromBufferAttribute(t, e - 1),
                sn.fromBufferAttribute(t, e),
                (n[e] = n[e - 1]),
                (n[e] += st.distanceTo(sn));
            e.setAttribute("lineDistance", new tj(n, 1));
          } else
            console.warn(
              "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
            );
          return this;
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.matrixWorld,
            i = e.params.Line.threshold,
            s = n.drawRange;
          if (
            (null === n.boundingSphere && n.computeBoundingSphere(),
            ss.copy(n.boundingSphere),
            ss.applyMatrix4(r),
            (ss.radius += i),
            !1 === e.ray.intersectsSphere(ss))
          )
            return;
          sr.copy(r).invert(), si.copy(e.ray).applyMatrix4(sr);
          let a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            o = a * a,
            l = new eM(),
            u = new eM(),
            c = new eM(),
            h = new eM(),
            d = this.isLineSegments ? 2 : 1,
            p = n.index,
            f = n.attributes,
            m = f.position;
          if (null !== p) {
            let n = Math.max(0, s.start),
              r = Math.min(p.count, s.start + s.count);
            for (let i = n, s = r - 1; i < s; i += d) {
              let n = p.getX(i),
                r = p.getX(i + 1);
              l.fromBufferAttribute(m, n), u.fromBufferAttribute(m, r);
              let s = si.distanceSqToSegment(l, u, h, c);
              if (s > o) continue;
              h.applyMatrix4(this.matrixWorld);
              let a = e.ray.origin.distanceTo(h);
              a < e.near ||
                a > e.far ||
                t.push({
                  distance: a,
                  point: c.clone().applyMatrix4(this.matrixWorld),
                  index: i,
                  face: null,
                  faceIndex: null,
                  object: this,
                });
            }
          } else {
            let n = Math.max(0, s.start),
              r = Math.min(m.count, s.start + s.count);
            for (let i = n, s = r - 1; i < s; i += d) {
              l.fromBufferAttribute(m, i), u.fromBufferAttribute(m, i + 1);
              let n = si.distanceSqToSegment(l, u, h, c);
              if (n > o) continue;
              h.applyMatrix4(this.matrixWorld);
              let r = e.ray.origin.distanceTo(h);
              r < e.near ||
                r > e.far ||
                t.push({
                  distance: r,
                  point: c.clone().applyMatrix4(this.matrixWorld),
                  index: i,
                  face: null,
                  faceIndex: null,
                  object: this,
                });
            }
          }
        }
        updateMorphTargets() {
          let e = this.geometry,
            t = e.morphAttributes,
            n = Object.keys(t);
          if (n.length > 0) {
            let e = t[n[0]];
            if (void 0 !== e) {
              (this.morphTargetInfluences = []),
                (this.morphTargetDictionary = {});
              for (let t = 0, n = e.length; t < n; t++) {
                let n = e[t].name || String(t);
                this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = t);
              }
            }
          }
        }
      }
      let so = new eM(),
        sl = new eM();
      class su extends sa {
        constructor(e, t) {
          super(e, t), (this.isLineSegments = !0), (this.type = "LineSegments");
        }
        computeLineDistances() {
          let e = this.geometry;
          if (null === e.index) {
            let t = e.attributes.position,
              n = [];
            for (let e = 0, r = t.count; e < r; e += 2)
              so.fromBufferAttribute(t, e),
                sl.fromBufferAttribute(t, e + 1),
                (n[e] = 0 === e ? 0 : n[e - 1]),
                (n[e + 1] = n[e] + so.distanceTo(sl));
            e.setAttribute("lineDistance", new tj(n, 1));
          } else
            console.warn(
              "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
            );
          return this;
        }
      }
      class sc extends sa {
        constructor(e, t) {
          super(e, t), (this.isLineLoop = !0), (this.type = "LineLoop");
        }
      }
      class sh extends tR {
        constructor(e) {
          super(),
            (this.isPointsMaterial = !0),
            (this.type = "PointsMaterial"),
            (this.color = new tN(16777215)),
            (this.map = null),
            (this.alphaMap = null),
            (this.size = 1),
            (this.sizeAttenuation = !0),
            (this.fog = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.size = e.size),
            (this.sizeAttenuation = e.sizeAttenuation),
            (this.fog = e.fog),
            this
          );
        }
      }
      let sd = new e0(),
        sp = new eQ(),
        sf = new eW(),
        sm = new eM();
      class sg extends tm {
        constructor(e = new tJ(), t = new sh()) {
          super(),
            (this.isPoints = !0),
            (this.type = "Points"),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.material = Array.isArray(e.material)
              ? e.material.slice()
              : e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.matrixWorld,
            i = e.params.Points.threshold,
            s = n.drawRange;
          if (
            (null === n.boundingSphere && n.computeBoundingSphere(),
            sf.copy(n.boundingSphere),
            sf.applyMatrix4(r),
            (sf.radius += i),
            !1 === e.ray.intersectsSphere(sf))
          )
            return;
          sd.copy(r).invert(), sp.copy(e.ray).applyMatrix4(sd);
          let a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            o = a * a,
            l = n.index,
            u = n.attributes,
            c = u.position;
          if (null !== l) {
            let n = Math.max(0, s.start),
              i = Math.min(l.count, s.start + s.count);
            for (let s = n; s < i; s++) {
              let n = l.getX(s);
              sm.fromBufferAttribute(c, n), s_(sm, n, o, r, e, t, this);
            }
          } else {
            let n = Math.max(0, s.start),
              i = Math.min(c.count, s.start + s.count);
            for (let s = n; s < i; s++)
              sm.fromBufferAttribute(c, s), s_(sm, s, o, r, e, t, this);
          }
        }
        updateMorphTargets() {
          let e = this.geometry,
            t = e.morphAttributes,
            n = Object.keys(t);
          if (n.length > 0) {
            let e = t[n[0]];
            if (void 0 !== e) {
              (this.morphTargetInfluences = []),
                (this.morphTargetDictionary = {});
              for (let t = 0, n = e.length; t < n; t++) {
                let n = e[t].name || String(t);
                this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = t);
              }
            }
          }
        }
      }
      function s_(e, t, n, r, i, s, a) {
        let o = sp.distanceSqToPoint(e);
        if (o < n) {
          let n = new eM();
          sp.closestPointToPoint(e, n), n.applyMatrix4(r);
          let l = i.ray.origin.distanceTo(n);
          if (l < i.near || l > i.far) return;
          s.push({
            distance: l,
            distanceToRay: Math.sqrt(o),
            point: n,
            index: t,
            face: null,
            object: a,
          });
        }
      }
      class sv extends ev {
        constructor(e, t, n, r, i, s, a, o, l) {
          super(e, t, n, r, i, s, a, o, l),
            (this.isVideoTexture = !0),
            (this.minFilter = void 0 !== s ? s : S),
            (this.magFilter = void 0 !== i ? i : S),
            (this.generateMipmaps = !1);
          let u = this;
          "requestVideoFrameCallback" in e &&
            e.requestVideoFrameCallback(function t() {
              (u.needsUpdate = !0), e.requestVideoFrameCallback(t);
            });
        }
        clone() {
          return new this.constructor(this.image).copy(this);
        }
        update() {
          let e = this.image;
          !1 == "requestVideoFrameCallback" in e &&
            e.readyState >= e.HAVE_CURRENT_DATA &&
            (this.needsUpdate = !0);
        }
      }
      class sy extends ev {
        constructor(e, t, n, r, i, s, a, o, l) {
          super(e, t, n, r, i, s, a, o, l),
            (this.isCanvasTexture = !0),
            (this.needsUpdate = !0);
        }
      }
      class sx {
        constructor() {
          (this.type = "Curve"), (this.arcLengthDivisions = 200);
        }
        getPoint() {
          return (
            console.warn("THREE.Curve: .getPoint() not implemented."), null
          );
        }
        getPointAt(e, t) {
          let n = this.getUtoTmapping(e);
          return this.getPoint(n, t);
        }
        getPoints(e = 5) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return t;
        }
        getSpacedPoints(e = 5) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
          return t;
        }
        getLength() {
          let e = this.getLengths();
          return e[e.length - 1];
        }
        getLengths(e = this.arcLengthDivisions) {
          if (
            this.cacheArcLengths &&
            this.cacheArcLengths.length === e + 1 &&
            !this.needsUpdate
          )
            return this.cacheArcLengths;
          this.needsUpdate = !1;
          let t = [],
            n,
            r = this.getPoint(0),
            i = 0;
          t.push(0);
          for (let s = 1; s <= e; s++)
            t.push((i += (n = this.getPoint(s / e)).distanceTo(r))), (r = n);
          return (this.cacheArcLengths = t), t;
        }
        updateArcLengths() {
          (this.needsUpdate = !0), this.getLengths();
        }
        getUtoTmapping(e, t) {
          let n;
          let r = this.getLengths(),
            i = 0,
            s = r.length;
          n = t || e * r[s - 1];
          let a = 0,
            o = s - 1,
            l;
          for (; a <= o; )
            if ((l = r[(i = Math.floor(a + (o - a) / 2))] - n) < 0) a = i + 1;
            else if (l > 0) o = i - 1;
            else {
              o = i;
              break;
            }
          if (r[(i = o)] === n) return i / (s - 1);
          let u = r[i],
            c = r[i + 1],
            h = (i + (n - u) / (c - u)) / (s - 1);
          return h;
        }
        getTangent(e, t) {
          let n = e - 1e-4,
            r = e + 1e-4;
          n < 0 && (n = 0), r > 1 && (r = 1);
          let i = this.getPoint(n),
            s = this.getPoint(r),
            a = t || (i.isVector2 ? new Q() : new eM());
          return a.copy(s).sub(i).normalize(), a;
        }
        getTangentAt(e, t) {
          let n = this.getUtoTmapping(e);
          return this.getTangent(n, t);
        }
        computeFrenetFrames(e, t) {
          let n = new eM(),
            r = [],
            i = [],
            s = [],
            a = new eM(),
            o = new e0();
          for (let t = 0; t <= e; t++) {
            let n = t / e;
            r[t] = this.getTangentAt(n, new eM());
          }
          (i[0] = new eM()), (s[0] = new eM());
          let l = Number.MAX_VALUE,
            u = Math.abs(r[0].x),
            c = Math.abs(r[0].y),
            h = Math.abs(r[0].z);
          u <= l && ((l = u), n.set(1, 0, 0)),
            c <= l && ((l = c), n.set(0, 1, 0)),
            h <= l && n.set(0, 0, 1),
            a.crossVectors(r[0], n).normalize(),
            i[0].crossVectors(r[0], a),
            s[0].crossVectors(r[0], i[0]);
          for (let t = 1; t <= e; t++) {
            if (
              ((i[t] = i[t - 1].clone()),
              (s[t] = s[t - 1].clone()),
              a.crossVectors(r[t - 1], r[t]),
              a.length() > Number.EPSILON)
            ) {
              a.normalize();
              let e = Math.acos(G(r[t - 1].dot(r[t]), -1, 1));
              i[t].applyMatrix4(o.makeRotationAxis(a, e));
            }
            s[t].crossVectors(r[t], i[t]);
          }
          if (!0 === t) {
            let t = Math.acos(G(i[0].dot(i[e]), -1, 1));
            (t /= e), r[0].dot(a.crossVectors(i[0], i[e])) > 0 && (t = -t);
            for (let n = 1; n <= e; n++)
              i[n].applyMatrix4(o.makeRotationAxis(r[n], t * n)),
                s[n].crossVectors(r[n], i[n]);
          }
          return { tangents: r, normals: i, binormals: s };
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        }
        toJSON() {
          let e = {
            metadata: {
              version: 4.6,
              type: "Curve",
              generator: "Curve.toJSON",
            },
          };
          return (
            (e.arcLengthDivisions = this.arcLengthDivisions),
            (e.type = this.type),
            e
          );
        }
        fromJSON(e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        }
      }
      class sb extends sx {
        constructor(
          e = 0,
          t = 0,
          n = 1,
          r = 1,
          i = 0,
          s = 2 * Math.PI,
          a = !1,
          o = 0
        ) {
          super(),
            (this.isEllipseCurve = !0),
            (this.type = "EllipseCurve"),
            (this.aX = e),
            (this.aY = t),
            (this.xRadius = n),
            (this.yRadius = r),
            (this.aStartAngle = i),
            (this.aEndAngle = s),
            (this.aClockwise = a),
            (this.aRotation = o);
        }
        getPoint(e, t) {
          let n = t || new Q(),
            r = 2 * Math.PI,
            i = this.aEndAngle - this.aStartAngle,
            s = Math.abs(i) < Number.EPSILON;
          for (; i < 0; ) i += r;
          for (; i > r; ) i -= r;
          i < Number.EPSILON && (i = s ? 0 : r),
            !0 !== this.aClockwise || s || (i === r ? (i = -r) : (i -= r));
          let a = this.aStartAngle + e * i,
            o = this.aX + this.xRadius * Math.cos(a),
            l = this.aY + this.yRadius * Math.sin(a);
          if (0 !== this.aRotation) {
            let e = Math.cos(this.aRotation),
              t = Math.sin(this.aRotation),
              n = o - this.aX,
              r = l - this.aY;
            (o = n * e - r * t + this.aX), (l = n * t + r * e + this.aY);
          }
          return n.set(o, l);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.aX = this.aX),
            (e.aY = this.aY),
            (e.xRadius = this.xRadius),
            (e.yRadius = this.yRadius),
            (e.aStartAngle = this.aStartAngle),
            (e.aEndAngle = this.aEndAngle),
            (e.aClockwise = this.aClockwise),
            (e.aRotation = this.aRotation),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
          );
        }
      }
      function sS() {
        let e = 0,
          t = 0,
          n = 0,
          r = 0;
        function i(i, s, a, o) {
          (e = i),
            (t = a),
            (n = -3 * i + 3 * s - 2 * a - o),
            (r = 2 * i - 2 * s + a + o);
        }
        return {
          initCatmullRom: function (e, t, n, r, s) {
            i(t, n, s * (n - e), s * (r - t));
          },
          initNonuniformCatmullRom: function (e, t, n, r, s, a, o) {
            let l = (t - e) / s - (n - e) / (s + a) + (n - t) / a,
              u = (n - t) / a - (r - t) / (a + o) + (r - n) / o;
            i(t, n, (l *= a), (u *= a));
          },
          calc: function (i) {
            let s = i * i;
            return e + t * i + n * s + r * (s * i);
          },
        };
      }
      let sE = new eM(),
        sM = new sS(),
        sw = new sS(),
        sT = new sS();
      function sA(e, t, n, r, i) {
        let s = (r - t) * 0.5,
          a = (i - n) * 0.5,
          o = e * e;
        return (
          (2 * n - 2 * r + s + a) * (e * o) +
          (-3 * n + 3 * r - 2 * s - a) * o +
          s * e +
          n
        );
      }
      function sC(e, t, n, r) {
        return (
          (function (e, t) {
            let n = 1 - e;
            return n * n * t;
          })(e, t) +
          2 * (1 - e) * e * n +
          e * e * r
        );
      }
      function sR(e, t, n, r, i) {
        return (
          (function (e, t) {
            let n = 1 - e;
            return n * n * n * t;
          })(e, t) +
          (function (e, t) {
            let n = 1 - e;
            return 3 * n * n * e * t;
          })(e, n) +
          3 * (1 - e) * e * e * r +
          e * e * e * i
        );
      }
      class sP extends sx {
        constructor(e = new Q(), t = new Q(), n = new Q(), r = new Q()) {
          super(),
            (this.isCubicBezierCurve = !0),
            (this.type = "CubicBezierCurve"),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n),
            (this.v3 = r);
        }
        getPoint(e, t = new Q()) {
          let n = this.v0,
            r = this.v1,
            i = this.v2,
            s = this.v3;
          return t.set(sR(e, n.x, r.x, i.x, s.x), sR(e, n.y, r.y, i.y, s.y)), t;
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            (e.v3 = this.v3.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this.v3.fromArray(e.v3),
            this
          );
        }
      }
      class sO extends sx {
        constructor(e = new Q(), t = new Q()) {
          super(),
            (this.isLineCurve = !0),
            (this.type = "LineCurve"),
            (this.v1 = e),
            (this.v2 = t);
        }
        getPoint(e, t = new Q()) {
          return (
            1 === e
              ? t.copy(this.v2)
              : (t.copy(this.v2).sub(this.v1),
                t.multiplyScalar(e).add(this.v1)),
            t
          );
        }
        getPointAt(e, t) {
          return this.getPoint(e, t);
        }
        getTangent(e, t = new Q()) {
          return t.subVectors(this.v2, this.v1).normalize();
        }
        getTangentAt(e, t) {
          return this.getTangent(e, t);
        }
        copy(e) {
          return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }
      class sL extends sx {
        constructor(e = new Q(), t = new Q(), n = new Q()) {
          super(),
            (this.isQuadraticBezierCurve = !0),
            (this.type = "QuadraticBezierCurve"),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
        }
        getPoint(e, t = new Q()) {
          let n = this.v0,
            r = this.v1,
            i = this.v2;
          return t.set(sC(e, n.x, r.x, i.x), sC(e, n.y, r.y, i.y)), t;
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }
      class sI extends sx {
        constructor(e = new eM(), t = new eM(), n = new eM()) {
          super(),
            (this.isQuadraticBezierCurve3 = !0),
            (this.type = "QuadraticBezierCurve3"),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
        }
        getPoint(e, t = new eM()) {
          let n = this.v0,
            r = this.v1,
            i = this.v2;
          return (
            t.set(
              sC(e, n.x, r.x, i.x),
              sC(e, n.y, r.y, i.y),
              sC(e, n.z, r.z, i.z)
            ),
            t
          );
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }
      class sN extends sx {
        constructor(e = []) {
          super(),
            (this.isSplineCurve = !0),
            (this.type = "SplineCurve"),
            (this.points = e);
        }
        getPoint(e, t = new Q()) {
          let n = this.points,
            r = (n.length - 1) * e,
            i = Math.floor(r),
            s = r - i,
            a = n[0 === i ? i : i - 1],
            o = n[i],
            l = n[i > n.length - 2 ? n.length - 1 : i + 1],
            u = n[i > n.length - 3 ? n.length - 1 : i + 2];
          return t.set(sA(s, a.x, o.x, l.x, u.x), sA(s, a.y, o.y, l.y, u.y)), t;
        }
        copy(e) {
          super.copy(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(n.clone());
          }
          return this;
        }
        toJSON() {
          let e = super.toJSON();
          e.points = [];
          for (let t = 0, n = this.points.length; t < n; t++) {
            let n = this.points[t];
            e.points.push(n.toArray());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(new Q().fromArray(n));
          }
          return this;
        }
      }
      var sD = Object.freeze({
        __proto__: null,
        ArcCurve: class extends sb {
          constructor(e, t, n, r, i, s) {
            super(e, t, n, n, r, i, s),
              (this.isArcCurve = !0),
              (this.type = "ArcCurve");
          }
        },
        CatmullRomCurve3: class extends sx {
          constructor(e = [], t = !1, n = "centripetal", r = 0.5) {
            super(),
              (this.isCatmullRomCurve3 = !0),
              (this.type = "CatmullRomCurve3"),
              (this.points = e),
              (this.closed = t),
              (this.curveType = n),
              (this.tension = r);
          }
          getPoint(e, t = new eM()) {
            let n, r;
            let i = this.points,
              s = i.length,
              a = (s - (this.closed ? 0 : 1)) * e,
              o = Math.floor(a),
              l = a - o;
            this.closed
              ? (o += o > 0 ? 0 : (Math.floor(Math.abs(o) / s) + 1) * s)
              : 0 === l && o === s - 1 && ((o = s - 2), (l = 1)),
              this.closed || o > 0
                ? (n = i[(o - 1) % s])
                : (sE.subVectors(i[0], i[1]).add(i[0]), (n = sE));
            let u = i[o % s],
              c = i[(o + 1) % s];
            if (
              (this.closed || o + 2 < s
                ? (r = i[(o + 2) % s])
                : (sE.subVectors(i[s - 1], i[s - 2]).add(i[s - 1]), (r = sE)),
              "centripetal" === this.curveType || "chordal" === this.curveType)
            ) {
              let e = "chordal" === this.curveType ? 0.5 : 0.25,
                t = Math.pow(n.distanceToSquared(u), e),
                i = Math.pow(u.distanceToSquared(c), e),
                s = Math.pow(c.distanceToSquared(r), e);
              i < 1e-4 && (i = 1),
                t < 1e-4 && (t = i),
                s < 1e-4 && (s = i),
                sM.initNonuniformCatmullRom(n.x, u.x, c.x, r.x, t, i, s),
                sw.initNonuniformCatmullRom(n.y, u.y, c.y, r.y, t, i, s),
                sT.initNonuniformCatmullRom(n.z, u.z, c.z, r.z, t, i, s);
            } else
              "catmullrom" === this.curveType &&
                (sM.initCatmullRom(n.x, u.x, c.x, r.x, this.tension),
                sw.initCatmullRom(n.y, u.y, c.y, r.y, this.tension),
                sT.initCatmullRom(n.z, u.z, c.z, r.z, this.tension));
            return t.set(sM.calc(l), sw.calc(l), sT.calc(l)), t;
          }
          copy(e) {
            super.copy(e), (this.points = []);
            for (let t = 0, n = e.points.length; t < n; t++) {
              let n = e.points[t];
              this.points.push(n.clone());
            }
            return (
              (this.closed = e.closed),
              (this.curveType = e.curveType),
              (this.tension = e.tension),
              this
            );
          }
          toJSON() {
            let e = super.toJSON();
            e.points = [];
            for (let t = 0, n = this.points.length; t < n; t++) {
              let n = this.points[t];
              e.points.push(n.toArray());
            }
            return (
              (e.closed = this.closed),
              (e.curveType = this.curveType),
              (e.tension = this.tension),
              e
            );
          }
          fromJSON(e) {
            super.fromJSON(e), (this.points = []);
            for (let t = 0, n = e.points.length; t < n; t++) {
              let n = e.points[t];
              this.points.push(new eM().fromArray(n));
            }
            return (
              (this.closed = e.closed),
              (this.curveType = e.curveType),
              (this.tension = e.tension),
              this
            );
          }
        },
        CubicBezierCurve: sP,
        CubicBezierCurve3: class extends sx {
          constructor(e = new eM(), t = new eM(), n = new eM(), r = new eM()) {
            super(),
              (this.isCubicBezierCurve3 = !0),
              (this.type = "CubicBezierCurve3"),
              (this.v0 = e),
              (this.v1 = t),
              (this.v2 = n),
              (this.v3 = r);
          }
          getPoint(e, t = new eM()) {
            let n = this.v0,
              r = this.v1,
              i = this.v2,
              s = this.v3;
            return (
              t.set(
                sR(e, n.x, r.x, i.x, s.x),
                sR(e, n.y, r.y, i.y, s.y),
                sR(e, n.z, r.z, i.z, s.z)
              ),
              t
            );
          }
          copy(e) {
            return (
              super.copy(e),
              this.v0.copy(e.v0),
              this.v1.copy(e.v1),
              this.v2.copy(e.v2),
              this.v3.copy(e.v3),
              this
            );
          }
          toJSON() {
            let e = super.toJSON();
            return (
              (e.v0 = this.v0.toArray()),
              (e.v1 = this.v1.toArray()),
              (e.v2 = this.v2.toArray()),
              (e.v3 = this.v3.toArray()),
              e
            );
          }
          fromJSON(e) {
            return (
              super.fromJSON(e),
              this.v0.fromArray(e.v0),
              this.v1.fromArray(e.v1),
              this.v2.fromArray(e.v2),
              this.v3.fromArray(e.v3),
              this
            );
          }
        },
        EllipseCurve: sb,
        LineCurve: sO,
        LineCurve3: class extends sx {
          constructor(e = new eM(), t = new eM()) {
            super(),
              (this.isLineCurve3 = !0),
              (this.type = "LineCurve3"),
              (this.v1 = e),
              (this.v2 = t);
          }
          getPoint(e, t = new eM()) {
            return (
              1 === e
                ? t.copy(this.v2)
                : (t.copy(this.v2).sub(this.v1),
                  t.multiplyScalar(e).add(this.v1)),
              t
            );
          }
          getPointAt(e, t) {
            return this.getPoint(e, t);
          }
          getTangent(e, t = new eM()) {
            return t.subVectors(this.v2, this.v1).normalize();
          }
          getTangentAt(e, t) {
            return this.getTangent(e, t);
          }
          copy(e) {
            return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
          }
          toJSON() {
            let e = super.toJSON();
            return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
          }
          fromJSON(e) {
            return (
              super.fromJSON(e),
              this.v1.fromArray(e.v1),
              this.v2.fromArray(e.v2),
              this
            );
          }
        },
        QuadraticBezierCurve: sL,
        QuadraticBezierCurve3: sI,
        SplineCurve: sN,
      });
      class sU extends sx {
        constructor() {
          super(),
            (this.type = "CurvePath"),
            (this.curves = []),
            (this.autoClose = !1);
        }
        add(e) {
          this.curves.push(e);
        }
        closePath() {
          let e = this.curves[0].getPoint(0),
            t = this.curves[this.curves.length - 1].getPoint(1);
          e.equals(t) || this.curves.push(new sO(t, e));
        }
        getPoint(e, t) {
          let n = e * this.getLength(),
            r = this.getCurveLengths(),
            i = 0;
          for (; i < r.length; ) {
            if (r[i] >= n) {
              let e = r[i] - n,
                s = this.curves[i],
                a = s.getLength(),
                o = 0 === a ? 0 : 1 - e / a;
              return s.getPointAt(o, t);
            }
            i++;
          }
          return null;
        }
        getLength() {
          let e = this.getCurveLengths();
          return e[e.length - 1];
        }
        updateArcLengths() {
          (this.needsUpdate = !0),
            (this.cacheLengths = null),
            this.getCurveLengths();
        }
        getCurveLengths() {
          if (
            this.cacheLengths &&
            this.cacheLengths.length === this.curves.length
          )
            return this.cacheLengths;
          let e = [],
            t = 0;
          for (let n = 0, r = this.curves.length; n < r; n++)
            e.push((t += this.curves[n].getLength()));
          return (this.cacheLengths = e), e;
        }
        getSpacedPoints(e = 40) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return this.autoClose && t.push(t[0]), t;
        }
        getPoints(e = 12) {
          let t;
          let n = [];
          for (let r = 0, i = this.curves; r < i.length; r++) {
            let s = i[r],
              a = s.isEllipseCurve
                ? 2 * e
                : s.isLineCurve || s.isLineCurve3
                ? 1
                : s.isSplineCurve
                ? e * s.points.length
                : e,
              o = s.getPoints(a);
            for (let e = 0; e < o.length; e++) {
              let r = o[e];
              (t && t.equals(r)) || (n.push(r), (t = r));
            }
          }
          return (
            this.autoClose &&
              n.length > 1 &&
              !n[n.length - 1].equals(n[0]) &&
              n.push(n[0]),
            n
          );
        }
        copy(e) {
          super.copy(e), (this.curves = []);
          for (let t = 0, n = e.curves.length; t < n; t++) {
            let n = e.curves[t];
            this.curves.push(n.clone());
          }
          return (this.autoClose = e.autoClose), this;
        }
        toJSON() {
          let e = super.toJSON();
          (e.autoClose = this.autoClose), (e.curves = []);
          for (let t = 0, n = this.curves.length; t < n; t++) {
            let n = this.curves[t];
            e.curves.push(n.toJSON());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
          for (let t = 0, n = e.curves.length; t < n; t++) {
            let n = e.curves[t];
            this.curves.push(new sD[n.type]().fromJSON(n));
          }
          return this;
        }
      }
      class sk extends sU {
        constructor(e) {
          super(),
            (this.type = "Path"),
            (this.currentPoint = new Q()),
            e && this.setFromPoints(e);
        }
        setFromPoints(e) {
          this.moveTo(e[0].x, e[0].y);
          for (let t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
          return this;
        }
        moveTo(e, t) {
          return this.currentPoint.set(e, t), this;
        }
        lineTo(e, t) {
          let n = new sO(this.currentPoint.clone(), new Q(e, t));
          return this.curves.push(n), this.currentPoint.set(e, t), this;
        }
        quadraticCurveTo(e, t, n, r) {
          let i = new sL(this.currentPoint.clone(), new Q(e, t), new Q(n, r));
          return this.curves.push(i), this.currentPoint.set(n, r), this;
        }
        bezierCurveTo(e, t, n, r, i, s) {
          let a = new sP(
            this.currentPoint.clone(),
            new Q(e, t),
            new Q(n, r),
            new Q(i, s)
          );
          return this.curves.push(a), this.currentPoint.set(i, s), this;
        }
        splineThru(e) {
          let t = [this.currentPoint.clone()].concat(e),
            n = new sN(t);
          return (
            this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
          );
        }
        arc(e, t, n, r, i, s) {
          let a = this.currentPoint.x,
            o = this.currentPoint.y;
          return this.absarc(e + a, t + o, n, r, i, s), this;
        }
        absarc(e, t, n, r, i, s) {
          return this.absellipse(e, t, n, n, r, i, s), this;
        }
        ellipse(e, t, n, r, i, s, a, o) {
          let l = this.currentPoint.x,
            u = this.currentPoint.y;
          return this.absellipse(e + l, t + u, n, r, i, s, a, o), this;
        }
        absellipse(e, t, n, r, i, s, a, o) {
          let l = new sb(e, t, n, r, i, s, a, o);
          if (this.curves.length > 0) {
            let e = l.getPoint(0);
            e.equals(this.currentPoint) || this.lineTo(e.x, e.y);
          }
          this.curves.push(l);
          let u = l.getPoint(1);
          return this.currentPoint.copy(u), this;
        }
        copy(e) {
          return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (e.currentPoint = this.currentPoint.toArray()), e;
        }
        fromJSON(e) {
          return (
            super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this
          );
        }
      }
      class sF extends tJ {
        constructor(
          e = [new Q(0, -0.5), new Q(0.5, 0), new Q(0, 0.5)],
          t = 12,
          n = 0,
          r = 2 * Math.PI
        ) {
          super(),
            (this.type = "LatheGeometry"),
            (this.parameters = {
              points: e,
              segments: t,
              phiStart: n,
              phiLength: r,
            }),
            (t = Math.floor(t)),
            (r = G(r, 0, 2 * Math.PI));
          let i = [],
            s = [],
            a = [],
            o = [],
            l = [],
            u = 1 / t,
            c = new eM(),
            h = new Q(),
            d = new eM(),
            p = new eM(),
            f = new eM(),
            m = 0,
            g = 0;
          for (let t = 0; t <= e.length - 1; t++)
            switch (t) {
              case 0:
                (m = e[t + 1].x - e[t].x),
                  (g = e[t + 1].y - e[t].y),
                  (d.x = 1 * g),
                  (d.y = -m),
                  (d.z = 0 * g),
                  f.copy(d),
                  d.normalize(),
                  o.push(d.x, d.y, d.z);
                break;
              case e.length - 1:
                o.push(f.x, f.y, f.z);
                break;
              default:
                (m = e[t + 1].x - e[t].x),
                  (g = e[t + 1].y - e[t].y),
                  (d.x = 1 * g),
                  (d.y = -m),
                  (d.z = 0 * g),
                  p.copy(d),
                  (d.x += f.x),
                  (d.y += f.y),
                  (d.z += f.z),
                  d.normalize(),
                  o.push(d.x, d.y, d.z),
                  f.copy(p);
            }
          for (let i = 0; i <= t; i++) {
            let d = n + i * u * r,
              p = Math.sin(d),
              f = Math.cos(d);
            for (let n = 0; n <= e.length - 1; n++) {
              (c.x = e[n].x * p),
                (c.y = e[n].y),
                (c.z = e[n].x * f),
                s.push(c.x, c.y, c.z),
                (h.x = i / t),
                (h.y = n / (e.length - 1)),
                a.push(h.x, h.y);
              let r = o[3 * n + 0] * p,
                u = o[3 * n + 1],
                d = o[3 * n + 0] * f;
              l.push(r, u, d);
            }
          }
          for (let n = 0; n < t; n++)
            for (let t = 0; t < e.length - 1; t++) {
              let r = t + n * e.length,
                s = r + e.length,
                a = r + e.length + 1,
                o = r + 1;
              i.push(r, s, o), i.push(a, o, s);
            }
          this.setIndex(i),
            this.setAttribute("position", new tj(s, 3)),
            this.setAttribute("uv", new tj(a, 2)),
            this.setAttribute("normal", new tj(l, 3));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new sF(e.points, e.segments, e.phiStart, e.phiLength);
        }
      }
      class sz extends sF {
        constructor(e = 1, t = 1, n = 4, r = 8) {
          let i = new sk();
          i.absarc(0, -t / 2, e, 1.5 * Math.PI, 0),
            i.absarc(0, t / 2, e, 0, 0.5 * Math.PI),
            super(i.getPoints(n), r),
            (this.type = "CapsuleGeometry"),
            (this.parameters = {
              radius: e,
              length: t,
              capSegments: n,
              radialSegments: r,
            });
        }
        static fromJSON(e) {
          return new sz(e.radius, e.length, e.capSegments, e.radialSegments);
        }
      }
      class sB extends tJ {
        constructor(e = 1, t = 32, n = 0, r = 2 * Math.PI) {
          super(),
            (this.type = "CircleGeometry"),
            (this.parameters = {
              radius: e,
              segments: t,
              thetaStart: n,
              thetaLength: r,
            }),
            (t = Math.max(3, t));
          let i = [],
            s = [],
            a = [],
            o = [],
            l = new eM(),
            u = new Q();
          s.push(0, 0, 0), a.push(0, 0, 1), o.push(0.5, 0.5);
          for (let i = 0, c = 3; i <= t; i++, c += 3) {
            let h = n + (i / t) * r;
            (l.x = e * Math.cos(h)),
              (l.y = e * Math.sin(h)),
              s.push(l.x, l.y, l.z),
              a.push(0, 0, 1),
              (u.x = (s[c] / e + 1) / 2),
              (u.y = (s[c + 1] / e + 1) / 2),
              o.push(u.x, u.y);
          }
          for (let e = 1; e <= t; e++) i.push(e, e + 1, 0);
          this.setIndex(i),
            this.setAttribute("position", new tj(s, 3)),
            this.setAttribute("normal", new tj(a, 3)),
            this.setAttribute("uv", new tj(o, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new sB(e.radius, e.segments, e.thetaStart, e.thetaLength);
        }
      }
      class sV extends tJ {
        constructor(
          e = 1,
          t = 1,
          n = 1,
          r = 32,
          i = 1,
          s = !1,
          a = 0,
          o = 2 * Math.PI
        ) {
          super(),
            (this.type = "CylinderGeometry"),
            (this.parameters = {
              radiusTop: e,
              radiusBottom: t,
              height: n,
              radialSegments: r,
              heightSegments: i,
              openEnded: s,
              thetaStart: a,
              thetaLength: o,
            });
          let l = this;
          (r = Math.floor(r)), (i = Math.floor(i));
          let u = [],
            c = [],
            h = [],
            d = [],
            p = 0,
            f = [],
            m = n / 2,
            g = 0;
          function _(n) {
            let i = p,
              s = new Q(),
              f = new eM(),
              _ = 0,
              v = !0 === n ? e : t,
              y = !0 === n ? 1 : -1;
            for (let e = 1; e <= r; e++)
              c.push(0, m * y, 0), h.push(0, y, 0), d.push(0.5, 0.5), p++;
            let x = p;
            for (let e = 0; e <= r; e++) {
              let t = e / r,
                n = t * o + a,
                i = Math.cos(n),
                l = Math.sin(n);
              (f.x = v * l),
                (f.y = m * y),
                (f.z = v * i),
                c.push(f.x, f.y, f.z),
                h.push(0, y, 0),
                (s.x = 0.5 * i + 0.5),
                (s.y = 0.5 * l * y + 0.5),
                d.push(s.x, s.y),
                p++;
            }
            for (let e = 0; e < r; e++) {
              let t = i + e,
                r = x + e;
              !0 === n ? u.push(r, r + 1, t) : u.push(r + 1, r, t), (_ += 3);
            }
            l.addGroup(g, _, !0 === n ? 1 : 2), (g += _);
          }
          (function () {
            let s = new eM(),
              _ = new eM(),
              v = 0,
              y = (t - e) / n;
            for (let l = 0; l <= i; l++) {
              let u = [],
                g = l / i,
                v = g * (t - e) + e;
              for (let e = 0; e <= r; e++) {
                let t = e / r,
                  i = t * o + a,
                  l = Math.sin(i),
                  f = Math.cos(i);
                (_.x = v * l),
                  (_.y = -g * n + m),
                  (_.z = v * f),
                  c.push(_.x, _.y, _.z),
                  s.set(l, y, f).normalize(),
                  h.push(s.x, s.y, s.z),
                  d.push(t, 1 - g),
                  u.push(p++);
              }
              f.push(u);
            }
            for (let e = 0; e < r; e++)
              for (let t = 0; t < i; t++) {
                let n = f[t][e],
                  r = f[t + 1][e],
                  i = f[t + 1][e + 1],
                  s = f[t][e + 1];
                u.push(n, r, s), u.push(r, i, s), (v += 6);
              }
            l.addGroup(g, v, 0), (g += v);
          })(),
            !1 === s && (e > 0 && _(!0), t > 0 && _(!1)),
            this.setIndex(u),
            this.setAttribute("position", new tj(c, 3)),
            this.setAttribute("normal", new tj(h, 3)),
            this.setAttribute("uv", new tj(d, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new sV(
            e.radiusTop,
            e.radiusBottom,
            e.height,
            e.radialSegments,
            e.heightSegments,
            e.openEnded,
            e.thetaStart,
            e.thetaLength
          );
        }
      }
      class sj extends sV {
        constructor(
          e = 1,
          t = 1,
          n = 32,
          r = 1,
          i = !1,
          s = 0,
          a = 2 * Math.PI
        ) {
          super(0, e, t, n, r, i, s, a),
            (this.type = "ConeGeometry"),
            (this.parameters = {
              radius: e,
              height: t,
              radialSegments: n,
              heightSegments: r,
              openEnded: i,
              thetaStart: s,
              thetaLength: a,
            });
        }
        static fromJSON(e) {
          return new sj(
            e.radius,
            e.height,
            e.radialSegments,
            e.heightSegments,
            e.openEnded,
            e.thetaStart,
            e.thetaLength
          );
        }
      }
      class sH extends tJ {
        constructor(e = [], t = [], n = 1, r = 0) {
          super(),
            (this.type = "PolyhedronGeometry"),
            (this.parameters = {
              vertices: e,
              indices: t,
              radius: n,
              detail: r,
            });
          let i = [],
            s = [];
          function a(e) {
            i.push(e.x, e.y, e.z);
          }
          function o(t, n) {
            let r = 3 * t;
            (n.x = e[r + 0]), (n.y = e[r + 1]), (n.z = e[r + 2]);
          }
          function l(e, t, n, r) {
            r < 0 && 1 === e.x && (s[t] = e.x - 1),
              0 === n.x && 0 === n.z && (s[t] = r / 2 / Math.PI + 0.5);
          }
          function u(e) {
            return Math.atan2(e.z, -e.x);
          }
          (function (e) {
            let n = new eM(),
              r = new eM(),
              i = new eM();
            for (let s = 0; s < t.length; s += 3)
              o(t[s + 0], n),
                o(t[s + 1], r),
                o(t[s + 2], i),
                (function (e, t, n, r) {
                  let i = r + 1,
                    s = [];
                  for (let r = 0; r <= i; r++) {
                    s[r] = [];
                    let a = e.clone().lerp(n, r / i),
                      o = t.clone().lerp(n, r / i),
                      l = i - r;
                    for (let e = 0; e <= l; e++)
                      0 === e && r === i
                        ? (s[r][e] = a)
                        : (s[r][e] = a.clone().lerp(o, e / l));
                  }
                  for (let e = 0; e < i; e++)
                    for (let t = 0; t < 2 * (i - e) - 1; t++) {
                      let n = Math.floor(t / 2);
                      t % 2 == 0
                        ? (a(s[e][n + 1]), a(s[e + 1][n]), a(s[e][n]))
                        : (a(s[e][n + 1]), a(s[e + 1][n + 1]), a(s[e + 1][n]));
                    }
                })(n, r, i, e);
          })(r),
            (function (e) {
              let t = new eM();
              for (let n = 0; n < i.length; n += 3)
                (t.x = i[n + 0]),
                  (t.y = i[n + 1]),
                  (t.z = i[n + 2]),
                  t.normalize().multiplyScalar(e),
                  (i[n + 0] = t.x),
                  (i[n + 1] = t.y),
                  (i[n + 2] = t.z);
            })(n),
            (function () {
              let e = new eM();
              for (let t = 0; t < i.length; t += 3) {
                (e.x = i[t + 0]), (e.y = i[t + 1]), (e.z = i[t + 2]);
                let n = u(e) / 2 / Math.PI + 0.5,
                  r =
                    Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z)) /
                      Math.PI +
                    0.5;
                s.push(n, 1 - r);
              }
              (function () {
                let e = new eM(),
                  t = new eM(),
                  n = new eM(),
                  r = new eM(),
                  a = new Q(),
                  o = new Q(),
                  c = new Q();
                for (let h = 0, d = 0; h < i.length; h += 9, d += 6) {
                  e.set(i[h + 0], i[h + 1], i[h + 2]),
                    t.set(i[h + 3], i[h + 4], i[h + 5]),
                    n.set(i[h + 6], i[h + 7], i[h + 8]),
                    a.set(s[d + 0], s[d + 1]),
                    o.set(s[d + 2], s[d + 3]),
                    c.set(s[d + 4], s[d + 5]),
                    r.copy(e).add(t).add(n).divideScalar(3);
                  let p = u(r);
                  l(a, d + 0, e, p), l(o, d + 2, t, p), l(c, d + 4, n, p);
                }
              })(),
                (function () {
                  for (let e = 0; e < s.length; e += 6) {
                    let t = s[e + 0],
                      n = s[e + 2],
                      r = s[e + 4],
                      i = Math.max(t, n, r),
                      a = Math.min(t, n, r);
                    i > 0.9 &&
                      a < 0.1 &&
                      (t < 0.2 && (s[e + 0] += 1),
                      n < 0.2 && (s[e + 2] += 1),
                      r < 0.2 && (s[e + 4] += 1));
                  }
                })();
            })(),
            this.setAttribute("position", new tj(i, 3)),
            this.setAttribute("normal", new tj(i.slice(), 3)),
            this.setAttribute("uv", new tj(s, 2)),
            0 === r ? this.computeVertexNormals() : this.normalizeNormals();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new sH(e.vertices, e.indices, e.radius, e.details);
        }
      }
      class sG extends sH {
        constructor(e = 1, t = 0) {
          let n = (1 + Math.sqrt(5)) / 2,
            r = 1 / n,
            i = [
              -1,
              -1,
              -1,
              -1,
              -1,
              1,
              -1,
              1,
              -1,
              -1,
              1,
              1,
              1,
              -1,
              -1,
              1,
              -1,
              1,
              1,
              1,
              -1,
              1,
              1,
              1,
              0,
              -r,
              -n,
              0,
              -r,
              n,
              0,
              r,
              -n,
              0,
              r,
              n,
              -r,
              -n,
              0,
              -r,
              n,
              0,
              r,
              -n,
              0,
              r,
              n,
              0,
              -n,
              0,
              -r,
              n,
              0,
              -r,
              -n,
              0,
              r,
              n,
              0,
              r,
            ];
          super(
            i,
            [
              3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17,
              4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12,
              1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18,
              2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4,
              12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14,
              4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
            ],
            e,
            t
          ),
            (this.type = "DodecahedronGeometry"),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(e) {
          return new sG(e.radius, e.detail);
        }
      }
      let sW = new eM(),
        s$ = new eM(),
        sX = new eM(),
        sq = new tA();
      class sY extends tJ {
        constructor(e = null, t = 1) {
          if (
            (super(),
            (this.type = "EdgesGeometry"),
            (this.parameters = { geometry: e, thresholdAngle: t }),
            null !== e)
          ) {
            let n = Math.cos(V * t),
              r = e.getIndex(),
              i = e.getAttribute("position"),
              s = r ? r.count : i.count,
              a = [0, 0, 0],
              o = ["a", "b", "c"],
              l = [, , ,],
              u = {},
              c = [];
            for (let e = 0; e < s; e += 3) {
              r
                ? ((a[0] = r.getX(e)),
                  (a[1] = r.getX(e + 1)),
                  (a[2] = r.getX(e + 2)))
                : ((a[0] = e), (a[1] = e + 1), (a[2] = e + 2));
              let { a: t, b: s, c: h } = sq;
              if (
                (t.fromBufferAttribute(i, a[0]),
                s.fromBufferAttribute(i, a[1]),
                h.fromBufferAttribute(i, a[2]),
                sq.getNormal(sX),
                (l[0] = `${Math.round(1e4 * t.x)},${Math.round(
                  1e4 * t.y
                )},${Math.round(1e4 * t.z)}`),
                (l[1] = `${Math.round(1e4 * s.x)},${Math.round(
                  1e4 * s.y
                )},${Math.round(1e4 * s.z)}`),
                (l[2] = `${Math.round(1e4 * h.x)},${Math.round(
                  1e4 * h.y
                )},${Math.round(1e4 * h.z)}`),
                l[0] !== l[1] && l[1] !== l[2] && l[2] !== l[0])
              )
                for (let e = 0; e < 3; e++) {
                  let t = (e + 1) % 3,
                    r = l[e],
                    i = l[t],
                    s = sq[o[e]],
                    h = sq[o[t]],
                    d = `${r}_${i}`,
                    p = `${i}_${r}`;
                  p in u && u[p]
                    ? (sX.dot(u[p].normal) <= n &&
                        (c.push(s.x, s.y, s.z), c.push(h.x, h.y, h.z)),
                      (u[p] = null))
                    : d in u ||
                      (u[d] = {
                        index0: a[e],
                        index1: a[t],
                        normal: sX.clone(),
                      });
                }
            }
            for (let e in u)
              if (u[e]) {
                let { index0: t, index1: n } = u[e];
                sW.fromBufferAttribute(i, t),
                  s$.fromBufferAttribute(i, n),
                  c.push(sW.x, sW.y, sW.z),
                  c.push(s$.x, s$.y, s$.z);
              }
            this.setAttribute("position", new tj(c, 3));
          }
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
      }
      class sJ extends sk {
        constructor(e) {
          super(e), (this.uuid = H()), (this.type = "Shape"), (this.holes = []);
        }
        getPointsHoles(e) {
          let t = [];
          for (let n = 0, r = this.holes.length; n < r; n++)
            t[n] = this.holes[n].getPoints(e);
          return t;
        }
        extractPoints(e) {
          return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
        }
        copy(e) {
          super.copy(e), (this.holes = []);
          for (let t = 0, n = e.holes.length; t < n; t++) {
            let n = e.holes[t];
            this.holes.push(n.clone());
          }
          return this;
        }
        toJSON() {
          let e = super.toJSON();
          (e.uuid = this.uuid), (e.holes = []);
          for (let t = 0, n = this.holes.length; t < n; t++) {
            let n = this.holes[t];
            e.holes.push(n.toJSON());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
          for (let t = 0, n = e.holes.length; t < n; t++) {
            let n = e.holes[t];
            this.holes.push(new sk().fromJSON(n));
          }
          return this;
        }
      }
      let sZ = {
        triangulate: function (e, t, n = 2) {
          let r, i, s, a, o, l, u;
          let c = t && t.length,
            h = c ? t[0] * n : e.length,
            d = sK(e, 0, h, n, !0),
            p = [];
          if (!d || d.next === d.prev) return p;
          if (
            (c &&
              (d = (function (e, t, n, r) {
                let i, s, a, o, l;
                let u = [];
                for (i = 0, s = t.length; i < s; i++)
                  (a = t[i] * r),
                    (o = i < s - 1 ? t[i + 1] * r : e.length),
                    (l = sK(e, a, o, r, !1)) === l.next && (l.steiner = !0),
                    u.push(
                      (function (e) {
                        let t = e,
                          n = e;
                        do
                          (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t),
                            (t = t.next);
                        while (t !== e);
                        return n;
                      })(l)
                    );
                for (u.sort(s0), i = 0; i < u.length; i++)
                  n = (function (e, t) {
                    let n = (function (e, t) {
                      let n = t,
                        r = -1 / 0,
                        i,
                        s = e.x,
                        a = e.y;
                      do {
                        if (a <= n.y && a >= n.next.y && n.next.y !== n.y) {
                          let e =
                            n.x +
                            ((a - n.y) * (n.next.x - n.x)) / (n.next.y - n.y);
                          if (
                            e <= s &&
                            e > r &&
                            ((r = e),
                            (i = n.x < n.next.x ? n : n.next),
                            e === s)
                          )
                            return i;
                        }
                        n = n.next;
                      } while (n !== t);
                      if (!i) return null;
                      let o = i,
                        l = i.x,
                        u = i.y,
                        c = 1 / 0,
                        h;
                      n = i;
                      do {
                        var d, p;
                        s >= n.x &&
                          n.x >= l &&
                          s !== n.x &&
                          s2(
                            a < u ? s : r,
                            a,
                            l,
                            u,
                            a < u ? r : s,
                            a,
                            n.x,
                            n.y
                          ) &&
                          ((h = Math.abs(a - n.y) / (s - n.x)),
                          s7(n, e) &&
                            (h < c ||
                              (h === c &&
                                (n.x > i.x ||
                                  (n.x === i.x &&
                                    ((d = i),
                                    (p = n),
                                    0 > s3(d.prev, d, p.prev) &&
                                      0 > s3(p.next, d, d.next)))))) &&
                            ((i = n), (c = h))),
                          (n = n.next);
                      } while (n !== o);
                      return i;
                    })(e, t);
                    if (!n) return t;
                    let r = s9(n, e);
                    return sQ(r, r.next), sQ(n, n.next);
                  })(u[i], n);
                return n;
              })(e, t, d, n)),
            e.length > 80 * n)
          ) {
            (r = s = e[0]), (i = a = e[1]);
            for (let t = n; t < h; t += n)
              (o = e[t]),
                (l = e[t + 1]),
                o < r && (r = o),
                l < i && (i = l),
                o > s && (s = o),
                l > a && (a = l);
            u = 0 !== (u = Math.max(s - r, a - i)) ? 32767 / u : 0;
          }
          return (
            (function e(t, n, r, i, s, a, o) {
              if (!t) return;
              !o &&
                a &&
                (function (e, t, n, r) {
                  let i = e;
                  do
                    0 === i.z && (i.z = s1(i.x, i.y, t, n, r)),
                      (i.prevZ = i.prev),
                      (i.nextZ = i.next),
                      (i = i.next);
                  while (i !== e);
                  (i.prevZ.nextZ = null),
                    (i.prevZ = null),
                    (function (e) {
                      let t,
                        n,
                        r,
                        i,
                        s,
                        a,
                        o,
                        l,
                        u = 1;
                      do {
                        for (n = e, e = null, s = null, a = 0; n; ) {
                          for (
                            a++, r = n, o = 0, t = 0;
                            t < u && (o++, (r = r.nextZ));
                            t++
                          );
                          for (l = u; o > 0 || (l > 0 && r); )
                            0 !== o && (0 === l || !r || n.z <= r.z)
                              ? ((i = n), (n = n.nextZ), o--)
                              : ((i = r), (r = r.nextZ), l--),
                              s ? (s.nextZ = i) : (e = i),
                              (i.prevZ = s),
                              (s = i);
                          n = r;
                        }
                        (s.nextZ = null), (u *= 2);
                      } while (a > 1);
                    })(i);
                })(t, i, s, a);
              let l = t,
                u,
                c;
              for (; t.prev !== t.next; ) {
                if (
                  ((u = t.prev),
                  (c = t.next),
                  a
                    ? (function (e, t, n, r) {
                        let i = e.prev,
                          s = e.next;
                        if (s3(i, e, s) >= 0) return !1;
                        let a = i.x,
                          o = e.x,
                          l = s.x,
                          u = i.y,
                          c = e.y,
                          h = s.y,
                          d = a < o ? (a < l ? a : l) : o < l ? o : l,
                          p = u < c ? (u < h ? u : h) : c < h ? c : h,
                          f = a > o ? (a > l ? a : l) : o > l ? o : l,
                          m = u > c ? (u > h ? u : h) : c > h ? c : h,
                          g = s1(d, p, t, n, r),
                          _ = s1(f, m, t, n, r),
                          v = e.prevZ,
                          y = e.nextZ;
                        for (; v && v.z >= g && y && y.z <= _; ) {
                          if (
                            (v.x >= d &&
                              v.x <= f &&
                              v.y >= p &&
                              v.y <= m &&
                              v !== i &&
                              v !== s &&
                              s2(a, u, o, c, l, h, v.x, v.y) &&
                              s3(v.prev, v, v.next) >= 0) ||
                            ((v = v.prevZ),
                            y.x >= d &&
                              y.x <= f &&
                              y.y >= p &&
                              y.y <= m &&
                              y !== i &&
                              y !== s &&
                              s2(a, u, o, c, l, h, y.x, y.y) &&
                              s3(y.prev, y, y.next) >= 0)
                          )
                            return !1;
                          y = y.nextZ;
                        }
                        for (; v && v.z >= g; ) {
                          if (
                            v.x >= d &&
                            v.x <= f &&
                            v.y >= p &&
                            v.y <= m &&
                            v !== i &&
                            v !== s &&
                            s2(a, u, o, c, l, h, v.x, v.y) &&
                            s3(v.prev, v, v.next) >= 0
                          )
                            return !1;
                          v = v.prevZ;
                        }
                        for (; y && y.z <= _; ) {
                          if (
                            y.x >= d &&
                            y.x <= f &&
                            y.y >= p &&
                            y.y <= m &&
                            y !== i &&
                            y !== s &&
                            s2(a, u, o, c, l, h, y.x, y.y) &&
                            s3(y.prev, y, y.next) >= 0
                          )
                            return !1;
                          y = y.nextZ;
                        }
                        return !0;
                      })(t, i, s, a)
                    : (function (e) {
                        let t = e.prev,
                          n = e.next;
                        if (s3(t, e, n) >= 0) return !1;
                        let r = t.x,
                          i = e.x,
                          s = n.x,
                          a = t.y,
                          o = e.y,
                          l = n.y,
                          u = r < i ? (r < s ? r : s) : i < s ? i : s,
                          c = a < o ? (a < l ? a : l) : o < l ? o : l,
                          h = r > i ? (r > s ? r : s) : i > s ? i : s,
                          d = a > o ? (a > l ? a : l) : o > l ? o : l,
                          p = n.next;
                        for (; p !== t; ) {
                          if (
                            p.x >= u &&
                            p.x <= h &&
                            p.y >= c &&
                            p.y <= d &&
                            s2(r, a, i, o, s, l, p.x, p.y) &&
                            s3(p.prev, p, p.next) >= 0
                          )
                            return !1;
                          p = p.next;
                        }
                        return !0;
                      })(t))
                ) {
                  n.push((u.i / r) | 0),
                    n.push((t.i / r) | 0),
                    n.push((c.i / r) | 0),
                    at(t),
                    (t = c.next),
                    (l = c.next);
                  continue;
                }
                if ((t = c) === l) {
                  o
                    ? 1 === o
                      ? e(
                          (t = (function (e, t, n) {
                            let r = e;
                            do {
                              let i = r.prev,
                                s = r.next.next;
                              !s4(i, s) &&
                                s5(i, r, r.next, s) &&
                                s7(i, s) &&
                                s7(s, i) &&
                                (t.push((i.i / n) | 0),
                                t.push((r.i / n) | 0),
                                t.push((s.i / n) | 0),
                                at(r),
                                at(r.next),
                                (r = e = s)),
                                (r = r.next);
                            } while (r !== e);
                            return sQ(r);
                          })(sQ(t), n, r)),
                          n,
                          r,
                          i,
                          s,
                          a,
                          2
                        )
                      : 2 === o &&
                        (function (t, n, r, i, s, a) {
                          let o = t;
                          do {
                            let t = o.next.next;
                            for (; t !== o.prev; ) {
                              var l, u;
                              if (
                                o.i !== t.i &&
                                ((l = o),
                                (u = t),
                                l.next.i !== u.i &&
                                  l.prev.i !== u.i &&
                                  !(function (e, t) {
                                    let n = e;
                                    do {
                                      if (
                                        n.i !== e.i &&
                                        n.next.i !== e.i &&
                                        n.i !== t.i &&
                                        n.next.i !== t.i &&
                                        s5(n, n.next, e, t)
                                      )
                                        return !0;
                                      n = n.next;
                                    } while (n !== e);
                                    return !1;
                                  })(l, u) &&
                                  ((s7(l, u) &&
                                    s7(u, l) &&
                                    (function (e, t) {
                                      let n = e,
                                        r = !1,
                                        i = (e.x + t.x) / 2,
                                        s = (e.y + t.y) / 2;
                                      do
                                        n.y > s != n.next.y > s &&
                                          n.next.y !== n.y &&
                                          i <
                                            ((n.next.x - n.x) * (s - n.y)) /
                                              (n.next.y - n.y) +
                                              n.x &&
                                          (r = !r),
                                          (n = n.next);
                                      while (n !== e);
                                      return r;
                                    })(l, u) &&
                                    (s3(l.prev, l, u.prev) ||
                                      s3(l, u.prev, u))) ||
                                    (s4(l, u) &&
                                      s3(l.prev, l, l.next) > 0 &&
                                      s3(u.prev, u, u.next) > 0)))
                              ) {
                                let l = s9(o, t);
                                (o = sQ(o, o.next)),
                                  (l = sQ(l, l.next)),
                                  e(o, n, r, i, s, a, 0),
                                  e(l, n, r, i, s, a, 0);
                                return;
                              }
                              t = t.next;
                            }
                            o = o.next;
                          } while (o !== t);
                        })(t, n, r, i, s, a)
                    : e(sQ(t), n, r, i, s, a, 1);
                  break;
                }
              }
            })(d, p, n, r, i, u, 0),
            p
          );
        },
      };
      function sK(e, t, n, r, i) {
        let s, a;
        if (
          i ===
          (function (e, t, n, r) {
            let i = 0;
            for (let s = t, a = n - r; s < n; s += r)
              (i += (e[a] - e[s]) * (e[s + 1] + e[a + 1])), (a = s);
            return i;
          })(e, t, n, r) >
            0
        )
          for (s = t; s < n; s += r) a = ae(s, e[s], e[s + 1], a);
        else for (s = n - r; s >= t; s -= r) a = ae(s, e[s], e[s + 1], a);
        return a && s4(a, a.next) && (at(a), (a = a.next)), a;
      }
      function sQ(e, t) {
        if (!e) return e;
        t || (t = e);
        let n = e,
          r;
        do
          if (
            ((r = !1),
            !n.steiner && (s4(n, n.next) || 0 === s3(n.prev, n, n.next)))
          ) {
            if ((at(n), (n = t = n.prev) === n.next)) break;
            r = !0;
          } else n = n.next;
        while (r || n !== t);
        return t;
      }
      function s0(e, t) {
        return e.x - t.x;
      }
      function s1(e, t, n, r, i) {
        return (
          (e =
            ((e =
              ((e =
                ((e = ((e = ((e - n) * i) | 0) | (e << 8)) & 16711935) |
                  (e << 4)) &
                252645135) |
                (e << 2)) &
              858993459) |
              (e << 1)) &
            1431655765) |
          ((t =
            ((t =
              ((t =
                ((t = ((t = ((t - r) * i) | 0) | (t << 8)) & 16711935) |
                  (t << 4)) &
                252645135) |
                (t << 2)) &
              858993459) |
              (t << 1)) &
            1431655765) <<
            1)
        );
      }
      function s2(e, t, n, r, i, s, a, o) {
        return (
          (i - a) * (t - o) >= (e - a) * (s - o) &&
          (e - a) * (r - o) >= (n - a) * (t - o) &&
          (n - a) * (s - o) >= (i - a) * (r - o)
        );
      }
      function s3(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
      }
      function s4(e, t) {
        return e.x === t.x && e.y === t.y;
      }
      function s5(e, t, n, r) {
        let i = s8(s3(e, t, n)),
          s = s8(s3(e, t, r)),
          a = s8(s3(n, r, e)),
          o = s8(s3(n, r, t));
        return !!(
          (i !== s && a !== o) ||
          (0 === i && s6(e, n, t)) ||
          (0 === s && s6(e, r, t)) ||
          (0 === a && s6(n, e, r)) ||
          (0 === o && s6(n, t, r))
        );
      }
      function s6(e, t, n) {
        return (
          t.x <= Math.max(e.x, n.x) &&
          t.x >= Math.min(e.x, n.x) &&
          t.y <= Math.max(e.y, n.y) &&
          t.y >= Math.min(e.y, n.y)
        );
      }
      function s8(e) {
        return e > 0 ? 1 : e < 0 ? -1 : 0;
      }
      function s7(e, t) {
        return 0 > s3(e.prev, e, e.next)
          ? s3(e, t, e.next) >= 0 && s3(e, e.prev, t) >= 0
          : 0 > s3(e, t, e.prev) || 0 > s3(e, e.next, t);
      }
      function s9(e, t) {
        let n = new an(e.i, e.x, e.y),
          r = new an(t.i, t.x, t.y),
          i = e.next,
          s = t.prev;
        return (
          (e.next = t),
          (t.prev = e),
          (n.next = i),
          (i.prev = n),
          (r.next = n),
          (n.prev = r),
          (s.next = r),
          (r.prev = s),
          r
        );
      }
      function ae(e, t, n, r) {
        let i = new an(e, t, n);
        return (
          r
            ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
            : ((i.prev = i), (i.next = i)),
          i
        );
      }
      function at(e) {
        (e.next.prev = e.prev),
          (e.prev.next = e.next),
          e.prevZ && (e.prevZ.nextZ = e.nextZ),
          e.nextZ && (e.nextZ.prevZ = e.prevZ);
      }
      function an(e, t, n) {
        (this.i = e),
          (this.x = t),
          (this.y = n),
          (this.prev = null),
          (this.next = null),
          (this.z = 0),
          (this.prevZ = null),
          (this.nextZ = null),
          (this.steiner = !1);
      }
      class ar {
        static area(e) {
          let t = e.length,
            n = 0;
          for (let r = t - 1, i = 0; i < t; r = i++)
            n += e[r].x * e[i].y - e[i].x * e[r].y;
          return 0.5 * n;
        }
        static isClockWise(e) {
          return 0 > ar.area(e);
        }
        static triangulateShape(e, t) {
          let n = [],
            r = [],
            i = [];
          ai(e), as(n, e);
          let s = e.length;
          t.forEach(ai);
          for (let e = 0; e < t.length; e++)
            r.push(s), (s += t[e].length), as(n, t[e]);
          let a = sZ.triangulate(n, r);
          for (let e = 0; e < a.length; e += 3) i.push(a.slice(e, e + 3));
          return i;
        }
      }
      function ai(e) {
        let t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop();
      }
      function as(e, t) {
        for (let n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
      }
      class aa extends tJ {
        constructor(
          e = new sJ([
            new Q(0.5, 0.5),
            new Q(-0.5, 0.5),
            new Q(-0.5, -0.5),
            new Q(0.5, -0.5),
          ]),
          t = {}
        ) {
          super(),
            (this.type = "ExtrudeGeometry"),
            (this.parameters = { shapes: e, options: t }),
            (e = Array.isArray(e) ? e : [e]);
          let n = this,
            r = [],
            i = [];
          for (let s = 0, a = e.length; s < a; s++) {
            let a = e[s];
            !(function (e) {
              let s, a, o, l;
              let u = [],
                c = void 0 !== t.curveSegments ? t.curveSegments : 12,
                h = void 0 !== t.steps ? t.steps : 1,
                d = void 0 !== t.depth ? t.depth : 1,
                p = void 0 === t.bevelEnabled || t.bevelEnabled,
                f = void 0 !== t.bevelThickness ? t.bevelThickness : 0.2,
                m = void 0 !== t.bevelSize ? t.bevelSize : f - 0.1,
                g = void 0 !== t.bevelOffset ? t.bevelOffset : 0,
                _ = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
                v = t.extrudePath,
                y = void 0 !== t.UVGenerator ? t.UVGenerator : ao,
                x,
                b = !1;
              v &&
                ((x = v.getSpacedPoints(h)),
                (b = !0),
                (p = !1),
                (s = v.computeFrenetFrames(h, !1)),
                (a = new eM()),
                (o = new eM()),
                (l = new eM())),
                p || ((_ = 0), (f = 0), (m = 0), (g = 0));
              let S = e.extractPoints(c),
                E = S.shape,
                M = S.holes,
                w = !ar.isClockWise(E);
              if (w) {
                E = E.reverse();
                for (let e = 0, t = M.length; e < t; e++) {
                  let t = M[e];
                  ar.isClockWise(t) && (M[e] = t.reverse());
                }
              }
              let T = ar.triangulateShape(E, M),
                A = E;
              for (let e = 0, t = M.length; e < t; e++) {
                let t = M[e];
                E = E.concat(t);
              }
              function C(e, t, n) {
                return (
                  t ||
                    console.error("THREE.ExtrudeGeometry: vec does not exist"),
                  e.clone().addScaledVector(t, n)
                );
              }
              let R = E.length,
                P = T.length;
              function O(e, t, n) {
                let r, i, s;
                let a = e.x - t.x,
                  o = e.y - t.y,
                  l = n.x - e.x,
                  u = n.y - e.y,
                  c = a * a + o * o,
                  h = a * u - o * l;
                if (Math.abs(h) > Number.EPSILON) {
                  let h = Math.sqrt(c),
                    d = Math.sqrt(l * l + u * u),
                    p = t.x - o / h,
                    f = t.y + a / h,
                    m = n.x - u / d,
                    g = n.y + l / d,
                    _ = ((m - p) * u - (g - f) * l) / (a * u - o * l);
                  (r = p + a * _ - e.x), (i = f + o * _ - e.y);
                  let v = r * r + i * i;
                  if (v <= 2) return new Q(r, i);
                  s = Math.sqrt(v / 2);
                } else {
                  let e = !1;
                  a > Number.EPSILON
                    ? l > Number.EPSILON && (e = !0)
                    : a < -Number.EPSILON
                    ? l < -Number.EPSILON && (e = !0)
                    : Math.sign(o) === Math.sign(u) && (e = !0),
                    e
                      ? ((r = -o), (i = a), (s = Math.sqrt(c)))
                      : ((r = a), (i = o), (s = Math.sqrt(c / 2)));
                }
                return new Q(r / s, i / s);
              }
              let L = [];
              for (
                let e = 0, t = A.length, n = t - 1, r = e + 1;
                e < t;
                e++, n++, r++
              )
                n === t && (n = 0),
                  r === t && (r = 0),
                  (L[e] = O(A[e], A[n], A[r]));
              let I = [],
                N,
                D = L.concat();
              for (let e = 0, t = M.length; e < t; e++) {
                let t = M[e];
                N = [];
                for (
                  let e = 0, n = t.length, r = n - 1, i = e + 1;
                  e < n;
                  e++, r++, i++
                )
                  r === n && (r = 0),
                    i === n && (i = 0),
                    (N[e] = O(t[e], t[r], t[i]));
                I.push(N), (D = D.concat(N));
              }
              for (let e = 0; e < _; e++) {
                let t = e / _,
                  n = f * Math.cos((t * Math.PI) / 2),
                  r = m * Math.sin((t * Math.PI) / 2) + g;
                for (let e = 0, t = A.length; e < t; e++) {
                  let t = C(A[e], L[e], r);
                  F(t.x, t.y, -n);
                }
                for (let e = 0, t = M.length; e < t; e++) {
                  let t = M[e];
                  N = I[e];
                  for (let e = 0, i = t.length; e < i; e++) {
                    let i = C(t[e], N[e], r);
                    F(i.x, i.y, -n);
                  }
                }
              }
              let U = m + g;
              for (let e = 0; e < R; e++) {
                let t = p ? C(E[e], D[e], U) : E[e];
                b
                  ? (o.copy(s.normals[0]).multiplyScalar(t.x),
                    a.copy(s.binormals[0]).multiplyScalar(t.y),
                    l.copy(x[0]).add(o).add(a),
                    F(l.x, l.y, l.z))
                  : F(t.x, t.y, 0);
              }
              for (let e = 1; e <= h; e++)
                for (let t = 0; t < R; t++) {
                  let n = p ? C(E[t], D[t], U) : E[t];
                  b
                    ? (o.copy(s.normals[e]).multiplyScalar(n.x),
                      a.copy(s.binormals[e]).multiplyScalar(n.y),
                      l.copy(x[e]).add(o).add(a),
                      F(l.x, l.y, l.z))
                    : F(n.x, n.y, (d / h) * e);
                }
              for (let e = _ - 1; e >= 0; e--) {
                let t = e / _,
                  n = f * Math.cos((t * Math.PI) / 2),
                  r = m * Math.sin((t * Math.PI) / 2) + g;
                for (let e = 0, t = A.length; e < t; e++) {
                  let t = C(A[e], L[e], r);
                  F(t.x, t.y, d + n);
                }
                for (let e = 0, t = M.length; e < t; e++) {
                  let t = M[e];
                  N = I[e];
                  for (let e = 0, i = t.length; e < i; e++) {
                    let i = C(t[e], N[e], r);
                    b
                      ? F(i.x, i.y + x[h - 1].y, x[h - 1].x + n)
                      : F(i.x, i.y, d + n);
                  }
                }
              }
              function k(e, t) {
                let i = e.length;
                for (; --i >= 0; ) {
                  let s = i,
                    a = i - 1;
                  a < 0 && (a = e.length - 1);
                  for (let e = 0, i = h + 2 * _; e < i; e++) {
                    let i = R * e,
                      o = R * (e + 1),
                      l = t + s + i,
                      u = t + a + i,
                      c = t + a + o,
                      h = t + s + o;
                    !(function (e, t, i, s) {
                      B(e), B(t), B(s), B(t), B(i), B(s);
                      let a = r.length / 3,
                        o = y.generateSideWallUV(
                          n,
                          r,
                          a - 6,
                          a - 3,
                          a - 2,
                          a - 1
                        );
                      V(o[0]), V(o[1]), V(o[3]), V(o[1]), V(o[2]), V(o[3]);
                    })(l, u, c, h);
                  }
                }
              }
              function F(e, t, n) {
                u.push(e), u.push(t), u.push(n);
              }
              function z(e, t, i) {
                B(e), B(t), B(i);
                let s = r.length / 3,
                  a = y.generateTopUV(n, r, s - 3, s - 2, s - 1);
                V(a[0]), V(a[1]), V(a[2]);
              }
              function B(e) {
                r.push(u[3 * e + 0]),
                  r.push(u[3 * e + 1]),
                  r.push(u[3 * e + 2]);
              }
              function V(e) {
                i.push(e.x), i.push(e.y);
              }
              (function () {
                let e = r.length / 3;
                if (p) {
                  let e = 0 * R;
                  for (let t = 0; t < P; t++) {
                    let n = T[t];
                    z(n[2] + e, n[1] + e, n[0] + e);
                  }
                  e = R * (h + 2 * _);
                  for (let t = 0; t < P; t++) {
                    let n = T[t];
                    z(n[0] + e, n[1] + e, n[2] + e);
                  }
                } else {
                  for (let e = 0; e < P; e++) {
                    let t = T[e];
                    z(t[2], t[1], t[0]);
                  }
                  for (let e = 0; e < P; e++) {
                    let t = T[e];
                    z(t[0] + R * h, t[1] + R * h, t[2] + R * h);
                  }
                }
                n.addGroup(e, r.length / 3 - e, 0);
              })(),
                (function () {
                  let e = r.length / 3,
                    t = 0;
                  k(A, 0), (t += A.length);
                  for (let e = 0, n = M.length; e < n; e++) {
                    let n = M[e];
                    k(n, t), (t += n.length);
                  }
                  n.addGroup(e, r.length / 3 - e, 1);
                })();
            })(a);
          }
          this.setAttribute("position", new tj(r, 3)),
            this.setAttribute("uv", new tj(i, 2)),
            this.computeVertexNormals();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        toJSON() {
          let e = super.toJSON(),
            t = this.parameters.shapes,
            n = this.parameters.options;
          return (function (e, t, n) {
            if (((n.shapes = []), Array.isArray(e)))
              for (let t = 0, r = e.length; t < r; t++) {
                let r = e[t];
                n.shapes.push(r.uuid);
              }
            else n.shapes.push(e.uuid);
            return (
              (n.options = Object.assign({}, t)),
              void 0 !== t.extrudePath &&
                (n.options.extrudePath = t.extrudePath.toJSON()),
              n
            );
          })(t, n, e);
        }
        static fromJSON(e, t) {
          let n = [];
          for (let r = 0, i = e.shapes.length; r < i; r++) {
            let i = t[e.shapes[r]];
            n.push(i);
          }
          let r = e.options.extrudePath;
          return (
            void 0 !== r &&
              (e.options.extrudePath = new sD[r.type]().fromJSON(r)),
            new aa(n, e.options)
          );
        }
      }
      let ao = {
        generateTopUV: function (e, t, n, r, i) {
          let s = t[3 * n],
            a = t[3 * n + 1],
            o = t[3 * r],
            l = t[3 * r + 1],
            u = t[3 * i],
            c = t[3 * i + 1];
          return [new Q(s, a), new Q(o, l), new Q(u, c)];
        },
        generateSideWallUV: function (e, t, n, r, i, s) {
          let a = t[3 * n],
            o = t[3 * n + 1],
            l = t[3 * n + 2],
            u = t[3 * r],
            c = t[3 * r + 1],
            h = t[3 * r + 2],
            d = t[3 * i],
            p = t[3 * i + 1],
            f = t[3 * i + 2],
            m = t[3 * s],
            g = t[3 * s + 1],
            _ = t[3 * s + 2];
          return Math.abs(o - c) < Math.abs(a - u)
            ? [
                new Q(a, 1 - l),
                new Q(u, 1 - h),
                new Q(d, 1 - f),
                new Q(m, 1 - _),
              ]
            : [
                new Q(o, 1 - l),
                new Q(c, 1 - h),
                new Q(p, 1 - f),
                new Q(g, 1 - _),
              ];
        },
      };
      class al extends sH {
        constructor(e = 1, t = 0) {
          let n = (1 + Math.sqrt(5)) / 2,
            r = [
              -1,
              n,
              0,
              1,
              n,
              0,
              -1,
              -n,
              0,
              1,
              -n,
              0,
              0,
              -1,
              n,
              0,
              1,
              n,
              0,
              -1,
              -n,
              0,
              1,
              -n,
              n,
              0,
              -1,
              n,
              0,
              1,
              -n,
              0,
              -1,
              -n,
              0,
              1,
            ];
          super(
            r,
            [
              0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11,
              4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6,
              8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
            ],
            e,
            t
          ),
            (this.type = "IcosahedronGeometry"),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(e) {
          return new al(e.radius, e.detail);
        }
      }
      class au extends sH {
        constructor(e = 1, t = 0) {
          super(
            [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
            [
              0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1,
              4, 2,
            ],
            e,
            t
          ),
            (this.type = "OctahedronGeometry"),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(e) {
          return new au(e.radius, e.detail);
        }
      }
      class ac extends tJ {
        constructor(e = 0.5, t = 1, n = 32, r = 1, i = 0, s = 2 * Math.PI) {
          super(),
            (this.type = "RingGeometry"),
            (this.parameters = {
              innerRadius: e,
              outerRadius: t,
              thetaSegments: n,
              phiSegments: r,
              thetaStart: i,
              thetaLength: s,
            }),
            (n = Math.max(3, n)),
            (r = Math.max(1, r));
          let a = [],
            o = [],
            l = [],
            u = [],
            c = e,
            h = (t - e) / r,
            d = new eM(),
            p = new Q();
          for (let e = 0; e <= r; e++) {
            for (let e = 0; e <= n; e++) {
              let r = i + (e / n) * s;
              (d.x = c * Math.cos(r)),
                (d.y = c * Math.sin(r)),
                o.push(d.x, d.y, d.z),
                l.push(0, 0, 1),
                (p.x = (d.x / t + 1) / 2),
                (p.y = (d.y / t + 1) / 2),
                u.push(p.x, p.y);
            }
            c += h;
          }
          for (let e = 0; e < r; e++) {
            let t = e * (n + 1);
            for (let e = 0; e < n; e++) {
              let r = e + t,
                i = r + n + 1,
                s = r + n + 2,
                o = r + 1;
              a.push(r, i, o), a.push(i, s, o);
            }
          }
          this.setIndex(a),
            this.setAttribute("position", new tj(o, 3)),
            this.setAttribute("normal", new tj(l, 3)),
            this.setAttribute("uv", new tj(u, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new ac(
            e.innerRadius,
            e.outerRadius,
            e.thetaSegments,
            e.phiSegments,
            e.thetaStart,
            e.thetaLength
          );
        }
      }
      class ah extends tJ {
        constructor(
          e = new sJ([new Q(0, 0.5), new Q(-0.5, -0.5), new Q(0.5, -0.5)]),
          t = 12
        ) {
          super(),
            (this.type = "ShapeGeometry"),
            (this.parameters = { shapes: e, curveSegments: t });
          let n = [],
            r = [],
            i = [],
            s = [],
            a = 0,
            o = 0;
          if (!1 === Array.isArray(e)) l(e);
          else
            for (let t = 0; t < e.length; t++)
              l(e[t]), this.addGroup(a, o, t), (a += o), (o = 0);
          function l(e) {
            let a = r.length / 3,
              l = e.extractPoints(t),
              u = l.shape,
              c = l.holes;
            !1 === ar.isClockWise(u) && (u = u.reverse());
            for (let e = 0, t = c.length; e < t; e++) {
              let t = c[e];
              !0 === ar.isClockWise(t) && (c[e] = t.reverse());
            }
            let h = ar.triangulateShape(u, c);
            for (let e = 0, t = c.length; e < t; e++) {
              let t = c[e];
              u = u.concat(t);
            }
            for (let e = 0, t = u.length; e < t; e++) {
              let t = u[e];
              r.push(t.x, t.y, 0), i.push(0, 0, 1), s.push(t.x, t.y);
            }
            for (let e = 0, t = h.length; e < t; e++) {
              let t = h[e],
                r = t[0] + a,
                i = t[1] + a,
                s = t[2] + a;
              n.push(r, i, s), (o += 3);
            }
          }
          this.setIndex(n),
            this.setAttribute("position", new tj(r, 3)),
            this.setAttribute("normal", new tj(i, 3)),
            this.setAttribute("uv", new tj(s, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        toJSON() {
          let e = super.toJSON(),
            t = this.parameters.shapes;
          return (function (e, t) {
            if (((t.shapes = []), Array.isArray(e)))
              for (let n = 0, r = e.length; n < r; n++) {
                let r = e[n];
                t.shapes.push(r.uuid);
              }
            else t.shapes.push(e.uuid);
            return t;
          })(t, e);
        }
        static fromJSON(e, t) {
          let n = [];
          for (let r = 0, i = e.shapes.length; r < i; r++) {
            let i = t[e.shapes[r]];
            n.push(i);
          }
          return new ah(n, e.curveSegments);
        }
      }
      class ad extends tJ {
        constructor(
          e = 1,
          t = 32,
          n = 16,
          r = 0,
          i = 2 * Math.PI,
          s = 0,
          a = Math.PI
        ) {
          super(),
            (this.type = "SphereGeometry"),
            (this.parameters = {
              radius: e,
              widthSegments: t,
              heightSegments: n,
              phiStart: r,
              phiLength: i,
              thetaStart: s,
              thetaLength: a,
            }),
            (t = Math.max(3, Math.floor(t))),
            (n = Math.max(2, Math.floor(n)));
          let o = Math.min(s + a, Math.PI),
            l = 0,
            u = [],
            c = new eM(),
            h = new eM(),
            d = [],
            p = [],
            f = [],
            m = [];
          for (let d = 0; d <= n; d++) {
            let g = [],
              _ = d / n,
              v = 0;
            0 === d && 0 === s
              ? (v = 0.5 / t)
              : d === n && o === Math.PI && (v = -0.5 / t);
            for (let n = 0; n <= t; n++) {
              let o = n / t;
              (c.x = -e * Math.cos(r + o * i) * Math.sin(s + _ * a)),
                (c.y = e * Math.cos(s + _ * a)),
                (c.z = e * Math.sin(r + o * i) * Math.sin(s + _ * a)),
                p.push(c.x, c.y, c.z),
                h.copy(c).normalize(),
                f.push(h.x, h.y, h.z),
                m.push(o + v, 1 - _),
                g.push(l++);
            }
            u.push(g);
          }
          for (let e = 0; e < n; e++)
            for (let r = 0; r < t; r++) {
              let t = u[e][r + 1],
                i = u[e][r],
                a = u[e + 1][r],
                l = u[e + 1][r + 1];
              (0 !== e || s > 0) && d.push(t, i, l),
                (e !== n - 1 || o < Math.PI) && d.push(i, a, l);
            }
          this.setIndex(d),
            this.setAttribute("position", new tj(p, 3)),
            this.setAttribute("normal", new tj(f, 3)),
            this.setAttribute("uv", new tj(m, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new ad(
            e.radius,
            e.widthSegments,
            e.heightSegments,
            e.phiStart,
            e.phiLength,
            e.thetaStart,
            e.thetaLength
          );
        }
      }
      class ap extends sH {
        constructor(e = 1, t = 0) {
          super(
            [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
            [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
            e,
            t
          ),
            (this.type = "TetrahedronGeometry"),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(e) {
          return new ap(e.radius, e.detail);
        }
      }
      class af extends tJ {
        constructor(e = 1, t = 0.4, n = 12, r = 48, i = 2 * Math.PI) {
          super(),
            (this.type = "TorusGeometry"),
            (this.parameters = {
              radius: e,
              tube: t,
              radialSegments: n,
              tubularSegments: r,
              arc: i,
            }),
            (n = Math.floor(n)),
            (r = Math.floor(r));
          let s = [],
            a = [],
            o = [],
            l = [],
            u = new eM(),
            c = new eM(),
            h = new eM();
          for (let s = 0; s <= n; s++)
            for (let d = 0; d <= r; d++) {
              let p = (d / r) * i,
                f = (s / n) * Math.PI * 2;
              (c.x = (e + t * Math.cos(f)) * Math.cos(p)),
                (c.y = (e + t * Math.cos(f)) * Math.sin(p)),
                (c.z = t * Math.sin(f)),
                a.push(c.x, c.y, c.z),
                (u.x = e * Math.cos(p)),
                (u.y = e * Math.sin(p)),
                h.subVectors(c, u).normalize(),
                o.push(h.x, h.y, h.z),
                l.push(d / r),
                l.push(s / n);
            }
          for (let e = 1; e <= n; e++)
            for (let t = 1; t <= r; t++) {
              let n = (r + 1) * e + t - 1,
                i = (r + 1) * (e - 1) + t - 1,
                a = (r + 1) * (e - 1) + t,
                o = (r + 1) * e + t;
              s.push(n, i, o), s.push(i, a, o);
            }
          this.setIndex(s),
            this.setAttribute("position", new tj(a, 3)),
            this.setAttribute("normal", new tj(o, 3)),
            this.setAttribute("uv", new tj(l, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new af(
            e.radius,
            e.tube,
            e.radialSegments,
            e.tubularSegments,
            e.arc
          );
        }
      }
      class am extends tJ {
        constructor(e = 1, t = 0.4, n = 64, r = 8, i = 2, s = 3) {
          super(),
            (this.type = "TorusKnotGeometry"),
            (this.parameters = {
              radius: e,
              tube: t,
              tubularSegments: n,
              radialSegments: r,
              p: i,
              q: s,
            }),
            (n = Math.floor(n)),
            (r = Math.floor(r));
          let a = [],
            o = [],
            l = [],
            u = [],
            c = new eM(),
            h = new eM(),
            d = new eM(),
            p = new eM(),
            f = new eM(),
            m = new eM(),
            g = new eM();
          for (let a = 0; a <= n; ++a) {
            let v = (a / n) * i * Math.PI * 2;
            _(v, i, s, e, d),
              _(v + 0.01, i, s, e, p),
              m.subVectors(p, d),
              g.addVectors(p, d),
              f.crossVectors(m, g),
              g.crossVectors(f, m),
              f.normalize(),
              g.normalize();
            for (let e = 0; e <= r; ++e) {
              let i = (e / r) * Math.PI * 2,
                s = -t * Math.cos(i),
                p = t * Math.sin(i);
              (c.x = d.x + (s * g.x + p * f.x)),
                (c.y = d.y + (s * g.y + p * f.y)),
                (c.z = d.z + (s * g.z + p * f.z)),
                o.push(c.x, c.y, c.z),
                h.subVectors(c, d).normalize(),
                l.push(h.x, h.y, h.z),
                u.push(a / n),
                u.push(e / r);
            }
          }
          for (let e = 1; e <= n; e++)
            for (let t = 1; t <= r; t++) {
              let n = (r + 1) * (e - 1) + (t - 1),
                i = (r + 1) * e + (t - 1),
                s = (r + 1) * e + t,
                o = (r + 1) * (e - 1) + t;
              a.push(n, i, o), a.push(i, s, o);
            }
          function _(e, t, n, r, i) {
            let s = Math.cos(e),
              a = Math.sin(e),
              o = (n / t) * e,
              l = Math.cos(o);
            (i.x = r * (2 + l) * 0.5 * s),
              (i.y = r * (2 + l) * a * 0.5),
              (i.z = r * Math.sin(o) * 0.5);
          }
          this.setIndex(a),
            this.setAttribute("position", new tj(o, 3)),
            this.setAttribute("normal", new tj(l, 3)),
            this.setAttribute("uv", new tj(u, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        static fromJSON(e) {
          return new am(
            e.radius,
            e.tube,
            e.tubularSegments,
            e.radialSegments,
            e.p,
            e.q
          );
        }
      }
      class ag extends tJ {
        constructor(
          e = new sI(new eM(-1, -1, 0), new eM(-1, 1, 0), new eM(1, 1, 0)),
          t = 64,
          n = 1,
          r = 8,
          i = !1
        ) {
          super(),
            (this.type = "TubeGeometry"),
            (this.parameters = {
              path: e,
              tubularSegments: t,
              radius: n,
              radialSegments: r,
              closed: i,
            });
          let s = e.computeFrenetFrames(t, i);
          (this.tangents = s.tangents),
            (this.normals = s.normals),
            (this.binormals = s.binormals);
          let a = new eM(),
            o = new eM(),
            l = new Q(),
            u = new eM(),
            c = [],
            h = [],
            d = [],
            p = [];
          function f(i) {
            u = e.getPointAt(i / t, u);
            let l = s.normals[i],
              d = s.binormals[i];
            for (let e = 0; e <= r; e++) {
              let t = (e / r) * Math.PI * 2,
                i = Math.sin(t),
                s = -Math.cos(t);
              (o.x = s * l.x + i * d.x),
                (o.y = s * l.y + i * d.y),
                (o.z = s * l.z + i * d.z),
                o.normalize(),
                h.push(o.x, o.y, o.z),
                (a.x = u.x + n * o.x),
                (a.y = u.y + n * o.y),
                (a.z = u.z + n * o.z),
                c.push(a.x, a.y, a.z);
            }
          }
          (function () {
            for (let e = 0; e < t; e++) f(e);
            f(!1 === i ? t : 0),
              (function () {
                for (let e = 0; e <= t; e++)
                  for (let n = 0; n <= r; n++)
                    (l.x = e / t), (l.y = n / r), d.push(l.x, l.y);
              })(),
              (function () {
                for (let e = 1; e <= t; e++)
                  for (let t = 1; t <= r; t++) {
                    let n = (r + 1) * (e - 1) + (t - 1),
                      i = (r + 1) * e + (t - 1),
                      s = (r + 1) * e + t,
                      a = (r + 1) * (e - 1) + t;
                    p.push(n, i, a), p.push(i, s, a);
                  }
              })();
          })(),
            this.setIndex(p),
            this.setAttribute("position", new tj(c, 3)),
            this.setAttribute("normal", new tj(h, 3)),
            this.setAttribute("uv", new tj(d, 2));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (e.path = this.parameters.path.toJSON()), e;
        }
        static fromJSON(e) {
          return new ag(
            new sD[e.path.type]().fromJSON(e.path),
            e.tubularSegments,
            e.radius,
            e.radialSegments,
            e.closed
          );
        }
      }
      class a_ extends tJ {
        constructor(e = null) {
          if (
            (super(),
            (this.type = "WireframeGeometry"),
            (this.parameters = { geometry: e }),
            null !== e)
          ) {
            let t = [],
              n = new Set(),
              r = new eM(),
              i = new eM();
            if (null !== e.index) {
              let s = e.attributes.position,
                a = e.index,
                o = e.groups;
              0 === o.length &&
                (o = [{ start: 0, count: a.count, materialIndex: 0 }]);
              for (let e = 0, l = o.length; e < l; ++e) {
                let l = o[e],
                  u = l.start,
                  c = l.count;
                for (let e = u, o = u + c; e < o; e += 3)
                  for (let o = 0; o < 3; o++) {
                    let l = a.getX(e + o),
                      u = a.getX(e + ((o + 1) % 3));
                    r.fromBufferAttribute(s, l),
                      i.fromBufferAttribute(s, u),
                      !0 === av(r, i, n) &&
                        (t.push(r.x, r.y, r.z), t.push(i.x, i.y, i.z));
                  }
              }
            } else {
              let s = e.attributes.position;
              for (let e = 0, a = s.count / 3; e < a; e++)
                for (let a = 0; a < 3; a++) {
                  let o = 3 * e + a,
                    l = 3 * e + ((a + 1) % 3);
                  r.fromBufferAttribute(s, o),
                    i.fromBufferAttribute(s, l),
                    !0 === av(r, i, n) &&
                      (t.push(r.x, r.y, r.z), t.push(i.x, i.y, i.z));
                }
            }
            this.setAttribute("position", new tj(t, 3));
          }
        }
        copy(e) {
          return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
      }
      function av(e, t, n) {
        let r = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,
          i = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;
        return !0 !== n.has(r) && !0 !== n.has(i) && (n.add(r), n.add(i), !0);
      }
      class ay extends nh {
        constructor(e) {
          super(e),
            (this.isRawShaderMaterial = !0),
            (this.type = "RawShaderMaterial");
        }
      }
      class ax extends tR {
        constructor(e) {
          super(),
            (this.isMeshStandardMaterial = !0),
            (this.defines = { STANDARD: "" }),
            (this.type = "MeshStandardMaterial"),
            (this.color = new tN(16777215)),
            (this.roughness = 1),
            (this.metalness = 0),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new tN(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = 0),
            (this.normalScale = new Q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.roughnessMap = null),
            (this.metalnessMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapIntensity = 1),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = "round"),
            (this.wireframeLinejoin = "round"),
            (this.flatShading = !1),
            (this.fog = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.defines = { STANDARD: "" }),
            this.color.copy(e.color),
            (this.roughness = e.roughness),
            (this.metalness = e.metalness),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.roughnessMap = e.roughnessMap),
            (this.metalnessMap = e.metalnessMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.envMapIntensity = e.envMapIntensity),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            (this.fog = e.fog),
            this
          );
        }
      }
      class ab extends ax {
        constructor(e) {
          super(),
            (this.isMeshPhysicalMaterial = !0),
            (this.defines = { STANDARD: "", PHYSICAL: "" }),
            (this.type = "MeshPhysicalMaterial"),
            (this.anisotropyRotation = 0),
            (this.anisotropyMap = null),
            (this.clearcoatMap = null),
            (this.clearcoatRoughness = 0),
            (this.clearcoatRoughnessMap = null),
            (this.clearcoatNormalScale = new Q(1, 1)),
            (this.clearcoatNormalMap = null),
            (this.ior = 1.5),
            Object.defineProperty(this, "reflectivity", {
              get: function () {
                return G((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
              },
              set: function (e) {
                this.ior = (1 + 0.4 * e) / (1 - 0.4 * e);
              },
            }),
            (this.iridescenceMap = null),
            (this.iridescenceIOR = 1.3),
            (this.iridescenceThicknessRange = [100, 400]),
            (this.iridescenceThicknessMap = null),
            (this.sheenColor = new tN(0)),
            (this.sheenColorMap = null),
            (this.sheenRoughness = 1),
            (this.sheenRoughnessMap = null),
            (this.transmissionMap = null),
            (this.thickness = 0),
            (this.thicknessMap = null),
            (this.attenuationDistance = 1 / 0),
            (this.attenuationColor = new tN(1, 1, 1)),
            (this.specularIntensity = 1),
            (this.specularIntensityMap = null),
            (this.specularColor = new tN(1, 1, 1)),
            (this.specularColorMap = null),
            (this._anisotropy = 0),
            (this._clearcoat = 0),
            (this._iridescence = 0),
            (this._sheen = 0),
            (this._transmission = 0),
            this.setValues(e);
        }
        get anisotropy() {
          return this._anisotropy;
        }
        set anisotropy(e) {
          this._anisotropy > 0 != e > 0 && this.version++,
            (this._anisotropy = e);
        }
        get clearcoat() {
          return this._clearcoat;
        }
        set clearcoat(e) {
          this._clearcoat > 0 != e > 0 && this.version++, (this._clearcoat = e);
        }
        get iridescence() {
          return this._iridescence;
        }
        set iridescence(e) {
          this._iridescence > 0 != e > 0 && this.version++,
            (this._iridescence = e);
        }
        get sheen() {
          return this._sheen;
        }
        set sheen(e) {
          this._sheen > 0 != e > 0 && this.version++, (this._sheen = e);
        }
        get transmission() {
          return this._transmission;
        }
        set transmission(e) {
          this._transmission > 0 != e > 0 && this.version++,
            (this._transmission = e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.defines = { STANDARD: "", PHYSICAL: "" }),
            (this.anisotropy = e.anisotropy),
            (this.anisotropyRotation = e.anisotropyRotation),
            (this.anisotropyMap = e.anisotropyMap),
            (this.clearcoat = e.clearcoat),
            (this.clearcoatMap = e.clearcoatMap),
            (this.clearcoatRoughness = e.clearcoatRoughness),
            (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
            (this.clearcoatNormalMap = e.clearcoatNormalMap),
            this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
            (this.ior = e.ior),
            (this.iridescence = e.iridescence),
            (this.iridescenceMap = e.iridescenceMap),
            (this.iridescenceIOR = e.iridescenceIOR),
            (this.iridescenceThicknessRange = [...e.iridescenceThicknessRange]),
            (this.iridescenceThicknessMap = e.iridescenceThicknessMap),
            (this.sheen = e.sheen),
            this.sheenColor.copy(e.sheenColor),
            (this.sheenColorMap = e.sheenColorMap),
            (this.sheenRoughness = e.sheenRoughness),
            (this.sheenRoughnessMap = e.sheenRoughnessMap),
            (this.transmission = e.transmission),
            (this.transmissionMap = e.transmissionMap),
            (this.thickness = e.thickness),
            (this.thicknessMap = e.thicknessMap),
            (this.attenuationDistance = e.attenuationDistance),
            this.attenuationColor.copy(e.attenuationColor),
            (this.specularIntensity = e.specularIntensity),
            (this.specularIntensityMap = e.specularIntensityMap),
            this.specularColor.copy(e.specularColor),
            (this.specularColorMap = e.specularColorMap),
            this
          );
        }
      }
      function aS(e, t, n) {
        return aM(e)
          ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
          : e.slice(t, n);
      }
      function aE(e, t, n) {
        return e && (n || e.constructor !== t)
          ? "number" == typeof t.BYTES_PER_ELEMENT
            ? new t(e)
            : Array.prototype.slice.call(e)
          : e;
      }
      function aM(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      }
      function aw(e, t, n) {
        let r = e.length,
          i = new e.constructor(r);
        for (let s = 0, a = 0; a !== r; ++s) {
          let r = n[s] * t;
          for (let n = 0; n !== t; ++n) i[a++] = e[r + n];
        }
        return i;
      }
      function aT(e, t, n, r) {
        let i = 1,
          s = e[0];
        for (; void 0 !== s && void 0 === s[r]; ) s = e[i++];
        if (void 0 === s) return;
        let a = s[r];
        if (void 0 !== a) {
          if (Array.isArray(a))
            do
              void 0 !== (a = s[r]) && (t.push(s.time), n.push.apply(n, a)),
                (s = e[i++]);
            while (void 0 !== s);
          else if (void 0 !== a.toArray)
            do
              void 0 !== (a = s[r]) && (t.push(s.time), a.toArray(n, n.length)),
                (s = e[i++]);
            while (void 0 !== s);
          else
            do
              void 0 !== (a = s[r]) && (t.push(s.time), n.push(a)),
                (s = e[i++]);
            while (void 0 !== s);
        }
      }
      class aA {
        constructor(e, t, n, r) {
          (this.parameterPositions = e),
            (this._cachedIndex = 0),
            (this.resultBuffer = void 0 !== r ? r : new t.constructor(n)),
            (this.sampleValues = t),
            (this.valueSize = n),
            (this.settings = null),
            (this.DefaultSettings_ = {});
        }
        evaluate(e) {
          let t = this.parameterPositions,
            n = this._cachedIndex,
            r = t[n],
            i = t[n - 1];
          e: {
            t: {
              let s;
              n: {
                r: if (!(e < r)) {
                  for (let s = n + 2; ; ) {
                    if (void 0 === r) {
                      if (e < i) break r;
                      return (
                        (n = t.length),
                        (this._cachedIndex = n),
                        this.copySampleValue_(n - 1)
                      );
                    }
                    if (n === s) break;
                    if (((i = r), e < (r = t[++n]))) break t;
                  }
                  s = t.length;
                  break n;
                }
                if (!(e >= i)) {
                  let a = t[1];
                  e < a && ((n = 2), (i = a));
                  for (let s = n - 2; ; ) {
                    if (void 0 === i)
                      return (this._cachedIndex = 0), this.copySampleValue_(0);
                    if (n === s) break;
                    if (((r = i), e >= (i = t[--n - 1]))) break t;
                  }
                  (s = n), (n = 0);
                  break n;
                }
                break e;
              }
              for (; n < s; ) {
                let r = (n + s) >>> 1;
                e < t[r] ? (s = r) : (n = r + 1);
              }
              if (((r = t[n]), void 0 === (i = t[n - 1])))
                return (this._cachedIndex = 0), this.copySampleValue_(0);
              if (void 0 === r)
                return (
                  (n = t.length),
                  (this._cachedIndex = n),
                  this.copySampleValue_(n - 1)
                );
            }
            (this._cachedIndex = n), this.intervalChanged_(n, i, r);
          }
          return this.interpolate_(n, i, e, r);
        }
        getSettings_() {
          return this.settings || this.DefaultSettings_;
        }
        copySampleValue_(e) {
          let t = this.resultBuffer,
            n = this.sampleValues,
            r = this.valueSize,
            i = e * r;
          for (let e = 0; e !== r; ++e) t[e] = n[i + e];
          return t;
        }
        interpolate_() {
          throw Error("call to abstract method");
        }
        intervalChanged_() {}
      }
      class aC extends aA {
        constructor(e, t, n, r) {
          super(e, t, n, r),
            (this._weightPrev = -0),
            (this._offsetPrev = -0),
            (this._weightNext = -0),
            (this._offsetNext = -0),
            (this.DefaultSettings_ = { endingStart: 2400, endingEnd: 2400 });
        }
        intervalChanged_(e, t, n) {
          let r = this.parameterPositions,
            i = e - 2,
            s = e + 1,
            a = r[i],
            o = r[s];
          if (void 0 === a)
            switch (this.getSettings_().endingStart) {
              case 2401:
                (i = e), (a = 2 * t - n);
                break;
              case 2402:
                (i = r.length - 2), (a = t + r[i] - r[i + 1]);
                break;
              default:
                (i = e), (a = n);
            }
          if (void 0 === o)
            switch (this.getSettings_().endingEnd) {
              case 2401:
                (s = e), (o = 2 * n - t);
                break;
              case 2402:
                (s = 1), (o = n + r[1] - r[0]);
                break;
              default:
                (s = e - 1), (o = t);
            }
          let l = (n - t) * 0.5,
            u = this.valueSize;
          (this._weightPrev = l / (t - a)),
            (this._weightNext = l / (o - n)),
            (this._offsetPrev = i * u),
            (this._offsetNext = s * u);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            s = this.sampleValues,
            a = this.valueSize,
            o = e * a,
            l = o - a,
            u = this._offsetPrev,
            c = this._offsetNext,
            h = this._weightPrev,
            d = this._weightNext,
            p = (n - t) / (r - t),
            f = p * p,
            m = f * p,
            g = -h * m + 2 * h * f - h * p,
            _ = (1 + h) * m + (-1.5 - 2 * h) * f + (-0.5 + h) * p + 1,
            v = (-1 - d) * m + (1.5 + d) * f + 0.5 * p,
            y = d * m - d * f;
          for (let e = 0; e !== a; ++e)
            i[e] = g * s[u + e] + _ * s[l + e] + v * s[o + e] + y * s[c + e];
          return i;
        }
      }
      class aR extends aA {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            s = this.sampleValues,
            a = this.valueSize,
            o = e * a,
            l = o - a,
            u = (n - t) / (r - t),
            c = 1 - u;
          for (let e = 0; e !== a; ++e) i[e] = s[l + e] * c + s[o + e] * u;
          return i;
        }
      }
      class aP extends aA {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e) {
          return this.copySampleValue_(e - 1);
        }
      }
      class aO {
        constructor(e, t, n, r) {
          if (void 0 === e)
            throw Error("THREE.KeyframeTrack: track name is undefined");
          if (void 0 === t || 0 === t.length)
            throw Error(
              "THREE.KeyframeTrack: no keyframes in track named " + e
            );
          (this.name = e),
            (this.times = aE(t, this.TimeBufferType)),
            (this.values = aE(n, this.ValueBufferType)),
            this.setInterpolation(r || this.DefaultInterpolation);
        }
        static toJSON(e) {
          let t;
          let n = e.constructor;
          if (n.toJSON !== this.toJSON) t = n.toJSON(e);
          else {
            t = {
              name: e.name,
              times: aE(e.times, Array),
              values: aE(e.values, Array),
            };
            let n = e.getInterpolation();
            n !== e.DefaultInterpolation && (t.interpolation = n);
          }
          return (t.type = e.ValueTypeName), t;
        }
        InterpolantFactoryMethodDiscrete(e) {
          return new aP(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodLinear(e) {
          return new aR(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodSmooth(e) {
          return new aC(this.times, this.values, this.getValueSize(), e);
        }
        setInterpolation(e) {
          let t;
          switch (e) {
            case A:
              t = this.InterpolantFactoryMethodDiscrete;
              break;
            case C:
              t = this.InterpolantFactoryMethodLinear;
              break;
            case 2302:
              t = this.InterpolantFactoryMethodSmooth;
          }
          if (void 0 === t) {
            let t =
              "unsupported interpolation for " +
              this.ValueTypeName +
              " keyframe track named " +
              this.name;
            if (void 0 === this.createInterpolant) {
              if (e !== this.DefaultInterpolation)
                this.setInterpolation(this.DefaultInterpolation);
              else throw Error(t);
            }
            return console.warn("THREE.KeyframeTrack:", t), this;
          }
          return (this.createInterpolant = t), this;
        }
        getInterpolation() {
          switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
              return A;
            case this.InterpolantFactoryMethodLinear:
              return C;
            case this.InterpolantFactoryMethodSmooth:
              return 2302;
          }
        }
        getValueSize() {
          return this.values.length / this.times.length;
        }
        shift(e) {
          if (0 !== e) {
            let t = this.times;
            for (let n = 0, r = t.length; n !== r; ++n) t[n] += e;
          }
          return this;
        }
        scale(e) {
          if (1 !== e) {
            let t = this.times;
            for (let n = 0, r = t.length; n !== r; ++n) t[n] *= e;
          }
          return this;
        }
        trim(e, t) {
          let n = this.times,
            r = n.length,
            i = 0,
            s = r - 1;
          for (; i !== r && n[i] < e; ) ++i;
          for (; -1 !== s && n[s] > t; ) --s;
          if ((++s, 0 !== i || s !== r)) {
            i >= s && (i = (s = Math.max(s, 1)) - 1);
            let e = this.getValueSize();
            (this.times = aS(n, i, s)),
              (this.values = aS(this.values, i * e, s * e));
          }
          return this;
        }
        validate() {
          let e = !0,
            t = this.getValueSize();
          t - Math.floor(t) != 0 &&
            (console.error(
              "THREE.KeyframeTrack: Invalid value size in track.",
              this
            ),
            (e = !1));
          let n = this.times,
            r = this.values,
            i = n.length;
          0 === i &&
            (console.error("THREE.KeyframeTrack: Track is empty.", this),
            (e = !1));
          let s = null;
          for (let t = 0; t !== i; t++) {
            let r = n[t];
            if ("number" == typeof r && isNaN(r)) {
              console.error(
                "THREE.KeyframeTrack: Time is not a valid number.",
                this,
                t,
                r
              ),
                (e = !1);
              break;
            }
            if (null !== s && s > r) {
              console.error(
                "THREE.KeyframeTrack: Out of order keys.",
                this,
                t,
                r,
                s
              ),
                (e = !1);
              break;
            }
            s = r;
          }
          if (void 0 !== r && aM(r))
            for (let t = 0, n = r.length; t !== n; ++t) {
              let n = r[t];
              if (isNaN(n)) {
                console.error(
                  "THREE.KeyframeTrack: Value is not a valid number.",
                  this,
                  t,
                  n
                ),
                  (e = !1);
                break;
              }
            }
          return e;
        }
        optimize() {
          let e = aS(this.times),
            t = aS(this.values),
            n = this.getValueSize(),
            r = 2302 === this.getInterpolation(),
            i = e.length - 1,
            s = 1;
          for (let a = 1; a < i; ++a) {
            let i = !1,
              o = e[a],
              l = e[a + 1];
            if (o !== l && (1 !== a || o !== e[0])) {
              if (r) i = !0;
              else {
                let e = a * n,
                  r = e - n,
                  s = e + n;
                for (let a = 0; a !== n; ++a) {
                  let n = t[e + a];
                  if (n !== t[r + a] || n !== t[s + a]) {
                    i = !0;
                    break;
                  }
                }
              }
            }
            if (i) {
              if (a !== s) {
                e[s] = e[a];
                let r = a * n,
                  i = s * n;
                for (let e = 0; e !== n; ++e) t[i + e] = t[r + e];
              }
              ++s;
            }
          }
          if (i > 0) {
            e[s] = e[i];
            for (let e = i * n, r = s * n, a = 0; a !== n; ++a)
              t[r + a] = t[e + a];
            ++s;
          }
          return (
            s !== e.length
              ? ((this.times = aS(e, 0, s)), (this.values = aS(t, 0, s * n)))
              : ((this.times = e), (this.values = t)),
            this
          );
        }
        clone() {
          let e = aS(this.times, 0),
            t = aS(this.values, 0),
            n = this.constructor,
            r = new n(this.name, e, t);
          return (r.createInterpolant = this.createInterpolant), r;
        }
      }
      (aO.prototype.TimeBufferType = Float32Array),
        (aO.prototype.ValueBufferType = Float32Array),
        (aO.prototype.DefaultInterpolation = C);
      class aL extends aO {}
      (aL.prototype.ValueTypeName = "bool"),
        (aL.prototype.ValueBufferType = Array),
        (aL.prototype.DefaultInterpolation = A),
        (aL.prototype.InterpolantFactoryMethodLinear = void 0),
        (aL.prototype.InterpolantFactoryMethodSmooth = void 0);
      class aI extends aO {}
      aI.prototype.ValueTypeName = "color";
      class aN extends aO {}
      aN.prototype.ValueTypeName = "number";
      class aD extends aA {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            s = this.sampleValues,
            a = this.valueSize,
            o = (n - t) / (r - t),
            l = e * a;
          for (let e = l + a; l !== e; l += 4)
            eE.slerpFlat(i, 0, s, l - a, s, l, o);
          return i;
        }
      }
      class aU extends aO {
        InterpolantFactoryMethodLinear(e) {
          return new aD(this.times, this.values, this.getValueSize(), e);
        }
      }
      (aU.prototype.ValueTypeName = "quaternion"),
        (aU.prototype.DefaultInterpolation = C),
        (aU.prototype.InterpolantFactoryMethodSmooth = void 0);
      class ak extends aO {}
      (ak.prototype.ValueTypeName = "string"),
        (ak.prototype.ValueBufferType = Array),
        (ak.prototype.DefaultInterpolation = A),
        (ak.prototype.InterpolantFactoryMethodLinear = void 0),
        (ak.prototype.InterpolantFactoryMethodSmooth = void 0);
      class aF extends aO {}
      aF.prototype.ValueTypeName = "vector";
      class az {
        constructor(e, t = -1, n, r = 2500) {
          (this.name = e),
            (this.tracks = n),
            (this.duration = t),
            (this.blendMode = r),
            (this.uuid = H()),
            this.duration < 0 && this.resetDuration();
        }
        static parse(e) {
          let t = [],
            n = e.tracks,
            r = 1 / (e.fps || 1);
          for (let e = 0, i = n.length; e !== i; ++e)
            t.push(
              (function (e) {
                if (void 0 === e.type)
                  throw Error(
                    "THREE.KeyframeTrack: track type undefined, can not parse"
                  );
                let t = (function (e) {
                  switch (e.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                      return aN;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                      return aF;
                    case "color":
                      return aI;
                    case "quaternion":
                      return aU;
                    case "bool":
                    case "boolean":
                      return aL;
                    case "string":
                      return ak;
                  }
                  throw Error(
                    "THREE.KeyframeTrack: Unsupported typeName: " + e
                  );
                })(e.type);
                if (void 0 === e.times) {
                  let t = [],
                    n = [];
                  aT(e.keys, t, n, "value"), (e.times = t), (e.values = n);
                }
                return void 0 !== t.parse
                  ? t.parse(e)
                  : new t(e.name, e.times, e.values, e.interpolation);
              })(n[e]).scale(r)
            );
          let i = new this(e.name, e.duration, t, e.blendMode);
          return (i.uuid = e.uuid), i;
        }
        static toJSON(e) {
          let t = [],
            n = e.tracks,
            r = {
              name: e.name,
              duration: e.duration,
              tracks: t,
              uuid: e.uuid,
              blendMode: e.blendMode,
            };
          for (let e = 0, r = n.length; e !== r; ++e) t.push(aO.toJSON(n[e]));
          return r;
        }
        static CreateFromMorphTargetSequence(e, t, n, r) {
          let i = t.length,
            s = [];
          for (let e = 0; e < i; e++) {
            let a = [],
              o = [];
            a.push((e + i - 1) % i, e, (e + 1) % i), o.push(0, 1, 0);
            let l = (function (e) {
              let t = e.length,
                n = Array(t);
              for (let e = 0; e !== t; ++e) n[e] = e;
              return (
                n.sort(function (t, n) {
                  return e[t] - e[n];
                }),
                n
              );
            })(a);
            (a = aw(a, 1, l)),
              (o = aw(o, 1, l)),
              r || 0 !== a[0] || (a.push(i), o.push(o[0])),
              s.push(
                new aN(".morphTargetInfluences[" + t[e].name + "]", a, o).scale(
                  1 / n
                )
              );
          }
          return new this(e, -1, s);
        }
        static findByName(e, t) {
          let n = e;
          Array.isArray(e) ||
            (n = (e.geometry && e.geometry.animations) || e.animations);
          for (let e = 0; e < n.length; e++) if (n[e].name === t) return n[e];
          return null;
        }
        static CreateClipsFromMorphTargetSequences(e, t, n) {
          let r = {},
            i = /^([\w-]*?)([\d]+)$/;
          for (let t = 0, n = e.length; t < n; t++) {
            let n = e[t],
              s = n.name.match(i);
            if (s && s.length > 1) {
              let e = s[1],
                t = r[e];
              t || (r[e] = t = []), t.push(n);
            }
          }
          let s = [];
          for (let e in r)
            s.push(this.CreateFromMorphTargetSequence(e, r[e], t, n));
          return s;
        }
        static parseAnimation(e, t) {
          if (!e)
            return (
              console.error(
                "THREE.AnimationClip: No animation in JSONLoader data."
              ),
              null
            );
          let n = function (e, t, n, r, i) {
              if (0 !== n.length) {
                let s = [],
                  a = [];
                aT(n, s, a, r), 0 !== s.length && i.push(new e(t, s, a));
              }
            },
            r = [],
            i = e.name || "default",
            s = e.fps || 30,
            a = e.blendMode,
            o = e.length || -1,
            l = e.hierarchy || [];
          for (let e = 0; e < l.length; e++) {
            let i = l[e].keys;
            if (i && 0 !== i.length) {
              if (i[0].morphTargets) {
                let e;
                let t = {};
                for (e = 0; e < i.length; e++)
                  if (i[e].morphTargets)
                    for (let n = 0; n < i[e].morphTargets.length; n++)
                      t[i[e].morphTargets[n]] = -1;
                for (let n in t) {
                  let t = [],
                    s = [];
                  for (let r = 0; r !== i[e].morphTargets.length; ++r) {
                    let r = i[e];
                    t.push(r.time), s.push(r.morphTarget === n ? 1 : 0);
                  }
                  r.push(new aN(".morphTargetInfluence[" + n + "]", t, s));
                }
                o = t.length * s;
              } else {
                let s = ".bones[" + t[e].name + "]";
                n(aF, s + ".position", i, "pos", r),
                  n(aU, s + ".quaternion", i, "rot", r),
                  n(aF, s + ".scale", i, "scl", r);
              }
            }
          }
          if (0 === r.length) return null;
          let u = new this(i, o, r, a);
          return u;
        }
        resetDuration() {
          let e = this.tracks,
            t = 0;
          for (let n = 0, r = e.length; n !== r; ++n) {
            let e = this.tracks[n];
            t = Math.max(t, e.times[e.times.length - 1]);
          }
          return (this.duration = t), this;
        }
        trim() {
          for (let e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
          return this;
        }
        validate() {
          let e = !0;
          for (let t = 0; t < this.tracks.length; t++)
            e = e && this.tracks[t].validate();
          return e;
        }
        optimize() {
          for (let e = 0; e < this.tracks.length; e++)
            this.tracks[e].optimize();
          return this;
        }
        clone() {
          let e = [];
          for (let t = 0; t < this.tracks.length; t++)
            e.push(this.tracks[t].clone());
          return new this.constructor(
            this.name,
            this.duration,
            e,
            this.blendMode
          );
        }
        toJSON() {
          return this.constructor.toJSON(this);
        }
      }
      let aB = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        },
        aV = new (class {
          constructor(e, t, n) {
            let r;
            let i = this,
              s = !1,
              a = 0,
              o = 0,
              l = [];
            (this.onStart = void 0),
              (this.onLoad = e),
              (this.onProgress = t),
              (this.onError = n),
              (this.itemStart = function (e) {
                o++,
                  !1 === s && void 0 !== i.onStart && i.onStart(e, a, o),
                  (s = !0);
              }),
              (this.itemEnd = function (e) {
                a++,
                  void 0 !== i.onProgress && i.onProgress(e, a, o),
                  a === o && ((s = !1), void 0 !== i.onLoad && i.onLoad());
              }),
              (this.itemError = function (e) {
                void 0 !== i.onError && i.onError(e);
              }),
              (this.resolveURL = function (e) {
                return r ? r(e) : e;
              }),
              (this.setURLModifier = function (e) {
                return (r = e), this;
              }),
              (this.addHandler = function (e, t) {
                return l.push(e, t), this;
              }),
              (this.removeHandler = function (e) {
                let t = l.indexOf(e);
                return -1 !== t && l.splice(t, 2), this;
              }),
              (this.getHandler = function (e) {
                for (let t = 0, n = l.length; t < n; t += 2) {
                  let n = l[t],
                    r = l[t + 1];
                  if ((n.global && (n.lastIndex = 0), n.test(e))) return r;
                }
                return null;
              });
          }
        })();
      class aj {
        constructor(e) {
          (this.manager = void 0 !== e ? e : aV),
            (this.crossOrigin = "anonymous"),
            (this.withCredentials = !1),
            (this.path = ""),
            (this.resourcePath = ""),
            (this.requestHeader = {});
        }
        load() {}
        loadAsync(e, t) {
          let n = this;
          return new Promise(function (r, i) {
            n.load(e, r, t, i);
          });
        }
        parse() {}
        setCrossOrigin(e) {
          return (this.crossOrigin = e), this;
        }
        setWithCredentials(e) {
          return (this.withCredentials = e), this;
        }
        setPath(e) {
          return (this.path = e), this;
        }
        setResourcePath(e) {
          return (this.resourcePath = e), this;
        }
        setRequestHeader(e) {
          return (this.requestHeader = e), this;
        }
      }
      aj.DEFAULT_MATERIAL_NAME = "__DEFAULT";
      let aH = {};
      class aG extends Error {
        constructor(e, t) {
          super(e), (this.response = t);
        }
      }
      class aW extends aj {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = aB.get(e);
          if (void 0 !== i)
            return (
              this.manager.itemStart(e),
              setTimeout(() => {
                t && t(i), this.manager.itemEnd(e);
              }, 0),
              i
            );
          if (void 0 !== aH[e]) {
            aH[e].push({ onLoad: t, onProgress: n, onError: r });
            return;
          }
          (aH[e] = []), aH[e].push({ onLoad: t, onProgress: n, onError: r });
          let s = new Request(e, {
              headers: new Headers(this.requestHeader),
              credentials: this.withCredentials ? "include" : "same-origin",
            }),
            a = this.mimeType,
            o = this.responseType;
          fetch(s)
            .then((t) => {
              if (200 === t.status || 0 === t.status) {
                if (
                  (0 === t.status &&
                    console.warn("THREE.FileLoader: HTTP Status 0 received."),
                  "undefined" == typeof ReadableStream ||
                    void 0 === t.body ||
                    void 0 === t.body.getReader)
                )
                  return t;
                let n = aH[e],
                  r = t.body.getReader(),
                  i =
                    t.headers.get("Content-Length") ||
                    t.headers.get("X-File-Size"),
                  s = i ? parseInt(i) : 0,
                  a = 0 !== s,
                  o = 0,
                  l = new ReadableStream({
                    start(e) {
                      (function t() {
                        r.read().then(({ done: r, value: i }) => {
                          if (r) e.close();
                          else {
                            o += i.byteLength;
                            let r = new ProgressEvent("progress", {
                              lengthComputable: a,
                              loaded: o,
                              total: s,
                            });
                            for (let e = 0, t = n.length; e < t; e++) {
                              let t = n[e];
                              t.onProgress && t.onProgress(r);
                            }
                            e.enqueue(i), t();
                          }
                        });
                      })();
                    },
                  });
                return new Response(l);
              }
              throw new aG(
                `fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,
                t
              );
            })
            .then((e) => {
              switch (o) {
                case "arraybuffer":
                  return e.arrayBuffer();
                case "blob":
                  return e.blob();
                case "document":
                  return e.text().then((e) => {
                    let t = new DOMParser();
                    return t.parseFromString(e, a);
                  });
                case "json":
                  return e.json();
                default:
                  if (void 0 === a) return e.text();
                  {
                    let t = /charset="?([^;"\s]*)"?/i.exec(a),
                      n = t && t[1] ? t[1].toLowerCase() : void 0,
                      r = new TextDecoder(n);
                    return e.arrayBuffer().then((e) => r.decode(e));
                  }
              }
            })
            .then((t) => {
              aB.add(e, t);
              let n = aH[e];
              delete aH[e];
              for (let e = 0, r = n.length; e < r; e++) {
                let r = n[e];
                r.onLoad && r.onLoad(t);
              }
            })
            .catch((t) => {
              let n = aH[e];
              if (void 0 === n) throw (this.manager.itemError(e), t);
              delete aH[e];
              for (let e = 0, r = n.length; e < r; e++) {
                let r = n[e];
                r.onError && r.onError(t);
              }
              this.manager.itemError(e);
            })
            .finally(() => {
              this.manager.itemEnd(e);
            }),
            this.manager.itemStart(e);
        }
        setResponseType(e) {
          return (this.responseType = e), this;
        }
        setMimeType(e) {
          return (this.mimeType = e), this;
        }
      }
      class a$ extends aj {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          void 0 !== this.path && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = this,
            s = aB.get(e);
          if (void 0 !== s)
            return (
              i.manager.itemStart(e),
              setTimeout(function () {
                t && t(s), i.manager.itemEnd(e);
              }, 0),
              s
            );
          let a = er("img");
          function o() {
            u(), aB.add(e, this), t && t(this), i.manager.itemEnd(e);
          }
          function l(t) {
            u(), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
          }
          function u() {
            a.removeEventListener("load", o, !1),
              a.removeEventListener("error", l, !1);
          }
          return (
            a.addEventListener("load", o, !1),
            a.addEventListener("error", l, !1),
            "data:" !== e.slice(0, 5) &&
              void 0 !== this.crossOrigin &&
              (a.crossOrigin = this.crossOrigin),
            i.manager.itemStart(e),
            (a.src = e),
            a
          );
        }
      }
      class aX extends aj {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          let i = new ev(),
            s = new a$(this.manager);
          return (
            s.setCrossOrigin(this.crossOrigin),
            s.setPath(this.path),
            s.load(
              e,
              function (e) {
                (i.image = e), (i.needsUpdate = !0), void 0 !== t && t(i);
              },
              n,
              r
            ),
            i
          );
        }
      }
      class aq extends tm {
        constructor(e, t = 1) {
          super(),
            (this.isLight = !0),
            (this.type = "Light"),
            (this.color = new tN(e)),
            (this.intensity = t);
        }
        dispose() {}
        copy(e, t) {
          return (
            super.copy(e, t),
            this.color.copy(e.color),
            (this.intensity = e.intensity),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.color = this.color.getHex()),
            (t.object.intensity = this.intensity),
            void 0 !== this.groundColor &&
              (t.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (t.object.distance = this.distance),
            void 0 !== this.angle && (t.object.angle = this.angle),
            void 0 !== this.decay && (t.object.decay = this.decay),
            void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
            t
          );
        }
      }
      class aY extends aq {
        constructor(e, t, n) {
          super(e, n),
            (this.isHemisphereLight = !0),
            (this.type = "HemisphereLight"),
            this.position.copy(tm.DEFAULT_UP),
            this.updateMatrix(),
            (this.groundColor = new tN(t));
        }
        copy(e, t) {
          return super.copy(e, t), this.groundColor.copy(e.groundColor), this;
        }
      }
      let aJ = new e0(),
        aZ = new eM(),
        aK = new eM();
      class aQ {
        constructor(e) {
          (this.camera = e),
            (this.bias = 0),
            (this.normalBias = 0),
            (this.radius = 1),
            (this.blurSamples = 8),
            (this.mapSize = new Q(512, 512)),
            (this.map = null),
            (this.mapPass = null),
            (this.matrix = new e0()),
            (this.autoUpdate = !0),
            (this.needsUpdate = !1),
            (this._frustum = new nE()),
            (this._frameExtents = new Q(1, 1)),
            (this._viewportCount = 1),
            (this._viewports = [new ey(0, 0, 1, 1)]);
        }
        getViewportCount() {
          return this._viewportCount;
        }
        getFrustum() {
          return this._frustum;
        }
        updateMatrices(e) {
          let t = this.camera,
            n = this.matrix;
          aZ.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(aZ),
            aK.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(aK),
            t.updateMatrixWorld(),
            aJ.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(aJ),
            n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
            n.multiply(aJ);
        }
        getViewport(e) {
          return this._viewports[e];
        }
        getFrameExtents() {
          return this._frameExtents;
        }
        dispose() {
          this.map && this.map.dispose(),
            this.mapPass && this.mapPass.dispose();
        }
        copy(e) {
          return (
            (this.camera = e.camera.clone()),
            (this.bias = e.bias),
            (this.radius = e.radius),
            this.mapSize.copy(e.mapSize),
            this
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        toJSON() {
          let e = {};
          return (
            0 !== this.bias && (e.bias = this.bias),
            0 !== this.normalBias && (e.normalBias = this.normalBias),
            1 !== this.radius && (e.radius = this.radius),
            (512 !== this.mapSize.x || 512 !== this.mapSize.y) &&
              (e.mapSize = this.mapSize.toArray()),
            (e.camera = this.camera.toJSON(!1).object),
            delete e.camera.matrix,
            e
          );
        }
      }
      class a0 extends aQ {
        constructor() {
          super(new np(50, 1, 0.5, 500)),
            (this.isSpotLightShadow = !0),
            (this.focus = 1);
        }
        updateMatrices(e) {
          let t = this.camera,
            n = 2 * j * e.angle * this.focus,
            r = this.mapSize.width / this.mapSize.height,
            i = e.distance || t.far;
          (n !== t.fov || r !== t.aspect || i !== t.far) &&
            ((t.fov = n),
            (t.aspect = r),
            (t.far = i),
            t.updateProjectionMatrix()),
            super.updateMatrices(e);
        }
        copy(e) {
          return super.copy(e), (this.focus = e.focus), this;
        }
      }
      class a1 extends aq {
        constructor(e, t, n = 0, r = Math.PI / 3, i = 0, s = 2) {
          super(e, t),
            (this.isSpotLight = !0),
            (this.type = "SpotLight"),
            this.position.copy(tm.DEFAULT_UP),
            this.updateMatrix(),
            (this.target = new tm()),
            (this.distance = n),
            (this.angle = r),
            (this.penumbra = i),
            (this.decay = s),
            (this.map = null),
            (this.shadow = new a0());
        }
        get power() {
          return this.intensity * Math.PI;
        }
        set power(e) {
          this.intensity = e / Math.PI;
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.distance = e.distance),
            (this.angle = e.angle),
            (this.penumbra = e.penumbra),
            (this.decay = e.decay),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }
      let a2 = new e0(),
        a3 = new eM(),
        a4 = new eM();
      class a5 extends aQ {
        constructor() {
          super(new np(90, 1, 0.5, 500)),
            (this.isPointLightShadow = !0),
            (this._frameExtents = new Q(4, 2)),
            (this._viewportCount = 6),
            (this._viewports = [
              new ey(2, 1, 1, 1),
              new ey(0, 1, 1, 1),
              new ey(3, 1, 1, 1),
              new ey(1, 1, 1, 1),
              new ey(3, 0, 1, 1),
              new ey(1, 0, 1, 1),
            ]),
            (this._cubeDirections = [
              new eM(1, 0, 0),
              new eM(-1, 0, 0),
              new eM(0, 0, 1),
              new eM(0, 0, -1),
              new eM(0, 1, 0),
              new eM(0, -1, 0),
            ]),
            (this._cubeUps = [
              new eM(0, 1, 0),
              new eM(0, 1, 0),
              new eM(0, 1, 0),
              new eM(0, 1, 0),
              new eM(0, 0, 1),
              new eM(0, 0, -1),
            ]);
        }
        updateMatrices(e, t = 0) {
          let n = this.camera,
            r = this.matrix,
            i = e.distance || n.far;
          i !== n.far && ((n.far = i), n.updateProjectionMatrix()),
            a3.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(a3),
            a4.copy(n.position),
            a4.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(a4),
            n.updateMatrixWorld(),
            r.makeTranslation(-a3.x, -a3.y, -a3.z),
            a2.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(a2);
        }
      }
      class a6 extends aq {
        constructor(e, t, n = 0, r = 2) {
          super(e, t),
            (this.isPointLight = !0),
            (this.type = "PointLight"),
            (this.distance = n),
            (this.decay = r),
            (this.shadow = new a5());
        }
        get power() {
          return 4 * this.intensity * Math.PI;
        }
        set power(e) {
          this.intensity = e / (4 * Math.PI);
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.distance = e.distance),
            (this.decay = e.decay),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }
      class a8 extends aQ {
        constructor() {
          super(new nk(-5, 5, 5, -5, 0.5, 500)),
            (this.isDirectionalLightShadow = !0);
        }
      }
      class a7 extends aq {
        constructor(e, t) {
          super(e, t),
            (this.isDirectionalLight = !0),
            (this.type = "DirectionalLight"),
            this.position.copy(tm.DEFAULT_UP),
            this.updateMatrix(),
            (this.target = new tm()),
            (this.shadow = new a8());
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }
      class a9 {
        static decodeText(e) {
          if ("undefined" != typeof TextDecoder)
            return new TextDecoder().decode(e);
          let t = "";
          for (let n = 0, r = e.length; n < r; n++)
            t += String.fromCharCode(e[n]);
          try {
            return decodeURIComponent(escape(t));
          } catch (e) {
            return t;
          }
        }
        static extractUrlBase(e) {
          let t = e.lastIndexOf("/");
          return -1 === t ? "./" : e.slice(0, t + 1);
        }
        static resolveURL(e, t) {
          return "string" != typeof e || "" === e
            ? ""
            : (/^https?:\/\//i.test(t) &&
                /^\//.test(e) &&
                (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")),
              /^(https?:)?\/\//i.test(e) ||
                /^data:.*,.*$/i.test(e) ||
                /^blob:.*$/i.test(e))
            ? e
            : t + e;
        }
      }
      class oe extends tJ {
        constructor() {
          super(),
            (this.isInstancedBufferGeometry = !0),
            (this.type = "InstancedBufferGeometry"),
            (this.instanceCount = 1 / 0);
        }
        copy(e) {
          return super.copy(e), (this.instanceCount = e.instanceCount), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.instanceCount = this.instanceCount),
            (e.isInstancedBufferGeometry = !0),
            e
          );
        }
      }
      class ot extends aj {
        constructor(e) {
          super(e),
            (this.isImageBitmapLoader = !0),
            "undefined" == typeof createImageBitmap &&
              console.warn(
                "THREE.ImageBitmapLoader: createImageBitmap() not supported."
              ),
            "undefined" == typeof fetch &&
              console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
            (this.options = { premultiplyAlpha: "none" });
        }
        setOptions(e) {
          return (this.options = e), this;
        }
        load(e, t, n, r) {
          void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = this,
            s = aB.get(e);
          if (void 0 !== s)
            return (
              i.manager.itemStart(e),
              setTimeout(function () {
                t && t(s), i.manager.itemEnd(e);
              }, 0),
              s
            );
          let a = {};
          (a.credentials =
            "anonymous" === this.crossOrigin ? "same-origin" : "include"),
            (a.headers = this.requestHeader),
            fetch(e, a)
              .then(function (e) {
                return e.blob();
              })
              .then(function (e) {
                return createImageBitmap(
                  e,
                  Object.assign(i.options, { colorSpaceConversion: "none" })
                );
              })
              .then(function (n) {
                aB.add(e, n), t && t(n), i.manager.itemEnd(e);
              })
              .catch(function (t) {
                r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
              }),
            i.manager.itemStart(e);
        }
      }
      class on {
        constructor(e = !0) {
          (this.autoStart = e),
            (this.startTime = 0),
            (this.oldTime = 0),
            (this.elapsedTime = 0),
            (this.running = !1);
        }
        start() {
          (this.startTime = or()),
            (this.oldTime = this.startTime),
            (this.elapsedTime = 0),
            (this.running = !0);
        }
        stop() {
          this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
        }
        getElapsedTime() {
          return this.getDelta(), this.elapsedTime;
        }
        getDelta() {
          let e = 0;
          if (this.autoStart && !this.running) return this.start(), 0;
          if (this.running) {
            let t = or();
            (e = (t - this.oldTime) / 1e3),
              (this.oldTime = t),
              (this.elapsedTime += e);
          }
          return e;
        }
      }
      function or() {
        return ("undefined" == typeof performance ? Date : performance).now();
      }
      let oi = "\\[\\]\\.:\\/",
        os = RegExp("[" + oi + "]", "g"),
        oa = "[^" + oi + "]",
        oo = "[^" + oi.replace("\\.", "") + "]",
        ol = /((?:WC+[\/:])*)/.source.replace("WC", oa),
        ou = /(WCOD+)?/.source.replace("WCOD", oo),
        oc = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", oa),
        oh = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", oa),
        od = RegExp("^" + ol + ou + oc + oh + "$"),
        op = ["material", "materials", "bones", "map"];
      class of {
        constructor(e, t, n) {
          (this.path = t),
            (this.parsedPath = n || of.parseTrackName(t)),
            (this.node = of.findNode(e, this.parsedPath.nodeName)),
            (this.rootNode = e),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        }
        static create(e, t, n) {
          return e && e.isAnimationObjectGroup
            ? new of.Composite(e, t, n)
            : new of(e, t, n);
        }
        static sanitizeNodeName(e) {
          return e.replace(/\s/g, "_").replace(os, "");
        }
        static parseTrackName(e) {
          let t = od.exec(e);
          if (null === t)
            throw Error("PropertyBinding: Cannot parse trackName: " + e);
          let n = {
              nodeName: t[2],
              objectName: t[3],
              objectIndex: t[4],
              propertyName: t[5],
              propertyIndex: t[6],
            },
            r = n.nodeName && n.nodeName.lastIndexOf(".");
          if (void 0 !== r && -1 !== r) {
            let e = n.nodeName.substring(r + 1);
            -1 !== op.indexOf(e) &&
              ((n.nodeName = n.nodeName.substring(0, r)), (n.objectName = e));
          }
          if (null === n.propertyName || 0 === n.propertyName.length)
            throw Error(
              "PropertyBinding: can not parse propertyName from trackName: " + e
            );
          return n;
        }
        static findNode(e, t) {
          if (
            void 0 === t ||
            "" === t ||
            "." === t ||
            -1 === t ||
            t === e.name ||
            t === e.uuid
          )
            return e;
          if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (void 0 !== n) return n;
          }
          if (e.children) {
            let n = function (e) {
                for (let r = 0; r < e.length; r++) {
                  let i = e[r];
                  if (i.name === t || i.uuid === t) return i;
                  let s = n(i.children);
                  if (s) return s;
                }
                return null;
              },
              r = n(e.children);
            if (r) return r;
          }
          return null;
        }
        _getValue_unavailable() {}
        _setValue_unavailable() {}
        _getValue_direct(e, t) {
          e[t] = this.targetObject[this.propertyName];
        }
        _getValue_array(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) e[t++] = n[r];
        }
        _getValue_arrayElement(e, t) {
          e[t] = this.resolvedProperty[this.propertyIndex];
        }
        _getValue_toArray(e, t) {
          this.resolvedProperty.toArray(e, t);
        }
        _setValue_direct(e, t) {
          this.targetObject[this.propertyName] = e[t];
        }
        _setValue_direct_setNeedsUpdate(e, t) {
          (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
          (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _setValue_array(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
        }
        _setValue_array_setNeedsUpdate(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
          this.targetObject.needsUpdate = !0;
        }
        _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
          this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_arrayElement(e, t) {
          this.resolvedProperty[this.propertyIndex] = e[t];
        }
        _setValue_arrayElement_setNeedsUpdate(e, t) {
          (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
          (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _setValue_fromArray(e, t) {
          this.resolvedProperty.fromArray(e, t);
        }
        _setValue_fromArray_setNeedsUpdate(e, t) {
          this.resolvedProperty.fromArray(e, t),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
          this.resolvedProperty.fromArray(e, t),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _getValue_unbound(e, t) {
          this.bind(), this.getValue(e, t);
        }
        _setValue_unbound(e, t) {
          this.bind(), this.setValue(e, t);
        }
        bind() {
          let e = this.node,
            t = this.parsedPath,
            n = t.objectName,
            r = t.propertyName,
            i = t.propertyIndex;
          if (
            (e ||
              ((e = of.findNode(this.rootNode, t.nodeName)), (this.node = e)),
            (this.getValue = this._getValue_unavailable),
            (this.setValue = this._setValue_unavailable),
            !e)
          ) {
            console.warn(
              "THREE.PropertyBinding: No target node found for track: " +
                this.path +
                "."
            );
            return;
          }
          if (n) {
            let r = t.objectIndex;
            switch (n) {
              case "materials":
                if (!e.material) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                    this
                  );
                  return;
                }
                if (!e.material.materials) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                    this
                  );
                  return;
                }
                e = e.material.materials;
                break;
              case "bones":
                if (!e.skeleton) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                    this
                  );
                  return;
                }
                e = e.skeleton.bones;
                for (let t = 0; t < e.length; t++)
                  if (e[t].name === r) {
                    r = t;
                    break;
                  }
                break;
              case "map":
                if ("map" in e) {
                  e = e.map;
                  break;
                }
                if (!e.material) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                    this
                  );
                  return;
                }
                if (!e.material.map) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",
                    this
                  );
                  return;
                }
                e = e.material.map;
                break;
              default:
                if (void 0 === e[n]) {
                  console.error(
                    "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                    this
                  );
                  return;
                }
                e = e[n];
            }
            if (void 0 !== r) {
              if (void 0 === e[r]) {
                console.error(
                  "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                  this,
                  e
                );
                return;
              }
              e = e[r];
            }
          }
          let s = e[r];
          if (void 0 === s) {
            let n = t.nodeName;
            console.error(
              "THREE.PropertyBinding: Trying to update property for track: " +
                n +
                "." +
                r +
                " but it wasn't found.",
              e
            );
            return;
          }
          let a = this.Versioning.None;
          (this.targetObject = e),
            void 0 !== e.needsUpdate
              ? (a = this.Versioning.NeedsUpdate)
              : void 0 !== e.matrixWorldNeedsUpdate &&
                (a = this.Versioning.MatrixWorldNeedsUpdate);
          let o = this.BindingType.Direct;
          if (void 0 !== i) {
            if ("morphTargetInfluences" === r) {
              if (!e.geometry) {
                console.error(
                  "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                  this
                );
                return;
              }
              if (!e.geometry.morphAttributes) {
                console.error(
                  "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                  this
                );
                return;
              }
              void 0 !== e.morphTargetDictionary[i] &&
                (i = e.morphTargetDictionary[i]);
            }
            (o = this.BindingType.ArrayElement),
              (this.resolvedProperty = s),
              (this.propertyIndex = i);
          } else
            void 0 !== s.fromArray && void 0 !== s.toArray
              ? ((o = this.BindingType.HasFromToArray),
                (this.resolvedProperty = s))
              : Array.isArray(s)
              ? ((o = this.BindingType.EntireArray),
                (this.resolvedProperty = s))
              : (this.propertyName = r);
          (this.getValue = this.GetterByBindingType[o]),
            (this.setValue = this.SetterByBindingTypeAndVersioning[o][a]);
        }
        unbind() {
          (this.node = null),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        }
      }
      (of.Composite = class {
        constructor(e, t, n) {
          let r = n || of.parseTrackName(t);
          (this._targetGroup = e), (this._bindings = e.subscribe_(t, r));
        }
        getValue(e, t) {
          this.bind();
          let n = this._targetGroup.nCachedObjects_,
            r = this._bindings[n];
          void 0 !== r && r.getValue(e, t);
        }
        setValue(e, t) {
          let n = this._bindings;
          for (
            let r = this._targetGroup.nCachedObjects_, i = n.length;
            r !== i;
            ++r
          )
            n[r].setValue(e, t);
        }
        bind() {
          let e = this._bindings;
          for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
          )
            e[t].bind();
        }
        unbind() {
          let e = this._bindings;
          for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
          )
            e[t].unbind();
        }
      }),
        (of.prototype.BindingType = {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        }),
        (of.prototype.Versioning = {
          None: 0,
          NeedsUpdate: 1,
          MatrixWorldNeedsUpdate: 2,
        }),
        (of.prototype.GetterByBindingType = [
          of.prototype._getValue_direct,
          of.prototype._getValue_array,
          of.prototype._getValue_arrayElement,
          of.prototype._getValue_toArray,
        ]),
        (of.prototype.SetterByBindingTypeAndVersioning = [
          [
            of.prototype._setValue_direct,
            of.prototype._setValue_direct_setNeedsUpdate,
            of.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
          ],
          [
            of.prototype._setValue_array,
            of.prototype._setValue_array_setNeedsUpdate,
            of.prototype._setValue_array_setMatrixWorldNeedsUpdate,
          ],
          [
            of.prototype._setValue_arrayElement,
            of.prototype._setValue_arrayElement_setNeedsUpdate,
            of.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
          ],
          [
            of.prototype._setValue_fromArray,
            of.prototype._setValue_fromArray_setNeedsUpdate,
            of.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
          ],
        ]),
        new Float32Array(1);
      class om extends ik {
        constructor(e, t, n = 1) {
          super(e, t),
            (this.isInstancedInterleavedBuffer = !0),
            (this.meshPerAttribute = n);
        }
        copy(e) {
          return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
          );
        }
        clone(e) {
          let t = super.clone(e);
          return (t.meshPerAttribute = this.meshPerAttribute), t;
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.isInstancedInterleavedBuffer = !0),
            (t.meshPerAttribute = this.meshPerAttribute),
            t
          );
        }
      }
      class og {
        constructor(e, t, n = 0, r = 1 / 0) {
          (this.ray = new eQ(e, t)),
            (this.near = n),
            (this.far = r),
            (this.camera = null),
            (this.layers = new tt()),
            (this.params = {
              Mesh: {},
              Line: { threshold: 1 },
              LOD: {},
              Points: { threshold: 1 },
              Sprite: {},
            });
        }
        set(e, t) {
          this.ray.set(e, t);
        }
        setFromCamera(e, t) {
          t.isPerspectiveCamera
            ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
              this.ray.direction
                .set(e.x, e.y, 0.5)
                .unproject(t)
                .sub(this.ray.origin)
                .normalize(),
              (this.camera = t))
            : t.isOrthographicCamera
            ? (this.ray.origin
                .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                .unproject(t),
              this.ray.direction
                .set(0, 0, -1)
                .transformDirection(t.matrixWorld),
              (this.camera = t))
            : console.error(
                "THREE.Raycaster: Unsupported camera type: " + t.type
              );
        }
        intersectObject(e, t = !0, n = []) {
          return ov(e, this, n, t), n.sort(o_), n;
        }
        intersectObjects(e, t = !0, n = []) {
          for (let r = 0, i = e.length; r < i; r++) ov(e[r], this, n, t);
          return n.sort(o_), n;
        }
      }
      function o_(e, t) {
        return e.distance - t.distance;
      }
      function ov(e, t, n, r) {
        if ((e.layers.test(t.layers) && e.raycast(t, n), !0 === r)) {
          let r = e.children;
          for (let e = 0, i = r.length; e < i; e++) ov(r[e], t, n, !0);
        }
      }
      class oy {
        constructor(e = 1, t = 0, n = 0) {
          return (this.radius = e), (this.phi = t), (this.theta = n), this;
        }
        set(e, t, n) {
          return (this.radius = e), (this.phi = t), (this.theta = n), this;
        }
        copy(e) {
          return (
            (this.radius = e.radius),
            (this.phi = e.phi),
            (this.theta = e.theta),
            this
          );
        }
        makeSafe() {
          return (
            (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))),
            this
          );
        }
        setFromVector3(e) {
          return this.setFromCartesianCoords(e.x, e.y, e.z);
        }
        setFromCartesianCoords(e, t, n) {
          return (
            (this.radius = Math.sqrt(e * e + t * t + n * n)),
            0 === this.radius
              ? ((this.theta = 0), (this.phi = 0))
              : ((this.theta = Math.atan2(e, n)),
                (this.phi = Math.acos(G(t / this.radius, -1, 1)))),
            this
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      let ox = new eM(),
        ob = new eM();
      class oS {
        constructor(e = new eM(), t = new eM()) {
          (this.start = e), (this.end = t);
        }
        set(e, t) {
          return this.start.copy(e), this.end.copy(t), this;
        }
        copy(e) {
          return this.start.copy(e.start), this.end.copy(e.end), this;
        }
        getCenter(e) {
          return e.addVectors(this.start, this.end).multiplyScalar(0.5);
        }
        delta(e) {
          return e.subVectors(this.end, this.start);
        }
        distanceSq() {
          return this.start.distanceToSquared(this.end);
        }
        distance() {
          return this.start.distanceTo(this.end);
        }
        at(e, t) {
          return this.delta(t).multiplyScalar(e).add(this.start);
        }
        closestPointToPointParameter(e, t) {
          ox.subVectors(e, this.start), ob.subVectors(this.end, this.start);
          let n = ob.dot(ob),
            r = ob.dot(ox),
            i = r / n;
          return t && (i = G(i, 0, 1)), i;
        }
        closestPointToPoint(e, t, n) {
          let r = this.closestPointToPointParameter(e, t);
          return this.delta(n).multiplyScalar(r).add(this.start);
        }
        applyMatrix4(e) {
          return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
        }
        equals(e) {
          return e.start.equals(this.start) && e.end.equals(this.end);
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }
      "undefined" != typeof __THREE_DEVTOOLS__ &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("register", { detail: { revision: "156" } })
        ),
        "undefined" != typeof window &&
          (window.__THREE__
            ? console.warn(
                "WARNING: Multiple instances of Three.js being imported."
              )
            : (window.__THREE__ = "156"));
    },
    3445: function (e, t, n) {
      "use strict";
      n.d(t, {
        Ue: function () {
          return h;
        },
        oR: function () {
          return u;
        },
      });
      var r = n(3973),
        i = n(2784),
        s = n(1110);
      let { useDebugValue: a } = i,
        { useSyncExternalStoreWithSelector: o } = s,
        l = !1;
      function u(e, t = e.getState, n) {
        n &&
          !l &&
          (console.warn(
            "[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"
          ),
          (l = !0));
        let r = o(
          e.subscribe,
          e.getState,
          e.getServerState || e.getState,
          t,
          n
        );
        return a(r), r;
      }
      let c = (e) => {
          "function" != typeof e &&
            console.warn(
              "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
            );
          let t = "function" == typeof e ? (0, r.M)(e) : e,
            n = (e, n) => u(t, e, n);
          return Object.assign(n, t), n;
        },
        h = (e) => (e ? c(e) : c);
    },
    782: function (e, t, n) {
      "use strict";
      n.d(t, {
        XR: function () {
          return l;
        },
        mW: function () {
          return a;
        },
      });
      let r = new Map(),
        i = (e) => {
          let t = r.get(e);
          return t
            ? Object.fromEntries(
                Object.entries(t.stores).map(([e, t]) => [e, t.getState()])
              )
            : {};
        },
        s = (e, t, n) => {
          if (void 0 === e)
            return { type: "untracked", connection: t.connect(n) };
          let i = r.get(n.name);
          if (i) return { type: "tracked", store: e, ...i };
          let s = { connection: t.connect(n), stores: {} };
          return r.set(n.name, s), { type: "tracked", store: e, ...s };
        },
        a =
          (e, t = {}) =>
          (n, r, a) => {
            let l;
            let { enabled: u, anonymousActionType: c, store: h, ...d } = t;
            try {
              l = (null == u || u) && window.__REDUX_DEVTOOLS_EXTENSION__;
            } catch (e) {}
            if (!l)
              return (
                u &&
                  console.warn(
                    "[zustand devtools middleware] Please install/enable Redux devtools extension"
                  ),
                e(n, r, a)
              );
            let { connection: p, ...f } = s(h, l, d),
              m = !0;
            a.setState = (e, t, s) => {
              let o = n(e, t);
              if (!m) return o;
              let l =
                void 0 === s
                  ? { type: c || "anonymous" }
                  : "string" == typeof s
                  ? { type: s }
                  : s;
              return (
                void 0 === h
                  ? null == p || p.send(l, r())
                  : null == p ||
                    p.send(
                      { ...l, type: `${h}/${l.type}` },
                      { ...i(d.name), [h]: a.getState() }
                    ),
                o
              );
            };
            let g = (...e) => {
                let t = m;
                (m = !1), n(...e), (m = t);
              },
              _ = e(a.setState, r, a);
            if (
              ("untracked" === f.type
                ? null == p || p.init(_)
                : ((f.stores[f.store] = a),
                  null == p ||
                    p.init(
                      Object.fromEntries(
                        Object.entries(f.stores).map(([e, t]) => [
                          e,
                          e === f.store ? _ : t.getState(),
                        ])
                      )
                    )),
              a.dispatchFromDevtools && "function" == typeof a.dispatch)
            ) {
              let e = !1,
                t = a.dispatch;
              a.dispatch = (...n) => {
                "__setState" !== n[0].type ||
                  e ||
                  (console.warn(
                    '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
                  ),
                  (e = !0)),
                  t(...n);
              };
            }
            return (
              p.subscribe((e) => {
                var t;
                switch (e.type) {
                  case "ACTION":
                    if ("string" != typeof e.payload) {
                      console.error(
                        "[zustand devtools middleware] Unsupported action format"
                      );
                      return;
                    }
                    return o(e.payload, (e) => {
                      if ("__setState" === e.type) {
                        if (void 0 === h) {
                          g(e.state);
                          return;
                        }
                        1 !== Object.keys(e.state).length &&
                          console.error(`
                    [zustand devtools middleware] Unsupported __setState action format. 
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);
                        let t = e.state[h];
                        if (null == t) return;
                        JSON.stringify(a.getState()) !== JSON.stringify(t) &&
                          g(t);
                        return;
                      }
                      a.dispatchFromDevtools &&
                        "function" == typeof a.dispatch &&
                        a.dispatch(e);
                    });
                  case "DISPATCH":
                    switch (e.payload.type) {
                      case "RESET":
                        if ((g(_), void 0 === h))
                          return null == p ? void 0 : p.init(a.getState());
                        return null == p ? void 0 : p.init(i(d.name));
                      case "COMMIT":
                        if (void 0 === h) {
                          null == p || p.init(a.getState());
                          break;
                        }
                        return null == p ? void 0 : p.init(i(d.name));
                      case "ROLLBACK":
                        return o(e.state, (e) => {
                          if (void 0 === h) {
                            g(e), null == p || p.init(a.getState());
                            return;
                          }
                          g(e[h]), null == p || p.init(i(d.name));
                        });
                      case "JUMP_TO_STATE":
                      case "JUMP_TO_ACTION":
                        return o(e.state, (e) => {
                          if (void 0 === h) {
                            g(e);
                            return;
                          }
                          JSON.stringify(a.getState()) !==
                            JSON.stringify(e[h]) && g(e[h]);
                        });
                      case "IMPORT_STATE": {
                        let { nextLiftedState: n } = e.payload,
                          r =
                            null == (t = n.computedStates.slice(-1)[0])
                              ? void 0
                              : t.state;
                        if (!r) return;
                        void 0 === h ? g(r) : g(r[h]),
                          null == p || p.send(null, n);
                        break;
                      }
                      case "PAUSE_RECORDING":
                        return (m = !m);
                    }
                    return;
                }
              }),
              _
            );
          },
        o = (e, t) => {
          let n;
          try {
            n = JSON.parse(e);
          } catch (e) {
            console.error(
              "[zustand devtools middleware] Could not parse the received json",
              e
            );
          }
          void 0 !== n && t(n);
        },
        l = (e) => (t, n, r) => {
          let i = r.subscribe;
          r.subscribe = (e, t, n) => {
            let s = e;
            if (t) {
              let i = (null == n ? void 0 : n.equalityFn) || Object.is,
                a = e(r.getState());
              (s = (n) => {
                let r = e(n);
                if (!i(a, r)) {
                  let e = a;
                  t((a = r), e);
                }
              }),
                (null == n ? void 0 : n.fireImmediately) && t(a, a);
            }
            return i(s);
          };
          let s = e(t, n, r);
          return s;
        };
    },
    3973: function (e, t, n) {
      "use strict";
      n.d(t, {
        M: function () {
          return i;
        },
      });
      let r = (e) => {
          let t;
          let n = new Set(),
            r = (e, r) => {
              let i = "function" == typeof e ? e(t) : e;
              if (!Object.is(i, t)) {
                let e = t;
                (t = (null != r ? r : "object" != typeof i)
                  ? i
                  : Object.assign({}, t, i)),
                  n.forEach((n) => n(t, e));
              }
            },
            i = () => t,
            s = {
              setState: r,
              getState: i,
              subscribe: (e) => (n.add(e), () => n.delete(e)),
              destroy: () => {
                console.warn(
                  "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
                ),
                  n.clear();
              },
            };
          return (t = e(r, i, s)), s;
        },
        i = (e) => (e ? r(e) : r);
    },
  },
  function (e) {
    var t = function (t) {
      return e((e.s = t));
    };
    e.O(0, [774, 179], function () {
      return t(6570), t(222);
    }),
      (_N_E = e.O());
  },
]);
